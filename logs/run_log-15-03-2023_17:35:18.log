
*****INICIO LOAD DATA******

*****INICIO PRINT INFOS******
Número total de linhas do DataFrame: 3153593
Número de colunas: 112
Informações do DataFrame:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 3153593 entries, 0 to 3153592
Data columns (total 112 columns):
 #    Column                            Dtype         
---   ------                            -----         
 0    ID_ANIMAL                         uint32        
 1    EstabelecimentoMunicipio          category      
 2    DataAbate                         datetime64[ns]
 3    Frigorifico_ID                    uint8         
 4    Frigorifico_CNPJ                  uint64        
 5    Frigorifico_RazaoSocial           category      
 6    Municipio_Frigorifico             category      
 7    Tipificacao                       category      
 8    Maturidade                        category      
 9    Acabamento                        category      
 10   Peso                              float32       
 11   EstabelecimentoIdentificador      uint16        
 12   Data_homol                        datetime64[ns]
 13   Questionario_ID                   uint16        
 14   QuestionarioClassificacaoEstabel  uint8         
 15   FERTIIRRIGACAO                    uint8         
 16   ILP                               uint8         
 17   IFP                               uint8         
 18   ILPF                              uint8         
 19   CONCEN_VOLUM                      UInt8         
 20   CREEPFEEDING                      UInt8         
 21   FORN_ESTRAT_SILAGEM               UInt8         
 22   PROTEICO                          UInt8         
 23   PROTEICO_ENERGETICO               UInt8         
 24   RACAO_BAL_CONS_INFERIOR           UInt8         
 25   SAL_MINERAL                       UInt8         
 26   SALMINERAL_UREIA                  UInt8         
 27   RACAOO_BAL_CONSUMO_IG             UInt8         
 28   GRAO_INTEIRO                      UInt8         
 29   ALTO_CONCENTR_VOLUM               UInt8         
 30   ALTO_CONCENTRADO                  UInt8         
 31   QuestionarioPossuiOutrosIncentiv  uint8         
 32   QuestionarioFabricaRacao          uint8         
 33   area so confinamento              UInt8         
 34   regua de manejo                   UInt8         
 35   boa cobertura vegetal, com baixa  UInt8         
 36   erosaoo laminar ou em sulco igua  UInt8         
 37   identificacao individual          UInt8         
 38   rastreamento SISBOV               UInt8         
 39   Lista Trace                       UInt8         
 40   BPA                               UInt8         
 41   participa de aliancas mercadolog  UInt8         
 42   QuestionarioPraticaRecuperacaoPa  uint8         
 43   Confinamento                      UInt8         
 44   Suplementacao_a_campo             UInt8         
 45   SemiConfinamento                  UInt8         
 46   dif_datas                         uint16        
 47   DataAbate_6m_ANT                  datetime64[ns]
 48   data_homol_select                 datetime64[ns]
 49   data12m                           datetime64[ns]
 50   data6m                            datetime64[ns]
 51   data3m                            datetime64[ns]
 52   data1m                            datetime64[ns]
 53   data7d                            datetime64[ns]
 54   tot7d_Chuva                       float32       
 55   med7d_TempInst                    float32       
 56   med7d_TempMin                     float32       
 57   med7d_UmidInst                    float32       
 58   med7d_formITUinst                 float32       
 59   med7d_formITUmax                  float32       
 60   med7d_NDVI                        float32       
 61   med7d_EVI                         float32       
 62   med7d_preR_soja                   float32       
 63   med7d_preR_milho                  float32       
 64   med7d_preR_boi                    float32       
 65   tot1m_Chuva                       float32       
 66   med1m_TempInst                    float32       
 67   med1m_UmidInst                    float32       
 68   med1m_formITUinst                 float32       
 69   med1m_NDVI                        float32       
 70   med1m_EVI                         float32       
 71   med1m_preR_soja                   float32       
 72   med1m_preR_milho                  float32       
 73   med1m_preR_boi                    float32       
 74   tot3m_Chuva                       float32       
 75   med3m_TempInst                    float32       
 76   med3m_UmidInst                    float32       
 77   med3m_formITUinst                 float32       
 78   med3m_formITUmax                  float32       
 79   med3m_NDVI                        float32       
 80   med3m_EVI                         float32       
 81   med3m_preR_soja                   float32       
 82   med3m_preR_milho                  float32       
 83   med3m_preR_boi                    float32       
 84   tot6m_Chuva                       float32       
 85   med6m_TempInst                    float32       
 86   med6m_UmidInst                    float32       
 87   med6m_formITUinst                 float32       
 88   med6m_NDVI                        float32       
 89   med6m_EVI                         float32       
 90   med6m_preR_soja                   float32       
 91   med6m_preR_milho                  float32       
 92   med6m_preR_boi                    float32       
 93   tot12m_Chuva                      float32       
 94   med12m_TempInst                   float32       
 95   med12m_TempMin                    float32       
 96   med12m_UmidInst                   float32       
 97   med12m_formITUinst                float32       
 98   med12m_NDVI                       float32       
 99   med12m_EVI                        float32       
 100  med12m_preR_soja                  float32       
 101  med12m_preR_milho                 float32       
 102  med12m_preR_boi                   float32       
 103  cnt7d_CL_ITUinst                  float32       
 104  cnt1m_CL_ITUinst                  float32       
 105  cnt3m_CL_ITUinst                  float32       
 106  cnt6m_CL_ITUinst                  float32       
 107  cnt12m_CL_ITUinst                 float32       
 108  ANO                               uint16        
 109  CATEGORIA                         category      
 110  classificacao                     category      
 111  Motivo                            category      
dtypes: UInt8(24), category(9), datetime64[ns](9), float32(55), uint16(4), uint32(1), uint64(1), uint8(9)
memory usage: 1.1 GB
*****FIM PRINT INFOS*********
Function informations Took 0:00:00.018849

*****INICIO DELETE COLUNAS******
Coluna EstabelecimentoMunicipio excluída.
Coluna Maturidade excluída.
Coluna Acabamento excluída.
Coluna Peso excluída.
Coluna DataAbate excluída.
Coluna ANO excluída.
Coluna Frigorifico_ID excluída.
Coluna Frigorifico_CNPJ excluída.
Coluna Frigorifico_RazaoSocial excluída.
Coluna Municipio_Frigorifico excluída.
Coluna EstabelecimentoIdentificador excluída.
Coluna Data_homol excluída.
Coluna Questionario_ID excluída.
Coluna FERTIIRRIGACAO excluída.
Coluna CONCEN_VOLUM excluída.
Coluna CREEPFEEDING excluída.
Coluna FORN_ESTRAT_SILAGEM excluída.
Coluna PROTEICO excluída.
Coluna PROTEICO_ENERGETICO excluída.
Coluna RACAO_BAL_CONS_INFERIOR excluída.
Coluna SAL_MINERAL excluída.
Coluna SALMINERAL_UREIA excluída.
Coluna RACAOO_BAL_CONSUMO_IG excluída.
Coluna GRAO_INTEIRO excluída.
Coluna ALTO_CONCENTR_VOLUM excluída.
Coluna ALTO_CONCENTRADO excluída.
Coluna BPA excluída.
Coluna area so confinamento excluída.
Coluna Lista Trace excluída.
Coluna Motivo excluída.
Coluna data_homol_select excluída.
Coluna dif_datas excluída.
Coluna DataAbate_6m_ANT excluída.
Coluna data12m excluída.
Coluna data6m excluída.
Coluna data3m excluída.
Coluna data1m excluída.
Coluna data7d excluída.
Coluna med7d_formITUinst excluída.
Coluna med7d_preR_soja excluída.
Coluna med7d_preR_milho excluída.
Coluna med7d_preR_boi excluída.
Coluna med1m_formITUinst excluída.
Coluna med1m_preR_soja excluída.
Coluna med1m_preR_milho excluída.
Coluna med1m_preR_boi excluída.
Coluna med3m_preR_soja excluída.
Coluna med6m_preR_soja excluída.
Coluna med12m_preR_soja excluída.
Coluna cnt7d_CL_ITUinst excluída.
Coluna cnt1m_CL_ITUinst excluída.
Coluna cnt3m_CL_ITUinst excluída.
Coluna cnt6m_CL_ITUinst excluída.
Coluna cnt12m_CL_ITUinst excluída.
Coluna tot7d_Chuva excluída.
Coluna med7d_TempInst excluída.
Coluna med7d_TempMin excluída.
Coluna med7d_UmidInst excluída.
Coluna med7d_formITUmax excluída.
Coluna med7d_NDVI excluída.
Coluna med7d_EVI excluída.
Coluna tot1m_Chuva excluída.
Coluna med1m_TempInst excluída.
Coluna med1m_UmidInst excluída.
Coluna med1m_NDVI excluída.
Coluna med1m_EVI excluída.
Coluna med3m_TempInst excluída.
Coluna med3m_UmidInst excluída.
Coluna med3m_formITUmax excluída.
Coluna med3m_EVI excluída.
Coluna med6m_TempInst excluída.
Coluna med6m_UmidInst excluída.
Coluna med6m_EVI excluída.
Coluna med12m_TempInst excluída.
Coluna med12m_TempMin excluída.
Coluna med12m_UmidInst excluída.
Coluna med12m_EVI excluída.
Coluna boa cobertura vegetal, com baixa excluída.
Coluna erosaoo laminar ou em sulco igua excluída.
Coluna CATEGORIA excluída.
*****FIM DELETE COLUNAS*********

*****INICIO PRINT INFOS******
Número total de linhas do DataFrame: 3153593
Número de colunas: 32
Informações do DataFrame:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 3153593 entries, 0 to 3153592
Data columns (total 32 columns):
 #   Column                            Dtype   
---  ------                            -----   
 0   ID_ANIMAL                         uint32  
 1   Tipificacao                       category
 2   QuestionarioClassificacaoEstabel  uint8   
 3   ILP                               uint8   
 4   IFP                               uint8   
 5   ILPF                              uint8   
 6   QuestionarioPossuiOutrosIncentiv  uint8   
 7   QuestionarioFabricaRacao          uint8   
 8   regua de manejo                   UInt8   
 9   identificacao individual          UInt8   
 10  rastreamento SISBOV               UInt8   
 11  participa de aliancas mercadolog  UInt8   
 12  QuestionarioPraticaRecuperacaoPa  uint8   
 13  Confinamento                      UInt8   
 14  Suplementacao_a_campo             UInt8   
 15  SemiConfinamento                  UInt8   
 16  tot3m_Chuva                       float32 
 17  med3m_formITUinst                 float32 
 18  med3m_NDVI                        float32 
 19  med3m_preR_milho                  float32 
 20  med3m_preR_boi                    float32 
 21  tot6m_Chuva                       float32 
 22  med6m_formITUinst                 float32 
 23  med6m_NDVI                        float32 
 24  med6m_preR_milho                  float32 
 25  med6m_preR_boi                    float32 
 26  tot12m_Chuva                      float32 
 27  med12m_formITUinst                float32 
 28  med12m_NDVI                       float32 
 29  med12m_preR_milho                 float32 
 30  med12m_preR_boi                   float32 
 31  classificacao                     category
dtypes: UInt8(7), category(2), float32(15), uint32(1), uint8(7)
memory usage: 261.7 MB
*****FIM PRINT INFOS*********
Function informations Took 0:00:00.006139

*****FIM LOAD DATA******
Function load_data Took 0:02:32.218984

*****INICIO SHOW SETTINGS******
os = <module 'os' from '/usr/local/lib/python3.8/os.py'>
pd = <module 'pandas' from '/home/externo/rafaelrm/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pandas/__init__.py'>
torch = <module 'torch' from '/home/externo/rafaelrm/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/torch/__init__.py'>
PANDAS_MAX_ROWS = 5000
random_seed = 42
n_jobs = 120
dataset_folder_path = /home/externo/rafaelrm/base_dados/
csv_path = /home/externo/rafaelrm/base_dados/TAB_MODELAGEM_RAFAEL_2020_1.csv
number_csv_lines = None
dtype_dict = {'ID_ANIMAL': 'uint32', 'EstabelecimentoMunicipio': 'category', 'Frigorifico_ID': 'uint8', 'Frigorifico_CNPJ': 'uint64', 'Frigorifico_RazaoSocial': 'category', 'Municipio_Frigorifico': 'category', 'Tipificacao': 'category', 'Maturidade': 'category', 'Acabamento': 'category', 'Peso': 'float32', 'EstabelecimentoIdentificador': 'uint16', 'Questionario_ID': 'uint16', 'QuestionarioClassificacaoEstabel': 'uint8', 'FERTIIRRIGACAO': 'uint8', 'ILP': 'uint8', 'IFP': 'uint8', 'ILPF': 'uint8', 'CONCEN_VOLUM': 'UInt8', 'CREEPFEEDING': 'UInt8', 'FORN_ESTRAT_SILAGEM': 'UInt8', 'PROTEICO': 'UInt8', 'PROTEICO_ENERGETICO': 'UInt8', 'RACAO_BAL_CONS_INFERIOR': 'UInt8', 'SAL_MINERAL': 'UInt8', 'SALMINERAL_UREIA': 'UInt8', 'RACAOO_BAL_CONSUMO_IG': 'UInt8', 'GRAO_INTEIRO': 'UInt8', 'ALTO_CONCENTR_VOLUM': 'UInt8', 'ALTO_CONCENTRADO': 'UInt8', 'QuestionarioPossuiOutrosIncentiv': 'uint8', 'QuestionarioFabricaRacao': 'uint8', 'area so confinamento': 'UInt8', 'regua de manejo': 'UInt8', 'boa cobertura vegetal, com baixa': 'UInt8', 'erosaoo laminar ou em sulco igua': 'UInt8', 'identificacao individual': 'UInt8', 'rastreamento SISBOV': 'UInt8', 'Lista Trace': 'UInt8', 'BPA': 'UInt8', 'participa de aliancas mercadolog': 'UInt8', 'QuestionarioPraticaRecuperacaoPa': 'uint8', 'Confinamento': 'UInt8', 'Suplementacao_a_campo': 'UInt8', 'SemiConfinamento': 'UInt8', 'dif_datas': 'uint16', 'tot7d_Chuva': 'float32', 'med7d_TempInst': 'float32', 'med7d_TempMin': 'float32', 'med7d_UmidInst': 'float32', 'med7d_formITUinst': 'float32', 'med7d_formITUmax': 'float32', 'med7d_NDVI': 'float32', 'med7d_EVI': 'float32', 'med7d_preR_soja': 'float32', 'med7d_preR_milho': 'float32', 'med7d_preR_boi': 'float32', 'tot1m_Chuva': 'float32', 'med1m_TempInst': 'float32', 'med1m_UmidInst': 'float32', 'med1m_formITUinst': 'float32', 'med1m_NDVI': 'float32', 'med1m_EVI': 'float32', 'med1m_preR_soja': 'float32', 'med1m_preR_milho': 'float32', 'med1m_preR_boi': 'float32', 'tot3m_Chuva': 'float32', 'med3m_TempInst': 'float32', 'med3m_UmidInst': 'float32', 'med3m_formITUinst': 'float32', 'med3m_formITUmax': 'float32', 'med3m_NDVI': 'float32', 'med3m_EVI': 'float32', 'med3m_preR_soja': 'float32', 'med3m_preR_milho': 'float32', 'med3m_preR_boi': 'float32', 'tot6m_Chuva': 'float32', 'med6m_TempInst': 'float32', 'med6m_UmidInst': 'float32', 'med6m_formITUinst': 'float32', 'med6m_NDVI': 'float32', 'med6m_EVI': 'float32', 'med6m_preR_soja': 'float32', 'med6m_preR_milho': 'float32', 'med6m_preR_boi': 'float32', 'tot12m_Chuva': 'float32', 'med12m_TempInst': 'float32', 'med12m_TempMin': 'float32', 'med12m_UmidInst': 'float32', 'med12m_formITUinst': 'float32', 'med12m_NDVI': 'float32', 'med12m_EVI': 'float32', 'med12m_preR_soja': 'float32', 'med12m_preR_milho': 'float32', 'med12m_preR_boi': 'float32', 'cnt7d_CL_ITUinst': 'float32', 'cnt1m_CL_ITUinst': 'float32', 'cnt3m_CL_ITUinst': 'float32', 'cnt6m_CL_ITUinst': 'float32', 'cnt12m_CL_ITUinst': 'float32', 'ANO': 'uint16', 'CATEGORIA': 'category', 'classificacao': 'category', 'Motivo': 'category', 'QTD_ANIMAIS_LOTE': 'uint16', 'CATEGORIA_BINARIA': 'category'}
parse_dates = ['DataAbate', 'Data_homol', 'DataAbate_6m_ANT', 'data_homol_select', 'data12m', 'data6m', 'data3m', 'data1m', 'data7d']
delete_columns_names_on_load_data = ['EstabelecimentoMunicipio', 'Maturidade', 'Acabamento', 'Peso', 'DataAbate', 'ANO', 'Frigorifico_ID', 'Frigorifico_CNPJ', 'Frigorifico_RazaoSocial', 'Municipio_Frigorifico', 'EstabelecimentoIdentificador', 'Data_homol', 'Questionario_ID', 'FERTIIRRIGACAO', 'CONCEN_VOLUM', 'CREEPFEEDING', 'FORN_ESTRAT_SILAGEM', 'PROTEICO', 'PROTEICO_ENERGETICO', 'RACAO_BAL_CONS_INFERIOR', 'SAL_MINERAL', 'SALMINERAL_UREIA', 'RACAOO_BAL_CONSUMO_IG', 'GRAO_INTEIRO', 'ALTO_CONCENTR_VOLUM', 'ALTO_CONCENTRADO', 'BPA', 'area so confinamento', 'Lista Trace', 'Motivo', 'data_homol_select', 'dif_datas', 'DataAbate_6m_ANT', 'data12m', 'data6m', 'data3m', 'data1m', 'data7d', 'med7d_formITUinst', 'med7d_preR_soja', 'med7d_preR_milho', 'med7d_preR_boi', 'med1m_formITUinst', 'med1m_preR_soja', 'med1m_preR_milho', 'med1m_preR_boi', 'med3m_preR_soja', 'med6m_preR_soja', 'med12m_preR_soja', 'cnt7d_CL_ITUinst', 'cnt1m_CL_ITUinst', 'cnt3m_CL_ITUinst', 'cnt6m_CL_ITUinst', 'cnt12m_CL_ITUinst', 'tot7d_Chuva', 'med7d_TempInst', 'med7d_TempMin', 'med7d_UmidInst', 'med7d_formITUmax', 'med7d_NDVI', 'med7d_EVI', 'tot1m_Chuva', 'med1m_TempInst', 'med1m_UmidInst', 'med1m_NDVI', 'med1m_EVI', 'med3m_TempInst', 'med3m_UmidInst', 'med3m_formITUmax', 'med3m_EVI', 'med6m_TempInst', 'med6m_UmidInst', 'med6m_EVI', 'med12m_TempInst', 'med12m_TempMin', 'med12m_UmidInst', 'med12m_EVI', 'boa cobertura vegetal, com baixa', 'erosaoo laminar ou em sulco igua', 'CATEGORIA']
PATH_SAVE_PLOTS = ./plots
PATH_SAVE_ESTIMATORS_REPR = ./runs/estimators_repr
PATH_SAVE_BEST_ESTIMATORS = ./runs/best_estimators
PATH_SAVE_RESULTS = ./runs/results
PATH_SAVE_LOGS = ./logs
PATH_SAVE_ENCODERS_SCALERS = ./runs/encoders_scalers
ordinal_encoder_columns_names = {'QuestionarioClassificacaoEstabel': ['0', '21', '26', '30']}
columns_ordinal_encoded = {}
label_encoder_columns_names = ['classificacao']
columns_label_encoded = {}
one_hot_encoder_columns_names = ['Tipificacao']
columns_one_hot_encoded = {}
min_max_scaler_columns_names = ['tot3m_Chuva', 'med3m_formITUinst', 'med3m_NDVI', 'med3m_preR_milho', 'med3m_preR_boi', 'tot6m_Chuva', 'med6m_formITUinst', 'med6m_NDVI', 'med6m_preR_milho', 'med6m_preR_boi', 'tot12m_Chuva', 'med12m_formITUinst', 'med12m_NDVI', 'med12m_preR_milho', 'med12m_preR_boi']
columns_min_max_scaled = {}
columns_label_binarized = {}
simple_imputer_columns_names = []
columns_names_drop_feature_by_correlation = ['med3m_formITUinst', 'med3m_preR_boi', 'med6m_preR_boi', 'classificacao']
class_column = classificacao
classifiers = {}
models_results = {}
device_name = auto
use_embeddings = True
use_cat_emb_dim = True
threshold_categorical_features = 150
num_workers = 0
eval_metric = ['auc', 'balanced_accuracy', 'accuracy']
augmentations = None
weights = 0
batch_size = 16384
virtual_batch_size = 2048
run_grid_search_cv_tuner = True
save_results_during_run = False
new_run = False
PATH_OBJECTS_PERSISTED_RESULTS_RUNS = ./runs/objects_persisted_results_runs
PARAMETERS_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/parameters_persist
RESULTS_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/results_persist
SPLIT_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/split_persist
tree_method = hist
objective = binary:logistic
*****FIM SHOW SETTINGS******


*****INICIO DELETE DUPLICATE ROWS BY ATTRIBUTE******
Linhas duplicadas encontradas para o atributo ID_ANIMAL.
Linhas duplicadas deletadas.
*****FIM DELETE DUPLICATE ROWS BY ATTRIBUTE*********
Function delete_duplicate_rows_by_attribute Took 0:00:01.641092

*****INICIO DELETE COLUNAS******
Coluna ID_ANIMAL excluída.
*****FIM DELETE COLUNAS*********

*****INICIO DELETE NAN ROWS******
Linhas com valores NaN encontradas.
*****FIM DELETE NAN ROWS*********
Function delete_nan_rows Took 0:00:00.729903


*****INICIO DELETE COLUMNS WITH SINGLE VALUE******
>>> Nenhuma coluna com valor único encontrada.
*****FIM DELETE COLUMNS WITH SINGLE VALUE*********
Function delete_columns_with_single_value Took 0:00:00.607336


*****INICIO LABEL ENCODER******
*****FIM LABEL ENCODER*********
Function label_encoder_columns Took 0:00:00.537049

Object saved in file: ./runs/encoders_scalers/target_encoded-15-03-2023_17:37:54.joblib

*****INICIO RELATÓRIO DISTRIBUIÇÃO DE CLASSES******
Distribuição da classe 1: 83%
Distribuição da classe 0: 17%
Erro majoritário: 17%
*****FIM RELATÓRIO DISTRIBUIÇÃO DE CLASSES******
Function class_distribution Took 0:00:00.087968

/home/externo/rafaelrm/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
Number of folds for cross validation: 10
Scoring strategy for grid search: accuracy
Test Size: 0.2

x_train shape: (2378460, 30)
y_train shape: (2378460,)
x_test shape: (594616, 30)
y_test shape: (594616,)
Checking already executed parameters...
classifier__estimator GaussianNB() == classifier__estimator GaussianNB()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (100,) == classifier__estimator__hidden_layer_sizes (100,)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation logistic == classifier__estimator__activation logistic
classifier__estimator__alpha 0.05 == classifier__estimator__alpha 0.05
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (200, 100) == classifier__estimator__hidden_layer_sizes (200, 100)
classifier__estimator__learning_rate adaptive == classifier__estimator__learning_rate adaptive
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation relu == classifier__estimator__activation relu
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation relu == classifier__estimator__activation relu
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation relu == classifier__estimator__activation relu
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation relu == classifier__estimator__activation relu
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation relu == classifier__estimator__activation relu
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation relu == classifier__estimator__activation relu
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation relu == classifier__estimator__activation relu
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation relu == classifier__estimator__activation relu
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.0001 == classifier__estimator__learning_rate_init 0.0001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.8999999999999999 == classifier__estimator__momentum 0.8999999999999999
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation relu == classifier__estimator__activation relu
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation relu == classifier__estimator__activation relu
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.0 == classifier__estimator__momentum 0.0
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation relu == classifier__estimator__activation relu
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation relu == classifier__estimator__activation relu
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.3 == classifier__estimator__momentum 0.3
classifier__estimator__solver sgd == classifier__estimator__solver sgd
------------------------------------------------------------------
classifier__estimator MLPClassifier() == classifier__estimator MLPClassifier()
classifier__estimator__activation relu == classifier__estimator__activation relu
classifier__estimator__alpha 0.0001 == classifier__estimator__alpha 0.0001
classifier__estimator__early_stopping True == classifier__estimator__early_stopping True
classifier__estimator__hidden_layer_sizes (50, 100, 50) == classifier__estimator__hidden_layer_sizes (50, 100, 50)
classifier__estimator__learning_rate constant == classifier__estimator__learning_rate constant
classifier__estimator__learning_rate_init 0.001 == classifier__estimator__learning_rate_init 0.001
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__momentum 0.6 == classifier__estimator__momentum 0.6
classifier__estimator__solver adam == classifier__estimator__solver adam
------------------------------------------------------------------
Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'sgd'}

Removing already executed params object from candidate_params: {'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__solver': 'adam'}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': GaussianNB()}

/home/externo/rafaelrm/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
600 fits failed out of a total of 4940.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
600 fits failed with the following error:
Traceback (most recent call last):
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/sklearn_tuner/model_selection_tuner/_validation_tuner.py", line 178, in _fit_and_score_tuner
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/pipeline.py", line 382, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/clf_switcher.py", line 20, in fit
    self.estimator.fit(x, y)
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/tree/_classes.py", line 969, in fit
    super().fit(
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/tree/_classes.py", line 265, in fit
    check_scalar(
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/utils/validation.py", line 1480, in check_scalar
    raise ValueError(
ValueError: min_samples_split == 1, must be >= 2.

  warnings.warn(some_fits_failed_message, FitFailedWarning)
Fitting 10 folds for each of 179 candidates, totalling 1790 fits
/home/externo/rafaelrm/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/model_selection/_search.py:953: UserWarning: One or more of the test scores are non-finite: [0.73131228        nan 0.52367204 0.52367204 0.52367204        nan
 0.52367204 0.52367204 0.52367204        nan 0.52367204 0.52367204
 0.52367204        nan 0.53589171 0.53589171 0.53589171        nan
 0.53589171 0.53589171 0.53589171        nan 0.53589171 0.53589171
 0.53589171        nan 0.55826627 0.55826627 0.55826501        nan
 0.55826669 0.55826669 0.55826543        nan 0.55826669 0.55826669
 0.55826543        nan 0.60750612 0.60748804 0.60748972        nan
 0.60748804 0.60746954 0.6074708         nan 0.60747248 0.60745903
 0.60745903        nan 0.7346346  0.73375798 0.73177434        nan
 0.7338715  0.73319249 0.7313703         nan 0.7328843  0.73237305
 0.7308334         nan 0.52367204 0.52367204 0.52367204        nan
 0.52367204 0.52367204 0.52367204        nan 0.52367204 0.52367204
 0.52367204        nan 0.53589171 0.53589171 0.53589171        nan
 0.53589171 0.53589171 0.53589171        nan 0.53589171 0.53589171
 0.53589171        nan 0.562321   0.562321   0.562321          nan
 0.56232142 0.56232142 0.56232142        nan 0.56232142 0.56232142
 0.56232142        nan 0.61151838 0.61151123 0.61151165        nan
 0.61151501 0.61150703 0.61150913        nan 0.61152258 0.6115167
 0.6115188         nan 0.73463165 0.73375503 0.73191351        nan
 0.73393835 0.73319711 0.73149937        nan 0.733018   0.73244957
 0.73099989        nan 0.82938036 0.82938036 0.82938036        nan
 0.82938036 0.82938036 0.82938036        nan 0.82938036 0.82938036
 0.82938036        nan 0.82938036 0.82938036 0.82938036        nan
 0.82938036 0.82938036 0.82938036        nan 0.82938036 0.82938036
 0.82938036        nan 0.83038857 0.83038857 0.83038857        nan
 0.83038815 0.83038815 0.83038815        nan 0.83038815 0.83038815
 0.83038815        nan 0.83426503 0.8342583  0.83424443        nan
 0.83426503 0.83425746 0.83424148        nan 0.83426335 0.8342562
 0.83424275        nan 0.85187306 0.85165359 0.85099014        nan
 0.85178771 0.85160524 0.85095608        nan 0.85160944 0.85146397
 0.85085644        nan 0.82938036 0.82938036 0.82938036        nan
 0.82938036 0.82938036 0.82938036        nan 0.82938036 0.82938036
 0.82938036        nan 0.82938036 0.82938036 0.82938036        nan
 0.82938036 0.82938036 0.82938036        nan 0.82938036 0.82938036
 0.82938036        nan 0.82993534 0.82993534 0.82993534        nan
 0.8299345  0.8299345  0.8299345         nan 0.8299345  0.8299345
 0.8299345         nan 0.83328456 0.83327111 0.83325934        nan
 0.83328498 0.83327069 0.83325934        nan 0.83327994 0.83327279
 0.83326354        nan 0.85187012 0.85172717 0.85106287        nan
 0.85177972 0.85164644 0.85100149        nan 0.8515447  0.85145388
 0.85084887 0.57281897 0.57295855 0.57209707 0.57295855 0.57203821
 0.57295855 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.57179688 0.57225978 0.57231696 0.57225978 0.57213281
 0.57225978 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.57175021 0.57219251 0.57206428 0.57219251 0.57217317
 0.57219251 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.57175946 0.57216897 0.57195664 0.57216897 0.5721799
 0.57216897 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.83815914 0.82938036 0.83744986
 0.82938036 0.83708955 0.82938036 0.83739983 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.83955164 0.82938036 0.83872548 0.82938036 0.83768237
 0.82938036 0.83807884 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.83224229
 0.82938036 0.83234067 0.82938036 0.83239533 0.82938036 0.83233941
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.83235329 0.82938036 0.83236086
 0.82938036 0.8322898  0.82938036 0.83210144 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.8411388  0.82938036 0.84078017 0.82938036 0.84081128
 0.82938036 0.84072089 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.84062755
 0.82938036 0.84099459 0.82938036 0.84093741 0.82938036 0.84021005
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036 0.82938036
 0.82938036 0.83741707 0.82938036 0.83711645 0.82938036 0.83694197
 0.82938036 0.83653078 0.82938036 0.84115394 0.82938036 0.84083525
 0.82938036 0.84055986 0.82938036 0.84089915 0.83365791 0.83686671
 0.82938036 0.83669727 0.82938036 0.83703489 0.82938036 0.83710552
 0.82938036 0.84110475 0.82938036 0.84105808 0.82938036 0.84125064
 0.82938036 0.84109886 0.8353691  0.8311584  0.82938036 0.831179
 0.82938036 0.83106548 0.82938036 0.83109239 0.82938036 0.83284016
 0.82938036 0.83291079 0.82938036 0.83294569 0.82938036 0.83286076
 0.82938078 0.8309898  0.82938036 0.83124038 0.82938036 0.83113401
 0.82938036 0.83097593 0.82938036 0.83288136 0.82938036 0.8329604
 0.82938036 0.83289313 0.82938036 0.8329789  0.82938162 0.83875365
 0.82938036 0.83907402 0.82938036 0.83846901 0.82938036 0.83845219
 0.82938036 0.84238751 0.82938036 0.84219579 0.82938036 0.84225297
 0.82938036 0.84218065 0.83448408 0.83869689 0.82938036 0.83868512
 0.82938036 0.83853922 0.82938036 0.838477   0.82938036 0.8420108
 0.82938036 0.84180772 0.82938036 0.84239508 0.82938036 0.84216888
 0.83573447 0.83261901 0.82938036 0.83290154 0.82938036 0.83263708
 0.82938036 0.83265685 0.82938036 0.83172557 0.82938036 0.83192023
 0.82938036 0.83185633 0.82938036 0.83176551 0.83103689 0.83273715
 0.82938036 0.832442   0.82938036 0.83285571 0.82938036 0.8326354
 0.82938036 0.83192948 0.82938036 0.83198246 0.82938036 0.83182101
 0.82938036 0.83172851 0.83126309 0.82956409 0.82938036 0.82951363
 0.82938036 0.82958385 0.82938036 0.82943754 0.82938036 0.82998074
 0.82938036 0.83005937 0.82938036 0.83010141 0.82938036 0.83007913
 0.82938036 0.82940432 0.82938036 0.82954685 0.82938036 0.82964229
 0.82938036 0.82944889 0.82938036 0.83005979 0.82938036 0.83005306
 0.82938036 0.83006147 0.82938036 0.82995426 0.82938036 0.83282838
 0.82938036 0.83289692 0.82938036 0.83308065 0.82938036 0.83289061
 0.82938036 0.83122819 0.82938036 0.83116008 0.82938036 0.83118825
 0.82938036 0.83110038 0.83128873 0.83279517 0.82938036 0.83306341
 0.82938036 0.83280274 0.82938036 0.8329768  0.82938036 0.83116723
 0.82938036 0.8311462  0.82938036 0.83114242 0.82938036 0.83109996
 0.83067994]
  warnings.warn(
--------------------- RESULTS GS1 ---------------------

CSV gerado com sucesso em: ./runs/results/GS1-cv_results-16-03-2023_07:58:04.csv.
Function generate_new_csv Took 0:00:00.276853

Cross validation results:
     mean_fit_time  std_fit_time  mean_score_time  std_score_time  ... split9_test_score mean_test_score std_test_score rank_test_score
170      33.124286      0.381194         0.323317        0.010717  ...          0.852438        0.851873       0.000453               1
230      30.762116      0.417324         0.314785        0.015171  ...          0.852447        0.851870       0.000469               2
174      32.973360      0.336846         0.319216        0.015881  ...          0.852337        0.851788       0.000465               3
234      30.652564      0.361407         0.313559        0.009877  ...          0.852417        0.851780       0.000459               4
231      30.638648      0.402569         0.317745        0.020161  ...          0.852283        0.851727       0.000422               5
171      32.973001      0.378831         0.327223        0.011939  ...          0.852085        0.851654       0.000437               6
235      30.604266      0.338179         0.310108        0.014286  ...          0.852266        0.851646       0.000454               7
178      32.960139      0.267646         0.321854        0.011010  ...          0.852354        0.851609       0.000499               8
175      32.987354      0.414011         0.321177        0.015900  ...          0.852085        0.851605       0.000489               9
238      30.652607      0.327164         0.315285        0.013878  ...          0.852283        0.851545       0.000525              10
179      32.912612      0.405814         0.321043        0.018007  ...          0.852064        0.851464       0.000485              11
239      30.527878      0.318691         0.309729        0.013099  ...          0.852190        0.851454       0.000520              12
232      30.643452      0.375230         0.313546        0.014510  ...          0.851538        0.851063       0.000450              13
236      30.552014      0.384558         0.310365        0.012368  ...          0.851454        0.851001       0.000461              14
172      32.971839      0.330912         0.329517        0.019428  ...          0.851559        0.850990       0.000474              15
176      32.805166      0.358505         0.316422        0.012964  ...          0.851622        0.850956       0.000518              16
180      32.740938      0.443777         0.315166        0.013008  ...          0.851568        0.850856       0.000522              17
240      30.504282      0.373385         0.312734        0.013790  ...          0.851412        0.850849       0.000500              18
573    2431.099174    555.769806         0.967480        0.043680  ...          0.842482        0.842395       0.000765              19
553    2219.897341    299.051305         0.954930        0.047490  ...          0.843209        0.842388       0.000689              20
557    2295.629279    487.854339         0.987424        0.054078  ...          0.843146        0.842253       0.000782              21
555    2372.516960    577.687394         0.988711        0.036817  ...          0.842587        0.842196       0.000738              22
559    2254.817407    499.997351         0.965485        0.034581  ...          0.841931        0.842181       0.000906              23
575    2120.439796    508.900337         0.948461        0.025309  ...          0.842314        0.842169       0.000454              24
569    2009.043044    547.054262         0.968070        0.050987  ...          0.840805        0.842011       0.000697              25
571    1977.182198    522.011486         0.978597        0.063503  ...          0.841742        0.841808       0.000704              26
509    1330.858248    268.821177         0.623615        0.024775  ...          0.842007        0.841251       0.000648              27
489    1831.324119    437.733843         7.222193        0.210977  ...          0.841372        0.841154       0.000606              28
361    5562.288788   1164.536849         7.391198        8.305434  ...          0.842566        0.841139       0.000796              29
505    1360.544909    297.273323         0.621361        0.022861  ...          0.842188        0.841105       0.000681              30
511    1484.798436    518.653956         0.667350        0.043491  ...          0.841217        0.841099       0.000981              31
507    1457.401250    296.330341         0.623154        0.038339  ...          0.841536        0.841058       0.001036              32
379    5621.293556    805.106706         4.286175        0.621334  ...          0.840872        0.840995       0.000604              33
381    5491.574083   1038.986633         3.868047        0.077999  ...          0.842280        0.840937       0.000769              34
495    1347.352325    312.382330         0.642812        0.035117  ...          0.842003        0.840899       0.000724              35
491    1716.178498    198.091185         7.678745        0.299599  ...          0.840321        0.840835       0.000677              36
365    5384.126886   1070.788729         6.101098        3.390142  ...          0.841633        0.840811       0.000967              37
363    5679.226167   1001.756893         4.662894        1.922949  ...          0.842133        0.840780       0.001069              38
367    5283.816515   1192.166466         3.829235        0.042512  ...          0.840695        0.840721       0.000944              39
377    5261.841569   1156.889841         3.862049        0.052828  ...          0.840372        0.840628       0.001286              40
493    1471.119200    446.081948         7.661503        0.269102  ...          0.837786        0.840560       0.001205              41
383    5482.861458   1288.505294         4.099112        0.513573  ...          0.841120        0.840210       0.001056              42
313    5968.649550    632.989408         3.842651        0.976461  ...          0.838101        0.839552       0.001353              43
547    2248.346689    444.538507         0.748373        0.014352  ...          0.838442        0.839074       0.000479              44
545    2214.341751    379.052350         0.764932        0.024351  ...          0.838517        0.838754       0.000788              45
315    6041.676401   1062.961942         4.903465        2.428696  ...          0.838736        0.838725       0.001206              46
561    2300.120797    703.215671         0.770290        0.033035  ...          0.838185        0.838697       0.001330              47
563    2222.858113    648.300562         0.778532        0.025607  ...          0.838997        0.838685       0.001141              48
565    2105.178055    591.640400         0.770789        0.032169  ...          0.839938        0.838539       0.001160              49
567    2103.913093    428.026693         0.739661        0.017457  ...          0.837269        0.838477       0.000940              50
549    2145.538573    418.659701         0.758683        0.022678  ...          0.839283        0.838469       0.001319              51
551    2080.964201    373.787744         0.755639        0.022469  ...          0.837655        0.838452       0.000728              52
297    6088.894833   1453.615935         4.362837        2.637948  ...          0.838395        0.838159       0.001502              53
319    5479.375805    788.113246         5.181701        3.379085  ...          0.837756        0.838079       0.001232              54
317    5812.424324   2235.092029         5.678710        3.739699  ...          0.830516        0.837682       0.002848              55
299    5122.553043   2140.478933         4.982213        2.661372  ...          0.840292        0.837450       0.003319              56
481    2383.119692    541.035492         6.870897        0.232818  ...          0.837567        0.837417       0.000719              57
303    5049.746660   1485.284591         4.388629        2.281684  ...          0.839749        0.837400       0.002357              58
483    2312.339562    622.854683         6.812411        0.228802  ...          0.838728        0.837116       0.001072              59
503    1398.340620    363.802755         0.576241        0.030695  ...          0.837513        0.837106       0.000821              60
301    5083.722607   1633.404988         4.981858        2.844395  ...          0.831126        0.837090       0.002595              61
501    1418.736635    283.413558         0.555272        0.035137  ...          0.837185        0.837035       0.000881              62
485    2276.139487    445.377403         6.866765        0.140065  ...          0.835621        0.836942       0.000832              63
497    1279.835592    148.969308         0.533770        0.029533  ...          0.837273        0.836867       0.000519              64
499    1116.082635    255.995916         0.534524        0.015195  ...          0.836995        0.836697       0.000714              65
487    1892.938218    264.927066         7.119232        0.233933  ...          0.836655        0.836531       0.000515              66
576    2670.449654    430.347324         0.740694        0.023252  ...          0.835696        0.835734       0.001031              67
512    1925.885912    424.406672         0.557716        0.034871  ...          0.838185        0.835369       0.001928              68
560    1472.786534    616.333777         0.768814        0.021596  ...          0.834090        0.834484       0.001989              69
162      24.598174      0.469848         0.259672        0.009454  ...          0.834292        0.834265       0.000240              70
158      23.725417      0.631254         0.266753        0.024305  ...          0.834271        0.834265       0.000243              71
166      24.404361      0.126542         0.258258        0.013228  ...          0.834300        0.834263       0.000244              72
159      24.300026      0.097101         0.253566        0.012049  ...          0.834267        0.834258       0.000252              73
163      24.391640      0.133771         0.254344        0.010168  ...          0.834284        0.834257       0.000249              74
167      24.365311      0.109394         0.270665        0.016609  ...          0.834288        0.834256       0.000252              75
160      24.285566      0.093585         0.262852        0.020197  ...          0.834288        0.834244       0.000253              76
168      24.386104      0.080392         0.253844        0.006064  ...          0.834300        0.834243       0.000253              77
164      24.326668      0.120539         0.264266        0.010270  ...          0.834300        0.834241       0.000251              78
496     953.448466    512.173623         0.538765        0.018802  ...          0.833132        0.833658       0.002284              79
222      23.189363      0.124055         0.259620        0.011518  ...          0.833964        0.833285       0.000324              80
218      23.053678      0.117364         0.257124        0.017011  ...          0.833939        0.833285       0.000319              81
226      23.166430      0.129638         0.263701        0.012640  ...          0.833951        0.833280       0.000323              82
227      23.093252      0.119903         0.265240        0.011826  ...          0.833939        0.833273       0.000324              83
219      23.085329      0.101248         0.258791        0.012029  ...          0.833922        0.833271       0.000317              84
223      23.108773      0.099427         0.253630        0.009755  ...          0.833947        0.833271       0.000324              85
228      23.075605      0.074221         0.257486        0.015190  ...          0.833922        0.833264       0.000321              86
224      23.073202      0.088808         0.252239        0.012601  ...          0.833930        0.833259       0.000322              87
220      23.131200      0.144159         0.247273        0.004506  ...          0.833918        0.833259       0.000318              87
645   11363.473524   3171.271673        15.259186        1.388135  ...          0.833359        0.833081       0.000341              89
659   10807.806886   3233.654769        14.742408        1.756216  ...          0.833001        0.833063       0.000507              90
543     346.352712    101.075864         0.410875        0.025634  ...          0.833346        0.832979       0.000232              91
663   10575.630754   2119.227535        15.534328        1.041464  ...          0.832690        0.832977       0.000398              92
539     354.366674     84.999947         0.417550        0.034943  ...          0.833132        0.832960       0.000378              93
525     378.649605    118.573817         0.412373        0.035528  ...          0.833220        0.832946       0.000509              94
523     330.024016     77.637251         0.407691        0.028917  ...          0.833026        0.832911       0.000389              95
579    5140.470559   1002.888416         7.017221        0.379048  ...          0.832181        0.832902       0.000372              96
643   10625.148085   4035.790552        14.458115        1.166248  ...          0.832682        0.832897       0.000483              97
541     370.530172    117.551654         0.398098        0.028576  ...          0.833220        0.832893       0.000594              98
647    9755.164440   1953.521654        14.942479        1.100595  ...          0.832673        0.832891       0.000357              99
537     366.278120     81.151354         0.424860        0.016965  ...          0.831988        0.832881       0.000600             100
527     354.028778     82.346548         0.411095        0.019298  ...          0.832602        0.832861       0.000570             101
597    5539.203421    881.721373         7.442551        0.464748  ...          0.832741        0.832856       0.000338             102
521     355.783215     84.320160         0.416118        0.022229  ...          0.833052        0.832840       0.000412             103
641    8930.875471   1819.606210        15.435181        1.142509  ...          0.832917        0.832828       0.000391             104
661    8435.761075   1545.981302        15.043103        0.691434  ...          0.832854        0.832803       0.000362             105
657    8391.579005   2281.069395        13.892302        1.250267  ...          0.832833        0.832795       0.000352             106
593    6204.310131   1487.173538         7.060800        0.236123  ...          0.831286        0.832737       0.000706             107
583    4732.982389   1514.316943         6.975821        0.655027  ...          0.831736        0.832657       0.000432             108
581    4800.991998   1175.727302         6.974181        0.358134  ...          0.832476        0.832637       0.000565             109
599    4669.908548    943.559171         7.026867        0.584295  ...          0.833106        0.832635       0.000566             110
577    5638.262371   2017.918810         7.075586        0.454362  ...          0.832408        0.832619       0.000669             111
595    4716.005856   1411.460393         6.979859        0.557457  ...          0.832623        0.832442       0.000540             112
333    1547.289638    396.630915         3.192156        2.365292  ...          0.831904        0.832395       0.000445             113
347    1503.347246    382.307386         2.428141        0.155297  ...          0.832661        0.832361       0.000476             114
345    1386.691229    250.043485         2.445482        0.062781  ...          0.832051        0.832353       0.000397             115
331    1437.611899    387.638848         2.386537        0.078377  ...          0.832774        0.832341       0.000274             116
335    1425.080546    448.511897         3.986147        2.916794  ...          0.833220        0.832339       0.000648             117
349    1304.721472    275.158594         2.411128        0.075399  ...          0.831736        0.832290       0.000639             118
329    1307.421874    332.762622         2.566889        0.513480  ...          0.832459        0.832242       0.000784             119
351    1397.186235    348.604881         3.321054        1.783030  ...          0.831349        0.832101       0.000553             120
603    2078.951781    424.944847         4.915131        0.222446  ...          0.831866        0.831982       0.000282             121
601    2269.816997    459.231366         5.140353        0.221619  ...          0.832072        0.831929       0.000396             122
587    2248.925849    372.353477         4.930956        0.249433  ...          0.832278        0.831920       0.000267             123
589    2704.815758    609.610518         5.011667        0.161042  ...          0.831992        0.831856       0.000412             124
605    2167.672455    581.792268         5.046041        0.283815  ...          0.831673        0.831821       0.000378             125
591    2275.158693    559.607246         5.002885        0.246824  ...          0.831597        0.831766       0.000201             126
607    1912.345085    416.058393         5.019284        0.184276  ...          0.831357        0.831729       0.000324             127
585    2038.629344    447.135335         5.140682        0.296333  ...          0.831340        0.831726       0.000342             128
656     899.306139    577.568553         0.712006        0.024625  ...          0.829402        0.831289       0.001583             129
608    1202.888885    316.924375         0.542099        0.026279  ...          0.829373        0.831263       0.001484             130
531     404.356085    100.751937         0.357274        0.012193  ...          0.830773        0.831240       0.000487             131
649    3665.778766    435.011141         8.779746        0.146865  ...          0.830861        0.831228       0.000230             132
653    3824.138642    832.200761         8.756756        0.170486  ...          0.830958        0.831188       0.000219             133
515     316.386358     83.143195         0.363889        0.013949  ...          0.830621        0.831179       0.000430             134
665    3540.677916   1100.433843         8.824728        0.223799  ...          0.831139        0.831167       0.000273             135
651    3472.637990    659.940115         8.755975        0.261893  ...          0.830609        0.831160       0.000245             136
513     338.434718     65.697242         0.366117        0.019386  ...          0.830756        0.831158       0.000276             137
667    4005.663360   1116.178666         8.792097        0.159508  ...          0.830996        0.831146       0.000315             138
669    3887.490662    428.817158         8.880277        0.167830  ...          0.830403        0.831142       0.000328             139
533     341.680602    117.918228         0.369138        0.022550  ...          0.831059        0.831134       0.000484             140
655    3459.770326    862.487937         8.667076        0.155639  ...          0.830760        0.831100       0.000362             141
671    3831.831349    958.043966         8.716400        0.127585  ...          0.830458        0.831100       0.000385             142
519     302.922614    103.742760         0.350378        0.015117  ...          0.831412        0.831092       0.000512             143
517     312.731302     84.216790         0.361442        0.019672  ...          0.830605        0.831065       0.000449             144
592     549.464663    403.890093         0.535287        0.028996  ...          0.833014        0.831037       0.001620             145
529     329.059148     85.239703         0.381831        0.025096  ...          0.830373        0.830990       0.000479             146
535     326.257011    115.253343         0.363598        0.019328  ...          0.831013        0.830976       0.000415             147
672    1543.325880    458.458304         0.711976        0.020207  ...          0.833018        0.830680       0.001361             148
146      18.460561      0.095321         0.245640        0.007186  ...          0.830403        0.830389       0.000251             149
147      18.474433      0.120066         0.245627        0.011152  ...          0.830403        0.830389       0.000251             149
148      18.467962      0.092123         0.251947        0.011923  ...          0.830403        0.830389       0.000251             149
150      18.452272      0.099258         0.251510        0.014965  ...          0.830403        0.830388       0.000251             152
151      18.471736      0.127215         0.253999        0.015244  ...          0.830403        0.830388       0.000251             152
152      18.476364      0.068502         0.252352        0.016632  ...          0.830403        0.830388       0.000251             152
154      18.450013      0.078500         0.255591        0.013758  ...          0.830403        0.830388       0.000251             152
155      18.455247      0.082720         0.243449        0.011023  ...          0.830403        0.830388       0.000251             152
156      18.478840      0.069601         0.247991        0.016629  ...          0.830403        0.830388       0.000251             152
621     808.888619    233.452456         3.227003        0.041286  ...          0.829734        0.830101       0.000293             158
623     807.447635    206.091865         3.222749        0.030230  ...          0.830121        0.830079       0.000164             159
637     789.062015    178.552188         3.224481        0.020402  ...          0.830088        0.830061       0.000250             160
633     763.322122    215.959452         3.206458        0.036706  ...          0.829869        0.830060       0.000187             161
619     731.359060    215.274389         3.206665        0.018247  ...          0.830016        0.830059       0.000202             162
635     702.707376    137.305228         3.142133        0.091055  ...          0.829600        0.830053       0.000239             163
617     696.460159    113.529605         3.194705        0.026652  ...          0.830003        0.829981       0.000227             164
639     829.012458    219.637308         3.191333        0.062116  ...          0.829423        0.829954       0.000226             165
208      18.699834      0.084436         0.249488        0.011530  ...          0.830037        0.829935       0.000195             166
207      18.663019      0.121767         0.244716        0.012780  ...          0.830037        0.829935       0.000195             166
206      18.678365      0.079489         0.255495        0.014744  ...          0.830037        0.829935       0.000195             166
216      18.725222      0.116174         0.251570        0.011752  ...          0.830037        0.829934       0.000195             169
215      18.727269      0.086788         0.249405        0.009375  ...          0.830037        0.829934       0.000195             169
214      18.695727      0.087466         0.253077        0.016579  ...          0.830037        0.829934       0.000195             169
212      18.706057      0.047319         0.251793        0.010712  ...          0.830037        0.829934       0.000195             169
211      18.641380      0.073740         0.255003        0.016448  ...          0.830037        0.829934       0.000195             169
210      18.689878      0.064324         0.245085        0.007854  ...          0.830037        0.829934       0.000195             169
629     504.665808    328.315874         1.384285        0.460760  ...          0.829928        0.829642       0.000301             175
613     419.885563    200.171247         1.370213        0.433167  ...          0.829377        0.829584       0.000208             176
609     406.742439    256.254576         1.417850        0.470394  ...          0.829364        0.829564       0.000301             177
627     380.785496    204.738087         1.418836        0.437142  ...          0.829823        0.829547       0.000257             178
611     363.061951    247.318580         1.403195        0.318879  ...          0.829377        0.829514       0.000240             179
631     319.151328    119.260635         1.521759        0.456947  ...          0.829633        0.829449       0.000109             180
615     273.693721     39.675248         1.541603        0.268383  ...          0.829482        0.829438       0.000062             181
625     255.656883     28.032282         1.265776        0.270842  ...          0.829377        0.829404       0.000037             182
544     497.735655      4.129047         0.367179        0.022494  ...          0.829390        0.829382       0.000010             183
528      97.542562      1.494823         0.359728        0.018168  ...          0.829377        0.829381       0.000015             184
451    1332.922580     11.485112         7.540048        0.656002  ...          0.829377        0.829380       0.000002             185
652     223.041625      2.549485         0.722234        0.016618  ...          0.829377        0.829380       0.000002             185
452    1270.607297     27.853220         7.243665        0.277164  ...          0.829377        0.829380       0.000002             185
446    2443.080427     32.831968         4.763064        1.632441  ...          0.829377        0.829380       0.000002             185
450    1131.770799     89.302030         6.500737        0.794870  ...          0.829377        0.829380       0.000002             185
650     220.221840      1.672019         0.713291        0.016560  ...          0.829377        0.829380       0.000002             185
449    1087.838253     14.838866         6.139930        0.321180  ...          0.829377        0.829380       0.000002             185
448    2548.362855     33.329020         3.841125        0.339901  ...          0.829377        0.829380       0.000002             185
454    1188.603204    122.170733         6.470235        1.011369  ...          0.829377        0.829380       0.000002             185
453    1299.036025     45.063689         7.116542        0.284525  ...          0.829377        0.829380       0.000002             185
648     223.162450      3.026931         0.706831        0.011754  ...          0.829377        0.829380       0.000002             185
447     493.933598     14.888549         3.659751        0.478977  ...          0.829377        0.829380       0.000002             185
552     226.026782      1.642883         0.751231        0.030344  ...          0.829377        0.829380       0.000002             185
646     222.731084      1.813961         0.724385        0.021780  ...          0.829377        0.829380       0.000002             185
455    1305.503988     20.643317         6.974934        0.488398  ...          0.829377        0.829380       0.000002             185
469     544.348924     12.130666         7.493458        0.135250  ...          0.829377        0.829380       0.000002             185
468    1922.404840     24.543923         7.515655        0.140585  ...          0.829377        0.829380       0.000002             185
467     535.662751      7.295273         7.256160        0.197880  ...          0.829377        0.829380       0.000002             185
466    1907.439996     23.552406         7.633683        0.408934  ...          0.829377        0.829380       0.000002             185
640     494.817872      6.730766         0.356216        0.015460  ...          0.829377        0.829380       0.000002             185
465     535.409717     18.615879         7.857143        0.251522  ...          0.829377        0.829380       0.000002             185
642     224.185669      2.794705         0.726502        0.025314  ...          0.829377        0.829380       0.000002             185
464     521.770841      9.142136         7.914367        0.271428  ...          0.829377        0.829380       0.000002             185
644     222.104703      2.063117         0.730622        0.031457  ...          0.829377        0.829380       0.000002             185
463     535.165109      8.929716         7.768617        0.217810  ...          0.829377        0.829380       0.000002             185
462     523.447886     11.799203         7.745278        0.394300  ...          0.829377        0.829380       0.000002             185
461     525.388560     45.690663         7.287949        0.234194  ...          0.829377        0.829380       0.000002             185
460    1262.638374     28.531074         6.849706        0.675104  ...          0.829377        0.829380       0.000002             185
459    1319.103946     13.686282         7.066807        0.381369  ...          0.829377        0.829380       0.000002             185
458    1251.877698     28.379350         6.980400        0.484386  ...          0.829377        0.829380       0.000002             185
457    1302.376755     25.572132         7.205117        0.497446  ...          0.829377        0.829380       0.000002             185
456    1253.752907     24.882095         6.912831        0.464793  ...          0.829377        0.829380       0.000002             185
445     485.618100      9.670714         3.719232        0.122586  ...          0.829377        0.829380       0.000002             185
662     802.596634      6.421030         0.715785        0.033056  ...          0.829377        0.829380       0.000002             185
444    2120.837360    385.756015         3.108486        0.657040  ...          0.829377        0.829380       0.000002             185
418     302.672722      8.242414         1.781677        0.635249  ...          0.829377        0.829380       0.000002             185
427     324.176894     11.652126         2.423717        0.061979  ...          0.829377        0.829380       0.000002             185
426     304.916043     11.847640         2.046730        0.546336  ...          0.829377        0.829380       0.000002             185
425     325.237570     11.679012         2.443556        0.093831  ...          0.829377        0.829380       0.000002             185
424     307.630955      7.535481         2.086002        0.504752  ...          0.829377        0.829380       0.000002             185
423     325.539402      7.240838         2.415292        0.048472  ...          0.829377        0.829380       0.000002             185
422     308.393355     11.373156         2.111070        0.525292  ...          0.829377        0.829380       0.000002             185
421     329.094138      7.587979         2.649759        0.576866  ...          0.829377        0.829380       0.000002             185
420     298.907942     12.683748         1.633359        0.673412  ...          0.829377        0.829380       0.000002             185
419     312.275633     11.648358         2.416993        0.549461  ...          0.829377        0.829380       0.000002             185
417     312.788255      7.227346         2.384586        0.283804  ...          0.829377        0.829380       0.000002             185
443     326.698402      6.904315         2.480400        0.060950  ...          0.829377        0.829380       0.000002             185
416    3148.620273     26.612809         3.403700        0.268936  ...          0.829377        0.829380       0.000002             185
415     618.905308     10.916002         3.328939        0.104154  ...          0.829377        0.829380       0.000002             185
414    3181.624910     69.831866         3.406337        0.148190  ...          0.829377        0.829380       0.000002             185
413     610.841832     15.128753         3.310465        0.063245  ...          0.829377        0.829380       0.000002             185
412    3160.498962    219.241007         4.711041        2.916309  ...          0.829377        0.829380       0.000002             185
411     589.551315     13.781334         3.283306        0.090196  ...          0.829377        0.829380       0.000002             185
410    3129.246183     39.080399         3.414993        0.109548  ...          0.829377        0.829380       0.000002             185
409     603.670988     24.116736         3.438634        0.176681  ...          0.829377        0.829380       0.000002             185
408    2089.116063     47.614687         3.328024        0.117555  ...          0.829377        0.829380       0.000002             185
670    1195.514180     11.133003         0.737773        0.020891  ...          0.829377        0.829380       0.000002             185
428     303.619950      9.665570         2.058350        0.548030  ...          0.829377        0.829380       0.000002             185
668    1184.198828     11.937479         0.724774        0.017165  ...          0.829377        0.829380       0.000002             185
429     320.955762     12.580475         2.476894        0.149989  ...          0.829377        0.829380       0.000002             185
654     222.473579      2.823491         0.709202        0.014368  ...          0.829377        0.829380       0.000002             185
442    1743.183362     32.396003         2.684323        0.198211  ...          0.829377        0.829380       0.000002             185
658     798.819463      9.132842         0.722040        0.025943  ...          0.829377        0.829380       0.000002             185
441     338.455563     11.012990         2.415671        0.076542  ...          0.829377        0.829380       0.000002             185
660     804.174306      8.087967         0.725227        0.034019  ...          0.829377        0.829380       0.000002             185
440    1144.719635     36.301401         2.664805        0.557802  ...          0.829377        0.829380       0.000002             185
471     540.349130      8.298802         7.333115        0.203929  ...          0.829377        0.829380       0.000002             185
439     318.500685     14.492743         2.171450        0.491406  ...          0.829377        0.829380       0.000002             185
438    1088.590489     18.385901         2.521051        0.188720  ...          0.829377        0.829380       0.000002             185
437     315.627491      9.237828         2.277657        0.410620  ...          0.829377        0.829380       0.000002             185
436    1097.034274     22.230421         2.458607        0.149498  ...          0.829377        0.829380       0.000002             185
435     319.561945      9.556754         2.284012        0.397085  ...          0.829377        0.829380       0.000002             185
434    1120.415929     21.085899         2.585119        0.403374  ...          0.829377        0.829380       0.000002             185
433     326.655636     11.239500         2.472910        0.070234  ...          0.829377        0.829380       0.000002             185
432     305.025213     10.316354         2.131813        0.524841  ...          0.829377        0.829380       0.000002             185
431     328.493718      9.728061         2.476466        0.128152  ...          0.829377        0.829380       0.000002             185
664     800.743104      5.564788         0.729813        0.023160  ...          0.829377        0.829380       0.000002             185
430     309.687388      8.715161         2.287603        0.402507  ...          0.829377        0.829380       0.000002             185
666    1184.730417     10.241229         0.706835        0.010176  ...          0.829377        0.829380       0.000002             185
470    1914.297340     26.400585         7.626034        0.200475  ...          0.829377        0.829380       0.000002             185
632     328.381906      4.051559         0.363659        0.025076  ...          0.829377        0.829380       0.000002             185
472    1924.532852     15.558512         7.495845        0.258355  ...          0.829377        0.829380       0.000002             185
473     545.733390     11.068551         7.467738        0.151255  ...          0.829377        0.829380       0.000002             185
538     482.212771      4.944461         0.374436        0.026856  ...          0.829377        0.829380       0.000002             185
588     156.690973      3.187203         0.522137        0.015438  ...          0.829377        0.829380       0.000002             185
536     330.375653      3.256710         0.355470        0.028714  ...          0.829377        0.829380       0.000002             185
590     157.977152      1.970302         0.527820        0.023018  ...          0.829377        0.829380       0.000002             185
534     330.192052      4.666805         0.369838        0.031160  ...          0.829377        0.829380       0.000002             185
594     570.429816      4.973888         0.544304        0.031800  ...          0.829377        0.829380       0.000002             185
532     333.401252      5.912085         0.374560        0.034590  ...          0.829377        0.829380       0.000002             185
596     557.904660      6.312771         0.537300        0.021896  ...          0.829377        0.829380       0.000002             185
530     330.227672      4.243312         0.355522        0.035382  ...          0.829377        0.829380       0.000002             185
598     558.335930      8.310531         0.532088        0.020814  ...          0.829377        0.829380       0.000002             185
600     560.313396      6.158594         0.541009        0.030306  ...          0.829377        0.829380       0.000002             185
526      96.825068      1.660953         0.360511        0.017835  ...          0.829377        0.829380       0.000002             185
602     817.949633     12.460635         0.539369        0.031455  ...          0.829377        0.829380       0.000002             185
524      97.685792      1.825212         0.351309        0.022872  ...          0.829377        0.829380       0.000002             185
604     823.146366     10.764240         0.532469        0.018877  ...          0.829377        0.829380       0.000002             185
522      96.124714      1.092407         0.354071        0.024939  ...          0.829377        0.829380       0.000002             185
606     830.814866     14.867520         0.532740        0.026510  ...          0.829377        0.829380       0.000002             185
586     158.523943      2.550057         0.537639        0.022958  ...          0.829377        0.829380       0.000002             185
540     482.000746      2.623418         0.365192        0.025099  ...          0.829377        0.829380       0.000002             185
584     159.951079      2.354433         0.538370        0.022925  ...          0.829377        0.829380       0.000002             185
566     821.067411      9.936335         0.743817        0.020307  ...          0.829377        0.829380       0.000002             185
550     226.434521      2.825018         0.738110        0.030836  ...          0.829377        0.829380       0.000002             185
556     225.709295      2.525080         0.735227        0.026375  ...          0.829377        0.829380       0.000002             185
548     225.660106      1.190119         0.732268        0.024859  ...          0.829377        0.829380       0.000002             185
558     225.636038      2.947992         0.729120        0.014852  ...          0.829377        0.829380       0.000002             185
562     815.111559      7.786224         0.735112        0.040634  ...          0.829377        0.829380       0.000002             185
564     816.699042      6.337162         0.737090        0.011051  ...          0.829377        0.829380       0.000002             185
406    2062.862158     32.298476         4.311277        1.660865  ...          0.829377        0.829380       0.000002             185
568     823.357066      8.198807         0.733904        0.013319  ...          0.829377        0.829380       0.000002             185
542     487.622109      6.966730         0.400262        0.028878  ...          0.829377        0.829380       0.000002             185
570    1213.027646      7.818864         0.740166        0.017991  ...          0.829377        0.829380       0.000002             185
572    1217.211146     15.378567         0.729299        0.019093  ...          0.829377        0.829380       0.000002             185
574    1204.506365     12.221690         0.744594        0.025237  ...          0.829377        0.829380       0.000002             185
578     160.052592      2.307751         0.542497        0.021767  ...          0.829377        0.829380       0.000002             185
546     224.600809      1.680921         0.740669        0.027001  ...          0.829377        0.829380       0.000002             185
580     160.045703      2.182955         0.547024        0.022120  ...          0.829377        0.829380       0.000002             185
582     159.535658      1.903779         0.540898        0.021982  ...          0.829377        0.829380       0.000002             185
520      96.558000      1.010323         0.357243        0.015803  ...          0.829377        0.829380       0.000002             185
518      96.681670      1.549839         0.359919        0.017241  ...          0.829377        0.829380       0.000002             185
610      96.762126      1.208491         0.370816        0.031716  ...          0.829377        0.829380       0.000002             185
480    2840.059211     31.838901         7.678080        0.170822  ...          0.829377        0.829380       0.000002             185
488     284.152226     14.917094         3.907748        2.439695  ...          0.829377        0.829380       0.000002             185
630     333.015465      4.469388         0.365618        0.024734  ...          0.829377        0.829380       0.000002             185
486     279.223508     12.073402         3.579803        2.492406  ...          0.829377        0.829380       0.000002             185
554     225.265003      1.957306         0.729804        0.023789  ...          0.829377        0.829380       0.000002             185
484     268.395073     13.698224         3.550191        2.448214  ...          0.829377        0.829380       0.000002             185
482     273.915364      6.963297         3.580760        2.403199  ...          0.829377        0.829380       0.000002             185
634     485.565374      6.593488         0.368641        0.027348  ...          0.829377        0.829380       0.000002             185
479     544.452041     10.878461         7.492708        0.155851  ...          0.829377        0.829380       0.000002             185
490     282.847956     22.834327         4.634351        2.884366  ...          0.829377        0.829380       0.000002             185
478    2845.172550     36.363168         7.580895        0.182874  ...          0.829377        0.829380       0.000002             185
636     485.101122      5.373827         0.369254        0.022173  ...          0.829377        0.829380       0.000002             185
477     535.585664     11.645661         7.426376        0.223274  ...          0.829377        0.829380       0.000002             185
476    2837.740496     15.824600         7.469245        0.202648  ...          0.829377        0.829380       0.000002             185
638     486.871062      6.665664         0.374822        0.032709  ...          0.829377        0.829380       0.000002             185
475     535.328598      8.390163         7.461322        0.156274  ...          0.829377        0.829380       0.000002             185
474    2826.244370     28.682045         7.556047        0.222362  ...          0.829377        0.829380       0.000002             185
628     331.553957      5.058866         0.359410        0.020778  ...          0.829377        0.829380       0.000002             185
626     328.732564      4.206826         0.361598        0.027532  ...          0.829377        0.829380       0.000002             185
516      96.265851      1.051505         0.372511        0.018257  ...          0.829377        0.829380       0.000002             185
504     566.838517      6.766905         0.541629        0.021442  ...          0.829377        0.829380       0.000002             185
514      97.892064      1.478624         0.380115        0.032135  ...          0.829377        0.829380       0.000002             185
612      97.030522      1.309260         0.359722        0.019754  ...          0.829377        0.829380       0.000002             185
614      97.072766      0.675276         0.354901        0.020895  ...          0.829377        0.829380       0.000002             185
510     837.427145      9.027189         0.534446        0.028241  ...          0.829377        0.829380       0.000002             185
508     833.678396     16.688892         0.534246        0.010615  ...          0.829377        0.829380       0.000002             185
616      96.837731      1.261852         0.384429        0.036112  ...          0.829377        0.829380       0.000002             185
506     836.183554     10.653239         0.532295        0.026354  ...          0.829377        0.829380       0.000002             185
618      96.902498      2.274133         0.347345        0.020778  ...          0.829377        0.829380       0.000002             185
492     281.498311     15.534825         4.042558        2.907070  ...          0.829377        0.829380       0.000002             185
502     555.672751      7.958616         0.549103        0.021789  ...          0.829377        0.829380       0.000002             185
500     565.243653      6.263820         0.538532        0.021928  ...          0.829377        0.829380       0.000002             185
620      96.355132      1.235244         0.364935        0.025538  ...          0.829377        0.829380       0.000002             185
498     556.737489      7.172042         0.537597        0.038795  ...          0.829377        0.829380       0.000002             185
622      96.879960      1.431930         0.361927        0.019426  ...          0.829377        0.829380       0.000002             185
494     158.380812      2.098805         0.545875        0.030418  ...          0.829377        0.829380       0.000002             185
624      97.109483      1.123013         0.360762        0.016003  ...          0.829377        0.829380       0.000002             185
407     586.954701      9.992567         3.516265        0.451714  ...          0.829377        0.829380       0.000002             185
366     649.539558     18.829967         4.022150        0.042700  ...          0.829377        0.829380       0.000002             185
405     603.128759      9.876174         3.314185        0.061020  ...          0.829377        0.829380       0.000002             185
264      41.727716      0.902898         0.285878        0.021059  ...          0.829377        0.829380       0.000002             185
283      31.955957      0.376917         0.280101        0.025099  ...          0.829377        0.829380       0.000002             185
276      43.100397      4.412831         0.276957        0.022153  ...          0.829377        0.829380       0.000002             185
275    1856.207425    177.918331         3.469308        1.726938  ...          0.829377        0.829380       0.000002             185
274      46.895507      5.997472         0.269145        0.024235  ...          0.829377        0.829380       0.000002             185
273     264.194754      4.515978         0.276089        0.022310  ...          0.829377        0.829380       0.000002             185
272      41.865117      4.544711         0.277309        0.030067  ...          0.829377        0.829380       0.000002             185
271      30.543832      0.249958         0.274630        0.019544  ...          0.829377        0.829380       0.000002             185
263    1430.540811    298.544779         2.418877        2.048003  ...          0.829377        0.829380       0.000002             185
404    2135.367792     49.425990         3.717620        0.680284  ...          0.829377        0.829380       0.000002             185
262      41.748311      0.798651         0.278759        0.024153  ...          0.829377        0.829380       0.000002             185
261     262.794900      6.380496         0.279680        0.029021  ...          0.829377        0.829380       0.000002             185
260      41.606608      0.899297         0.261840        0.017399  ...          0.829377        0.829380       0.000002             185
259      32.158893      0.125597         0.273539        0.032071  ...          0.829377        0.829380       0.000002             185
252      27.397735      0.292292         0.287458        0.017856  ...          0.829377        0.829380       0.000002             185
251     294.017306     19.826775         0.770081        0.620222  ...          0.829377        0.829380       0.000002             185
250      26.525606      0.340797         0.264608        0.015915  ...          0.829377        0.829380       0.000002             185
284      45.302455      4.310383         0.294399        0.022383  ...          0.829377        0.829380       0.000002             185
285     286.123833      7.051959         0.274548        0.023668  ...          0.829377        0.829380       0.000002             185
286      41.544039      4.058391         0.263660        0.021279  ...          0.829377        0.829380       0.000002             185
287    1453.540310     59.019713         1.687014        0.394695  ...          0.829377        0.829380       0.000002             185
306    1917.088128     34.970998         3.516433        0.474072  ...          0.829377        0.829380       0.000002             185
305     543.512696     12.283675         3.345424        0.084316  ...          0.829377        0.829380       0.000002             185
304     517.036702     16.076870         3.279817        0.122328  ...          0.829377        0.829380       0.000002             185
302     524.690589     16.254053         3.467280        0.531119  ...          0.829377        0.829380       0.000002             185
300     528.437419     12.950995         3.283012        0.059688  ...          0.829377        0.829380       0.000002             185
298     534.867785     12.642817         3.272562        0.072174  ...          0.829377        0.829380       0.000002             185
296     536.744755     19.564021         3.891730        2.007346  ...          0.829377        0.829380       0.000002             185
295     569.564353     18.991677         3.261611        0.048240  ...          0.829377        0.829380       0.000002             185
294     534.116123     16.765247         3.283880        0.101488  ...          0.829377        0.829380       0.000002             185
293     571.187343     14.833694         3.297388        0.048425  ...          0.829377        0.829380       0.000002             185
292     542.479077     16.197713         3.438444        0.506443  ...          0.829377        0.829380       0.000002             185
291     570.139242     15.945038         4.315140        2.837827  ...          0.829377        0.829380       0.000002             185
290     545.335919     22.780464         3.545915        0.550491  ...          0.829377        0.829380       0.000002             185
289     584.728310     11.488883         3.349628        0.071450  ...          0.829377        0.829380       0.000002             185
288      45.649464      4.215447         0.280644        0.022676  ...          0.829377        0.829380       0.000002             185
249     187.695683      3.805734         0.335982        0.134304  ...          0.829377        0.829380       0.000002             185
247      26.792404      0.433507         0.268816        0.020957  ...          0.829377        0.829380       0.000002             185
308    1918.701899     34.117055         4.586211        2.634178  ...          0.829377        0.829380       0.000002             185
132       4.522575      0.058996         0.242934        0.012200  ...          0.829377        0.829380       0.000002             185
142      12.308716      0.059711         0.245386        0.013366  ...          0.829377        0.829380       0.000002             185
140      12.290609      0.047164         0.240218        0.017204  ...          0.829377        0.829380       0.000002             185
139      12.283120      0.052020         0.244972        0.014963  ...          0.829377        0.829380       0.000002             185
138      12.285439      0.054868         0.246471        0.009040  ...          0.829377        0.829380       0.000002             185
136      12.282816      0.051525         0.240984        0.016131  ...          0.829377        0.829380       0.000002             185
135      12.303112      0.043174         0.240817        0.009103  ...          0.829377        0.829380       0.000002             185
134      12.283189      0.039049         0.238606        0.011463  ...          0.829377        0.829380       0.000002             185
131       4.515074      0.041677         0.236490        0.012923  ...          0.829377        0.829380       0.000002             185
204      12.434172      0.087262         0.246678        0.009771  ...          0.829377        0.829380       0.000002             185
130       4.538704      0.039162         0.241305        0.015150  ...          0.829377        0.829380       0.000002             185
128       4.506352      0.025671         0.230808        0.006640  ...          0.829377        0.829380       0.000002             185
127       4.528874      0.042313         0.239071        0.011750  ...          0.829377        0.829380       0.000002             185
126       4.551965      0.047944         0.241166        0.014183  ...          0.829377        0.829380       0.000002             185
124       4.536770      0.048860         0.238519        0.014668  ...          0.829377        0.829380       0.000002             185
123       4.595779      0.165363         0.240714        0.009450  ...          0.829377        0.829380       0.000002             185
122       4.658845      0.158699         0.234633        0.008223  ...          0.829377        0.829380       0.000002             185
143      12.291346      0.039029         0.244012        0.016050  ...          0.829377        0.829380       0.000002             185
144      12.289252      0.058035         0.240218        0.011090  ...          0.829377        0.829380       0.000002             185
182       4.712492      0.027682         0.241651        0.014004  ...          0.829377        0.829380       0.000002             185
183       4.713935      0.043177         0.244691        0.015548  ...          0.829377        0.829380       0.000002             185
203      12.456375      0.059631         0.239681        0.007625  ...          0.829377        0.829380       0.000002             185
202      12.482121      0.030880         0.248902        0.012876  ...          0.829377        0.829380       0.000002             185
200      12.473728      0.037747         0.242274        0.008845  ...          0.829377        0.829380       0.000002             185
199      12.463392      0.037042         0.248124        0.009004  ...          0.829377        0.829380       0.000002             185
198      12.506533      0.041362         0.244595        0.010714  ...          0.829377        0.829380       0.000002             185
196      12.512318      0.065924         0.242315        0.009979  ...          0.829377        0.829380       0.000002             185
195      12.485348      0.044120         0.241293        0.010472  ...          0.829377        0.829380       0.000002             185
194      13.141125      2.036296         0.257058        0.014365  ...          0.829377        0.829380       0.000002             185
192       4.610794      0.134631         0.245806        0.021559  ...          0.829377        0.829380       0.000002             185
191       4.621830      0.092231         0.237819        0.014412  ...          0.829377        0.829380       0.000002             185
190       4.573598      0.072108         0.238562        0.014511  ...          0.829377        0.829380       0.000002             185
188       4.581085      0.047418         0.238752        0.012473  ...          0.829377        0.829380       0.000002             185
187       4.576613      0.134120         0.243319        0.018543  ...          0.829377        0.829380       0.000002             185
186       4.559789      0.055038         0.244774        0.012379  ...          0.829377        0.829380       0.000002             185
184       4.537205      0.086392         0.237366        0.013713  ...          0.829377        0.829380       0.000002             185
307     535.743695     18.967130         3.303247        0.138029  ...          0.829377        0.829380       0.000002             185
248      26.432111      0.325913         0.287441        0.023560  ...          0.829377        0.829380       0.000002             185
309     544.449662     11.911298         3.284740        0.068940  ...          0.829377        0.829380       0.000002             185
369     668.377083     10.307109         3.831802        0.044219  ...          0.829377        0.829380       0.000002             185
378    3610.920928     48.230805         4.081988        0.417232  ...          0.829377        0.829380       0.000002             185
376    2363.508760     23.212992         3.860633        0.034527  ...          0.829377        0.829380       0.000002             185
375     681.372925     11.802078         3.911185        0.055896  ...          0.829377        0.829380       0.000002             185
374    2410.356550     14.375802         3.864430        0.063406  ...          0.829377        0.829380       0.000002             185
373     669.164686      9.233162         3.856804        0.027575  ...          0.829377        0.829380       0.000002             185
372    2362.026462     22.969777         3.833253        0.031914  ...          0.829377        0.829380       0.000002             185
371     672.755450      8.067701         3.875637        0.047224  ...          0.829377        0.829380       0.000002             185
370    2423.619381     37.535211         4.041571        0.408914  ...          0.829377        0.829380       0.000002             185
368     639.995480      9.433079         3.811233        0.044017  ...          0.829377        0.829380       0.000002             185
382    4009.932563    474.427057         4.146706        0.641684  ...          0.829377        0.829380       0.000002             185
364     656.626183     12.809775         4.236279        0.701816  ...          0.829377        0.829380       0.000002             185
362     650.286328     19.171710         4.890198        1.295206  ...          0.829377        0.829380       0.000002             185
360     674.482245     51.911962         4.822914        2.111899  ...          0.829377        0.829380       0.000002             185
359     665.194864     16.061087         4.056854        0.067155  ...          0.829377        0.829380       0.000002             185
358     633.399469     20.166780         4.043836        0.050191  ...          0.829377        0.829380       0.000002             185
357     651.132673     21.333983         4.028517        0.026087  ...          0.829377        0.829380       0.000002             185
356     626.722528     20.020037         4.706724        2.106173  ...          0.829377        0.829380       0.000002             185
355     662.241754     10.823385         3.988216        0.043696  ...          0.829377        0.829380       0.000002             185
380    3569.994543     36.493038         4.039965        0.495803  ...          0.829377        0.829380       0.000002             185
384    3807.168019     39.611000         4.705678        0.882149  ...          0.829377        0.829380       0.000002             185
353     648.827305     15.919803         6.875154        3.338309  ...          0.829377        0.829380       0.000002             185
395     609.471373      9.724447         3.394137        0.302004  ...          0.829377        0.829380       0.000002             185
403     601.264956      7.215321         3.299819        0.077322  ...          0.829377        0.829380       0.000002             185
402    2117.984802     45.198438         3.273508        0.097448  ...          0.829377        0.829380       0.000002             185
401     589.728033     16.684794         3.228327        0.074852  ...          0.829377        0.829380       0.000002             185
400     569.898652     10.168120         3.819402        1.720078  ...          0.829377        0.829380       0.000002             185
310    1918.104339     29.947384         3.406029        0.366619  ...          0.829377        0.829380       0.000002             185
398     571.918975      9.195651         3.331411        0.206802  ...          0.829377        0.829380       0.000002             185
397     593.093396      7.956946         3.356981        0.350122  ...          0.829377        0.829380       0.000002             185
396     569.489270      9.439830         3.318787        0.163430  ...          0.829377        0.829380       0.000002             185
394     579.522567     10.284543         3.438031        0.374016  ...          0.829377        0.829380       0.000002             185
385     580.282880     10.724969         3.387229        0.255555  ...          0.829377        0.829380       0.000002             185
393     602.841130     15.455158         3.293175        0.074812  ...          0.829377        0.829380       0.000002             185
392     573.329519     13.043625         3.357903        0.197907  ...          0.829377        0.829380       0.000002             185
391     608.280692     11.111670         3.480619        0.394051  ...          0.829377        0.829380       0.000002             185
390     574.708458     15.517228         3.271057        0.066462  ...          0.829377        0.829380       0.000002             185
389     593.738585      8.364376         3.277716        0.045245  ...          0.829377        0.829380       0.000002             185
388     564.444432     10.571743         3.267192        0.044497  ...          0.829377        0.829380       0.000002             185
387     594.674072      9.501647         3.357431        0.169611  ...          0.829377        0.829380       0.000002             185
386     553.219169     13.992331         3.240300        0.076620  ...          0.829377        0.829380       0.000002             185
354     619.356125     23.106649         4.024476        0.060833  ...          0.829377        0.829380       0.000002             185
399     599.846240     13.409333         3.392904        0.456919  ...          0.829377        0.829380       0.000002             185
352    1488.352839     22.797905         3.135745        2.225593  ...          0.829377        0.829380       0.000002             185
321     296.624736     14.169849         1.603142        0.660275  ...          0.829377        0.829380       0.000002             185
342    1024.873565     13.200634         3.024568        1.836514  ...          0.829377        0.829380       0.000002             185
341     294.280848     15.434316         2.101177        2.076510  ...          0.829377        0.829380       0.000002             185
340    1022.085124     19.649907         3.289765        2.343856  ...          0.829377        0.829380       0.000002             185
339     286.765899     14.282692         1.316723        0.439176  ...          0.829377        0.829380       0.000002             185
338    1027.537336     18.746324         3.176607        2.067104  ...          0.829377        0.829380       0.000002             185
314    2833.834490     24.625802         3.739102        0.591980  ...          0.829377        0.829380       0.000002             185
316    2916.166466     54.159239         5.405278        3.133652  ...          0.829377        0.829380       0.000002             185
318    2879.444904     41.614598         4.312401        2.465183  ...          0.829377        0.829380       0.000002             185
320    2938.949327     50.351595         3.880468        1.318356  ...          0.829377        0.829380       0.000002             185
322     284.867781      5.442825         1.076238        0.020493  ...          0.829377        0.829380       0.000002             185
323     297.653182      9.050970         1.596979        0.601693  ...          0.829377        0.829380       0.000002             185
337     300.202769     11.715102         1.784985        0.708654  ...          0.829377        0.829380       0.000002             185
336     287.037232     13.406732         1.409738        0.488847  ...          0.829377        0.829380       0.000002             185
334     282.011857     11.138549         1.171799        0.140352  ...          0.829377        0.829380       0.000002             185
332     295.545432      9.736089         1.371854        0.491006  ...          0.829377        0.829380       0.000002             185
330     289.709808     11.777570         2.209246        2.371624  ...          0.829377        0.829380       0.000002             185
328     288.003585      5.269970         1.088589        0.021749  ...          0.829377        0.829380       0.000002             185
327     299.260356      6.953023         1.740797        0.549372  ...          0.829377        0.829380       0.000002             185
326     285.583295      7.722505         1.121891        0.129556  ...          0.829377        0.829380       0.000002             185
325     298.447368     12.360016         1.607021        0.618143  ...          0.829377        0.829380       0.000002             185
343     301.843391     10.689922         1.716128        0.621092  ...          0.829377        0.829380       0.000002             185
312    1916.188534     24.351948         3.480427        0.624814  ...          0.829377        0.829380       0.000002             185
311     672.892450    263.858629         3.574536        0.488808  ...          0.829377        0.829380       0.000002             185
344    1042.971490     25.103916         3.400197        2.266875  ...          0.829377        0.829380       0.000002             185
350    1566.137529     26.181740         2.437666        0.056111  ...          0.829377        0.829380       0.000002             185
348    1504.950622     18.673588         3.283273        2.675385  ...          0.829377        0.829380       0.000002             185
346    1533.856100     35.521791         6.968979        3.939119  ...          0.829377        0.829380       0.000002             185
324     288.065221      8.488187         2.038284        2.221988  ...          0.829377        0.829380       0.000002             185
50       36.127546      5.010178         0.322381        0.015786  ...          0.734374        0.734635       0.000847             499
110      35.592640      5.711941         0.311040        0.010537  ...          0.734362        0.734632       0.000847             500
114      38.442915      8.682919         0.310289        0.010657  ...          0.733462        0.733938       0.000877             501
54       41.353793      8.905396         0.311665        0.014573  ...          0.733790        0.733871       0.000878             502
51       37.637830      7.533439         0.315376        0.020374  ...          0.733420        0.733758       0.000845             503
111      35.452286      5.753125         0.327818        0.017897  ...          0.733197        0.733755       0.000887             504
115      36.193909      5.498596         0.317846        0.015465  ...          0.732436        0.733197       0.000958             505
55       39.048112      9.817506         0.324086        0.014655  ...          0.732991        0.733192       0.000909             506
118      38.493328      8.651388         0.318320        0.011879  ...          0.732550        0.733018       0.000950             507
58       35.886848      8.070083         0.305664        0.013194  ...          0.732743        0.732884       0.000897             508
119      35.863651      5.612722         0.318081        0.017194  ...          0.731713        0.732450       0.001015             509
59       44.056308     10.545631         0.302089        0.006300  ...          0.732032        0.732373       0.000885             510
112      35.516190      5.665908         0.306763        0.012493  ...          0.730939        0.731914       0.001008             511
52       36.763553      7.076896         0.308444        0.021116  ...          0.731545        0.731774       0.000739             512
116      35.628026      5.870022         0.318827        0.019563  ...          0.730523        0.731499       0.001041             513
56       33.321141      5.434434         0.313430        0.019882  ...          0.731347        0.731370       0.000764             514
0         2.519566      1.143393         0.428414        0.241118  ...          0.732457        0.731312       0.001258             515
120      35.351550      5.676055         0.315044        0.020393  ...          0.730048        0.731000       0.001088             516
60       41.154459      9.838006         0.313514        0.015770  ...          0.730788        0.730833       0.000762             517
106      27.498135      4.479272         0.264938        0.015302  ...          0.605997        0.611523       0.008764             518
108      28.930003      5.772866         0.265238        0.022729  ...          0.605980        0.611519       0.008768             519
98       25.215764      0.173148         0.257997        0.011118  ...          0.605985        0.611518       0.008762             520
107      31.179726      6.924700         0.268730        0.018091  ...          0.605980        0.611517       0.008765             521
102      31.675119      9.973037         0.263730        0.013297  ...          0.605972        0.611515       0.008768             522
100      25.334673      0.181390         0.265924        0.019391  ...          0.605964        0.611512       0.008764             523
99       26.681003      3.862384         0.258068        0.011327  ...          0.605972        0.611511       0.008762             524
104      30.492712      6.786906         0.262623        0.019974  ...          0.605943        0.611509       0.008770             525
103      30.925398      6.639129         0.257086        0.008944  ...          0.605955        0.611507       0.008771             526
38       24.681532      0.265623         0.252530        0.007419  ...          0.599913        0.607506       0.010833             527
40       27.101446      7.545978         0.262150        0.011722  ...          0.599871        0.607490       0.010839             528
39       24.618539      0.191959         0.260387        0.009259  ...          0.599892        0.607488       0.010841             529
42       24.513467      0.128536         0.262320        0.013354  ...          0.599901        0.607488       0.010834             530
46       24.580234      0.154001         0.262717        0.013957  ...          0.599888        0.607472       0.010850             531
44       26.506679      5.476582         0.258065        0.010131  ...          0.599863        0.607471       0.010839             532
43       24.590241      0.122570         0.260587        0.017575  ...          0.599884        0.607470       0.010840             533
48       28.210276      1.833066         0.267568        0.018510  ...          0.599867        0.607459       0.010856             534
47       24.548163      0.131150         0.259328        0.015361  ...          0.599876        0.607459       0.010858             535
242      39.533513      4.144135         0.266504        0.017823  ...          0.572501        0.572959       0.001245             536
246      38.411580      4.032657         0.272513        0.018903  ...          0.572501        0.572959       0.001245             536
244      38.249340      3.931833         0.283614        0.028562  ...          0.572501        0.572959       0.001245             536
241      29.593453      1.106895         0.278104        0.024594  ...          0.572858        0.572819       0.001271             539
255     271.669707      3.730511         0.292898        0.039602  ...          0.572341        0.572317       0.001420             540
258      50.210115      3.671275         0.291227        0.027932  ...          0.571984        0.572260       0.001182             541
256      50.396914      3.763164         0.278540        0.022543  ...          0.571984        0.572260       0.001182             541
254      50.566176      3.867925         0.282493        0.026558  ...          0.571984        0.572260       0.001182             541
270      53.701250      4.434177         0.277187        0.024221  ...          0.572000        0.572193       0.001107             544
268      56.282140      4.404904         0.287797        0.033391  ...          0.572000        0.572193       0.001107             544
266      56.099227      4.350857         0.281205        0.022202  ...          0.572000        0.572193       0.001107             544
281    1722.459366     47.045030         2.547294        2.768765  ...          0.572038        0.572180       0.001065             547
269    2602.197505    152.060183         2.039224        0.926996  ...          0.571984        0.572173       0.001071             548
282      54.399174      1.697636         0.293259        0.019408  ...          0.571984        0.572169       0.001049             549
280      53.702342      1.718269         0.266332        0.013150  ...          0.571984        0.572169       0.001049             549
278      54.592737      1.607967         0.283988        0.023454  ...          0.571984        0.572169       0.001049             549
257    1783.522099    298.091710         1.801845        0.513956  ...          0.571979        0.572133       0.001116             552
243     213.229312      1.852150         0.263609        0.009551  ...          0.571172        0.572097       0.001288             553
267     283.415491      5.799151         0.286764        0.024152  ...          0.571925        0.572064       0.001192             554
245     343.618020     53.230662         1.749571        0.931206  ...          0.571214        0.572038       0.001194             555
279     296.492130     11.313214         1.264988        2.485413  ...          0.571803        0.571957       0.001201             556
253      32.576375      0.117612         0.280343        0.027731  ...          0.571559        0.571797       0.001258             557
277      32.273768      0.124153         0.283790        0.029369  ...          0.571710        0.571759       0.001257             558
265      32.320387      0.074039         0.284858        0.033206  ...          0.571572        0.571750       0.001275             559
96       20.514294      0.081022         0.257165        0.021757  ...          0.529923        0.562321       0.027721             560
95       20.392462      0.107508         0.250098        0.008774  ...          0.529923        0.562321       0.027721             560
94       20.446414      0.117053         0.260833        0.014896  ...          0.529923        0.562321       0.027721             560
92       20.461857      0.109933         0.246854        0.009287  ...          0.529923        0.562321       0.027721             560
91       20.414126      0.121443         0.251228        0.014336  ...          0.529923        0.562321       0.027721             560
90       20.426844      0.113289         0.247147        0.009686  ...          0.529923        0.562321       0.027721             560
88       20.363103      0.146256         0.255514        0.016424  ...          0.529923        0.562321       0.027721             566
86       21.811501      3.071564         0.260180        0.013332  ...          0.529923        0.562321       0.027721             566
87       20.378144      0.103056         0.254860        0.017089  ...          0.529923        0.562321       0.027721             566
35       19.922065      0.126307         0.253610        0.008872  ...          0.526063        0.558267       0.023265             569
34       19.922416      0.127706         0.263624        0.015830  ...          0.526063        0.558267       0.023265             569
31       19.929205      0.114191         0.252957        0.017366  ...          0.526063        0.558267       0.023265             569
30       20.571683      1.089998         0.254428        0.019483  ...          0.526063        0.558267       0.023265             569
26       20.184196      0.277017         0.250328        0.018496  ...          0.526063        0.558266       0.023265             573
27       19.997264      0.129013         0.256100        0.019549  ...          0.526063        0.558266       0.023265             573
32       19.910160      0.123482         0.248444        0.012109  ...          0.526063        0.558265       0.023264             575
36       19.853583      0.101315         0.254842        0.012768  ...          0.526063        0.558265       0.023264             575
28       20.054179      0.149612         0.245903        0.009082  ...          0.526063        0.558265       0.023265             577
83       18.966865      0.050126         0.252019        0.011889  ...          0.525567        0.535892       0.024266             578
23       15.190340      3.018361         0.253001        0.018884  ...          0.525567        0.535892       0.024266             578
22       13.264866      0.049178         0.261017        0.023075  ...          0.525567        0.535892       0.024266             578
20       13.273221      0.053044         0.239923        0.010670  ...          0.525567        0.535892       0.024266             578
19       13.261820      0.052576         0.251089        0.023273  ...          0.525567        0.535892       0.024266             578
18       13.349485      0.133006         0.255194        0.013528  ...          0.525567        0.535892       0.024266             578
16       13.460208      0.042245         0.248771        0.017920  ...          0.525567        0.535892       0.024266             578
24       13.858707      1.705190         0.249141        0.013871  ...          0.525567        0.535892       0.024266             578
15       13.460851      0.074470         0.248765        0.013253  ...          0.525567        0.535892       0.024266             578
74       18.719361      0.039375         0.249289        0.011818  ...          0.525567        0.535892       0.024266             578
80       17.383195      2.419120         0.244857        0.007741  ...          0.525567        0.535892       0.024266             578
79       18.765308      0.084719         0.247851        0.010676  ...          0.525567        0.535892       0.024266             578
84       19.059069      0.074184         0.254025        0.011786  ...          0.525567        0.535892       0.024266             578
78       18.704276      0.052797         0.244998        0.015014  ...          0.525567        0.535892       0.024266             578
76       18.226304      1.646575         0.247723        0.017923  ...          0.525567        0.535892       0.024266             578
75       18.759100      0.071904         0.244952        0.010586  ...          0.525567        0.535892       0.024266             578
82       19.000751      0.040960         0.257070        0.015489  ...          0.525567        0.535892       0.024266             578
14       13.557057      0.151058         0.247530        0.012216  ...          0.525567        0.535892       0.024266             578
7         5.052766      0.049812         0.245642        0.011825  ...          0.523301        0.523672       0.001051             596
10        5.058531      0.026114         0.248899        0.013013  ...          0.523301        0.523672       0.001051             596
8         5.066451      0.047816         0.255147        0.018514  ...          0.523301        0.523672       0.001051             596
11        5.065816      0.032648         0.247468        0.019955  ...          0.523301        0.523672       0.001051             596
6         5.053144      0.036001         0.249180        0.015093  ...          0.523301        0.523672       0.001051             596
4         5.057655      0.039884         0.256445        0.019536  ...          0.523301        0.523672       0.001051             596
3         5.049287      0.032196         0.249119        0.014402  ...          0.523301        0.523672       0.001051             596
12        5.069465      0.041048         0.253446        0.017877  ...          0.523301        0.523672       0.001051             596
2         5.115027      0.085568         0.249743        0.016782  ...          0.523301        0.523672       0.001051             596
62        6.706170      1.483220         0.247281        0.018924  ...          0.523301        0.523672       0.001051             596
63        5.184269      0.460645         0.244510        0.013611  ...          0.523301        0.523672       0.001051             596
64        5.360836      0.734195         0.245614        0.016780  ...          0.523301        0.523672       0.001051             596
67        5.561690      0.618464         0.242267        0.015287  ...          0.523301        0.523672       0.001051             596
68        6.202952      0.199190         0.242697        0.013975  ...          0.523301        0.523672       0.001051             596
70        5.924521      1.181476         0.251469        0.018843  ...          0.523301        0.523672       0.001051             596
71        6.334917      0.030150         0.243008        0.011119  ...          0.523301        0.523672       0.001051             596
72        6.340900      0.052083         0.239429        0.010656  ...          0.523301        0.523672       0.001051             596
66        5.365622      0.731642         0.241102        0.012745  ...          0.523301        0.523672       0.001051             596
1         1.834459      0.042677         0.000000        0.000000  ...               NaN             NaN            NaN             624
5         1.771296      0.037915         0.000000        0.000000  ...               NaN             NaN            NaN             620
9         1.757013      0.041426         0.000000        0.000000  ...               NaN             NaN            NaN             622
13        1.770515      0.033485         0.000000        0.000000  ...               NaN             NaN            NaN             614
17        1.758462      0.040217         0.000000        0.000000  ...               NaN             NaN            NaN             615
21        1.726788      0.031816         0.000000        0.000000  ...               NaN             NaN            NaN             623
25        1.749807      0.048291         0.000000        0.000000  ...               NaN             NaN            NaN             619
29        1.720076      0.022655         0.000000        0.000000  ...               NaN             NaN            NaN             616
33        1.714295      0.029859         0.000000        0.000000  ...               NaN             NaN            NaN             625
37        1.745742      0.046938         0.000000        0.000000  ...               NaN             NaN            NaN             618
41        1.731550      0.043523         0.000000        0.000000  ...               NaN             NaN            NaN             617
45        1.738805      0.045347         0.000000        0.000000  ...               NaN             NaN            NaN             621
49        1.747564      0.043850         0.000000        0.000000  ...               NaN             NaN            NaN             649
53        1.737743      0.053439         0.000000        0.000000  ...               NaN             NaN            NaN             627
57        1.744174      0.054471         0.000000        0.000000  ...               NaN             NaN            NaN             652
61        1.733223      0.043680         0.000000        0.000000  ...               NaN             NaN            NaN             653
65        1.726666      0.023185         0.000000        0.000000  ...               NaN             NaN            NaN             654
69        1.730977      0.037479         0.000000        0.000000  ...               NaN             NaN            NaN             655
73        1.719034      0.025310         0.000000        0.000000  ...               NaN             NaN            NaN             656
77        1.736757      0.036434         0.000000        0.000000  ...               NaN             NaN            NaN             657
81        1.746911      0.026936         0.000000        0.000000  ...               NaN             NaN            NaN             659
85        1.738786      0.021589         0.000000        0.000000  ...               NaN             NaN            NaN             660
89        1.744949      0.035624         0.000000        0.000000  ...               NaN             NaN            NaN             662
93        1.747123      0.019714         0.000000        0.000000  ...               NaN             NaN            NaN             672
97        1.737366      0.025082         0.000000        0.000000  ...               NaN             NaN            NaN             663
101       1.731298      0.024404         0.000000        0.000000  ...               NaN             NaN            NaN             664
105       1.753288      0.046791         0.000000        0.000000  ...               NaN             NaN            NaN             665
109       1.728578      0.030157         0.000000        0.000000  ...               NaN             NaN            NaN             666
113       1.728804      0.027540         0.000000        0.000000  ...               NaN             NaN            NaN             667
117       1.751176      0.031646         0.000000        0.000000  ...               NaN             NaN            NaN             668
121       1.499657      0.049120         0.000000        0.000000  ...               NaN             NaN            NaN             669
125       1.487209      0.036107         0.000000        0.000000  ...               NaN             NaN            NaN             670
129       1.493642      0.053379         0.000000        0.000000  ...               NaN             NaN            NaN             671
133       1.504206      0.049415         0.000000        0.000000  ...               NaN             NaN            NaN             661
137       1.499454      0.040113         0.000000        0.000000  ...               NaN             NaN            NaN             629
141       1.473837      0.034023         0.000000        0.000000  ...               NaN             NaN            NaN             633
145       1.483815      0.033186         0.000000        0.000000  ...               NaN             NaN            NaN             638
149       1.482665      0.021280         0.000000        0.000000  ...               NaN             NaN            NaN             648
153       1.481767      0.039336         0.000000        0.000000  ...               NaN             NaN            NaN             639
157       1.482469      0.032629         0.000000        0.000000  ...               NaN             NaN            NaN             673
161       1.550867      0.044526         0.000000        0.000000  ...               NaN             NaN            NaN             641
165       1.537825      0.027955         0.000000        0.000000  ...               NaN             NaN            NaN             642
169       1.546346      0.029932         0.000000        0.000000  ...               NaN             NaN            NaN             643
173       1.557529      0.042223         0.000000        0.000000  ...               NaN             NaN            NaN             644
177       1.547932      0.029460         0.000000        0.000000  ...               NaN             NaN            NaN             645
181       1.541075      0.029685         0.000000        0.000000  ...               NaN             NaN            NaN             646
185       1.477256      0.017378         0.000000        0.000000  ...               NaN             NaN            NaN             658
189       1.488028      0.032342         0.000000        0.000000  ...               NaN             NaN            NaN             626
193       1.599672      0.230148         0.000000        0.000000  ...               NaN             NaN            NaN             647
197       1.508106      0.035065         0.000000        0.000000  ...               NaN             NaN            NaN             640
201       1.501687      0.020766         0.000000        0.000000  ...               NaN             NaN            NaN             636
205       1.486268      0.022523         0.000000        0.000000  ...               NaN             NaN            NaN             635
209       1.475372      0.023930         0.000000        0.000000  ...               NaN             NaN            NaN             634
213       1.488034      0.020657         0.000000        0.000000  ...               NaN             NaN            NaN             632
217       1.477235      0.019707         0.000000        0.000000  ...               NaN             NaN            NaN             631
221       1.500896      0.053546         0.000000        0.000000  ...               NaN             NaN            NaN             630
225       1.503207      0.035269         0.000000        0.000000  ...               NaN             NaN            NaN             628
229       1.474297      0.019972         0.000000        0.000000  ...               NaN             NaN            NaN             637
233       1.501404      0.034378         0.000000        0.000000  ...               NaN             NaN            NaN             650
237       1.499370      0.046469         0.000000        0.000000  ...               NaN             NaN            NaN             651

[673 rows x 38 columns]
Object saved in file: ./runs/best_estimators/GS1-best_pipe-16-03-2023_07:58:05.joblib
Object saved in file: ./runs/best_estimators/best_estimator-DecisionTreeClassifier-16-03-2023_07:58:05.joblib
Best estimator: DecisionTreeClassifier(random_state=42)
Object saved in file: ./runs/encoders_scalers/GS1-column_transformer-16-03-2023_07:58:05.joblib
Internal CV score obtained by the best set of parameters: 0.8518730607199616
Best params: {'classifier__estimator': DecisionTreeClassifier(random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}
Scorer function: make_scorer(accuracy_score)
The number of CV splits: 10
Seconds used for refitting the best model on the whole dataset: 48.82976770401001
Whether the scorers compute several metrics: False
The number of features when fit is performed: 30
Names of features seen during fit: ['Tipificacao' 'QuestionarioClassificacaoEstabel' 'ILP' 'IFP' 'ILPF'
 'QuestionarioPossuiOutrosIncentiv' 'QuestionarioFabricaRacao'
 'regua de manejo' 'identificacao individual' 'rastreamento SISBOV'
 'participa de aliancas mercadolog' 'QuestionarioPraticaRecuperacaoPa'
 'Confinamento' 'Suplementacao_a_campo' 'SemiConfinamento' 'tot3m_Chuva'
 'med3m_formITUinst' 'med3m_NDVI' 'med3m_preR_milho' 'med3m_preR_boi'
 'tot6m_Chuva' 'med6m_formITUinst' 'med6m_NDVI' 'med6m_preR_milho'
 'med6m_preR_boi' 'tot12m_Chuva' 'med12m_formITUinst' 'med12m_NDVI'
 'med12m_preR_milho' 'med12m_preR_boi']

!!!>> When you observe high training accuracy, but low test accuracy, it is likely that you encountered overfitting problem.
Training set score: 0.856701815460424
Test set score: 0.8516471134311892

CSV gerado com sucesso em: ./runs/results/GS1-grid_search_results-16-03-2023_07:58:10.csv.
Function generate_new_csv Took 0:00:00.002156

*****INICIO CONFUSION MATRIX DISPLAY******
Figure confusion_matrix_display-16-03-2023_07:58:13.png saved in ./plots/ directory.
*****FIM CONFUSION MATRIX DISPLAY******

Function confusion_matrix_display Took 0:00:00.429056


--- Test data performance ---
Test Acurácia: 0.8516471134311892
Test Acurácia Balanceada: 0.6300764557629441
Test Revocação: 0.9664208385462819
Test Micro Revocação: 0.8516471134311892
Test Macro Revocação: 0.6300764557629441
Test Precisão: 0.8693074038405416
Test Micro Precisão: 0.8516471134311892
Test Macro Precisão: 0.7560514586070698
Test F1: 0.9152953806296986
Test Micro F1: 0.8516471134311892
Test Macro F1: 0.6592537736769352
Test Coeficiente Kappa: 0.33168513270579847
Test Coeficiente de Correlação de Matthews: 0.365000088923495
Test Log Loss: 0.4350761740919852
Test ROC AUC Score: 0.8284334391293472

CSV gerado com sucesso em: ./runs/results/GS1-performance_results-16-03-2023_07:58:15.csv.
Function generate_new_csv Took 0:00:00.001526

              precision    recall  f1-score   support

           0       0.64      0.29      0.40    101453
           1       0.87      0.97      0.92    493163

    accuracy                           0.85    594616
   macro avg       0.76      0.63      0.66    594616
weighted avg       0.83      0.85      0.83    594616


CSV gerado com sucesso em: ./runs/results/GS1-classification_report-16-03-2023_07:58:17.csv.
Function generate_new_csv Took 0:00:00.001313

Function run_grid_search Took 14:20:22.529234


-------Number of jobs for grid search 2: 19
Test Size: 0.2

x_train shape: (2378460, 30)
y_train shape: (2378460,)
x_test shape: (594616, 30)
y_test shape: (594616,)
Checking already executed parameters...
classifier__estimator GaussianNB() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator LinearSVC() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
classifier__estimator MLPClassifier() != classifier__estimator RandomForestClassifier()
------------------------------------------------------------------
/home/externo/rafaelrm/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
600 fits failed out of a total of 4940.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
600 fits failed with the following error:
Traceback (most recent call last):
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/sklearn_tuner/model_selection_tuner/_validation_tuner.py", line 178, in _fit_and_score_tuner
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/pipeline.py", line 382, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/clf_switcher.py", line 20, in fit
    self.estimator.fit(x, y)
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/tree/_classes.py", line 969, in fit
    super().fit(
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/tree/_classes.py", line 265, in fit
    check_scalar(
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/utils/validation.py", line 1480, in check_scalar
    raise ValueError(
ValueError: min_samples_split == 1, must be >= 2.

  warnings.warn(some_fits_failed_message, FitFailedWarning)
Fitting 10 folds for each of 2160 candidates, totalling 21600 fits
/home/externo/rafaelrm/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/joblib/externals/loky/process_executor.py:700: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(
Traceback (most recent call last):
  File "pipeline_target_classificacao_26012023.py", line 501, in <module>
    pattern_extraction.run_grid_search(
  File "/home/externo/rafaelrm/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/utils.py", line 413, in timeit_wrapper
    result = func(*args, **kwargs)
  File "/home/externo/rafaelrm/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/pattern_extraction.py", line 102, in run_grid_search
    grid_search.fit(x_train, y_train)
  File "/home/externo/rafaelrm/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/sklearn_tuner/model_selection_tuner/_search_tuner.py", line 266, in fit
    self._run_search(evaluate_candidates)
  File "/home/externo/rafaelrm/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/model_selection/_search.py", line 1375, in _run_search
    evaluate_candidates(ParameterGrid(self.param_grid))
  File "/home/externo/rafaelrm/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/sklearn_tuner/model_selection_tuner/_search_tuner.py", line 211, in evaluate_candidates
    out = parallel(
  File "/home/externo/rafaelrm/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/joblib/parallel.py", line 1098, in __call__
    self.retrieve()
  File "/home/externo/rafaelrm/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/joblib/parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/home/externo/rafaelrm/algoritmos/run_pipeline_target_classificacao_26012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/joblib/_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "/usr/local/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    self._condition.wait(timeout)
  File "/usr/local/lib/python3.8/threading.py", line 302, in wait
    waiter.acquire()
KeyboardInterrupt
