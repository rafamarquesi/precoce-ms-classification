
*****INICIO LOAD DATA******

*****INICIO PRINT INFOS******
Número total de linhas do DataFrame: 3153593
Número de colunas: 112
Informações do DataFrame:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 3153593 entries, 0 to 3153592
Data columns (total 112 columns):
 #    Column                            Dtype         
---   ------                            -----         
 0    ID_ANIMAL                         uint32        
 1    EstabelecimentoMunicipio          category      
 2    DataAbate                         datetime64[ns]
 3    Frigorifico_ID                    uint8         
 4    Frigorifico_CNPJ                  uint64        
 5    Frigorifico_RazaoSocial           category      
 6    Municipio_Frigorifico             category      
 7    Tipificacao                       category      
 8    Maturidade                        category      
 9    Acabamento                        category      
 10   Peso                              float32       
 11   EstabelecimentoIdentificador      uint16        
 12   Data_homol                        datetime64[ns]
 13   Questionario_ID                   uint16        
 14   QuestionarioClassificacaoEstabel  uint8         
 15   FERTIIRRIGACAO                    uint8         
 16   ILP                               uint8         
 17   IFP                               uint8         
 18   ILPF                              uint8         
 19   CONCEN_VOLUM                      UInt8         
 20   CREEPFEEDING                      UInt8         
 21   FORN_ESTRAT_SILAGEM               UInt8         
 22   PROTEICO                          UInt8         
 23   PROTEICO_ENERGETICO               UInt8         
 24   RACAO_BAL_CONS_INFERIOR           UInt8         
 25   SAL_MINERAL                       UInt8         
 26   SALMINERAL_UREIA                  UInt8         
 27   RACAOO_BAL_CONSUMO_IG             UInt8         
 28   GRAO_INTEIRO                      UInt8         
 29   ALTO_CONCENTR_VOLUM               UInt8         
 30   ALTO_CONCENTRADO                  UInt8         
 31   QuestionarioPossuiOutrosIncentiv  uint8         
 32   QuestionarioFabricaRacao          uint8         
 33   area so confinamento              UInt8         
 34   regua de manejo                   UInt8         
 35   boa cobertura vegetal, com baixa  UInt8         
 36   erosaoo laminar ou em sulco igua  UInt8         
 37   identificacao individual          UInt8         
 38   rastreamento SISBOV               UInt8         
 39   Lista Trace                       UInt8         
 40   BPA                               UInt8         
 41   participa de aliancas mercadolog  UInt8         
 42   QuestionarioPraticaRecuperacaoPa  uint8         
 43   Confinamento                      UInt8         
 44   Suplementacao_a_campo             UInt8         
 45   SemiConfinamento                  UInt8         
 46   dif_datas                         uint16        
 47   DataAbate_6m_ANT                  datetime64[ns]
 48   data_homol_select                 datetime64[ns]
 49   data12m                           datetime64[ns]
 50   data6m                            datetime64[ns]
 51   data3m                            datetime64[ns]
 52   data1m                            datetime64[ns]
 53   data7d                            datetime64[ns]
 54   tot7d_Chuva                       float32       
 55   med7d_TempInst                    float32       
 56   med7d_TempMin                     float32       
 57   med7d_UmidInst                    float32       
 58   med7d_formITUinst                 float32       
 59   med7d_formITUmax                  float32       
 60   med7d_NDVI                        float32       
 61   med7d_EVI                         float32       
 62   med7d_preR_soja                   float32       
 63   med7d_preR_milho                  float32       
 64   med7d_preR_boi                    float32       
 65   tot1m_Chuva                       float32       
 66   med1m_TempInst                    float32       
 67   med1m_UmidInst                    float32       
 68   med1m_formITUinst                 float32       
 69   med1m_NDVI                        float32       
 70   med1m_EVI                         float32       
 71   med1m_preR_soja                   float32       
 72   med1m_preR_milho                  float32       
 73   med1m_preR_boi                    float32       
 74   tot3m_Chuva                       float32       
 75   med3m_TempInst                    float32       
 76   med3m_UmidInst                    float32       
 77   med3m_formITUinst                 float32       
 78   med3m_formITUmax                  float32       
 79   med3m_NDVI                        float32       
 80   med3m_EVI                         float32       
 81   med3m_preR_soja                   float32       
 82   med3m_preR_milho                  float32       
 83   med3m_preR_boi                    float32       
 84   tot6m_Chuva                       float32       
 85   med6m_TempInst                    float32       
 86   med6m_UmidInst                    float32       
 87   med6m_formITUinst                 float32       
 88   med6m_NDVI                        float32       
 89   med6m_EVI                         float32       
 90   med6m_preR_soja                   float32       
 91   med6m_preR_milho                  float32       
 92   med6m_preR_boi                    float32       
 93   tot12m_Chuva                      float32       
 94   med12m_TempInst                   float32       
 95   med12m_TempMin                    float32       
 96   med12m_UmidInst                   float32       
 97   med12m_formITUinst                float32       
 98   med12m_NDVI                       float32       
 99   med12m_EVI                        float32       
 100  med12m_preR_soja                  float32       
 101  med12m_preR_milho                 float32       
 102  med12m_preR_boi                   float32       
 103  cnt7d_CL_ITUinst                  float32       
 104  cnt1m_CL_ITUinst                  float32       
 105  cnt3m_CL_ITUinst                  float32       
 106  cnt6m_CL_ITUinst                  float32       
 107  cnt12m_CL_ITUinst                 float32       
 108  ANO                               uint16        
 109  CATEGORIA                         category      
 110  classificacao                     category      
 111  Motivo                            category      
dtypes: UInt8(24), category(9), datetime64[ns](9), float32(55), uint16(4), uint32(1), uint64(1), uint8(9)
memory usage: 1.1 GB
*****FIM PRINT INFOS*********
Function informations Took 0:00:00.050118

*****INICIO DELETE COLUNAS******
Coluna DataAbate excluída.
Coluna Frigorifico_ID excluída.
Coluna Frigorifico_CNPJ excluída.
Coluna Frigorifico_RazaoSocial excluída.
Coluna Municipio_Frigorifico excluída.
Coluna EstabelecimentoIdentificador excluída.
Coluna Data_homol excluída.
Coluna Questionario_ID excluída.
Coluna area so confinamento excluída.
Coluna Lista Trace excluída.
Coluna Motivo excluída.
Coluna data_homol_select excluída.
Coluna dif_datas excluída.
Coluna DataAbate_6m_ANT excluída.
Coluna data12m excluída.
Coluna data6m excluída.
Coluna data3m excluída.
Coluna data1m excluída.
Coluna data7d excluída.
Coluna tot7d_Chuva excluída.
Coluna med7d_TempInst excluída.
Coluna med7d_TempMin excluída.
Coluna med7d_UmidInst excluída.
Coluna med7d_formITUmax excluída.
Coluna med7d_NDVI excluída.
Coluna med7d_EVI excluída.
Coluna tot1m_Chuva excluída.
Coluna med1m_TempInst excluída.
Coluna med1m_UmidInst excluída.
Coluna med1m_NDVI excluída.
Coluna med1m_EVI excluída.
Coluna tot3m_Chuva excluída.
Coluna med3m_TempInst excluída.
Coluna med3m_UmidInst excluída.
Coluna med3m_formITUmax excluída.
Coluna med3m_NDVI excluída.
Coluna med3m_EVI excluída.
Coluna tot6m_Chuva excluída.
Coluna med6m_TempInst excluída.
Coluna med6m_UmidInst excluída.
Coluna med6m_NDVI excluída.
Coluna med6m_EVI excluída.
Coluna tot12m_Chuva excluída.
Coluna med12m_TempInst excluída.
Coluna med12m_TempMin excluída.
Coluna med12m_UmidInst excluída.
Coluna med12m_NDVI excluída.
Coluna med12m_EVI excluída.
Coluna boa cobertura vegetal, com baixa excluída.
Coluna erosaoo laminar ou em sulco igua excluída.
Coluna classificacao excluída.
*****FIM DELETE COLUNAS*********

*****INICIO PRINT INFOS******
Número total de linhas do DataFrame: 3153593
Número de colunas: 61
Informações do DataFrame:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 3153593 entries, 0 to 3153592
Data columns (total 61 columns):
 #   Column                            Dtype   
---  ------                            -----   
 0   ID_ANIMAL                         uint32  
 1   EstabelecimentoMunicipio          category
 2   Tipificacao                       category
 3   Maturidade                        category
 4   Acabamento                        category
 5   Peso                              float32 
 6   QuestionarioClassificacaoEstabel  uint8   
 7   FERTIIRRIGACAO                    uint8   
 8   ILP                               uint8   
 9   IFP                               uint8   
 10  ILPF                              uint8   
 11  CONCEN_VOLUM                      UInt8   
 12  CREEPFEEDING                      UInt8   
 13  FORN_ESTRAT_SILAGEM               UInt8   
 14  PROTEICO                          UInt8   
 15  PROTEICO_ENERGETICO               UInt8   
 16  RACAO_BAL_CONS_INFERIOR           UInt8   
 17  SAL_MINERAL                       UInt8   
 18  SALMINERAL_UREIA                  UInt8   
 19  RACAOO_BAL_CONSUMO_IG             UInt8   
 20  GRAO_INTEIRO                      UInt8   
 21  ALTO_CONCENTR_VOLUM               UInt8   
 22  ALTO_CONCENTRADO                  UInt8   
 23  QuestionarioPossuiOutrosIncentiv  uint8   
 24  QuestionarioFabricaRacao          uint8   
 25  regua de manejo                   UInt8   
 26  identificacao individual          UInt8   
 27  rastreamento SISBOV               UInt8   
 28  BPA                               UInt8   
 29  participa de aliancas mercadolog  UInt8   
 30  QuestionarioPraticaRecuperacaoPa  uint8   
 31  Confinamento                      UInt8   
 32  Suplementacao_a_campo             UInt8   
 33  SemiConfinamento                  UInt8   
 34  med7d_formITUinst                 float32 
 35  med7d_preR_soja                   float32 
 36  med7d_preR_milho                  float32 
 37  med7d_preR_boi                    float32 
 38  med1m_formITUinst                 float32 
 39  med1m_preR_soja                   float32 
 40  med1m_preR_milho                  float32 
 41  med1m_preR_boi                    float32 
 42  med3m_formITUinst                 float32 
 43  med3m_preR_soja                   float32 
 44  med3m_preR_milho                  float32 
 45  med3m_preR_boi                    float32 
 46  med6m_formITUinst                 float32 
 47  med6m_preR_soja                   float32 
 48  med6m_preR_milho                  float32 
 49  med6m_preR_boi                    float32 
 50  med12m_formITUinst                float32 
 51  med12m_preR_soja                  float32 
 52  med12m_preR_milho                 float32 
 53  med12m_preR_boi                   float32 
 54  cnt7d_CL_ITUinst                  float32 
 55  cnt1m_CL_ITUinst                  float32 
 56  cnt3m_CL_ITUinst                  float32 
 57  cnt6m_CL_ITUinst                  float32 
 58  cnt12m_CL_ITUinst                 float32 
 59  ANO                               uint16  
 60  CATEGORIA                         category
dtypes: UInt8(20), category(5), float32(26), uint16(1), uint32(1), uint8(8)
memory usage: 490.2 MB
*****FIM PRINT INFOS*********
Function informations Took 0:00:00.005894

*****FIM LOAD DATA******
Function load_data Took 0:01:23.905064

*****INICIO SHOW SETTINGS******
os = <module 'os' from '/usr/local/lib/python3.8/os.py'>
utils = <module 'utils' from '/home/rafael_m/Documentos/algoritmos/run_pipeline_target_categoria_08012023/precoce-ms-classification/utils.py'>
pd = <module 'pandas' from '/home/rafael_m/Documentos/algoritmos/run_pipeline_target_categoria_08012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pandas/__init__.py'>
torch = <module 'torch' from '/home/rafael_m/Documentos/algoritmos/run_pipeline_target_categoria_08012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/torch/__init__.py'>
random_seed = 42
n_jobs = 1
dataset_folder_path = /home/rafael_m/Documentos/base_dados/
csv_path = /home/rafael_m/Documentos/base_dados/TAB_MODELAGEM_RAFAEL_2020_1.csv
number_csv_lines = None
dtype_dict = {'ID_ANIMAL': 'uint32', 'EstabelecimentoMunicipio': 'category', 'Frigorifico_ID': 'uint8', 'Frigorifico_CNPJ': 'uint64', 'Frigorifico_RazaoSocial': 'category', 'Municipio_Frigorifico': 'category', 'Tipificacao': 'category', 'Maturidade': 'category', 'Acabamento': 'category', 'Peso': 'float32', 'EstabelecimentoIdentificador': 'uint16', 'Questionario_ID': 'uint16', 'QuestionarioClassificacaoEstabel': 'uint8', 'FERTIIRRIGACAO': 'uint8', 'ILP': 'uint8', 'IFP': 'uint8', 'ILPF': 'uint8', 'CONCEN_VOLUM': 'UInt8', 'CREEPFEEDING': 'UInt8', 'FORN_ESTRAT_SILAGEM': 'UInt8', 'PROTEICO': 'UInt8', 'PROTEICO_ENERGETICO': 'UInt8', 'RACAO_BAL_CONS_INFERIOR': 'UInt8', 'SAL_MINERAL': 'UInt8', 'SALMINERAL_UREIA': 'UInt8', 'RACAOO_BAL_CONSUMO_IG': 'UInt8', 'GRAO_INTEIRO': 'UInt8', 'ALTO_CONCENTR_VOLUM': 'UInt8', 'ALTO_CONCENTRADO': 'UInt8', 'QuestionarioPossuiOutrosIncentiv': 'uint8', 'QuestionarioFabricaRacao': 'uint8', 'area so confinamento': 'UInt8', 'regua de manejo': 'UInt8', 'boa cobertura vegetal, com baixa': 'UInt8', 'erosaoo laminar ou em sulco igua': 'UInt8', 'identificacao individual': 'UInt8', 'rastreamento SISBOV': 'UInt8', 'Lista Trace': 'UInt8', 'BPA': 'UInt8', 'participa de aliancas mercadolog': 'UInt8', 'QuestionarioPraticaRecuperacaoPa': 'uint8', 'Confinamento': 'UInt8', 'Suplementacao_a_campo': 'UInt8', 'SemiConfinamento': 'UInt8', 'dif_datas': 'uint16', 'tot7d_Chuva': 'float32', 'med7d_TempInst': 'float32', 'med7d_TempMin': 'float32', 'med7d_UmidInst': 'float32', 'med7d_formITUinst': 'float32', 'med7d_formITUmax': 'float32', 'med7d_NDVI': 'float32', 'med7d_EVI': 'float32', 'med7d_preR_soja': 'float32', 'med7d_preR_milho': 'float32', 'med7d_preR_boi': 'float32', 'tot1m_Chuva': 'float32', 'med1m_TempInst': 'float32', 'med1m_UmidInst': 'float32', 'med1m_formITUinst': 'float32', 'med1m_NDVI': 'float32', 'med1m_EVI': 'float32', 'med1m_preR_soja': 'float32', 'med1m_preR_milho': 'float32', 'med1m_preR_boi': 'float32', 'tot3m_Chuva': 'float32', 'med3m_TempInst': 'float32', 'med3m_UmidInst': 'float32', 'med3m_formITUinst': 'float32', 'med3m_formITUmax': 'float32', 'med3m_NDVI': 'float32', 'med3m_EVI': 'float32', 'med3m_preR_soja': 'float32', 'med3m_preR_milho': 'float32', 'med3m_preR_boi': 'float32', 'tot6m_Chuva': 'float32', 'med6m_TempInst': 'float32', 'med6m_UmidInst': 'float32', 'med6m_formITUinst': 'float32', 'med6m_NDVI': 'float32', 'med6m_EVI': 'float32', 'med6m_preR_soja': 'float32', 'med6m_preR_milho': 'float32', 'med6m_preR_boi': 'float32', 'tot12m_Chuva': 'float32', 'med12m_TempInst': 'float32', 'med12m_TempMin': 'float32', 'med12m_UmidInst': 'float32', 'med12m_formITUinst': 'float32', 'med12m_NDVI': 'float32', 'med12m_EVI': 'float32', 'med12m_preR_soja': 'float32', 'med12m_preR_milho': 'float32', 'med12m_preR_boi': 'float32', 'cnt7d_CL_ITUinst': 'float32', 'cnt1m_CL_ITUinst': 'float32', 'cnt3m_CL_ITUinst': 'float32', 'cnt6m_CL_ITUinst': 'float32', 'cnt12m_CL_ITUinst': 'float32', 'ANO': 'uint16', 'CATEGORIA': 'category', 'classificacao': 'category', 'Motivo': 'category'}
parse_dates = ['DataAbate', 'Data_homol', 'DataAbate_6m_ANT', 'data_homol_select', 'data12m', 'data6m', 'data3m', 'data1m', 'data7d']
delete_columns_names_on_load_data = ['DataAbate', 'Frigorifico_ID', 'Frigorifico_CNPJ', 'Frigorifico_RazaoSocial', 'Municipio_Frigorifico', 'EstabelecimentoIdentificador', 'Data_homol', 'Questionario_ID', 'area so confinamento', 'Lista Trace', 'Motivo', 'data_homol_select', 'dif_datas', 'DataAbate_6m_ANT', 'data12m', 'data6m', 'data3m', 'data1m', 'data7d', 'tot7d_Chuva', 'med7d_TempInst', 'med7d_TempMin', 'med7d_UmidInst', 'med7d_formITUmax', 'med7d_NDVI', 'med7d_EVI', 'tot1m_Chuva', 'med1m_TempInst', 'med1m_UmidInst', 'med1m_NDVI', 'med1m_EVI', 'tot3m_Chuva', 'med3m_TempInst', 'med3m_UmidInst', 'med3m_formITUmax', 'med3m_NDVI', 'med3m_EVI', 'tot6m_Chuva', 'med6m_TempInst', 'med6m_UmidInst', 'med6m_NDVI', 'med6m_EVI', 'tot12m_Chuva', 'med12m_TempInst', 'med12m_TempMin', 'med12m_UmidInst', 'med12m_NDVI', 'med12m_EVI', 'boa cobertura vegetal, com baixa', 'erosaoo laminar ou em sulco igua', 'classificacao']
PATH_SAVE_PLOTS = ./plots
PATH_SAVE_ESTIMATORS_REPR = ./runs/estimators_repr
PATH_SAVE_BEST_ESTIMATORS = ./runs/best_estimators
PATH_SAVE_RESULTS = ./runs/results
PATH_SAVE_LOGS = ./logs
ordinal_encoder_columns_names = {'Maturidade': ['d', '2', '4', '6', '8'], 'Acabamento': ['Magra - Gordura Ausente', 'Gordura Escassa - 1 A 3 Mm De Espessura', 'Gordura Mediana - Acima De 3 A Até 6 Mm De Espessura', 'Gordura Uniforme - Acima De 6 E Até 10 Mm De Espessura', 'Gordura Excessiva - Acima De 10 Mm De Espessura'], 'QuestionarioClassificacaoEstabel': ['0', '21', '26', '30']}
columns_ordinal_encoded = {}
label_encoder_columns_names = ['CATEGORIA']
columns_label_encoded = {}
one_hot_encoder_columns_names = ['EstabelecimentoMunicipio', 'Tipificacao', 'ANO']
columns_one_hot_encoded = {}
min_max_scaler_columns_names = ['Peso', 'med7d_formITUinst', 'med7d_preR_soja', 'med7d_preR_milho', 'med7d_preR_boi', 'med1m_formITUinst', 'med1m_preR_soja', 'med1m_preR_milho', 'med1m_preR_boi', 'med3m_formITUinst', 'med3m_preR_soja', 'med3m_preR_milho', 'med3m_preR_boi', 'med6m_formITUinst', 'med6m_preR_soja', 'med6m_preR_milho', 'med6m_preR_boi', 'med12m_formITUinst', 'med12m_preR_soja', 'med12m_preR_milho', 'med12m_preR_boi']
columns_min_max_scaled = {}
columns_label_binarized = {}
columns_names_drop_feature_by_correlation = ['med7d_preR_soja', 'med1m_preR_soja', 'med3m_preR_soja', 'med6m_preR_soja', 'med12m_preR_soja', 'med7d_preR_milho', 'med7d_preR_boi', 'med1m_preR_boi', 'med3m_preR_boi', 'med6m_preR_boi', 'med3m_formITUinst', 'cnt3m_CL_ITUinst', 'Maturidade', 'Acabamento', 'Peso', 'CATEGORIA']
class_column = CATEGORIA
classifiers = {}
models_results = {}
device_name = auto
use_embeddings = True
cat_idxs = []
cat_dims = []
use_cat_emb_dim = True
cat_emb_dim = 1
threshold_categorical_features = 150
num_workers = 0
eval_metric = ['balanced_accuracy', 'accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>]
augmentations = None
save_results_during_run = True
new_run = False
PATH_OBJECTS_PERSISTED_RESULTS_RUNS = ./runs/objects_persisted_results_runs
PARAMETERS_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/parameters_persist
RESULTS_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/results_persist
SPLIT_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/split_persist
tree_method = hist
objective = multi:softmax
*****FIM SHOW SETTINGS******


*****INICIO DELETE DUPLICATE ROWS BY ATTRIBUTE******
Linhas duplicadas encontradas para o atributo ID_ANIMAL.
Linhas duplicadas deletadas.
*****FIM DELETE DUPLICATE ROWS BY ATTRIBUTE*********
Function delete_duplicate_rows_by_attribute Took 0:00:01.253377

*****INICIO DELETE COLUNAS******
Coluna ID_ANIMAL excluída.
*****FIM DELETE COLUNAS*********

*****INICIO DELETE NAN ROWS******
Linhas com valores NaN encontradas.
*****FIM DELETE NAN ROWS*********
Function delete_nan_rows Took 0:00:00.946980


*****INICIO DELETE COLUMNS WITH SINGLE VALUE******
>>> Nenhuma coluna com valor único encontrada.
*****FIM DELETE COLUMNS WITH SINGLE VALUE*********
Function delete_columns_with_single_value Took 0:00:00.938003


*****INICIO LABEL ENCODER******
*****FIM LABEL ENCODER*********
Function label_encoder_columns Took 0:00:00.461678

/home/rafael_m/Documentos/algoritmos/run_pipeline_target_categoria_08012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
Number of folds for cross validation: 10
Scoring strategy for grid search: f1_macro
Test Size: 0.2

x_train shape: (2521652, 59)
y_train shape: (2521652,)
x_test shape: (630413, 59)
y_test shape: (630413,)
Checking already executed parameters...
classifier__estimator GaussianNB() == classifier__estimator GaussianNB()
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion gini == classifier__estimator__criterion gini
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 1 == classifier__estimator__max_depth 1
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 4 == classifier__estimator__max_depth 4
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 10 == classifier__estimator__max_depth 10
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 1 == classifier__estimator__min_samples_leaf 1
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 5 == classifier__estimator__min_samples_leaf 5
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 1 == classifier__estimator__min_samples_split 1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 2 == classifier__estimator__min_samples_split 2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 50 == classifier__estimator__min_samples_split 50
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator DecisionTreeClassifier() == classifier__estimator DecisionTreeClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__min_samples_leaf 10 == classifier__estimator__min_samples_leaf 10
classifier__estimator__min_samples_split 100 == classifier__estimator__min_samples_split 100
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
classifier__estimator__splitter best == classifier__estimator__splitter best
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0010004043579101562 == classifier__estimator__C 0.0010004043579101562
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.01000213623046875 == classifier__estimator__C 0.01000213623046875
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 0.0999755859375 == classifier__estimator__C 0.0999755859375
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 10000 == classifier__estimator__max_iter 10000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 100 == classifier__estimator__max_iter 100
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l1 == classifier__estimator__penalty l1
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator LinearSVC() == classifier__estimator LinearSVC()
classifier__estimator__C 1.0 == classifier__estimator__C 1.0
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__dual False == classifier__estimator__dual False
classifier__estimator__max_iter 1000 == classifier__estimator__max_iter 1000
classifier__estimator__penalty l2 == classifier__estimator__penalty l2
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}

Removing already executed params object from candidate_params: {'classifier__estimator': GaussianNB()}

/home/rafael_m/Documentos/algoritmos/run_pipeline_target_categoria_08012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: 
600 fits failed out of a total of 2870.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
600 fits failed with the following error:
Traceback (most recent call last):
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_categoria_08012023/precoce-ms-classification/sklearn_tuner/model_selection_tuner/_validation_tuner.py", line 178, in _fit_and_score_tuner
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_categoria_08012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/pipeline.py", line 382, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_categoria_08012023/precoce-ms-classification/clf_switcher.py", line 20, in fit
    self.estimator.fit(x, y)
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_categoria_08012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/tree/_classes.py", line 969, in fit
    super().fit(
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_categoria_08012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/tree/_classes.py", line 265, in fit
    check_scalar(
  File "/home/rafael_m/Documentos/algoritmos/run_pipeline_target_categoria_08012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/utils/validation.py", line 1480, in check_scalar
    raise ValueError(
ValueError: min_samples_split == 1, must be >= 2.

  warnings.warn(some_fits_failed_message, FitFailedWarning)
Fitting 10 folds for each of 122930 candidates, totalling 1229300 fits
[CV 1/10; 1/122930] START classifier__estimator=LinearSVC(), classifier__estimator__C=1.0, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l1, classifier__estimator__random_state=42
/home/rafael_m/Documentos/algoritmos/run_pipeline_target_categoria_08012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/svm/_base.py:1225: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  warnings.warn(
[CV 1/10; 1/122930] END classifier__estimator=LinearSVC(), classifier__estimator__C=1.0, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l1, classifier__estimator__random_state=42;, score=0.810 total time=1171.6min
[CV 2/10; 1/122930] START classifier__estimator=LinearSVC(), classifier__estimator__C=1.0, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l1, classifier__estimator__random_state=42
/home/rafael_m/Documentos/algoritmos/run_pipeline_target_categoria_08012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/svm/_base.py:1225: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  warnings.warn(
[CV 2/10; 1/122930] END classifier__estimator=LinearSVC(), classifier__estimator__C=1.0, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l1, classifier__estimator__random_state=42;, score=0.808 total time=1107.7min
[CV 3/10; 1/122930] START classifier__estimator=LinearSVC(), classifier__estimator__C=1.0, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l1, classifier__estimator__random_state=42
/home/rafael_m/Documentos/algoritmos/run_pipeline_target_categoria_08012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/svm/_base.py:1225: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  warnings.warn(
[CV 3/10; 1/122930] END classifier__estimator=LinearSVC(), classifier__estimator__C=1.0, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l1, classifier__estimator__random_state=42;, score=0.808 total time=1154.4min
[CV 4/10; 1/122930] START classifier__estimator=LinearSVC(), classifier__estimator__C=1.0, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l1, classifier__estimator__random_state=42
/home/rafael_m/Documentos/algoritmos/run_pipeline_target_categoria_08012023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/sklearn/svm/_base.py:1225: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  warnings.warn(
[CV 4/10; 1/122930] END classifier__estimator=LinearSVC(), classifier__estimator__C=1.0, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l1, classifier__estimator__random_state=42;, score=0.810 total time=1215.7min
[CV 5/10; 1/122930] START classifier__estimator=LinearSVC(), classifier__estimator__C=1.0, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l1, classifier__estimator__random_state=42
