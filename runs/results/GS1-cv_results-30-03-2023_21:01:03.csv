mean_fit_time;std_fit_time;mean_score_time;std_score_time;param_classifier__estimator;param_classifier__estimator__class_weight;param_classifier__estimator__criterion;param_classifier__estimator__max_depth;param_classifier__estimator__min_samples_leaf;param_classifier__estimator__min_samples_split;param_classifier__estimator__random_state;param_classifier__estimator__splitter;param_classifier__estimator__C;param_classifier__estimator__dual;param_classifier__estimator__max_iter;param_classifier__estimator__penalty;param_classifier__estimator__activation;param_classifier__estimator__alpha;param_classifier__estimator__early_stopping;param_classifier__estimator__hidden_layer_sizes;param_classifier__estimator__learning_rate;param_classifier__estimator__learning_rate_init;param_classifier__estimator__momentum;param_classifier__estimator__solver;param_classifier__estimator__max_features;param_classifier__estimator__n_estimators;param_classifier__estimator__n_jobs;param_classifier__estimator__colsample_bytree;param_classifier__estimator__gamma;param_classifier__estimator__max_delta_step;param_classifier__estimator__objective;param_classifier__estimator__reg_alpha;param_classifier__estimator__reg_lambda;param_classifier__estimator__subsample;param_classifier__estimator__tree_method;param_classifier__estimator__cat_emb_dim;param_classifier__estimator__clip_value;param_classifier__estimator__lambda_sparse;param_classifier__estimator__mask_type;param_classifier__estimator__n_a;param_classifier__estimator__n_independent;param_classifier__estimator__n_shared;param_classifier__estimator__n_steps;param_classifier__estimator__optimizer_fn;param_classifier__estimator__optimizer_params;param_classifier__estimator__scheduler_fn;param_classifier__estimator__scheduler_params;param_classifier__estimator__seed;param_classifier__estimator__verbose;params;split0_test_score;split1_test_score;split2_test_score;split3_test_score;split4_test_score;split5_test_score;split6_test_score;split7_test_score;split8_test_score;split9_test_score;mean_test_score;std_test_score;rank_test_score
240,2330406188965;0,880221529796138;1,5112337827682496;0,047901507143892526;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42)";;entropy;;;;42;;;;;;;;;;;;;;0.75;1000;1;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__random_state': 42}";0,7271997860390479;0,7229205669965232;0,7328162610323616;0,7250601765177855;0,7199786039047874;0,7384327360256753;0,7325488098422038;0,7263974324685745;0,7236490101658641;0,7303370786516854;0,727934046164451;0,005282746771389312;1
242,92640454769133;0,7990803387366846;1,609327530860901;0,06227531125012948;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42)";balanced;entropy;;;;42;;;;;;;;;;;;;;0.75;1000;1;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__random_state': 42}";0,728269590799679;0,7181064455736828;0,7290719443701524;0,7242578229473121;0,7189087991441562;0,7395025407863065;0,7346884193634662;0,7242578229473121;0,7268592830390583;0,7287319422150883;0,7272654611186213;0,006190692799178222;2
24,037621474266054;0,11412866710582643;0,14571940898895264;0,0036985244216458614;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42)";;entropy;;;;42;;;;;;;;;;;;;;0.75;100;1;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__random_state': 42}";0,7258625300882589;0,716501738432736;0,7237229205669965;0,7237229205669965;0,7189087991441562;0,741374699117411;0,7274672372292057;0,7226531158063654;0,7169609416800428;0,7316746923488496;0,7248849594981018;0,007085905228292079;3
24,203776359558105;0,09657469877021381;0,15059335231781007;0,006551149469370949;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42)";balanced;entropy;;;;42;;;;;;;;;;;;;;0.75;100;1;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__random_state': 42}";0,7301417491307837;0,7151644824819471;0,720513506285103;0,725595078898101;0,7221182134260498;0,7362931265044129;0,7266648836587323;0,7194437015244718;0,7185660781166399;0,7330123060460139;0,7247513126072256;0,00646618410619649;4
8,167999291419983;0,056037067633012375;0,15582528114318847;0,05590692044974742;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7253276277079433;0,7143621289114737;0,7135597753410002;0,7207809574752607;0,7060711420165819;0,7269323348488901;0,719176250334314;0,7090131051083177;0,7132156233279828;0,7116104868913857;0,716004943196315;0,0065001790596453815;5
10,172880363464355;0,21209105459489214;0,17913239002227782;0,02114578366213201;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7215833110457341;0,7119550682000535;0,7122225193902113;0,7173040920032094;0,7063385932067398;0,7242578229473121;0,7170366408130516;0,7140946777213159;0,7174959871589085;0,7150882825040128;0,715737699499055;0,004817938773675853;6
8,521534371376038;0,08072993879237216;0,13717896938323976;0,02284231513830808;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,721850762235892;0,7031291789248462;0,7116876170098957;0,720513506285103;0,7103503610591068;0,7239903717571543;0,721850762235892;0,7140946777213159;0,7145532370251472;0,709470304975923;0,7151490779230276;0,006402915968816204;7
8,267998719215393;0,10329200408759108;0,14446680545806884;0,02615265305585144;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7194437015244718;0,7116876170098957;0,7146295801016315;0,7175715431933672;0,7066060443968976;0,7231880181866809;0,7258625300882589;0,7076758491575288;0,7084002140181915;0,7145532370251472;0,7149618334702071;0,0062478035572789015;8
8,006120109558106;0,08048535627575427;0,13056929111480714;0,021497081417391987;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7242578229473121;0,7132923241508424;0,7124899705803691;0,7122225193902113;0,7098154586787911;0,720513506285103;0,717838994383525;0,7127574217705269;0,7129481005885501;0,7118780096308186;0,7148014128406049;0,004319352980576254;9
7,85003547668457;0,14763492675071424;0,11983983516693116;0,02247163575468791;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7207809574752607;0,7050013372559508;0,7127574217705269;0,7156993848622626;0,710082909868949;0,7242578229473121;0,7215833110457341;0,7114201658197379;0,7086677367576244;0,7150882825040128;0,7145339330307372;0,005855633593706766;10
8,10594663619995;0,11067945415888596;0,13676834106445312;0,04265072032573022;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7189087991441562;0,7156993848622626;0,7159668360524204;0,7130248729606847;0,7060711420165819;0,7258625300882589;0,7175715431933672;0,704733886065793;0,7124130551096843;0,7140181915462814;0,7144270241039491;0,005785343214980696;11
10,101089215278625;0,1842407261136655;0,17089955806732177;0,01959635578778702;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7258625300882589;0,7108852634394223;0,7127574217705269;0,7140946777213159;0,703396630115004;0,7223856646162076;0,7170366408130516;0,7041989836854774;0,7153558052434457;0,7092027822364901;0,7135176399729201;0,0068009623939112385;12
8,848524522781371;0,0793280552783033;0,1450510263442993;0,03257169441850298;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7186413479539984;0,7119550682000535;0,7140946777213159;0,7127574217705269;0,7058036908264241;0,7298742979406259;0,713827226531158;0,7090131051083177;0,7110754414125201;0,7081326912787587;0,7135174968743698;0,006418713841823338;13
7,814212155342102;0,07896974381935044;0,12151997089385987;0,02069079867314091;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7173040920032094;0,7098154586787911;0,707408397967371;0,7242578229473121;0,6967103503610591;0,7215833110457341;0,7175715431933672;0,7092805562984755;0,7145532370251472;0,7161583734617443;0,7134643142982211;0,007554219186604401;14
8,61465528011322;0,14323123515326874;0,13421871662139892;0,01865280082436928;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7202460550949452;0,710082909868949;0,7092805562984755;0,7183738967638406;0,7082107515378443;0,7293393955603102;0,7063385932067398;0,7084782027280021;0,7086677367576244;0,7145532370251472;0,7133571334841877;0,006916408772578561;15
9,877205872535706;0,27403342113858603;0,17643425464630128;0,02714973685155434;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7170366408130516;0,7156993848622626;0,7122225193902113;0,7116876170098957;0,7063385932067398;0,7253276277079433;0,7135597753410002;0,7031291789248462;0,7110754414125201;0,7156233279828785;0,713170010665135;0,0057471376754029335;16
10,576276087760926;0,12360326815421083;0,17444961071014403;0,02977299449264855;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7162342872425782;0,7095480074886333;0,7106178122492645;0,7122225193902113;0,7012570205937416;0,725595078898101;0,7127574217705269;0,7135597753410002;0,7097378277153558;0,7193686463349385;0,7130898397024351;0,006137447708064666;17
10,257674288749694;0,13769225021098447;0,16653101444244384;0,021213596070934766;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7156993848622626;0,7090131051083177;0,7098154586787911;0,7132923241508424;0,7028617277346885;0,7258625300882589;0,7148970312917893;0,7114201658197379;0,7086677367576244;0,7193686463349385;0,7130898110827252;0,006057888374166776;18
10,505403614044189;0,0967692158980427;0,22878870964050294;0,0662669410887846;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,717838994383525;0,7090131051083177;0,7087456539181599;0,7119550682000535;0,6996523134527949;0,725595078898101;0,7159668360524204;0,7103503610591068;0,7086677367576244;0,7191011235955056;0,7126886271425608;0,006827478855536375;19
10,533797407150269;0,1842184752554895;0,1940126895904541;0,033646416918780446;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7140946777213159;0,7114201658197379;0,7084782027280021;0,7103503610591068;0,7012570205937416;0,725595078898101;0,7173040920032094;0,7108852634394223;0,7100053504547886;0,7172284644194756;0,7126618677136901;0,0061351188393518824;20
10,566441583633424;0,23648889897985056;0,2010084867477417;0,03181523030758684;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7148970312917893;0,7079433003476866;0,7076758491575288;0,7124899705803691;0,7028617277346885;0,7239903717571543;0,7159668360524204;0,7092805562984755;0,7116104868913857;0,7193686463349385;0,7126084776446436;0,00587317946316899;21
10,433640909194946;0,12457225303671354;0,21021595001220703;0,03870482614361624;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7140946777213159;0,7084782027280021;0,703396630115004;0,720513506285103;0,7050013372559508;0,7269323348488901;0,7124899705803691;0,7090131051083177;0,7121455323702515;0,7121455323702515;0,7124210829383456;0,0066533845587460425;22
10,585926985740661;0,12002104923953566;0,19329755306243895;0,05118280445365688;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7183738967638406;0,7130248729606847;0,7108852634394223;0,7173040920032094;0,7106178122492645;0,7221182134260498;0,7092805562984755;0,7058036908264241;0,7084002140181915;0,7084002140181915;0,7124208826003755;0,004952542357718703;23
10,547469782829285;0,11147427789935586;0,20783143043518065;0,03944395756623313;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,721850762235892;0,7092805562984755;0,7156993848622626;0,7114201658197379;0,7015244717838994;0,7156993848622626;0,716501738432736;0,7108852634394223;0,7110754414125201;0,7100053504547886;0,7123942519601998;0,0051639525782095795;24
10,367789888381958;0,307898685059304;0,18792707920074464;0,04107887674464507;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7173040920032094;0,7071409467772132;0,7082107515378443;0,7114201658197379;0,7001872158331105;0,7253276277079433;0,7146295801016315;0,7111527146295801;0,7100053504547886;0,7182985553772071;0,7123677000242266;0,006584351976159897;25
10,477909636497497;0,148639642851587;0,17207558155059816;0,02445534917381073;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7162342872425782;0,7090131051083177;0,7071409467772132;0,7098154586787911;0,703396630115004;0,7250601765177855;0,7146295801016315;0,7084782027280021;0,7108079186730872;0,7174959871589085;0,7122072293101318;0,00591890845522523;26
10,25422534942627;0,4463949738009554;0,1561342716217041;0,01439063339482851;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7170366408130516;0,7076758491575288;0,7130248729606847;0,7132923241508424;0,7066060443968976;0,7263974324685745;0,7173040920032094;0,7111527146295801;0,7046548956661316;0,7049224184055645;0,7122067284652065;0,006446967915349154;27
10,24398214817047;0,18242258408795706;0,17967448234558106;0,029360294177320657;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7151644824819471;0,7071409467772132;0,7090131051083177;0,7124899705803691;0,7015244717838994;0,7245252741374699;0,7127574217705269;0,710082909868949;0,7100053504547886;0,7191011235955056;0,7121805056558986;0,006064097838977268;28
10,196848702430724;0,15833833530636304;0,16827054023742677;0,023724601471088638;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7143621289114737;0,7071409467772132;0,7092805562984755;0,7122225193902113;0,7009895694035838;0,7231880181866809;0,7156993848622626;0,7087456539181599;0,7113429641519529;0,7182985553772071;0,7121270297277221;0,005892831409540862;29
8,509620308876038;0,18793372750629303;0,12761354446411133;0,014757235042750104;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7197111527146296;0,7079433003476866;0,7055362396362663;0,7135597753410002;0,7050013372559508;0,7170366408130516;0,7135597753410002;0,7098154586787911;0,7164258962011771;0,7121455323702515;0,7120735108699805;0,004703633006188077;30
10,502224898338318;0,10331968646751684;0,1943044424057007;0,04311706100670173;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7173040920032094;0,707408397967371;0,7063385932067398;0,7111527146295801;0,7009895694035838;0,7245252741374699;0,713827226531158;0,7106178122492645;0,7097378277153558;0,7185660781166399;0,7120467585960372;0,006430830709248781;31
1,191706371307373;0,030000260769363386;0,04672493934631348;0,011625782432696566;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7183738967638406;0,7087456539181599;0,7036640813051618;0,7079433003476866;0,7012570205937416;0,7226531158063654;0,7197111527146296;0,7098154586787911;0,7100053504547886;0,7169609416800428;0,7119129972263207;0,0067735525032789744;32
10,476991128921508;0,1295226517596004;0,17290191650390624;0,026195998472751884;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7156993848622626;0,7082107515378443;0,7071409467772132;0,7116876170098957;0,703396630115004;0,7226531158063654;0,7135597753410002;0,710082909868949;0,7086677367576244;0,7180310326377742;0,7119129900713934;0,005410808098481656;33
1,1543988943099976;0,03873050529864085;0,060561609268188474;0,01821938405634811;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,717838994383525;0,713827226531158;0,7012570205937416;0,7132923241508424;0,6991174110724793;0,7250601765177855;0,7140946777213159;0,7058036908264241;0,7113429641519529;0,7172284644194756;0,7118862950368701;0,007493095480694204;34
10,135188627243043;0,09263065091006187;0,18384668827056885;0,03342598530425846;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7143621289114737;0,7071409467772132;0,7084782027280021;0,7111527146295801;0,7028617277346885;0,7237229205669965;0,7122225193902113;0,7116876170098957;0,7086677367576244;0,7185660781166399;0,7118862592622325;0,00563454501235812;35
10,317280387878418;0,13372856627881324;0,21639885902404785;0,04603460478704977;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,717838994383525;0,7095480074886333;0,7068734955870554;0,7156993848622626;0,6956405456004279;0,7271997860390479;0,7127574217705269;0,7167691896228938;0,7102728731942215;0,7059925093632958;0,711859220791189;0,008005819400416222;36
7,895062828063965;0,08747736402996391;0,13294129371643065;0,021851595285183902;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7135597753410002;0,700722118213426;0,7108852634394223;0,719176250334314;0,7036640813051618;0,725595078898101;0,717838994383525;0,7079433003476866;0,7073301230604602;0,7116104868913857;0,7118325472214483;0,007133779980773193;37
8,49558937549591;0,0741687981903215;0,13893485069274902;0,02115923435181208;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7175715431933672;0,7124899705803691;0,703396630115004;0,7170366408130516;0,7015244717838994;0,7231880181866809;0,7154319336721049;0,7028617277346885;0,7137506688068486;0,7108079186730872;0,71180595235591;0,006818884616555168;38
1,1929494857788085;0,0533779818902793;0,06042490005493164;0,01449789682013009;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7167691896228938;0,7122225193902113;0,704733886065793;0,7114201658197379;0,7023268253543729;0,7293393955603102;0,710082909868949;0,7041989836854774;0,7070626003210273;0,7196361690743713;0,7117792644763143;0,00785420328333488;39
7,8332834482193;0,10080739414318309;0,1324310064315796;0,03155653597817833;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7116876170098957;0,7095480074886333;0,7068734955870554;0,7154319336721049;0,7060711420165819;0,7237229205669965;0,7156993848622626;0,7050013372559508;0,7089352594970573;0,71482075976458;0,7117791857721117;0,005443121802542864;40
8,490549278259277;0,11617426614197593;0,1438059091567993;0,034995658971137523;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7170366408130516;0,7103503610591068;0,7156993848622626;0,7127574217705269;0,6983150575020058;0,721850762235892;0,7116876170098957;0,7066060443968976;0,7097378277153558;0,7134831460674157;0,7117524263432411;0,006021294893478776;41
1,1702029228210449;0,02937811329311684;0,04988729953765869;0,01671428932801508;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7148970312917893;0,7090131051083177;0,7009895694035838;0,7162342872425782;0,7063385932067398;0,7202460550949452;0,7132923241508424;0,7071409467772132;0,7110754414125201;0,7177635098983414;0,711699086358687;0,00561221808152332;42
1,2001164436340332;0,050641567814921226;0,05213315486907959;0,01778682460125005;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7167691896228938;0,7114201658197379;0,7023268253543729;0,7098154586787911;0,7036640813051618;0,7261299812784167;0,7194437015244718;0,7044664348756352;0,7084002140181915;0,7142857142857143;0,7116721766763388;0,007209988770613992;43
1,1696171760559082;0,022861956839193967;0,05115063190460205;0,012206220894720496;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7154319336721049;0,713827226531158;0,7079433003476866;0,7162342872425782;0,7050013372559508;0,7189087991441562;0,717838994383525;0,703396630115004;0,7137506688068486;0,704119850187266;0,7116453027686278;0,005641197051501907;44
1,183772873878479;0,055370230741182316;0,058060622215270995;0,023471816137049708;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7143621289114737;0,7127574217705269;0,702059374164215;0,720513506285103;0,7041989836854774;0,7175715431933672;0,7154319336721049;0,7076758491575288;0,7089352594970573;0,7113429641519529;0,7114848964488807;0,0055407091974932965;45
1,2015721797943115;0,025723355801713983;0,05427825450897217;0,012999143770306575;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7114201658197379;0,7071409467772132;0,7060711420165819;0,7108852634394223;0,6996523134527949;0,7258625300882589;0,7207809574752607;0,7063385932067398;0,7097378277153558;0,7161583734617443;0,711404811345311;0,007300681084724716;46
1,1922817707061768;0,036401687423638564;0,05478169918060303;0,022903526998480597;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7116876170098957;0,7132923241508424;0,700722118213426;0,7122225193902113;0,6983150575020058;0,7269323348488901;0,713827226531158;0,7108852634394223;0,704119850187266;0,7174959871589085;0,7109500298432028;0,007906451476756959;47
1,191437029838562;0,0546422983961485;0,05793304443359375;0,012232646167056981;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7114201658197379;0,7103503610591068;0,7012570205937416;0,7173040920032094;0,6993848622626371;0,7237229205669965;0,7156993848622626;0,7079433003476866;0,7067950775815944;0,7140181915462814;0,7107895376643254;0,0069987532163444215;48
1,1934682130813599;0,07134615107926369;0,050519275665283206;0,017533736111337402;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7199786039047874;0,7060711420165819;0,7079433003476866;0,7159668360524204;0,7039315324953196;0,7231880181866809;0,7119550682000535;0,7041989836854774;0,702247191011236;0,7124130551096843;0,7107893731009929;0,0068026729572097265;49
1,1558624029159545;0,043674118561395484;0,05767946243286133;0,01244333166827371;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7116876170098957;0,7132923241508424;0,7082107515378443;0,7210484086654185;0,6996523134527949;0,7156993848622626;0,7114201658197379;0,7025942765445307;0,7100053504547886;0,7129481005885501;0,7106558693086666;0,00582893720443648;50
1,1529053449630737;0,03347888777359026;0,06270821094512939;0,023140292802358263;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7140946777213159;0,7132923241508424;0,7041989836854774;0,7084782027280021;0,7009895694035838;0,7229205669965232;0,7135597753410002;0,7106178122492645;0,7025147137506688;0,7150882825040128;0,710575490853069;0,006351096570889927;51
1,1945142030715943;0,03277216318266499;0,053977799415588376;0,012687159125758624;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7140946777213159;0,7060711420165819;0,7076758491575288;0,7071409467772132;0,6975127039315325;0,7234554693768387;0,7175715431933672;0,7084782027280021;0,7062600321027287;0,7161583734617443;0,7104418940466853;0,007016870711116638;52
8,689819574356079;0,09344719756102257;0,14137585163116456;0,027317720746542807;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7183738967638406;0,6996523134527949;0,7071409467772132;0,7111527146295801;0,7058036908264241;0,7210484086654185;0,7119550682000535;0,7082107515378443;0,7067950775815944;0,7142857142857143;0,7104418582720478;0,006000718573672386;53
8,704518270492553;0,11645568430829252;0,14335055351257325;0,03425949173341592;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7202460550949452;0,7060711420165819;0,7031291789248462;0,7156993848622626;0,7028617277346885;0,7173040920032094;0,7130248729606847;0,7095480074886333;0,7067950775815944;0,7097378277153558;0,7104417366382803;0,005675883491933277;54
1,206730842590332;0,043898315571805124;0,06105084419250488;0,019819627519078818;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7108852634394223;0,7140946777213159;0,702059374164215;0,7066060443968976;0,6969778015512169;0,7215833110457341;0,7175715431933672;0,7063385932067398;0,7078651685393258;0,7180310326377742;0,7102012809896008;0,007316128168516389;55
1,1887715816497804;0,030722260837055513;0,049125146865844724;0,011831197566429816;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7159668360524204;0,7111527146295801;0,6996523134527949;0,7119550682000535;0,6991174110724793;0,7207809574752607;0,7156993848622626;0,7060711420165819;0,7070626003210273;0,7140181915462814;0,7101476619628742;0,006745099186627669;56
1,2114014148712158;0,059816092709681905;0,04931819438934326;0,01104204689894985;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7170366408130516;0,710082909868949;0,7066060443968976;0,7095480074886333;0,7028617277346885;0,7207809574752607;0,7039315324953196;0,7076758491575288;0,7132156233279828;0,7081326912787587;0,7099871984037072;0,005333683589178002;57
1,1951434373855592;0,030043965126612445;0,05461282730102539;0,02661970043920635;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,719176250334314;0,7076758491575288;0,7009895694035838;0,7090131051083177;0,700722118213426;0,7215833110457341;0,7095480074886333;0,7068734955870554;0,7070626003210273;0,71669341894061;0,7099337725600231;0,006748221202283363;58
1,1512301206588744;0,04864008346146013;0,04860475063323975;0,015649837288275584;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7084782027280021;0,7012570205937416;0,7146295801016315;0,7148970312917893;0,7044664348756352;0,7210484086654185;0,7098154586787911;0,703396630115004;0,7067950775815944;0,7129481005885501;0,7097731945220158;0,0058218908193667;59
1,1735969066619873;0,0586285109877448;0,0510540246963501;0,017203330620094878;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7213158598555763;0,7087456539181599;0,702059374164215;0,7060711420165819;0,6983150575020058;0,7173040920032094;0,7186413479539984;0,704733886065793;0,7065275548421616;0,7137506688068486;0,709746463712855;0,0072518039760368835;60
7,2066762208938595;0,08259553931601618;0,10792374610900879;0,016020396350004414;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7114201658197379;0,7076758491575288;0,7071409467772132;0,7066060443968976;0,7052687884461086;0,717838994383525;0,7132923241508424;0,704733886065793;0,709470304975923;0,7124130551096843;0,7095860359283255;0,0039230978487680215;61
1,2311838865280151;0,07621425996123816;0,04696071147918701;0,010282654043156684;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7092805562984755;0,707408397967371;0,7090131051083177;0,720513506285103;0,7023268253543729;0,7229205669965232;0,7082107515378443;0,6959079967905857;0,7054574638844302;0,7145532370251472;0,7095592407248171;0,00765356332578857;62
1,1583747625350953;0,02816070228436261;0,04921736717224121;0,016172214174139627;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7124899705803691;0,7090131051083177;0,7028617277346885;0,7124899705803691;0,7023268253543729;0,7181064455736828;0,7130248729606847;0,7071409467772132;0,7014446227929374;0,71669341894061;0,7095591906403245;0,0056771305915700515;63
7,24695782661438;0,08760351828642331;0,1130091667175293;0,030777942342877028;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7175715431933672;0,7079433003476866;0,7036640813051618;0,7146295801016315;0,7060711420165819;0,7148970312917893;0,7108852634394223;0,6967103503610591;0,7150882825040128;0,7059925093632958;0,7093453083924008;0,006145037557711032;64
1,1698035955429078;0,055070202954515486;0,055700135231018064;0,014284410001194512;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7103503610591068;0,7068734955870554;0,7058036908264241;0,7135597753410002;0,7023268253543729;0,7156993848622626;0,7076758491575288;0,7090131051083177;0,7100053504547886;0,7105403959336544;0,7091848233684511;0,0036271470397137976;65
10,706809568405152;0,1845855790200267;0,18642923831939698;0,03421583107223626;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7111527146295801;0,7092805562984755;0,7052687884461086;0,7148970312917893;0,7084782027280021;0,7170366408130516;0,7071409467772132;0,7001872158331105;0,7140181915462814;0,704119850187266;0,7091580138550878;0,00498135871267631;66
1,0325472116470338;0,021579323775662716;0,04893560409545898;0,007602076580493501;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7183738967638406;0,707408397967371;0,7050013372559508;0,7162342872425782;0,7015244717838994;0,7170366408130516;0,707408397967371;0,7044664348756352;0,7043873729266987;0,7086677367576244;0,7090508974354022;0,005688986751112322;67
8,686867356300354;0,07485903967792394;0,13628842830657958;0,027179574652856295;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7108852634394223;0,7066060443968976;0,7041989836854774;0,7106178122492645;0,6975127039315325;0,7239903717571543;0,7119550682000535;0,7060711420165819;0,7046548956661316;0,7137506688068486;0,7090242954149363;0,006710998826112574;68
9,068496155738831;0,08099913374005009;0,14762728214263915;0,03630301434707169;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7092805562984755;0,7060711420165819;0,7028617277346885;0,7090131051083177;0,6985825086921637;0,7231880181866809;0,7127574217705269;0,7071409467772132;0,7054574638844302;0,7145532370251472;0,7088906127494227;0,006457570049279471;69
9,003481698036193;0,12952654188691204;0,13665060997009276;0,02661138381478488;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7108852634394223;0,7055362396362663;0,7052687884461086;0,710082909868949;0,6961754479807435;0,7231880181866809;0,7103503610591068;0,7060711420165819;0,7054574638844302;0,7153558052434457;0,7088371439761735;0,006778626466715094;70
7,353135514259338;0,10237034060595544;0,10637576580047607;0,015202026024907847;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7186413479539984;0,7082107515378443;0,702059374164215;0,7116876170098957;0,7055362396362663;0,7092805562984755;0,7095480074886333;0,7052687884461086;0,7046548956661316;0,7121455323702515;0,7087033110571819;0,004507402106839422;71
8,632547235488891;0,11204160741564546;0,12355873584747315;0,009966697851995289;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7106178122492645;0,7052687884461086;0,702059374164215;0,710082909868949;0,6961754479807435;0,7245252741374699;0,7130248729606847;0,7041989836854774;0,7057249866238631;0,7126805778491172;0,7084359027965892;0,007291962546659831;72
7,3052626848220825;0,0741387334894195;0,11300072669982911;0,016143808605142907;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7213158598555763;0,700722118213426;0,7055362396362663;0,7140946777213159;0,700722118213426;0,7148970312917893;0,7060711420165819;0,6977801551216903;0,7092027822364901;0,7132156233279828;0,7083557747634546;0,007138493398681415;73
8,964537000656128;0,07923453440857436;0,15025997161865234;0,022067299195640096;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7103503610591068;0,7050013372559508;0,7036640813051618;0,7092805562984755;0,6945707408397968;0,7239903717571543;0,7103503610591068;0,704733886065793;0,7051899411449973;0,7158908507223114;0,7083022487507855;0,0074594456322348915;74
9,133459377288819;0,6372342572842339;0,13844826221466064;0,016039011189387064;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7106178122492645;0,7050013372559508;0,7031291789248462;0,7103503610591068;0,69296603369885;0,7239903717571543;0,7122225193902113;0,7052687884461086;0,7054574638844302;0,7137506688068486;0,7082754535472771;0,0076868151243943;75
7,312090945243836;0,082151639936774;0,11421940326690674;0,021589546740142698;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7063385932067398;0,7071409467772132;0,707408397967371;0,7092805562984755;0,7017919229740572;0,7189087991441562;0,7116876170098957;0,7050013372559508;0,7089352594970573;0,7059925093632958;0,7082485939494212;0,004357836830688496;76
8,96109652519226;0,13412084241279532;0,15198118686676027;0,04905084056887211;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7106178122492645;0,7052687884461086;0,703396630115004;0,7092805562984755;0,6956405456004279;0,7245252741374699;0,7127574217705269;0,700722118213426;0,7046548956661316;0,7150882825040128;0,7081952325000846;0,0077436234051127;77
8,841326427459716;0,16209400632668247;0,17642762660980224;0,04715665281457876;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7156993848622626;0,7066060443968976;0,7001872158331105;0,7122225193902113;0,7017919229740572;0,7215833110457341;0,7017919229740572;0,7052687884461086;0,7084002140181915;0,7084002140181915;0,7081951537958823;0,00639592600517986;78
1,0345051765441895;0,033913089874934285;0,054129409790039065;0,017308097803262375;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7106178122492645;0,7090131051083177;0,7023268253543729;0,7140946777213159;0,6999197646429527;0,717838994383525;0,710082909868949;0,7050013372559508;0,7017121455323703;0,7113429641519529;0,7081950536268972;0,005504251989617602;79
8,896545219421387;0,09522153078175463;0,1280569314956665;0,014642240009491188;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7095480074886333;0,7068734955870554;0,7025942765445307;0,7090131051083177;0,6945707408397968;0,7239903717571543;0,7114201658197379;0,7060711420165819;0,7049224184055645;0,7124130551096843;0,7081416778677057;0,00717017728499723;80
10,538701486587524;0,5112743051755474;0,18441359996795653;0,03138555479761334;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7122225193902113;0,7092805562984755;0,7050013372559508;0,703396630115004;0,7068734955870554;0,721850762235892;0,7063385932067398;0,7025942765445307;0,7105403959336544;0,7030497592295345;0,7081148325797049;0,005527873571943371;81
1,0139528274536134;0,04300644272304271;0,047053956985473634;0,011150058426044253;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7111527146295801;0,7066060443968976;0,6988499598823215;0,7090131051083177;0,7044664348756352;0,7135597753410002;0,7173040920032094;0,6983150575020058;0,7105403959336544;0,7110754414125201;0,7080883021085141;0,005798514811196627;82
1,0847078084945678;0,057399545828550766;0,052335381507873535;0,016258413471045636;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7095480074886333;0,7082107515378443;0,6972452527413747;0,7103503610591068;0,6969778015512169;0,7213158598555763;0,7167691896228938;0,7012570205937416;0,7054574638844302;0,7137506688068486;0,7080882377141667;0,007643649599745303;83
8,895489072799682;0,08298876090979347;0,13711261749267578;0,024084491049320988;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7108852634394223;0,704733886065793;0,7028617277346885;0,7082107515378443;0,6951056432201124;0,7247927253276277;0,7116876170098957;0,7050013372559508;0,704119850187266;0,7134831460674157;0,7080881947846016;0,007492207496827839;84
7,156108069419861;0,10175782798792062;0,10712687969207764;0,02467253135540996;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7092805562984755;0,7148970312917893;0,707408397967371;0,7119550682000535;0,6967103503610591;0,716501738432736;0,713827226531158;0,6988499598823215;0,7067950775815944;0,7046548956661316;0,7080880302212689;0,006286342648115067;85
8,586809873580933;0,09833147869414909;0,127766752243042;0,013647261077960686;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7098154586787911;0,7050013372559508;0,703396630115004;0,7082107515378443;0,6959079967905857;0,7250601765177855;0,7103503610591068;0,7044664348756352;0,7046548956661316;0,7137506688068486;0,7080614711303682;0,007300834683365714;86
10,328544640541077;0,25304755193896283;0,17928073406219483;0,04435198146652517;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7132923241508424;0,7079433003476866;0,7052687884461086;0,7041989836854774;0,7092805562984755;0,7154319336721049;0,7087456539181599;0,7017919229740572;0,7049224184055645;0,709470304975923;0,7080346186874401;0,003968754901311093;87
8,682085633277893;0,12481810926076989;0,13449361324310302;0,028371040165363567;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7098154586787911;0,704733886065793;0,7036640813051618;0,7084782027280021;0,6945707408397968;0,7239903717571543;0,7106178122492645;0,7058036908264241;0,7054574638844302;0,7129481005885501;0,7080079808923367;0,00715299599533042;88
8,867735624313354;0,18576384517612984;0,14949471950531007;0,03713055102458768;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7098154586787911;0,7063385932067398;0,7044664348756352;0,7092805562984755;0,6943032896496389;0,7242578229473121;0,7111527146295801;0,7052687884461086;0,7033172819689674;0,7118780096308186;0,7080078950332067;0,007255784318071221;89
1,0956866264343261;0,07802174589081298;0,0454829216003418;0,016165506327170908;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7079433003476866;0,7108852634394223;0,7009895694035838;0,7079433003476866;0,6993848622626371;0,716501738432736;0,7124899705803691;0,6991174110724793;0,7065275548421616;0,7161583734617443;0,7077941344190506;0,006093775794640038;90
10,648186659812927;0,13289159768464062;0,1973330020904541;0,042433023509182884;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7050013372559508;0,7044664348756352;0,7041989836854774;0,7063385932067398;0,7031291789248462;0,7189087991441562;0,7151644824819471;0,6988499598823215;0,7092027822364901;0,7118780096308186;0,7077138561324383;0,005763096034904319;91
7,13005211353302;0,1064834037133682;0,10950193405151368;0,03475064540987123;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7143621289114737;0,7122225193902113;0,7082107515378443;0,6985825086921637;0,7012570205937416;0,7229205669965232;0,7068734955870554;0,6993848622626371;0,7067950775815944;0,7038523274478331;0,7074461259001077;0,0071148287026248005;92
8,905226230621338;0,11251559725676573;0,13064124584197997;0,009890607527407584;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7167691896228938;0,7023268253543729;0,7015244717838994;0,7076758491575288;0,702059374164215;0,7143621289114737;0,710082909868949;0,710082909868949;0,7070626003210273;0,7025147137506688;0,7074460972803978;0,005132883054064181;93
1,0433290958404542;0,052807323134710746;0,044881033897399905;0,010120304662048418;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7066060443968976;0,7090131051083177;0,6961754479807435;0,7119550682000535;0,6985825086921637;0,719176250334314;0,7127574217705269;0,7015244717838994;0,7065275548421616;0,7118780096308186;0,7074195882739897;0,006711435066201438;94
1,0380586385726929;0,05283346889289763;0,0503190279006958;0,012569722986533093;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7189087991441562;0,7090131051083177;0,7009895694035838;0,7060711420165819;0,6985825086921637;0,717838994383525;0,7173040920032094;0,6961754479807435;0,7049224184055645;0,7043873729266987;0,7074193450064544;0,00777127404672985;95
8,786923360824584;0,11157222440254601;0,1530359983444214;0,027242970726554332;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7199786039047874;0,7068734955870554;0,7082107515378443;0,7082107515378443;0,7028617277346885;0,7116876170098957;0,7009895694035838;0,6985825086921637;0,7089352594970573;0,7070626003210273;0,7073392885225948;0,005657459401597914;96
1,049674916267395;0,038987478712793566;0,04753267765045166;0,01263780627923321;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7127574217705269;0,7082107515378443;0,6996523134527949;0,7186413479539984;0,6985825086921637;0,7116876170098957;0,707408397967371;0,6996523134527949;0,7054574638844302;0,7108079186730872;0,7072858054394906;0,006222293138008891;97
10,56537356376648;0,08891765516690088;0,21976954936981202;0,07621618301380391;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7124899705803691;0,702059374164215;0,7063385932067398;0,7087456539181599;0,7087456539181599;0,7116876170098957;0,7044664348756352;0,7028617277346885;0,7084002140181915;0,7067950775815944;0,7072590317007649;0,0032852892697552583;98
1,032640528678894;0,03107326341875547;0,050960206985473634;0,00788688548545299;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7060711420165819;0,7084782027280021;0,7031291789248462;0,7119550682000535;0,6961754479807435;0,7148970312917893;0,7130248729606847;0,7060711420165819;0,7033172819689674;0,7092027822364901;0,7072322150324741;0,0052645526075130785;99
1,0364330053329467;0,028101270290371287;0,04587652683258057;0,011616916074393182;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7116876170098957;0,7068734955870554;0,6991174110724793;0,710082909868949;0,6921636801283766;0,7148970312917893;0,7154319336721049;0,7017919229740572;0,7051899411449973;0,7145532370251472;0,7071789179774852;0,007309842314057143;100
10,402366209030152;0,18906132709681106;0,1827998638153076;0,022667672264050268;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7103503610591068;0,7052687884461086;0,703396630115004;0,7060711420165819;0,7060711420165819;0,7151644824819471;0,7114201658197379;0,7009895694035838;0,7062600321027287;0,7059925093632958;0,7070984822824677;0,003907932443176253;101
1,0270912170410156;0,04597123939332127;0,04836099147796631;0,019482013605354224;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7132923241508424;0,7039315324953196;0,700722118213426;0,7082107515378443;0,6940358384594811;0,7114201658197379;0,7095480074886333;0,7028617277346885;0,7078651685393258;0,7182985553772071;0,7070186189816505;0,006553731367963197;102
19,582471823692323;4,943277882581123;0,022638463973999025;0,001292163286805768;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);constant;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,7063385932067398;0,7004546670232683;0,7140946777213159;0,7079433003476866;0,7087456539181599;0,7143621289114737;0,7124899705803691;0,6884193634661674;0,6960941680042804;0,7196361690743713;0,7068578692253832;0,008975183116508705;103
19,606589245796204;4,956936629823465;0,03081340789794922;0,011369322750023898;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);constant;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,7063385932067398;0,7004546670232683;0,7140946777213159;0,7079433003476866;0,7087456539181599;0,7143621289114737;0,7124899705803691;0,6884193634661674;0,6960941680042804;0,7196361690743713;0,7068578692253832;0,008975183116508705;103
19,585418820381165;4,934794396958419;0,027453351020812988;0,008847270164014235;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);adaptive;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,7063385932067398;0,7004546670232683;0,7140946777213159;0,7079433003476866;0,7087456539181599;0,7143621289114737;0,7124899705803691;0,6884193634661674;0,6960941680042804;0,7196361690743713;0,7068578692253832;0,008975183116508705;103
19,620176243782044;4,956111589230647;0,02353208065032959;0,0034654309194768872;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);adaptive;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,7063385932067398;0,7004546670232683;0,7140946777213159;0,7079433003476866;0,7087456539181599;0,7143621289114737;0,7124899705803691;0,6884193634661674;0,6960941680042804;0,7196361690743713;0,7068578692253832;0,008975183116508705;103
19,585695505142212;4,950592532323057;0,02700152397155762;0,009166508405391904;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);adaptive;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,7063385932067398;0,7004546670232683;0,7140946777213159;0,7079433003476866;0,7087456539181599;0,7143621289114737;0,7124899705803691;0,6884193634661674;0,6960941680042804;0,7196361690743713;0,7068578692253832;0,008975183116508705;103
19,693130445480346;4,973112610452188;0,023735904693603517;0,001912434952241097;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);constant;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,7063385932067398;0,7004546670232683;0,7140946777213159;0,7079433003476866;0,7087456539181599;0,7143621289114737;0,7124899705803691;0,6884193634661674;0,6960941680042804;0,7196361690743713;0,7068578692253832;0,008975183116508705;103
19,69105520248413;4,982061012461223;0,03207545280456543;0,011775019900696236;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);constant;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,7063385932067398;0,7004546670232683;0,7140946777213159;0,7079433003476866;0,7087456539181599;0,7143621289114737;0,7124899705803691;0,6884193634661674;0,6960941680042804;0,7196361690743713;0,7068578692253832;0,008975183116508705;103
19,696264028549194;4,98265613336724;0,027210044860839843;0,010570093156558586;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);adaptive;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,7063385932067398;0,7004546670232683;0,7140946777213159;0,7079433003476866;0,7087456539181599;0,7143621289114737;0,7124899705803691;0,6884193634661674;0,6960941680042804;0,7196361690743713;0,7068578692253832;0,008975183116508705;103
1,046745228767395;0,03068121709850582;0,05361964702606201;0,013780794792067683;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,713827226531158;0,7058036908264241;0,6943032896496389;0,707408397967371;0,6959079967905857;0,7207809574752607;0,710082909868949;0,6991174110724793;0,7046548956661316;0,7164258962011771;0,7068312672049175;0,008294966015186056;111
1,0471588611602782;0,03207951690528465;0,04472043514251709;0,007104204970813451;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,707408397967371;0,7055362396362663;0,6988499598823215;0,7092805562984755;0,6953730944102702;0,7197111527146296;0,7127574217705269;0,6983150575020058;0,7049224184055645;0,7142857142857143;0,7066440012873145;0,007317093479770958;112
1,1001963138580322;0,07261057780449291;0,05016324520111084;0,013434496930803163;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7060711420165819;0,7087456539181599;0,6959079967905857;0,7124899705803691;0,6953730944102702;0,717838994383525;0,7108852634394223;0,7001872158331105;0,7017121455323703;0,71669341894061;0,7065904895845005;0,0076909506414240825;113
8,699754643440247;0,19212468467588956;0,15249998569488527;0,034386687036607966;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7146295801016315;0,7036640813051618;0,7076758491575288;0,707408397967371;0,7036640813051618;0,7106178122492645;0,7009895694035838;0,7063385932067398;0,7062600321027287;0,7038523274478331;0,7065100324247005;0,0037255439025125;114
1,02439706325531;0,041949215769197336;0,049272918701171876;0,012570385310421461;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,707408397967371;0,7041989836854774;0,700722118213426;0,704733886065793;0,6967103503610591;0,7207809574752607;0,713827226531158;0,702059374164215;0,7030497592295345;0,7113429641519529;0,7064834017845248;0,006716911793186863;115
1,0203437328338623;0,03631079936966968;0,05622630119323731;0,01489017835338885;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7103503610591068;0,7071409467772132;0,6988499598823215;0,7103503610591068;0,6977801551216903;0,713827226531158;0,7106178122492645;0,703396630115004;0,7062600321027287;0,7049224184055645;0,7063495903303159;0,0049720803537326545;116
1,0257229804992676;0,025482329508049625;0,04699652194976807;0,012108429396644424;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7135597753410002;0,7041989836854774;0,6996523134527949;0,7023268253543729;0,6961754479807435;0,7151644824819471;0,7111527146295801;0,6991174110724793;0,7124130551096843;0,709470304975923;0,7063231314084003;0,00648641204970319;117
1,0810844898223877;0,02562033314769085;0,04563159942626953;0,013967152535184818;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7111527146295801;0,7031291789248462;0,6972452527413747;0,7076758491575288;0,6967103503610591;0,7197111527146296;0,7122225193902113;0,6996523134527949;0,7027822364901016;0,7124130551096843;0,706269462297181;0,007199357620311602;118
10,089808893203735;0,18496107678052323;0,17945518493652343;0,020945103754726475;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7106178122492645;0,7017919229740572;0,7039315324953196;0,7095480074886333;0,7023268253543729;0,7108852634394223;0,707408397967371;0,6926985825086922;0,7134831460674157;0,7092027822364901;0,706189427278104;0,005814333859774446;119
1,0266541481018066;0,06127777989762506;0,04854750633239746;0,015719225780442984;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7044664348756352;0,7090131051083177;0,7052687884461086;0,7122225193902113;0,6961754479807435;0,7119550682000535;0,7076758491575288;0,7028617277346885;0,7043873729266987;0,707597645799893;0,7061623959619879;0,004474552925529854;120
10,333011150360107;0,14485654279367213;0,19289693832397461;0,034876712825782634;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7108852634394223;0,7036640813051618;0,7052687884461086;0,7114201658197379;0,7079433003476866;0,7079433003476866;0,7090131051083177;0,6900240706071142;0,7062600321027287;0,7084002140181915;0,7060822321542156;0,005803948315328386;121
1,0668851613998414;0,05774214259244878;0,0555455207824707;0,01763872435725529;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7076758491575288;0,7044664348756352;0,6926985825086922;0,7090131051083177;0,6932334848890077;0,7221182134260498;0,7135597753410002;0,700722118213426;0,7027822364901016;0,7142857142857143;0,7060555514295473;0,008820033770709175;122
1,0436002254486083;0,03249071509015681;0,0468597412109375;0,01096925604325891;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7090131051083177;0,7063385932067398;0,7015244717838994;0,7103503610591068;0,6921636801283766;0,7119550682000535;0,707408397967371;0,7023268253543729;0,7078651685393258;0,7113429641519529;0,7060288635499516;0,005679345139574223;123
7,155793023109436;0,0851349128619002;0,10423665046691895;0,015132861927427356;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,700722118213426;0,7052687884461086;0,6969778015512169;0,7068734955870554;0,7036640813051618;0,713827226531158;0,7162342872425782;0,6996523134527949;0,7067950775815944;0,7100053504547886;0,7060020540365882;0,005822237160227298;124
1,1857298374176026;0,051264767353306755;0,06165051460266113;0,031065756223061125;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7119550682000535;0,6991174110724793;0,6999197646429527;0,7143621289114737;0,6972452527413747;0,717838994383525;0,7098154586787911;0,7066060443968976;0,6979668271803103;0,7051899411449973;0,7060016891352855;0,0069760143651344236;125
1,064915084838867;0,06575717260034991;0,0505408763885498;0,012088975579422775;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7098154586787911;0,7039315324953196;0,6975127039315325;0,7071409467772132;0,6918962289382188;0,7197111527146296;0,710082909868949;0,700722118213426;0,702247191011236;0,7161583734617443;0,7059218616091061;0,008005158109249831;126
8,952151465415955;0,07115327876189714;0,1544196844100952;0,04373578983603413;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7084782027280021;0,7060711420165819;0,7041989836854774;0,7082107515378443;0,7025942765445307;0,7103503610591068;0,7041989836854774;0,703396630115004;0,7059925093632958;0,7054574638844302;0,705894930461975;0,002345366190299359;127
1,0421523571014404;0,043329320450971244;0,060476040840148924;0,02114456889073533;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7050013372559508;0,7052687884461086;0,6985825086921637;0,7060711420165819;0,7031291789248462;0,7143621289114737;0,7063385932067398;0,7004546670232683;0,7113429641519529;0,7051899411449973;0,7055741249774083;0,004392928166841833;128
1,0587040424346923;0,11729508090575436;0,0523801326751709;0,022721978520839785;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,707408397967371;0,7058036908264241;0,6910938753677454;0,7052687884461086;0,6943032896496389;0,7148970312917893;0,7122225193902113;0,7028617277346885;0,7067950775815944;0,7134831460674157;0,7054137544322987;0,007365329782064188;129
8,709346795082093;0,1622157179227113;0,14446756839752198;0,031663060033398444;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7106178122492645;0,7036640813051618;0,7044664348756352;0,7041989836854774;0,6975127039315325;0,7175715431933672;0,7103503610591068;0,6967103503610591;0,7049224184055645;0,7011771000535045;0,7051191789119674;0,006001644059407326;130
8,673717141151428;0,13354355494722867;0,1401050329208374;0,026138333923070786;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,713827226531158;0,7041989836854774;0,7015244717838994;0,7058036908264241;0,6972452527413747;0,7156993848622626;0,7050013372559508;0,6972452527413747;0,7073301230604602;0,6974317817014446;0,7045307505189827;0,006217244324782547;131
8,869193625450134;0,14490528636125402;0,13887252807617187;0,019312436908646813;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7151644824819471;0,6999197646429527;0,6913613265579032;0,7068734955870554;0,698047606311848;0,7095480074886333;0,7009895694035838;0,6999197646429527;0,7132156233279828;0,7035848047084002;0,703862444515326;0,006972232848382233;132
1,4071111917495727;0,05325833275171424;0,057965779304504396;0,016715086414207617;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7055362396362663;0,7009895694035838;0,698047606311848;0,7044664348756352;0,69296603369885;0,7135597753410002;0,7071409467772132;0,6959079967905857;0,6952915997859818;0,7086677367576244;0,7022573939378589;0,006346749546496082;133
1,3966232776641845;0,022729860124312294;0,04648349285125732;0,013153159792902323;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7055362396362663;0,700722118213426;0,6977801551216903;0,7039315324953196;0,6924311313185344;0,7132923241508424;0,7071409467772132;0,6956405456004279;0,6955591225254146;0,7078651685393258;0,7019899284378461;0,0063048536705772535;134
1,452709174156189;0,0747664019240982;0,060247373580932614;0,020120111540917425;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7063385932067398;0,7004546670232683;0,6967103503610591;0,7050013372559508;0,6932334848890077;0,7116876170098957;0,7063385932067398;0,6948381920299546;0,6955591225254146;0,7092027822364901;0,7019364739744521;0,0062637135759387955;135
1,4532493829727173;0,036015538057551685;0,060049915313720705;0,016734273192108285;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7066060443968976;0,700722118213426;0,6977801551216903;0,7036640813051618;0,6932334848890077;0,7124899705803691;0,7050013372559508;0,6943032896496389;0,695024077046549;0,709470304975923;0,7018294863434613;0,006346193647837547;136
1,439423108100891;0,06822657878785482;0,06908690929412842;0,026530871299508315;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,704733886065793;0,700722118213426;0,6967103503610591;0,7041989836854774;0,6937683872693233;0,7127574217705269;0,7066060443968976;0,6953730944102702;0,6947565543071161;0,7084002140181915;0,7018027054498082;0,006193360356060559;137
1,4324875593185424;0,03352591336365517;0,05724465847015381;0,01792446300943395;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,704733886065793;0,700722118213426;0,6964428991709013;0,7044664348756352;0,6937683872693233;0,7127574217705269;0,7066060443968976;0,6945707408397968;0,6942215088282504;0,7084002140181915;0,7016689655448742;0,006374438953641736;138
1,4322998046875;0,07414760805097934;0,052962422370910645;0,019607942855558978;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7050013372559508;0,7012570205937416;0,6972452527413747;0,7052687884461086;0,6918962289382188;0,7116876170098957;0,7068734955870554;0,6943032896496389;0,6928838951310862;0,7084002140181915;0,7014817139371262;0,006657018616502505;139
1,381650948524475;0,039413160552669246;0,04662201404571533;0,010980384442967102;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7050013372559508;0,7012570205937416;0,6969778015512169;0,7052687884461086;0,6918962289382188;0,7111527146295801;0,7068734955870554;0,6943032896496389;0,6923488496522204;0,7081326912787587;0,701321221758249;0,006636741590882815;140
1,4324613809585571;0,03563196592162412;0,05181045532226562;0,019622859864718144;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,704733886065793;0,7001872158331105;0,6975127039315325;0,7050013372559508;0,6910938753677454;0,7114201658197379;0,7063385932067398;0,6951056432201124;0,6923488496522204;0,7086677367576244;0,7012410007110568;0,00667671635665573;141
1,4451987028121949;0,02575002946621458;0,056817817687988284;0,019554121100681145;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7060711420165819;0,7001872158331105;0,6964428991709013;0,7058036908264241;0,691628777748061;0,7108852634394223;0,7063385932067398;0,6937683872693233;0,6928838951310862;0,7062600321027287;0,7010269896744379;0,0065580985383871864;142
1,4165215969085694;0,047529525407496935;0,05701899528503418;0,011666407575760773;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7052687884461086;0,7001872158331105;0,6964428991709013;0,7044664348756352;0,6918962289382188;0,7111527146295801;0,7058036908264241;0,6932334848890077;0,693151417870519;0,707597645799893;0,7009200521279398;0,006527497460397138;143
1,4120123386383057;0,054371874044870566;0,0648446798324585;0,02665623790649946;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;7;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7050013372559508;0,6991174110724793;0,6964428991709013;0,7031291789248462;0,6918962289382188;0,7114201658197379;0,7058036908264241;0,6935009360791655;0,6934189406099518;0,7084002140181915;0,7008131002715868;0,006538437383449683;144
5,485749316215515;0,05527247714950409;0,06926107406616211;0,013904753514231882;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6991174110724793;0,7004546670232683;0,6926985825086922;0,6991174110724793;0,6868146563252207;0,713827226531158;0,7050013372559508;0,6953730944102702;0,693151417870519;0,7086677367576244;0,6994223540827662;0,007650087885712016;145
5,700871062278748;0,11244367788166716;0,07130651473999024;0,02656626714402774;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6991174110724793;0,7004546670232683;0,6926985825086922;0,6964428991709013;0,6868146563252207;0,713827226531158;0,7050013372559508;0,6953730944102702;0,693151417870519;0,7086677367576244;0,6991549028926084;0,007702644393533446;146
1,1807414531707763;0,0355079891666362;0,050311279296875;0,012536529793879583;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7017919229740572;0,6988499598823215;0,6900240706071142;0,7001872158331105;0,688954265846483;0,7116876170098957;0,7066060443968976;0,6910938753677454;0,6960941680042804;0,7049224184055645;0,699021155832747;0,007180248447212795;147
1,225137209892273;0,07810427700185936;0,04544053077697754;0,008422212089580985;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7017919229740572;0,6988499598823215;0,6892217170366408;0,7001872158331105;0,688954265846483;0,7116876170098957;0,7066060443968976;0,6910938753677454;0,6960941680042804;0,7049224184055645;0,6989409204756997;0,007284070007030027;148
1,228607749938965;0,04637081295945402;0,05092380046844482;0,013168609203960485;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7015244717838994;0,7001872158331105;0,6918962289382188;0,7004546670232683;0,6876170098956941;0,7111527146295801;0,7060711420165819;0,6905589729874297;0,6955591225254146;0,704119850187266;0,6989141395820464;0,00704878546501927;149
5,547512078285218;0,04519804550613743;0,06328332424163818;0,023720394955566996;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,700722118213426;0,7028617277346885;0,6975127039315325;0,6985825086921637;0,6873495587055363;0,7092805562984755;0,7031291789248462;0,6908264241775876;0,6899411449973247;0,7070626003210273;0,6987268521996608;0,007013325473647192;150
1,2279072284698487;0,0393391021089384;0,05699214935302734;0,014621482735330834;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7009895694035838;0,6988499598823215;0,6926985825086922;0,7001872158331105;0,6878844610858519;0,7114201658197379;0,7055362396362663;0,6905589729874297;0,695024077046549;0,7038523274478331;0,6987001571651376;0,006894500126700221;151
1,2342588424682617;0,037782317640686555;0,0551943302154541;0,015199589246631845;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7015244717838994;0,6983150575020058;0,6884193634661674;0,6999197646429527;0,6884193634661674;0,7114201658197379;0,7060711420165819;0,690291521797272;0,696896736222579;0,7054574638844302;0,6986735050601794;0,007461524910020245;152
1,2048530578613281;0,0750707990207441;0,04955923557281494;0,014429191445637453;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7009895694035838;0,6988499598823215;0,6926985825086922;0,7001872158331105;0,6878844610858519;0,7111527146295801;0,7055362396362663;0,6905589729874297;0,695024077046549;0,7038523274478331;0,6986734120461218;0,006845449102790246;153
1,240886640548706;0,0633359570130298;0,04837610721588135;0,016822617663556857;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7015244717838994;0,6991174110724793;0,6924311313185344;0,700722118213426;0,6884193634661674;0,7103503610591068;0,7055362396362663;0,6900240706071142;0,6942215088282504;0,7043873729266987;0,6986734048911943;0,006836401787517946;154
1,2479146480560304;0,05655048541243625;0,05776958465576172;0,017596671918574898;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,702059374164215;0,6993848622626371;0,6897566194169564;0,6999197646429527;0,6884193634661674;0,710082909868949;0,7066060443968976;0,6897566194169564;0,695024077046549;0,7051899411449973;0,6986199575827278;0,007256346944263435;155
1,1816371440887452;0,04037055893603929;0,05796072483062744;0,024430730482330673;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7025942765445307;0,6993848622626371;0,6900240706071142;0,6991174110724793;0,6876170098956941;0,7111527146295801;0,707408397967371;0,6894891682267986;0,6958266452648475;0,7035848047084002;0,6986199361179453;0,007494746023643476;156
1,2298316478729248;0,04298049530445638;0,05124995708465576;0,01190282815552887;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7023268253543729;0,6993848622626371;0,6900240706071142;0,6991174110724793;0,6876170098956941;0,7111527146295801;0,7071409467772132;0,6894891682267986;0,6958266452648475;0,7035848047084002;0,6985664458799137;0,007449830699384033;157
1,2354554891586305;0,055702322577829796;0,04844365119934082;0,014498613007561873;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7012570205937416;0,6985825086921637;0,6918962289382188;0,6999197646429527;0,6881519122760096;0,7098154586787911;0,7055362396362663;0,6894891682267986;0,6958266452648475;0,704119850187266;0,6984594797137056;0,006765891655697638;158
1,185598039627075;0,021710791523532103;0,06360785961151123;0,02043101355294847;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7012570205937416;0,6985825086921637;0,6918962289382188;0,700722118213426;0,6881519122760096;0,7098154586787911;0,7052687884461086;0,688954265846483;0,6955591225254146;0,704119850187266;0,6984327274397624;0,006843989001425336;159
5,649030375480652;0,09202699726845608;0,07128546237945557;0,012016348269351525;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,700722118213426;0,7017919229740572;0,6932334848890077;0,6964428991709013;0,6865472051350628;0,7079433003476866;0,7044664348756352;0,6918962289382188;0,6918138041733547;0,7062600321027287;0,698111743082008;0,006800085689771835;160
5,4865494012832645;0,05803663456691481;0,06130366325378418;0,022227924610054944;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6983150575020058;0,7004546670232683;0,6943032896496389;0,6969778015512169;0,6881519122760096;0,7084782027280021;0,698047606311848;0,6908264241775876;0,6958266452648475;0,709470304975923;0,6980851911460347;0,006444331004138976;161
5,553865313529968;0,05406328261771019;0,06198439598083496;0,018172893253401858;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,700722118213426;0,7015244717838994;0,6932334848890077;0,6964428991709013;0,6865472051350628;0,7079433003476866;0,7044664348756352;0,6918962289382188;0,6918138041733547;0,7062600321027287;0,6980849979629922;0,006786070247377014;162
5,514516282081604;0,04266588280303295;0,06422069072723388;0,015416938076869727;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7001872158331105;0,6996523134527949;0,6921636801283766;0,7001872158331105;0,6886868146563252;0,7068734955870554;0,7012570205937416;0,6878844610858519;0,6952915997859818;0,7059925093632958;0,6978176326319644;0,006290074010015041;163
5,56738555431366;0,07123358720035686;0,06100015640258789;0,019334440662225;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7001872158331105;0,7025942765445307;0,6937683872693233;0,6983150575020058;0,6849424979941161;0,7114201658197379;0,7001872158331105;0,6900240706071142;0,6910112359550562;0,7057249866238631;0,6978175109981969;0,007556989403863363;164
5,565441226959228;0,06953625754369988;0,05992441177368164;0,01861563404445195;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7015244717838994;0,7012570205937416;0,6945707408397968;0,6977801551216903;0,6841401444236427;0,7103503610591068;0,6999197646429527;0,6870821075153785;0,6944890315676833;0,7067950775815944;0,6977908875129486;0,007691515655684315;165
5,62037341594696;0,08416970367231323;0,058904623985290526;0,012709981461053855;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7015244717838994;0,700722118213426;0,69296603369885;0,6977801551216903;0,6841401444236427;0,7103503610591068;0,6999197646429527;0,6892217170366408;0,6944890315676833;0,7067950775815944;0,6977908875129486;0,00748221056271808;165
5,526806259155274;0,05629585429979463;0,05774836540222168;0,007712742152457227;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6969778015512169;0,700722118213426;0,6937683872693233;0,6967103503610591;0,6844075956138005;0,7106178122492645;0,7028617277346885;0,691628777748061;0,6952915997859818;0,704119850187266;0,6977106020714088;0,0069294051595996005;167
5,618415522575378;0,11464078446386053;0,0694422721862793;0,021865653549703833;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,702059374164215;0,7039315324953196;0,6935009360791655;0,6977801551216903;0,6841401444236427;0,7111527146295801;0,6985825086921637;0,6881519122760096;0,6958266452648475;0,7017121455323703;0,6976838068679004;0,007428787690419945;168
5,629521322250366;0,09734098837433795;0,056115007400512694;0,014800768678337056;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6988499598823215;0,703396630115004;0,6948381920299546;0,6967103503610591;0,6878844610858519;0,7050013372559508;0,7015244717838994;0,6924311313185344;0,6944890315676833;0,7017121455323703;0,697683771093263;0,0051126337776548035;169
5,555759978294373;0,12680275778030775;0,06827969551086426;0,01883574704707749;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6956405456004279;0,7004546670232683;0,6961754479807435;0,6943032896496389;0,6857448515645894;0,7114201658197379;0,700722118213426;0,6886868146563252;0,6952915997859818;0,7081326912787587;0,6976572191572898;0,007495690845876497;170
5,590025997161865;0,09301475323689444;0,06753365993499756;0,020711678712720064;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7001872158331105;0,7025942765445307;0,6937683872693233;0,6983150575020058;0,6849424979941161;0,7114201658197379;0,6991174110724793;0,6900240706071142;0,6910112359550562;0,7035848047084002;0,6974965123305875;0,007327061022147377;171
5,543429899215698;0,0739278514171969;0,06136727333068848;0,018838690794083065;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7025942765445307;0,7017919229740572;0,690291521797272;0,6964428991709013;0,6833377908531693;0,7092805562984755;0,6983150575020058;0,6910938753677454;0,6955591225254146;0,7059925093632958;0,6974699532396869;0,007445703426971364;172
98,71425094604493;0,49717053904546615;0,671860647201538;0,036371678582514;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42)";;entropy;7;;;42;;;;;;;;;;;;;;0.75;1000;1;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__random_state': 42}";0,7041989836854774;0,6959079967905857;0,6926985825086922;0,6996523134527949;0,6822679860925381;0,7116876170098957;0,7050013372559508;0,6873495587055363;0,6912787586944891;0,7046548956661316;0,6974698029862092;0,008703955536057528;173
5,558925318717956;0,16561828786462518;0,06159696578979492;0,01703043494384978;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6983150575020058;0,7004546670232683;0,6943032896496389;0,6969778015512169;0,6881519122760096;0,7087456539181599;0,698047606311848;0,6878844610858519;0,6958266452648475;0,7054574638844302;0,6974164558467277;0,006265361226177697;174
5,533621978759766;0,038157247206283086;0,06821253299713134;0,020811873299705623;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,7015244717838994;0,7039315324953196;0,6918962289382188;0,6972452527413747;0,6841401444236427;0,7098154586787911;0,6985825086921637;0,6881519122760096;0,6958266452648475;0,7030497592295345;0,6974163914523801;0,007357125811032907;175
5,545711088180542;0,05639167631016402;0,056714653968811035;0,019297347640136207;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6956405456004279;0,7004546670232683;0,6961754479807435;0,6943032896496389;0,6857448515645894;0,7114201658197379;0,7009895694035838;0,6886868146563252;0,6942215088282504;0,7059925093632958;0,6973629369889861;0,007270820047761134;176
5,672038674354553;0,17382175761704685;0,06034665107727051;0,013712565537733706;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6983150575020058;0,7009895694035838;0,6926985825086922;0,6969778015512169;0,6838726932334849;0,7106178122492645;0,702059374164215;0,6894891682267986;0,6920813269127876;0,7057249866238631;0,6972826372375911;0,007585838636348952;177
9,917550945281983;0,060097805175342876;0,07953581809997559;0,009465720072195524;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42)";balanced;entropy;7;;;42;;;;;;;;;;;;;;0.75;100;1;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__random_state': 42}";0,7036640813051618;0,6983150575020058;0,6935009360791655;0,698047606311848;0,6844075956138005;0,7124899705803691;0,7044664348756352;0,6817330837122225;0,6920813269127876;0,7033172819689674;0,6972023374861964;0,00900281341864635;178
5,534023356437683;0,03864281958495948;0,0621168851852417;0,018154798056019696;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6985825086921637;0,7028617277346885;0,6935009360791655;0,6956405456004279;0,6820005349023803;0,7084782027280021;0,700722118213426;0,6910938753677454;0,6947565543071161;0,7038523274478331;0,6971489331072948;0,007128751243759459;179
97,96361768245697;65,53754712694735;0,15916268825531005;0,0527369222783001;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);adaptive;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,686279753944905;0,6841401444236427;0,713827226531158;0,691628777748061;0,6940358384594811;0,7050013372559508;0,7087456539181599;0,6993848622626371;0,6851257356875334;0,7033172819689674;0,6971486612200496;0,009947089777870542;180
97,37962920665741;64,91775500447761;0,17135708332061766;0,06840992582404262;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);constant;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,686279753944905;0,6841401444236427;0,713827226531158;0,691628777748061;0,6940358384594811;0,7050013372559508;0,7087456539181599;0,6993848622626371;0,6851257356875334;0,7033172819689674;0,6971486612200496;0,009947089777870542;180
97,58081905841827;65,26701657185022;0,15574474334716798;0,049284864129327734;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);adaptive;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,686279753944905;0,6841401444236427;0,713827226531158;0,691628777748061;0,6940358384594811;0,7050013372559508;0,7087456539181599;0,6993848622626371;0,6851257356875334;0,7033172819689674;0,6971486612200496;0,009947089777870542;180
97,39075510501861;64,98307214788744;0,15433049201965332;0,04876971003147376;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);adaptive;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,686279753944905;0,6841401444236427;0,713827226531158;0,691628777748061;0,6940358384594811;0,7050013372559508;0,7087456539181599;0,6993848622626371;0,6851257356875334;0,7033172819689674;0,6971486612200496;0,009947089777870542;180
97,10508453845978;64,44733292511725;0,15607166290283203;0,047804211343075304;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);constant;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,686279753944905;0,6841401444236427;0,713827226531158;0,691628777748061;0,6940358384594811;0,7050013372559508;0,7087456539181599;0,6993848622626371;0,6851257356875334;0,7033172819689674;0,6971486612200496;0,009947089777870542;180
97,377241396904;64,9214307805237;0,15247480869293212;0,047460712049965485;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);adaptive;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,686279753944905;0,6841401444236427;0,713827226531158;0,691628777748061;0,6940358384594811;0,7050013372559508;0,7087456539181599;0,6993848622626371;0,6851257356875334;0,7033172819689674;0,6971486612200496;0,009947089777870542;180
97,28954682350158;64,86211245472454;0,15367190837860106;0,04762740719565636;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);constant;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,686279753944905;0,6841401444236427;0,713827226531158;0,691628777748061;0,6940358384594811;0,7050013372559508;0,7087456539181599;0,6993848622626371;0,6851257356875334;0,7033172819689674;0,6971486612200496;0,009947089777870542;180
97,22636446952819;64,62107300550653;0,15900616645812987;0,04898023689750278;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);constant;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,686279753944905;0,6841401444236427;0,713827226531158;0,691628777748061;0,6940358384594811;0,7050013372559508;0,7087456539181599;0,6993848622626371;0,6851257356875334;0,7033172819689674;0,6971486612200496;0,009947089777870542;180
5,525680875778198;0,05823260168249646;0,06394054889678955;0,017886366370889688;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6999197646429527;0,703396630115004;0,6926985825086922;0,6972452527413747;0,6860123027547472;0,7084782027280021;0,6991174110724793;0,6881519122760096;0,6904761904761905;0,7057249866238631;0,6971221235939316;0,007223512296296179;188
9,973410892486573;0,06861838066953034;0,10328035354614258;0,03405576959314715;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42)";;entropy;7;;;42;;;;;;;;;;;;;;0.75;100;1;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__random_state': 42}";0,7036640813051618;0,6964428991709013;0,6959079967905857;0,6985825086921637;0,6814656325220647;0,713827226531158;0,7015244717838994;0,6822679860925381;0,6942215088282504;0,7019796682718031;0,6969883979988526;0,009181002741168938;189
5,630857610702515;0,29444255163125677;0,07057726383209229;0,0217095570507107;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6991174110724793;0,6983150575020058;0,6908264241775876;0,6985825086921637;0,6878844610858519;0,7087456539181599;0,6985825086921637;0,690291521797272;0,6926163723916533;0,7046548956661316;0,6969616814995468;0,006270490912921588;190
12,257150864601135;5,106537053018571;0,023302149772644044;0,005172500066415303;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,704733886065793;0,6956405456004279;0,6993848622626371;0,6985825086921637;0,6852099491842739;0,6999197646429527;0,6849424979941161;0,6996523134527949;0,6952915997859818;0,7054574638844302;0,6968815391565572;0,006664146259878491;191
12,297530341148377;5,122520747792849;0,030442404747009277;0,015001958382248354;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);constant;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,704733886065793;0,6956405456004279;0,6993848622626371;0,6985825086921637;0,6852099491842739;0,6999197646429527;0,6849424979941161;0,6996523134527949;0,6952915997859818;0,7054574638844302;0,6968815391565572;0,006664146259878491;191
12,346844100952149;5,232062828569433;0,030259537696838378;0,012085831911934873;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);constant;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,704733886065793;0,6956405456004279;0,6993848622626371;0,6985825086921637;0,6852099491842739;0,6999197646429527;0,6849424979941161;0,6996523134527949;0,6952915997859818;0,7054574638844302;0,6968815391565572;0,006664146259878491;191
12,308040571212768;5,1178174190713674;0,024574780464172365;0,008511614969797065;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,704733886065793;0,6956405456004279;0,6993848622626371;0,6985825086921637;0,6852099491842739;0,6999197646429527;0,6849424979941161;0,6996523134527949;0,6952915997859818;0,7054574638844302;0,6968815391565572;0,006664146259878491;191
12,303430366516114;5,068456682870843;0,02292461395263672;0,004219508921111389;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,704733886065793;0,6956405456004279;0,6993848622626371;0,6985825086921637;0,6852099491842739;0,6999197646429527;0,6849424979941161;0,6996523134527949;0,6952915997859818;0,7054574638844302;0,6968815391565572;0,006664146259878491;191
12,243293499946594;5,119845129610409;0,024688196182250977;0,00514065535034939;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,704733886065793;0,6956405456004279;0,6993848622626371;0,6985825086921637;0,6852099491842739;0,6999197646429527;0,6849424979941161;0,6996523134527949;0,6952915997859818;0,7054574638844302;0,6968815391565572;0,006664146259878491;191
12,300429916381836;5,154927464935063;0,022313189506530762;0,0037587868941618054;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);constant;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,704733886065793;0,6956405456004279;0,6993848622626371;0,6985825086921637;0,6852099491842739;0,6999197646429527;0,6849424979941161;0,6996523134527949;0,6952915997859818;0,7054574638844302;0,6968815391565572;0,006664146259878491;191
12,300797295570373;5,118891082543265;0,03193104267120361;0,013102983351750261;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);constant;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,704733886065793;0,6956405456004279;0,6993848622626371;0,6985825086921637;0,6852099491842739;0,6999197646429527;0,6849424979941161;0,6996523134527949;0,6952915997859818;0,7054574638844302;0,6968815391565572;0,006664146259878491;191
98,82235975265503;1,8220750008143638;0,6548574686050415;0,05845679659417167;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42)";balanced;entropy;7;;;42;;;;;;;;;;;;;;0.75;1000;1;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__random_state': 42}";0,704733886065793;0,6969778015512169;0,691628777748061;0,6972452527413747;0,6817330837122225;0,7111527146295801;0,7052687884461086;0,6852099491842739;0,6899411449973247;0,7046548956661316;0,6968546294742086;0,009152559338651545;199
5,509478497505188;0,046963682405263135;0,0718564510345459;0,023008108793445847;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6991174110724793;0,6983150575020058;0,6908264241775876;0,6985825086921637;0,6878844610858519;0,7087456539181599;0,6985825086921637;0,6884193634661674;0,6926163723916533;0,7046548956661316;0,6967744656664365;0,006490918518501054;200
59,98229858875275;20,00366042440372;0,11543171405792237;0,014081725593790069;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);constant;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,7028617277346885;0,6953730944102702;0,686279753944905;0,6943032896496389;0,6964428991709013;0,7039315324953196;0,6956405456004279;0,6985825086921637;0,6784376672017122;0,7035848047084002;0,6955437823608428;0,007606745059209043;201
59,9081433057785;19,971516848071477;0,11357009410858154;0,010882112967085699;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);adaptive;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,7028617277346885;0,6953730944102702;0,686279753944905;0,6943032896496389;0,6964428991709013;0,7039315324953196;0,6956405456004279;0,6985825086921637;0,6784376672017122;0,7035848047084002;0,6955437823608428;0,007606745059209043;201
59,91366741657257;19,974847649462845;0,11718308925628662;0,012751243445116085;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);adaptive;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,7028617277346885;0,6953730944102702;0,686279753944905;0,6943032896496389;0,6964428991709013;0,7039315324953196;0,6956405456004279;0,6985825086921637;0,6784376672017122;0,7035848047084002;0,6955437823608428;0,007606745059209043;201
59,947665333747864;19,976290756249973;0,11444275379180908;0,016049044273420115;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);adaptive;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,7028617277346885;0,6953730944102702;0,686279753944905;0,6943032896496389;0,6964428991709013;0,7039315324953196;0,6956405456004279;0,6985825086921637;0,6784376672017122;0,7035848047084002;0,6955437823608428;0,007606745059209043;201
60,10376155376434;20,003410976181875;0,11606287956237793;0,014795539811221484;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);adaptive;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,7028617277346885;0,6953730944102702;0,686279753944905;0,6943032896496389;0,6964428991709013;0,7039315324953196;0,6956405456004279;0,6985825086921637;0,6784376672017122;0,7035848047084002;0,6955437823608428;0,007606745059209043;201
59,931411385536194;19,940899256118573;0,10982296466827393;0,007170752876335117;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);constant;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,7028617277346885;0,6953730944102702;0,686279753944905;0,6943032896496389;0,6964428991709013;0,7039315324953196;0,6956405456004279;0,6985825086921637;0,6784376672017122;0,7035848047084002;0,6955437823608428;0,007606745059209043;201
60,09441125392914;20,08063898894481;0,11407129764556885;0,012618549309860937;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);constant;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,7028617277346885;0,6953730944102702;0,686279753944905;0,6943032896496389;0,6964428991709013;0,7039315324953196;0,6956405456004279;0,6985825086921637;0,6784376672017122;0,7035848047084002;0,6955437823608428;0,007606745059209043;201
59,93415780067444;20,0060156231347;0,11221413612365723;0,010057559277499545;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);constant;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,7028617277346885;0,6953730944102702;0,686279753944905;0,6943032896496389;0,6964428991709013;0,7039315324953196;0,6956405456004279;0,6985825086921637;0,6784376672017122;0,7035848047084002;0,6955437823608428;0,007606745059209043;201
0,7233349800109863;0,033538500080247724;0,03942437171936035;0,010253444615050199;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6935009360791655;0,6940358384594811;0,6860123027547472;0,6935009360791655;0,6836052420433271;0,7095480074886333;0,698047606311848;0,6892217170366408;0,6888710540395934;0,704119850187266;0,6940463490479867;0,007628927370110389;209
0,7213526248931885;0,025741545808017078;0,042547082901000975;0,015144240814577539;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6953730944102702;0,6932334848890077;0,6913613265579032;0,69296603369885;0,6828028884728538;0,7111527146295801;0,6991174110724793;0,6865472051350628;0,6848582129481006;0,7030497592295345;0,6940462131043642;0,008229681930209913;210
0,7179479122161865;0,034662203007470416;0,034255051612854005;0,0076510655760693175;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,691628777748061;0,6940358384594811;0,6876170098956941;0,6943032896496389;0,6828028884728538;0,7095480074886333;0,6983150575020058;0,688954265846483;0,6888710540395934;0,704119850187266;0,694019603928971;0,007657461301209536;211
0,7110490083694458;0,03242430836916203;0,04044320583343506;0,011513289454942356;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,691628777748061;0,6940358384594811;0,6876170098956941;0,6943032896496389;0,6828028884728538;0,7095480074886333;0,6983150575020058;0,688954265846483;0,6888710540395934;0,704119850187266;0,694019603928971;0,007657461301209536;211
0,7540750503540039;0,058198245043013554;0,04585974216461182;0,014184290814091048;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6924311313185344;0,6951056432201124;0,6833377908531693;0,6937683872693233;0,6830703396630114;0,710082909868949;0,6999197646429527;0,6897566194169564;0,6869983948635634;0,7043873729266987;0,6938858354043271;0,008398673446495314;213
0,7382326602935791;0,043778971922494525;0,03922629356384277;0,015051225786670522;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6924311313185344;0,6951056432201124;0,6833377908531693;0,6937683872693233;0,6830703396630114;0,710082909868949;0,6999197646429527;0,6897566194169564;0,6869983948635634;0,7043873729266987;0,6938858354043271;0,008398673446495314;213
0,7078572511672974;0,0419369506924771;0,04203343391418457;0,013989992186096468;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6953730944102702;0,6932334848890077;0,6878844610858519;0,6937683872693233;0,6806632789515913;0,7111527146295801;0,6991174110724793;0,6854774003744316;0,6851257356875334;0,7030497592295345;0,6934845727599603;0,008768276906519488;215
0,7577523708343505;0,0861322107551245;0,04402174949645996;0,01268898995028752;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6953730944102702;0,6932334848890077;0,6878844610858519;0,6937683872693233;0,6806632789515913;0,7111527146295801;0,6991174110724793;0,6854774003744316;0,6851257356875334;0,7030497592295345;0,6934845727599603;0,008768276906519488;215
0,706829023361206;0,03290088553790319;0,04242000579833984;0,010050441807568707;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6937683872693233;0,691628777748061;0,686279753944905;0,691628777748061;0,6782562182401711;0,713827226531158;0,6972452527413747;0,6873495587055363;0,6840556447298021;0,7054574638844302;0,6929497061542823;0,009928642168540969;217
0,7095072507858277;0,022536302085130324;0,04248363971710205;0,01828922725266906;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6945707408397968;0,6918962289382188;0,6833377908531693;0,69296603369885;0,6822679860925381;0,710082909868949;0,6975127039315325;0,6881519122760096;0,6869983948635634;0,7009095773140717;0,6928694278676699;0,008039437460336859;218
0,7251207828521729;0,08065387297324787;0,03691022396087647;0,008995636454892588;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6937683872693233;0,691628777748061;0,686279753944905;0,691628777748061;0,6782562182401711;0,713827226531158;0,6967103503610591;0,6873495587055363;0,6835205992509363;0,7054574638844302;0,6928427113683642;0,009955698503909932;219
0,7001154899597168;0,018522542332965703;0,040352249145507814;0,008980869679109374;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.2;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.2, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,69296603369885;0,690291521797272;0,6846750468039583;0,691628777748061;0,6793260230008024;0,710082909868949;0,6999197646429527;0,6868146563252207;0,6835205992509363;0,7025147137506688;0,6921740046887671;0,009038989509318513;220
22,501125311851503;4,206523804366214;0,02631809711456299;0,012319779935156467;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);adaptive;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6913613265579032;0,6841401444236427;0,6844075956138005;0,690291521797272;0,6900240706071142;0,7090131051083177;0,6905589729874297;0,6833377908531693;0,6915462814339219;0,6942215088282504;0,6908902318210821;0,006971616111262562;221
22,511437606811523;4,1494898162366125;0,0395092248916626;0,022915723754506036;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);adaptive;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6913613265579032;0,6841401444236427;0,6844075956138005;0,690291521797272;0,6900240706071142;0,7090131051083177;0,6905589729874297;0,6833377908531693;0,6915462814339219;0,6942215088282504;0,6908902318210821;0,006971616111262562;221
22,527363348007203;4,099058936016113;0,02750265598297119;0,009539150453515452;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6913613265579032;0,6841401444236427;0,6844075956138005;0,690291521797272;0,6900240706071142;0,7090131051083177;0,6905589729874297;0,6833377908531693;0,6915462814339219;0,6942215088282504;0,6908902318210821;0,006971616111262562;221
22,649486351013184;4,247591874969505;0,023917531967163085;0,005169556341044703;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);adaptive;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6913613265579032;0,6841401444236427;0,6844075956138005;0,690291521797272;0,6900240706071142;0,7090131051083177;0,6905589729874297;0,6833377908531693;0,6915462814339219;0,6942215088282504;0,6908902318210821;0,006971616111262562;221
22,667672038078308;4,199892816876551;0,02693221569061279;0,012031988201898557;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);constant;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6913613265579032;0,6841401444236427;0,6844075956138005;0,690291521797272;0,6900240706071142;0,7090131051083177;0,6905589729874297;0,6833377908531693;0,6915462814339219;0,6942215088282504;0,6908902318210821;0,006971616111262562;221
22,552775049209593;4,160012955027169;0,029405951499938965;0,010397382531527374;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);constant;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6913613265579032;0,6841401444236427;0,6844075956138005;0,690291521797272;0,6900240706071142;0,7090131051083177;0,6905589729874297;0,6833377908531693;0,6915462814339219;0,6942215088282504;0,6908902318210821;0,006971616111262562;221
22,551824426651002;4,179120198686242;0,021976375579833986;0,004158424133329326;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);constant;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6913613265579032;0,6841401444236427;0,6844075956138005;0,690291521797272;0,6900240706071142;0,7090131051083177;0,6905589729874297;0,6833377908531693;0,6915462814339219;0,6942215088282504;0,6908902318210821;0,006971616111262562;221
22,622594237327576;4,044300949157245;0,02121293544769287;0,0007521919230784608;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);constant;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6913613265579032;0,6841401444236427;0,6844075956138005;0,690291521797272;0,6900240706071142;0,7090131051083177;0,6905589729874297;0,6833377908531693;0,6915462814339219;0,6942215088282504;0,6908902318210821;0,006971616111262562;221
6,032359790802002;2,2235133453876905;0,02184453010559082;0,0074693203325527854;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);adaptive;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6900240706071142;0,6876170098956941;0,6959079967905857;0,6951056432201124;0,6884193634661674;0,7028617277346885;0,688954265846483;0,6876170098956941;0,6784376672017122;0,6902086677367576;0,690515342239501;0,006102632216142291;229
6,0399311780929565;2,2611243484971477;0,025758194923400878;0,011988822856873539;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);adaptive;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6900240706071142;0,6876170098956941;0,6959079967905857;0,6951056432201124;0,6884193634661674;0,7028617277346885;0,688954265846483;0,6876170098956941;0,6784376672017122;0,6902086677367576;0,690515342239501;0,006102632216142291;229
6,038270449638366;2,217188433665866;0,03315160274505615;0,011622790806740124;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);adaptive;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6900240706071142;0,6876170098956941;0,6959079967905857;0,6951056432201124;0,6884193634661674;0,7028617277346885;0,688954265846483;0,6876170098956941;0,6784376672017122;0,6902086677367576;0,690515342239501;0,006102632216142291;229
6,036881327629089;2,2529430876828123;0,031198644638061525;0,013981673467360553;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);constant;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6900240706071142;0,6876170098956941;0,6959079967905857;0,6951056432201124;0,6884193634661674;0,7028617277346885;0,688954265846483;0,6876170098956941;0,6784376672017122;0,6902086677367576;0,690515342239501;0,006102632216142291;229
6,0732266664505;2,2437734013795456;0,03612499237060547;0,014773604798776542;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);constant;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6900240706071142;0,6876170098956941;0,6959079967905857;0,6951056432201124;0,6884193634661674;0,7028617277346885;0,688954265846483;0,6876170098956941;0,6784376672017122;0,6902086677367576;0,690515342239501;0,006102632216142291;229
6,0324383735656735;2,25654362137356;0,03305606842041016;0,017659852466323418;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);constant;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6900240706071142;0,6876170098956941;0,6959079967905857;0,6951056432201124;0,6884193634661674;0,7028617277346885;0,688954265846483;0,6876170098956941;0,6784376672017122;0,6902086677367576;0,690515342239501;0,006102632216142291;229
6,079898476600647;2,2456821969165213;0,028291773796081544;0,010552907528703012;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);constant;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6900240706071142;0,6876170098956941;0,6959079967905857;0,6951056432201124;0,6884193634661674;0,7028617277346885;0,688954265846483;0,6876170098956941;0,6784376672017122;0,6902086677367576;0,690515342239501;0,006102632216142291;229
6,006528568267822;2,2363862407449395;0,027485466003417967;0,01379807480059989;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);adaptive;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6900240706071142;0,6876170098956941;0,6959079967905857;0,6951056432201124;0,6884193634661674;0,7028617277346885;0,688954265846483;0,6876170098956941;0,6784376672017122;0,6902086677367576;0,690515342239501;0,006102632216142291;229
0,7603266477584839;0,10248982981993508;0,039431214332580566;0,012759900817971504;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6865472051350628;0,6873495587055363;0,6817330837122225;0,6894891682267986;0,6713024872960685;0,7092805562984755;0,6969778015512169;0,6836052420433271;0,6827180310326377;0,695024077046549;0,6884027211047895;0,009753073286250696;237
0,7066155195236206;0,028967697319140066;0,035185718536376955;0,017504198547208173;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6868146563252207;0,6892217170366408;0,6806632789515913;0,6908264241775876;0,6710350361059106;0,7060711420165819;0,6935009360791655;0,6852099491842739;0,6840556447298021;0,6960941680042804;0,6883492952611054;0,008927418769813294;238
0,7529964685440064;0,06860374614007876;0,052663350105285646;0,022228824932602923;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6868146563252207;0,6892217170366408;0,6806632789515913;0,6908264241775876;0,6710350361059106;0,7060711420165819;0,6935009360791655;0,6852099491842739;0,6840556447298021;0,6960941680042804;0,6883492952611054;0,008927418769813294;238
0,7131914138793946;0,024669280295773702;0,043984723091125486;0,01245368807400682;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6873495587055363;0,6878844610858519;0,6803958277614336;0,6905589729874297;0,6737095480074886;0,7060711420165819;0,6959079967905857;0,6836052420433271;0,6819154628143392;0,6958266452648475;0,6883224857477421;0,00880158907393594;240
0,7371181011199951;0,03771527433071775;0,04467761516571045;0,012077394024726813;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6873495587055363;0,6878844610858519;0,6803958277614336;0,6905589729874297;0,6737095480074886;0,7060711420165819;0,6959079967905857;0,6836052420433271;0,6819154628143392;0,6958266452648475;0,6883224857477421;0,00880158907393594;240
0,7599080324172973;0,10400501114512321;0,03620336055755615;0,011429560743454322;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6878844610858519;0,6876170098956941;0,6817330837122225;0,6908264241775876;0,6734420968173308;0,7066060443968976;0,6943032896496389;0,6822679860925381;0,6821829855537721;0,6958266452648475;0,6882690026646381;0,008789187845880729;242
0,734356951713562;0,06755320031835013;0,034653854370117185;0,00729330711030953;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6846750468039583;0,6881519122760096;0,6809307301417491;0,6905589729874297;0,6737095480074886;0,7068734955870554;0,6959079967905857;0,6836052420433271;0,6819154628143392;0,6958266452648475;0,688215505271679;0,008987163169662596;243
588,9111724376678;77,60596967552144;0,460101318359375;0,056995350467394505;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,7025942765445307;0,6860123027547472;0,6782562182401711;0,6822679860925381;0,6857448515645894;0,7036640813051618;0,6908264241775876;0,6779887670500133;0,6848582129481006;0,6899411449973247;0,6882154265674764;0,008465095951889219;244
0,7247057676315307;0,030042062589934842;0,045094537734985354;0,01969536969727841;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6849424979941161;0,6892217170366408;0,6822679860925381;0,6908264241775876;0,6734420968173308;0,7066060443968976;0,6940358384594811;0,6822679860925381;0,682450508293205;0,6958266452648475;0,6881887744625181;0,008779448769420132;245
0,7264231204986572;0,029213741932336855;0,043695831298828126;0,01752804583001175;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6849424979941161;0,6892217170366408;0,6822679860925381;0,6908264241775876;0,6734420968173308;0,7066060443968976;0,6937683872693233;0,6822679860925381;0,682450508293205;0,6958266452648475;0,6881620293435025;0,00876198593712692;246
0,7211790561676026;0,02893202759424951;0,037064528465270995;0,009968915239439761;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6865472051350628;0,6870821075153785;0,6806632789515913;0,6908264241775876;0,6710350361059106;0,7060711420165819;0,6935009360791655;0,6852099491842739;0,6840556447298021;0,6960941680042804;0,6881085891899634;0,00893390016720939;247
0,72822585105896;0,04568142416847473;0,050269365310668945;0,02624885729851172;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6865472051350628;0,6881519122760096;0,682535437282696;0,6894891682267986;0,6713024872960685;0,7092805562984755;0,6926985825086922;0,6836052420433271;0,682450508293205;0,695024077046549;0,6881085176406885;0,00941960241036613;248
0,7268292903900146;0,04245810404512226;0,04792706966400147;0,011085788192485166;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.1;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.1, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6865472051350628;0,6881519122760096;0,682535437282696;0,6894891682267986;0,6713024872960685;0,7092805562984755;0,6926985825086922;0,6836052420433271;0,682450508293205;0,695024077046549;0,6881085176406885;0,00941960241036613;248
586,8773437976837;95,2388396198837;0,4394263982772827;0,028598654012165887;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6996523134527949;0,6814656325220647;0,6793260230008024;0,6820005349023803;0,6822679860925381;0,7031291789248462;0,6932334848890077;0,6868146563252207;0,6797752808988764;0,6883360085607276;0,6876001099569259;0,008039950579729815;250
5,616834735870361;0,04486159178579966;0,0693063735961914;0,01935309410122002;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,686279753944905;0,6852099491842739;0,6787911206204867;0,688954265846483;0,6726397432468575;0,7044664348756352;0,6932334848890077;0,682535437282696;0,6837881219903692;0,6942215088282504;0,6870119820708965;0,008411152012495779;251
5,658652830123901;0,06240815880614862;0,05947790145874023;0,016012121891524716;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,686279753944905;0,6852099491842739;0,6787911206204867;0,688954265846483;0,6726397432468575;0,7044664348756352;0,6932334848890077;0,682535437282696;0,6837881219903692;0,6942215088282504;0,6870119820708965;0,008411152012495779;251
0,3569401979446411;0,046836322282191374;0,029175758361816406;0,0063723510092608725;DecisionTreeClassifier();balanced;gini;10;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6814656325220647;0,6846750468039583;0,6854774003744316;0,6817330837122225;0,6809307301417491;0,6940358384594811;0,7017919229740572;0,6809307301417491;0,6886035313001605;0,689673622257892;0,6869317538687767;0,006463299638218634;253
5,606835794448853;0,05393770240854398;0,07088320255279541;0,025079383968066967;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6865472051350628;0,6849424979941161;0,6785236694303289;0,6886868146563252;0,6726397432468575;0,7044664348756352;0,69296603369885;0,6822679860925381;0,6845906902086677;0,6934189406099518;0,6869050015948334;0,008338633110750986;254
5,657896947860718;0,04272558228811777;0,05455930233001709;0,014875964304019215;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6865472051350628;0,6849424979941161;0,6785236694303289;0,6886868146563252;0,6726397432468575;0,7044664348756352;0,6924311313185344;0,6822679860925381;0,6845906902086677;0,6934189406099518;0,6868515113568019;0,008301213218914038;255
5,637775826454162;0,0486554885648249;0,052198386192321776;0,008009955437267286;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6860123027547472;0,6841401444236427;0,6782562182401711;0,6886868146563252;0,6715699384862263;0,7044664348756352;0,6943032896496389;0,682535437282696;0,6840556447298021;0,6939539860888175;0,6867980211187701;0,008726431597492217;256
5,626662802696228;0,03878045902560539;0,057432150840759276;0,012971704147818472;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6865472051350628;0,6849424979941161;0,6774538646696978;0,6892217170366408;0,6721048408665419;0,7041989836854774;0,69296603369885;0,6817330837122225;0,6840556447298021;0,6944890315676833;0,6867712903096095;0,008635621432682278;257
5,618809628486633;0,03548924397416233;0,05485446453094482;0,015020037508123469;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,686279753944905;0,6844075956138005;0,6785236694303289;0,6886868146563252;0,6718373896763841;0,7055362396362663;0,6937683872693233;0,6820005349023803;0,6829855537720706;0,6936864633493847;0,6867712402251168;0,008868690703564568;258
0,3168250322341919;0,032308834805869324;0,02655510902404785;0,006665297668022508;DecisionTreeClassifier();;gini;10;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6814656325220647;0,6846750468039583;0,6836052420433271;0,6814656325220647;0,6811981813319069;0,6940358384594811;0,7017919229740572;0,6809307301417491;0,6886035313001605;0,689673622257892;0,6867445380356663;0,006527299140794558;259
5,679992771148681;0,0571184676793912;0,06118044853210449;0,018167692444079234;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6857448515645894;0,6841401444236427;0,6779887670500133;0,6884193634661674;0,6715699384862263;0,7052687884461086;0,6935009360791655;0,6828028884728538;0,6840556447298021;0,6939539860888175;0,6867445308807387;0,008837753865640376;260
5,85470609664917;0,5946817731275112;0,06336464881896972;0,015744446445291566;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6857448515645894;0,6844075956138005;0,6790585718106446;0,6886868146563252;0,6726397432468575;0,7044664348756352;0,6926985825086922;0,6820005349023803;0,6840556447298021;0,6936864633493847;0,6867445237258112;0,008340831717716924;261
5,678094911575317;0,050387674634420045;0,05542402267456055;0,013180964774631957;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,686279753944905;0,6841401444236427;0,6779887670500133;0,6884193634661674;0,6715699384862263;0,7052687884461086;0,6935009360791655;0,6828028884728538;0,6832530765115035;0,6939539860888175;0,6867177642969403;0,008861312392309792;262
5,604087781906128;0,07173743986350713;0,058674740791320804;0,00809516274504256;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,686279753944905;0,6844075956138005;0,6785236694303289;0,6886868146563252;0,6713024872960685;0,7055362396362663;0,6937683872693233;0,6820005349023803;0,6829855537720706;0,6936864633493847;0,6867177499870853;0,008959746429823426;263
165,42818236351013;101,19734384453022;0,13169994354248046;0,00701786146168002;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6926985825086922;0,6755817063385932;0,6836052420433271;0,7015244717838994;0,6750468039582777;0,6961754479807435;0,6964428991709013;0,691628777748061;0,6819154628143392;0,6717495987158909;0,6866368993062726;0,00990003253007272;264
5,736955285072327;0,06035367910093397;0,06412560939788818;0,01334063028224807;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;1000;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6860123027547472;0,6844075956138005;0,6782562182401711;0,6884193634661674;0,6718373896763841;0,704733886065793;0,6926985825086922;0,6822679860925381;0,6835205992509363;0,693151417870519;0,6865305341539749;0,00856252225162712;265
0,34167144298553465;0,051235121499435224;0,028914642333984376;0,004928222664235771;DecisionTreeClassifier();;gini;10;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6852099491842739;0,6844075956138005;0,6830703396630114;0,682535437282696;0,6793260230008024;0,6943032896496389;0,7001872158331105;0,6774538646696978;0,6872659176029963;0,6902086677367576;0,6863968300236786;0,0065519984548431335;266
0,4206505298614502;0,06050830912137266;0,027921652793884276;0,006111449985718877;DecisionTreeClassifier();;gini;10;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6846750468039583;0,6841401444236427;0,6838726932334849;0,682535437282696;0,679860925381118;0,6943032896496389;0,6999197646429527;0,6779887670500133;0,6861958266452648;0,6904761904761905;0,686396808558896;0,006362513723708236;267
0,33083879947662354;0,03382535515004908;0,02701098918914795;0,005678159497053524;DecisionTreeClassifier();balanced;gini;10;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6852099491842739;0,6844075956138005;0,6820005349023803;0,6833377908531693;0,6790585718106446;0,6943032896496389;0,7001872158331105;0,6774538646696978;0,6867308721241305;0,6902086677367576;0,6862898352377604;0,006596147289530635;268
0,43088293075561523;0,07737581502022124;0,027707767486572266;0,004657869335630789;DecisionTreeClassifier();balanced;gini;10;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6846750468039583;0,6830703396630114;0,6828028884728538;0,6830703396630114;0,679860925381118;0,6940358384594811;0,7001872158331105;0,6779887670500133;0,6861958266452648;0,6904761904761905;0,6862363378448013;0,006452742047777301;269
1046,0111934900283;226,62951755432573;0,4594864368438721;0,05730323721010146;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6852099491842739;0,6844075956138005;0,6894891682267986;0,6838726932334849;0,6718373896763841;0,6953730944102702;0,6892217170366408;0,6841401444236427;0,6848582129481006;0,6926163723916533;0,686102633714505;0,006058938347180016;270
574,0485329627991;69,01796562849775;0,4369323968887329;0,026073257391521457;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6870821075153785;0,679860925381118;0,6878844610858519;0,6833377908531693;0,6747793527681198;0,6852099491842739;0,670500133725595;0,686279753944905;0,7001070090957732;0,7014446227929374;0,6856486106347123;0,009233949860966486;271
71,09100105762482;54,81642632551135;0,096461820602417;0,047135801776237135;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,69296603369885;0,6721048408665419;0,682535437282696;0,6884193634661674;0,6838726932334849;0,6926985825086922;0,6782562182401711;0,6844075956138005;0,6915462814339219;0,6888710540395934;0,685567810038392;0,006391339797196251;272
71,14931519031525;54,915750525072085;0,09445803165435791;0,04177850885483784;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);adaptive;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,69296603369885;0,6721048408665419;0,682535437282696;0,6884193634661674;0,6838726932334849;0,6926985825086922;0,6782562182401711;0,6844075956138005;0,6915462814339219;0,6888710540395934;0,685567810038392;0,006391339797196251;272
71,09019899368286;54,64345862207347;0,1266400098800659;0,04839653877500939;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);adaptive;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,69296603369885;0,6721048408665419;0,682535437282696;0,6884193634661674;0,6838726932334849;0,6926985825086922;0,6782562182401711;0,6844075956138005;0,6915462814339219;0,6888710540395934;0,685567810038392;0,006391339797196251;272
71,09911210536957;54,9323226367077;0,1130708932876587;0,05905979534732863;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);adaptive;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,69296603369885;0,6721048408665419;0,682535437282696;0,6884193634661674;0,6838726932334849;0,6926985825086922;0,6782562182401711;0,6844075956138005;0,6915462814339219;0,6888710540395934;0,685567810038392;0,006391339797196251;272
71,0798525094986;54,66210294688452;0,09121909141540527;0,04176665547656294;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);constant;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,69296603369885;0,6721048408665419;0,682535437282696;0,6884193634661674;0,6838726932334849;0,6926985825086922;0,6782562182401711;0,6844075956138005;0,6915462814339219;0,6888710540395934;0,685567810038392;0,006391339797196251;272
71,12723536491394;54,84850679153422;0,09074988365173339;0,043264229553021456;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);constant;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,69296603369885;0,6721048408665419;0,682535437282696;0,6884193634661674;0,6838726932334849;0,6926985825086922;0,6782562182401711;0,6844075956138005;0,6915462814339219;0,6888710540395934;0,685567810038392;0,006391339797196251;272
71,47220568656921;55,03180819499861;0,10741946697235108;0,06580342261328871;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);constant;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,69296603369885;0,6721048408665419;0,682535437282696;0,6884193634661674;0,6838726932334849;0,6926985825086922;0,6782562182401711;0,6844075956138005;0,6915462814339219;0,6888710540395934;0,685567810038392;0,006391339797196251;272
71,36380932331085;54,881795486042016;0,09992661476135253;0,04922295409540014;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);constant;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,69296603369885;0,6721048408665419;0,682535437282696;0,6884193634661674;0,6838726932334849;0,6926985825086922;0,6782562182401711;0,6844075956138005;0,6915462814339219;0,6888710540395934;0,685567810038392;0,006391339797196251;272
611,733056974411;64,43676254690487;0,45085623264312746;0,016042873166305587;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6865472051350628;0,6849424979941161;0,6894891682267986;0,6811981813319069;0,6769189622893822;0,6849424979941161;0,6707675849157528;0,6849424979941161;0,6963616907437132;0,6993044408774746;0,6855414727502439;0,007972754525988345;280
0,3907590389251709;0,07328683815398046;0,029265999794006348;0,004335003615564303;DecisionTreeClassifier();;gini;10;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6844075956138005;0,6830703396630114;0,6814656325220647;0,6841401444236427;0,6787911206204867;0,6935009360791655;0,6999197646429527;0,6726397432468575;0,6856607811663992;0,689673622257892;0,6853269680236274;0,00724366864444328;281
0,32281105518341063;0,05100764206928887;0,02968780994415283;0,004791725830220611;DecisionTreeClassifier();;gini;10;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6838726932334849;0,6836052420433271;0,6814656325220647;0,6849424979941161;0,6790585718106446;0,691628777748061;0,7001872158331105;0,6729071944370153;0,6867308721241305;0,687800963081862;0,6852199660827816;0,0069440436813264315;282
10,619532704353333;5,125998223677863;0,03596470355987549;0,006823510529172726;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);constant;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6892217170366408;0,6878844610858519;0,6795934741909602;0,6897566194169564;0,6707675849157528;0,7028617277346885;0,6886868146563252;0,6782562182401711;0,6781701444622793;0,6869983948635634;0,6852197156603188;0,008419209408314624;283
10,628558731079101;5,269199557695809;0,04643833637237549;0,01689414122962516;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);constant;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6892217170366408;0,6878844610858519;0,6795934741909602;0,6897566194169564;0,6707675849157528;0,7028617277346885;0,6886868146563252;0,6782562182401711;0,6781701444622793;0,6869983948635634;0,6852197156603188;0,008419209408314624;283
10,673951363563537;5,292687071808341;0,04647154808044433;0,015361852991780754;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);constant;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6892217170366408;0,6878844610858519;0,6795934741909602;0,6897566194169564;0,6707675849157528;0,7028617277346885;0,6886868146563252;0,6782562182401711;0,6781701444622793;0,6869983948635634;0,6852197156603188;0,008419209408314624;283
10,605051803588868;5,155815173188161;0,040446138381958006;0,011271659770673494;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);adaptive;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6892217170366408;0,6878844610858519;0,6795934741909602;0,6897566194169564;0,6707675849157528;0,7028617277346885;0,6886868146563252;0,6782562182401711;0,6781701444622793;0,6869983948635634;0,6852197156603188;0,008419209408314624;283
10,579120469093322;5,126941813494302;0,06525449752807617;0,057165747215302314;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);adaptive;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6892217170366408;0,6878844610858519;0,6795934741909602;0,6897566194169564;0,6707675849157528;0,7028617277346885;0,6886868146563252;0,6782562182401711;0,6781701444622793;0,6869983948635634;0,6852197156603188;0,008419209408314624;283
10,59178614616394;5,156314310864572;0,038088011741638186;0,006041288109622445;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);adaptive;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6892217170366408;0,6878844610858519;0,6795934741909602;0,6897566194169564;0,6707675849157528;0,7028617277346885;0,6886868146563252;0,6782562182401711;0,6781701444622793;0,6869983948635634;0,6852197156603188;0,008419209408314624;283
10,60029616355896;5,115163735865326;0,03706705570220947;0,01142406246493242;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);adaptive;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6892217170366408;0,6878844610858519;0,6795934741909602;0,6897566194169564;0,6707675849157528;0,7028617277346885;0,6886868146563252;0,6782562182401711;0,6781701444622793;0,6869983948635634;0,6852197156603188;0,008419209408314624;283
10,604069471359253;5,146918474082396;0,04101393222808838;0,007126078966867607;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);constant;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6892217170366408;0,6878844610858519;0,6795934741909602;0,6897566194169564;0,6707675849157528;0,7028617277346885;0,6886868146563252;0,6782562182401711;0,6781701444622793;0,6869983948635634;0,6852197156603188;0,008419209408314624;283
0,3622532606124878;0,07943849442244866;0,030009651184082033;0,005944757461861483;DecisionTreeClassifier();balanced;gini;10;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6841401444236427;0,6820005349023803;0,6817330837122225;0,6833377908531693;0,6787911206204867;0,6940358384594811;0,6993848622626371;0,6723722920566997;0,6853932584269663;0,689673622257892;0,6850862547975579;0,007291602375976932;291
0,3241316556930542;0,03978781278704827;0,024667739868164062;0,003336396535096546;DecisionTreeClassifier();balanced;gini;10;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6795934741909602;0,6822679860925381;0,6828028884728538;0,6841401444236427;0,6806632789515913;0,6910938753677454;0,6967103503610591;0,675849157528751;0,6891385767790262;0,6883360085607276;0,6850595740728895;0,00589317437483844;292
0,3416703224182129;0,04675668609255866;0,025577211380004884;0,0032379292063702;DecisionTreeClassifier();balanced;gini;10;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6838726932334849;0,6836052420433271;0,6803958277614336;0,6849424979941161;0,6793260230008024;0,691628777748061;0,6993848622626371;0,6729071944370153;0,6869983948635634;0,6875334403424291;0,685059495368687;0,006812410013474069;293
855,6113376379013;147,2155988516258;0,6175220966339111;0,013121172632518227;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,682535437282696;0,6870821075153785;0,6948381920299546;0,6836052420433271;0,67718641347954;0,6876170098956941;0,6755817063385932;0,6935009360791655;0,6768325307651151;0,6904761904761905;0,6849255765905654;0,006592848288001977;294
0,3645942211151123;0,057223475672356264;0,0298412561416626;0,006117689054386434;DecisionTreeClassifier();;gini;10;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6790585718106446;0,6822679860925381;0,6822679860925381;0,6838726932334849;0,6801283765712758;0,6910938753677454;0,6975127039315325;0,675849157528751;0,6891385767790262;0,6875334403424291;0,6848723367749966;0,006132340969249031;295
0,34266128540039065;0,03789007815908285;0,0300400972366333;0,004492944267764434;DecisionTreeClassifier();;gini;7;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6908264241775876;0,6910938753677454;0,6787911206204867;0,6844075956138005;0,6769189622893822;0,6972452527413747;0,688954265846483;0,6654185611125969;0,6803103263777421;0,6915462814339219;0,6845512665581122;0,008872064227359871;296
0,36863079071044924;0,05653798093403648;0,03893060684204101;0,008562499368339362;DecisionTreeClassifier();;gini;10;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,686279753944905;0,6809307301417491;0,6811981813319069;0,6814656325220647;0,6817330837122225;0,6948381920299546;0,6969778015512169;0,670500133725595;0,6861958266452648;0,6851257356875334;0,6845245071292413;0,007109879032344409;297
0,3296449899673462;0,025960173367972388;0,03576457500457764;0,009493894863137424;DecisionTreeClassifier();;gini;7;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,690291521797272;0,6910938753677454;0,6785236694303289;0,6841401444236427;0,6769189622893822;0,6975127039315325;0,6886868146563252;0,6659534634929125;0,6800428036383093;0,6918138041733547;0,6844977763200806;0,008800745715037233;298
593,0382746696472;152,64460148861997;0,4593261957168579;0,04851965852006188;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6943032896496389;0,6878844610858519;0,6763840599090666;0,6945707408397968;0,6670232682535437;0,6884193634661674;0,6983150575020058;0,6940358384594811;0,6698769395398609;0,6741573033707865;0,6844970322076199;0,010946406458522413;299
0,3341029405593872;0,04060315074543907;0,03363301753997803;0,006198314756651758;DecisionTreeClassifier();;gini;7;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6908264241775876;0,6910938753677454;0,6769189622893822;0,6841401444236427;0,6766515110992244;0,6977801551216903;0,688954265846483;0,6662209146830703;0,680577849117175;0,6912787586944891;0,684444286082049;0,008912547351691799;300
0,32017037868499754;0,032093097253636266;0,027474164962768555;0,004783242442727301;DecisionTreeClassifier();balanced;gini;10;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6844075956138005;0,6809307301417491;0,6777213158598556;0,6817330837122225;0,6793260230008024;0,6940358384594811;0,6964428991709013;0,6769189622893822;0,6869983948635634;0,6853932584269663;0,6843908101538725;0,006253658929645453;301
0,3435101270675659;0,04530311288799818;0,029392576217651366;0,0035066979280212653;DecisionTreeClassifier();balanced;gini;10;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6873495587055363;0,679860925381118;0,6801283765712758;0,6822679860925381;0,6811981813319069;0,6935009360791655;0,6953730944102702;0,6729071944370153;0,6856607811663992;0,6853932584269663;0,6843640292602192;0,006326378098314893;302
0,2983861923217773;0,02701177280237783;0,03474152088165283;0,008051614884207125;DecisionTreeClassifier();;gini;7;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6900240706071142;0,6905589729874297;0,6769189622893822;0,6844075956138005;0,675849157528751;0,6993848622626371;0,6878844610858519;0,6667558170633859;0,6800428036383093;0,6915462814339219;0,6843372984510584;0,009036957173503267;303
0,29009993076324464;0,04909102440773566;0,02761702537536621;0,008955318430096731;DecisionTreeClassifier();;entropy;7;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6940358384594811;0,6865472051350628;0,6828028884728538;0,6801283765712758;0,6715699384862263;0,6913613265579032;0,6908264241775876;0,6713024872960685;0,6845906902086677;0,6891385767790262;0,6842303752144153;0,007525785435798068;304
0,36268885135650636;0,05064750943054862;0,03055891990661621;0,006141486677395808;DecisionTreeClassifier();balanced;entropy;7;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6940358384594811;0,6865472051350628;0,6828028884728538;0,6801283765712758;0,6715699384862263;0,6913613265579032;0,6908264241775876;0,6713024872960685;0,6845906902086677;0,6891385767790262;0,6842303752144153;0,007525785435798068;304
0,3406663417816162;0,039850500128398525;0,029610347747802735;0,00673471147546141;DecisionTreeClassifier();;gini;10;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6846750468039583;0,6814656325220647;0,6785236694303289;0,6822679860925381;0,6774538646696978;0,6937683872693233;0,6967103503610591;0,6763840599090666;0,685928303905832;0,6851257356875334;0,6842303036651403;0,006341552189882534;306
0,3462366580963135;0,024051458972919496;0,03297569751739502;0,005795731200271963;DecisionTreeClassifier();;gini;7;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6897566194169564;0,6905589729874297;0,6790585718106446;0,6838726932334849;0,6766515110992244;0,6969778015512169;0,6878844610858519;0,6656860123027547;0,6800428036383093;0,6912787586944891;0,6841768205820362;0,008612982032084316;307
0,299054479598999;0,028390787029283587;0,033835840225219724;0,00576176330532573;DecisionTreeClassifier();;gini;7;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6897566194169564;0,6905589729874297;0,6769189622893822;0,6841401444236427;0,6763840599090666;0,6975127039315325;0,6878844610858519;0,6670232682535437;0,6803103263777421;0,6910112359550562;0,6841500754630204;0,008560137812085783;308
0,3492795705795288;0,03325543130877203;0,026172637939453125;0,006366812516249146;DecisionTreeClassifier();balanced;entropy;10;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6892217170366408;0,6820005349023803;0,6822679860925381;0,6785236694303289;0,6763840599090666;0,6926985825086922;0,6956405456004279;0,6750468039582777;0,6819154628143392;0,6869983948635634;0,6840697757116254;0,006533537641083758;309
0,29860744476318357;0,012845005801220236;0,026565408706665038;0,0028442650664407742;DecisionTreeClassifier();balanced;gini;10;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6777213158598556;0,6820005349023803;0,6828028884728538;0,6790585718106446;0,6803958277614336;0,6932334848890077;0,6951056432201124;0,6742444503878042;0,6867308721241305;0,6891385767790262;0,6840432166207249;0,0064797209906425944;310
598,8637122154236;145,1546790276315;0,4515492916107178;0,03615722343574625;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6999197646429527;0,6785236694303289;0,6761166087189088;0,6846750468039583;0,6774538646696978;0,6961754479807435;0,6691628777748061;0,6828028884728538;0,6730872124130551;0,7025147137506688;0,6840432094657973;0,011047914870732244;311
0,35651378631591796;0,03489815440370512;0,03621823787689209;0,009788233662070546;DecisionTreeClassifier();;gini;7;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6892217170366408;0,6905589729874297;0,6785236694303289;0,6836052420433271;0,6761166087189088;0,6972452527413747;0,6873495587055363;0,6662209146830703;0,6800428036383093;0,6915462814339219;0,6840431021418848;0,008590225089565518;312
0,3321967601776123;0,04506884410397337;0,023878645896911622;0,002631234122122629;DecisionTreeClassifier();;entropy;10;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6892217170366408;0,6820005349023803;0,6822679860925381;0,6785236694303289;0,6763840599090666;0,6924311313185344;0,6956405456004279;0,6750468039582777;0,6819154628143392;0,6867308721241305;0,6840162783186663;0,0064869338380137715;313
823,5953033208847;158,17770383601476;0,6086115837097168;0,05165907368787011;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6721048408665419;0,6849424979941161;0,675849157528751;0,6926985825086922;0,6753142551484355;0,6959079967905857;0,6969778015512169;0,6830703396630114;0,678705189941145;0,6845906902086677;0,6840161352201164;0,008362990862099219;314
0,31868724822998046;0,03937092329110284;0,029173564910888673;0,004303981929485722;DecisionTreeClassifier();balanced;entropy;7;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6940358384594811;0,6849424979941161;0,682535437282696;0,6801283765712758;0,6718373896763841;0,6910938753677454;0,6908264241775876;0,6707675849157528;0,6845906902086677;0,6891385767790262;0,6839896691432733;0,007519591881095878;315
0,3024528741836548;0,03460718849810768;0,033478808403015134;0,009136890476026258;DecisionTreeClassifier();;entropy;7;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6940358384594811;0,6849424979941161;0,682535437282696;0,6801283765712758;0,6718373896763841;0,6910938753677454;0,6908264241775876;0,6707675849157528;0,6845906902086677;0,6891385767790262;0,6839896691432733;0,007519591881095878;315
581,2922217845917;94,69678535846346;0,4451392412185669;0,023736797968925503;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6886868146563252;0,6721048408665419;0,6611393420700722;0,6836052420433271;0,6822679860925381;0,7066060443968976;0,6972452527413747;0,682535437282696;0,6771000535045479;0,6886035313001605;0,6839894544954481;0,01202764310597682;317
0,36653058528900145;0,04264891369645715;0,0312859058380127;0,009640156954389618;DecisionTreeClassifier();balanced;entropy;7;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6940358384594811;0,6846750468039583;0,682535437282696;0,6801283765712758;0,6718373896763841;0,6910938753677454;0,6908264241775876;0,6707675849157528;0,6845906902086677;0,6891385767790262;0,6839629240242575;0,007516630410544915;318
0,37869226932525635;0,04711754868520398;0,031084680557250978;0,010197508227356385;DecisionTreeClassifier();;entropy;7;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6940358384594811;0,6846750468039583;0,682535437282696;0,6801283765712758;0,6718373896763841;0,6910938753677454;0,6908264241775876;0,6707675849157528;0,6845906902086677;0,6891385767790262;0,6839629240242575;0,007516630410544915;318
0,28092806339263915;0,04969189671513126;0,03852372169494629;0,007130984731230142;DecisionTreeClassifier();;gini;7;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6900240706071142;0,6897566194169564;0,6787911206204867;0,682535437282696;0,675849157528751;0,6977801551216903;0,6881519122760096;0,6654185611125969;0,6797752808988764;0,6915462814339219;0,68396285962991;0,008901255180421484;320
0,3499149322509766;0,03770962122231217;0,02509007453918457;0,005401767849296095;DecisionTreeClassifier();;entropy;10;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6854774003744316;0,6828028884728538;0,6846750468039583;0,6790585718106446;0,6777213158598556;0,690291521797272;0,6977801551216903;0,6713024872960685;0,6827180310326377;0,687800963081862;0,6839628381651275;0,006889780609553081;321
0,2912724494934082;0,032661617618796726;0,03280441761016846;0,005483445046391318;DecisionTreeClassifier();balanced;entropy;7;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6935009360791655;0,686279753944905;0,682535437282696;0,6795934741909602;0,670500133725595;0,6926985825086922;0,6900240706071142;0,6713024872960685;0,6840556447298021;0,6888710540395934;0,6839361574404592;0,0077210424541651135;322
0,4032381772994995;0,04914980195653308;0,029196643829345705;0,007256226036715222;DecisionTreeClassifier();balanced;entropy;10;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6854774003744316;0,6828028884728538;0,6846750468039583;0,6787911206204867;0,6777213158598556;0,690291521797272;0,6977801551216903;0,6713024872960685;0,6827180310326377;0,687800963081862;0,6839360930461117;0,006909257914925858;323
552,9519102573395;108,8218495115984;0,4290585517883301;0,04211981235303476;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6940358384594811;0,6785236694303289;0,6726397432468575;0,6766515110992244;0,6600695373094411;0,6900240706071142;0,6940358384594811;0,688954265846483;0,6848582129481006;0,6993044408774746;0,6839097128283986;0,011326359388365974;324
0,3236011266708374;0,05947293439226301;0,031041789054870605;0,009358673044304771;DecisionTreeClassifier();balanced;entropy;7;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6935009360791655;0,686279753944905;0,682535437282696;0,6801283765712758;0,670500133725595;0,6918962289382188;0,6897566194169564;0,6713024872960685;0,6843231674692349;0,6888710540395934;0,683909419476371;0,007584928144441628;325
0,26773459911346437;0,03447627613648873;0,02665526866912842;0,00574376607543823;DecisionTreeClassifier();;entropy;7;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6935009360791655;0,686279753944905;0,682535437282696;0,6801283765712758;0,670500133725595;0,6918962289382188;0,6897566194169564;0,6713024872960685;0,6843231674692349;0,6888710540395934;0,683909419476371;0,007584928144441628;325
0,2562131881713867;0,02853355363393257;0,028843998908996582;0,005313301292315031;DecisionTreeClassifier();;entropy;7;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6935009360791655;0,686279753944905;0,682535437282696;0,6793260230008024;0,670500133725595;0,6926985825086922;0,6900240706071142;0,6713024872960685;0,6840556447298021;0,6888710540395934;0,6839094123214433;0,007736486634917166;327
0,3362466812133789;0,03523289606702684;0,030936670303344727;0,005721944575406076;DecisionTreeClassifier();;gini;10;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6774538646696978;0,6822679860925381;0,6820005349023803;0,6790585718106446;0,6793260230008024;0,6932334848890077;0,6953730944102702;0,6747793527681198;0,6861958266452648;0,6891385767790262;0,6838827315967752;0,00653320255598846;328
0,3096526861190796;0,049043642621902535;0,041332459449768065;0,007658063160044476;DecisionTreeClassifier();;gini;7;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6894891682267986;0,6894891682267986;0,6782562182401711;0,682535437282696;0,6755817063385932;0,6983150575020058;0,6881519122760096;0,6654185611125969;0,6792402354200107;0,6920813269127876;0,6838558791538468;0,00906338893558226;329
0,4233685493469238;0,07479803110860912;0,026793909072875977;0,005538198142848097;DecisionTreeClassifier();balanced;entropy;10;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,686279753944905;0,6806632789515913;0,6849424979941161;0,6790585718106446;0,67718641347954;0,690291521797272;0,6988499598823215;0,6713024872960685;0,682450508293205;0,6867308721241305;0,6837755865573796;0,007202418474162469;330
0,3489377975463867;0,05580356662240665;0,028865599632263185;0,005891894678326534;DecisionTreeClassifier();;entropy;10;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6870821075153785;0,6801283765712758;0,6833377908531693;0,6841401444236427;0,6806632789515913;0,6908264241775876;0,6967103503610591;0,670500133725595;0,6779026217228464;0,6864633493846977;0,6837754577686843;0,006849978877106945;331
155,61888964176177;52,013855959144884;0,1556828498840332;0,03929907176075562;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6961754479807435;0,6782562182401711;0,6785236694303289;0,6761166087189088;0,6742444503878042;0,6964428991709013;0,6910938753677454;0,6908264241775876;0,6821829855537721;0,6738897806313536;0,6837752359659316;0,008516473027632768;332
594,8403605937958;104,30437993457251;0,44816434383392334;0,022080970755466153;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,691628777748061;0,6865472051350628;0,6803958277614336;0,6654185611125969;0,6713024872960685;0,7001872158331105;0,6908264241775876;0,6790585718106446;0,6861958266452648;0,685928303905832;0,6837489201425662;0,009618350155506281;333
0,3287946701049805;0,03173749527436564;0,03087449073791504;0,013454389238714629;DecisionTreeClassifier();;entropy;10;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,686279753944905;0,6806632789515913;0,6849424979941161;0,6790585718106446;0,67718641347954;0,690291521797272;0,6988499598823215;0,6713024872960685;0,6819154628143392;0,6867308721241305;0,6837220820094929;0,007214041303848746;334
0,2935956001281738;0,026335388531304384;0,031167984008789062;0,006691981604478665;DecisionTreeClassifier();balanced;gini;7;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6908264241775876;0,6910938753677454;0,6787911206204867;0,6769189622893822;0,675849157528751;0,6972452527413747;0,688954265846483;0,6654185611125969;0,6803103263777421;0,6915462814339219;0,6836954227496073;0,009249414092347006;335
0,29690399169921877;0,06224730813986989;0,027907800674438477;0,003431199310478464;DecisionTreeClassifier();;entropy;7;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6935009360791655;0,6846750468039583;0,682535437282696;0,6803958277614336;0,6707675849157528;0,6910938753677454;0,6897566194169564;0,6707675849157528;0,6843231674692349;0,6888710540395934;0,6836687134052288;0,007498319314390134;336
0,3192899227142334;0,045564576649176215;0,029932856559753418;0,004915768176943768;DecisionTreeClassifier();balanced;entropy;7;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6935009360791655;0,6846750468039583;0,682535437282696;0,6803958277614336;0,6707675849157528;0,6910938753677454;0,6897566194169564;0,6707675849157528;0,6843231674692349;0,6888710540395934;0,6836687134052288;0,007498319314390134;336
0,33001611232757566;0,05913697663954085;0,03241255283355713;0,007278199207458244;DecisionTreeClassifier();balanced;gini;7;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,690291521797272;0,6910938753677454;0,6785236694303289;0,6766515110992244;0,675849157528751;0,6975127039315325;0,6886868146563252;0,6659534634929125;0,6803103263777421;0,6918138041733547;0,6836686847855189;0,009187717025101511;338
0,3789524078369141;0,05271095614769027;0,03285419940948486;0,010474900822308291;DecisionTreeClassifier();balanced;entropy;10;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6870821075153785;0,6801283765712758;0,6833377908531693;0,6838726932334849;0,6806632789515913;0,6905589729874297;0,6959079967905857;0,670500133725595;0,6779026217228464;0,6867308721241305;0,6836684844475487;0,0066834186796217885;339
0,35044333934783933;0,04498049754710781;0,025851893424987792;0,004941612517266539;DecisionTreeClassifier();;entropy;10;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6876170098956941;0,6809307301417491;0,6828028884728538;0,682535437282696;0,6833377908531693;0,6921636801283766;0,6937683872693233;0,6702326825354373;0,6771000535045479;0,685928303905832;0,6836416963989678;0,006543467086369504;340
0,36812355518341067;0,04884040693984035;0,028930282592773436;0,005876476904392049;DecisionTreeClassifier();balanced;entropy;10;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6873495587055363;0,6806632789515913;0,6828028884728538;0,6814656325220647;0,6830703396630114;0,6926985825086922;0,6951056432201124;0,6696977801551217;0,6771000535045479;0,6861958266452648;0,6836149584348796;0,006968329078424586;341
0,2791737079620361;0,04006239964605552;0,02714660167694092;0,0038902228859192755;DecisionTreeClassifier();balanced;gini;7;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6908264241775876;0,6910938753677454;0,6769189622893822;0,6766515110992244;0,6755817063385932;0,6977801551216903;0,688954265846483;0,6662209146830703;0,680577849117175;0,6912787586944891;0,6835884422735441;0,00930302711098198;342
0,39145283699035643;0,05115105324156911;0,025173282623291014;0,004387606310518902;DecisionTreeClassifier();balanced;entropy;10;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6892217170366408;0,6774538646696978;0,6844075956138005;0,6836052420433271;0,6809307301417491;0,6897566194169564;0,6975127039315325;0,6696977801551217;0,6771000535045479;0,685928303905832;0,6835614610419205;0,007413166547602099;343
0,32963263988494873;0,039487736844341724;0,031818723678588866;0,006382842310339435;DecisionTreeClassifier();balanced;entropy;7;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6935009360791655;0,6844075956138005;0,6822679860925381;0,6801283765712758;0,6702326825354373;0,6910938753677454;0,6897566194169564;0,670500133725595;0,6843231674692349;0,6888710540395934;0,6835082426911343;0,007649076854872755;344
0,3084045171737671;0,060553084251505934;0,02780277729034424;0,0036186887115191298;DecisionTreeClassifier();;entropy;7;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6935009360791655;0,6844075956138005;0,6822679860925381;0,6801283765712758;0,6702326825354373;0,6910938753677454;0,6897566194169564;0,670500133725595;0,6843231674692349;0,6888710540395934;0,6835082426911343;0,007649076854872755;344
0,2955078840255737;0,04873095876116507;0,03483474254608154;0,006318151796034256;DecisionTreeClassifier();balanced;entropy;7;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6935009360791655;0,6844075956138005;0,682535437282696;0,6793260230008024;0,6707675849157528;0,6910938753677454;0,6905589729874297;0,6702326825354373;0,6840556447298021;0,6886035313001605;0,6835082283812792;0,007688830616805427;346
0,3010603904724121;0,04539404787853368;0,03146538734436035;0,005842510774699786;DecisionTreeClassifier();;entropy;7;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6932334848890077;0,6844075956138005;0,682535437282696;0,6793260230008024;0,6707675849157528;0,6910938753677454;0,6905589729874297;0,6702326825354373;0,6840556447298021;0,6886035313001605;0,6834814832622633;0,0076544132141598735;347
0,2617965221405029;0,036777015593056434;0,035581541061401364;0,005899597992314207;DecisionTreeClassifier();balanced;gini;7;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6900240706071142;0,6905589729874297;0,6769189622893822;0,6769189622893822;0,6747793527681198;0,6993848622626371;0,6878844610858519;0,6667558170633859;0,6800428036383093;0,6915462814339219;0,6834814546425535;0,009400392664082472;348
0,3431305170059204;0,04226927976879268;0,026006340980529785;0,005500351180898956;DecisionTreeClassifier();;entropy;10;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6881519122760096;0,6777213158598556;0,6844075956138005;0,6836052420433271;0,6809307301417491;0,6897566194169564;0,6983150575020058;0,6696977801551217;0,6762974852862493;0,6856607811663992;0,6834544519461474;0,007537415781732657;349
241,1180528640747;106,16947108938822;0,17565951347351075;0,00816034185849788;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6854774003744316;0,6777213158598556;0,6841401444236427;0,6734420968173308;0,6656860123027547;0,691628777748061;0,6836052420433271;0,6820005349023803;0,6776350989834136;0,7129481005885501;0,6834284724043747;0,011941882979695572;350
0,33541088104248046;0,03762705036709845;0,041020774841308595;0,0175345447760521;DecisionTreeClassifier();;entropy;7;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6937683872693233;0,6841401444236427;0,6817330837122225;0,6795934741909602;0,6702326825354373;0,6910938753677454;0,6905589729874297;0,670500133725595;0,6837881219903692;0,6888710540395934;0,683427993024232;0,0077821986828184855;351
0,34980728626251223;0,04544834073700198;0,026208329200744628;0,004424656799810225;DecisionTreeClassifier();balanced;entropy;10;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6870821075153785;0,67718641347954;0,682535437282696;0,6803958277614336;0,6836052420433271;0,6921636801283766;0,6967103503610591;0,6702326825354373;0,6757624398073836;0,6886035313001605;0,6834277712214794;0,007581083917547103;352
0,31921770572662356;0,012181245762382845;0,02459559440612793;0,006292304407531295;DecisionTreeClassifier();;entropy;10;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6921636801283766;0,6785236694303289;0,6822679860925381;0,6822679860925381;0,6793260230008024;0,6926985825086922;0,6935009360791655;0,6691628777748061;0,6784376672017122;0,6856607811663992;0,683401018947536;0,007352992263580853;353
0,34689443111419677;0,028445761797844225;0,026006007194519044;0,00716593099459607;DecisionTreeClassifier();balanced;entropy;10;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,69296603369885;0,6785236694303289;0,6822679860925381;0,6822679860925381;0,6793260230008024;0,6921636801283766;0,6932334848890077;0,6691628777748061;0,6784376672017122;0,6856607811663992;0,6834010189475359;0,007351046399842212;354
0,31567087173461916;0,008919510188591653;0,026874899864196777;0,007304296716009058;DecisionTreeClassifier();;entropy;10;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6918962289382188;0,6809307301417491;0,6809307301417491;0,6814656325220647;0,6817330837122225;0,6932334848890077;0,6894891682267986;0,670500133725595;0,6773675762439807;0,6864633493846977;0,6834010117926084;0,006609516329719666;355
0,27118663787841796;0,03833271786316498;0,036655735969543454;0,008886687917956191;DecisionTreeClassifier();balanced;entropy;7;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6932334848890077;0,6841401444236427;0,6817330837122225;0,6795934741909602;0,6702326825354373;0,6910938753677454;0,6905589729874297;0,670500133725595;0,6837881219903692;0,6888710540395934;0,6833745027862003;0,007712466978206362;356
0,32139747142791747;0,0095297086545007;0,02488400936126709;0,0035590893800024545;DecisionTreeClassifier();;entropy;10;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6873495587055363;0,6769189622893822;0,6822679860925381;0,6809307301417491;0,6828028884728538;0,6921636801283766;0,6956405456004279;0,6694303289649639;0,6773675762439807;0,6886035313001605;0,6833475787939969;0,00741998857426117;357
1647,738751387596;406,0702041293856;0,5709940433502197;0,0307865089179927;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,682535437282696;0,6801283765712758;0,6795934741909602;0,6769189622893822;0,6710350361059106;0,6945707408397968;0,6750468039582777;0,6926985825086922;0,6861958266452648;0,6944890315676833;0,683321227195994;0,0079535086413497;358
0,2907318830490112;0,04459359969660415;0,033570599555969236;0,00494114846865042;DecisionTreeClassifier();balanced;gini;7;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6897566194169564;0,6905589729874297;0,6790585718106446;0,6763840599090666;0,6755817063385932;0,6969778015512169;0,6878844610858519;0,6656860123027547;0,6800428036383093;0,6912787586944891;0,6833209767735313;0,009013269329784253;359
0,33487234115600584;0,02031777484807365;0,027066993713378906;0,005716743966117972;DecisionTreeClassifier();balanced;entropy;10;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6910938753677454;0,6811981813319069;0,6817330837122225;0,6817330837122225;0,6814656325220647;0,69296603369885;0,688954265846483;0,6707675849157528;0,6768325307651151;0,6864633493846977;0,683320762125706;0,0063853933070758435;360
0,2814181327819824;0,041699913665652684;0,03173439502716065;0,008790110288007573;DecisionTreeClassifier();balanced;gini;7;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6897566194169564;0,6905589729874297;0,6769189622893822;0,6766515110992244;0,6753142551484355;0,6975127039315325;0,6878844610858519;0,6670232682535437;0,6803103263777421;0,6910112359550562;0,6832942316545154;0,008941051388473691;361
0,29965150356292725;0,03662564734297521;0,02973811626434326;0,004506992617239964;DecisionTreeClassifier();balanced;gini;7;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6892217170366408;0,6905589729874297;0,6785236694303289;0,6761166087189088;0,6750468039582777;0,6972452527413747;0,6873495587055363;0,6662209146830703;0,6800428036383093;0,6915462814339219;0,6831872583333799;0,00900742274011224;362
0,28068268299102783;0,04447312342771882;0,03681621551513672;0,011555742907936272;DecisionTreeClassifier();balanced;gini;7;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6900240706071142;0,6894891682267986;0,6787911206204867;0,6750468039582777;0,6747793527681198;0,698047606311848;0,6881519122760096;0,6646162075421236;0,6797752808988764;0,6915462814339219;0,6830267804643576;0,009562222307792141;363
0,3203252077102661;0,05057014445300117;0,03333101272583008;0,0064897826417997595;DecisionTreeClassifier();balanced;gini;7;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6894891682267986;0,6894891682267986;0,6782562182401711;0,6750468039582777;0,674511901577962;0,6983150575020058;0,6881519122760096;0,6651511099224392;0,6795077581594435;0,6920813269127876;0,6830000425002694;0,009572698318544381;364
922,3409687519073;117,15491856259165;0,6211219072341919;0,057550898244310075;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6822679860925381;0,6750468039582777;0,6779887670500133;0,670500133725595;0,6675581706338594;0,7004546670232683;0,686279753944905;0,6967103503610591;0,678705189941145;0,6926163723916533;0,6828128195122315;0,01047646848079396;365
858,5636775970459;133,12862450472414;0,6224678516387939;0,05850368703058958;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6820005349023803;0,6761166087189088;0,69296603369885;0,6814656325220647;0,6779887670500133;0,6852099491842739;0,6787911206204867;0,6897566194169564;0,673354735152488;0,6904761904761905;0,6828126191742613;0,006260930140029501;366
794,6884817123413;103,75735619868875;0,6010460376739502;0,03371899552011788;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6747793527681198;0,688954265846483;0,6753142551484355;0,6811981813319069;0,6761166087189088;0,6926985825086922;0,6951056432201124;0,6803958277614336;0,675227394328518;0,6880684858212948;0,6827858597453905;0,007387596517836613;367
625,0113653898239;113,40842324377151;0,4632818937301636;0,048925112733891975;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6881519122760096;0,6868146563252207;0,6820005349023803;0,6747793527681198;0,6739769991976464;0,6969778015512169;0,682535437282696;0,6838726932334849;0,6816479400749064;0,6754949170679507;0,6826252244679633;0,00666477632721477;368
575,86065158844;34,61619006471327;0,45498621463775635;0,050670298788814565;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6937683872693233;0,6838726932334849;0,6774538646696978;0,6710350361059106;0,6715699384862263;0,6943032896496389;0,6801283765712758;0,682535437282696;0,6746923488496522;0,6960941680042804;0,6825453540122186;0,008921433249853486;369
614,1454080343246;107,10956693709204;0,44928417205810545;0,036570467488020224;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6873495587055363;0,682535437282696;0,6761166087189088;0,6638138539716502;0,6777213158598556;0,6975127039315325;0,6945707408397968;0,6836052420433271;0,6768325307651151;0,6848582129481006;0,6824916205066518;0,009199246341959958;370
1049,4144440412522;219,31500658633274;0,4747700452804565;0,058222414448167;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6854774003744316;0,6900240706071142;0,6750468039582777;0,6721048408665419;0,675849157528751;0,6900240706071142;0,6878844610858519;0,6739769991976464;0,6867308721241305;0,6875334403424291;0,6824652116692288;0,006890493613732707;371
939,3592481613159;182,153761824438;0,5915303945541381;0,0418540206625866;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6836052420433271;0,6790585718106446;0,6742444503878042;0,6766515110992244;0,6664883658732281;0,7009895694035838;0,6833377908531693;0,6793260230008024;0,6776350989834136;0,702247191011236;0,6823583814466434;0,010667027674156766;372
573,1382023334503;46,07412372136184;0,4533958911895752;0,03825568728357309;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6830703396630114;0,6763840599090666;0,6766515110992244;0,674511901577962;0,6664883658732281;0,702059374164215;0,6913613265579032;0,6795934741909602;0,6795077581594435;0,6934189406099518;0,6823047051804967;0,009947122547301393;373
319,0814383506775;43,20724926038349;0,40794196128845217;0,20512348635261293;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6961754479807435;0,6841401444236427;0,67718641347954;0,6857448515645894;0,6638138539716502;0,6921636801283766;0,675849157528751;0,6710350361059106;0,6813804173354735;0,6928838951310862;0,6820372897649764;0,009765484217885688;374
609,8762389659881;60,69200204350885;0,43304882049560545;0,02915455351095194;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6833377908531693;0,6852099491842739;0,6707675849157528;0,6779887670500133;0,6699652313452795;0,6983150575020058;0,6844075956138005;0,6801283765712758;0,6816479400749064;0,6886035313001605;0,6820371824410638;0,007863736972871667;375
257,22742290496825;125,87502446000168;0,16721208095550538;0,011844757270186803;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6905589729874297;0,6857448515645894;0,6777213158598556;0,6710350361059106;0,6678256218240172;0,7058036908264241;0,6894891682267986;0,6707675849157528;0,6800428036383093;0,6808453718566078;0,6819834417805695;0,010866287443287463;376
563,4437984704971;55,381298975234884;0,45136663913726804;0,04731901759540267;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6913613265579032;0,6782562182401711;0,6801283765712758;0,6921636801283766;0,6651511099224392;0,6833377908531693;0,6854774003744316;0,6860123027547472;0,6749598715890851;0,682450508293205;0,6819298585284804;0,007563309727073094;377
546,620345568657;53,91492346839585;0,42834179401397704;0,021682694521001585;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6908264241775876;0,67718641347954;0,6876170098956941;0,675849157528751;0,664081305161808;0,7012570205937416;0,6787911206204867;0,675849157528751;0,6771000535045479;0,6899411449973247;0,6818498807488231;0,009986732101586671;378
535,791480922699;70,14055146491934;0,4425384044647217;0,0429097987830929;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6932334848890077;0,6766515110992244;0,6769189622893822;0,6886868146563252;0,6729071944370153;0,6991174110724793;0,6670232682535437;0,6806632789515913;0,6736222578919208;0,689673622257892;0,6818497805798382;0,009777256901500863;379
610,0235004901886;56,731821619843075;0,4392932176589966;0,01589004526801797;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,67718641347954;0,6817330837122225;0,6656860123027547;0,6806632789515913;0,6715699384862263;0,7036640813051618;0,6820005349023803;0,6820005349023803;0,6853932584269663;0,6851257356875334;0,6815022872156756;0,009423909623799825;380
554,8203478336334;88,8603933744184;0,4435626268386841;0,03929217902872594;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6948381920299546;0,6801283765712758;0,6694303289649639;0,6729071944370153;0,6763840599090666;0,7023268253543729;0,6678256218240172;0,6715699384862263;0,6912787586944891;0,6851257356875334;0,6811815031958914;0,011191880539287121;381
15,875144958496094;7,63941927933849;0,02007300853729248;0,003041439445623286;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);constant;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6820005349023803;0,6737095480074886;0,6635464027814924;0,6755817063385932;0,6544530623161273;0,7009895694035838;0,6868146563252207;0,6951056432201124;0,6886035313001605;0,6907437132156233;0,6811548367810782;0,013703115695898741;382
15,840300726890565;7,688873638123874;0,0195112943649292;0,004079182511412284;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6820005349023803;0,6737095480074886;0,6635464027814924;0,6755817063385932;0,6544530623161273;0,7009895694035838;0,6868146563252207;0,6951056432201124;0,6886035313001605;0,6907437132156233;0,6811548367810782;0,013703115695898741;382
15,88413701057434;7,681836888398084;0,02336423397064209;0,007408534995153461;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);constant;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6820005349023803;0,6737095480074886;0,6635464027814924;0,6755817063385932;0,6544530623161273;0,7009895694035838;0,6868146563252207;0,6951056432201124;0,6886035313001605;0,6907437132156233;0,6811548367810782;0,013703115695898741;382
16,09533588886261;7,876537145150633;0,02841165065765381;0,014166554962373136;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);constant;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6820005349023803;0,6737095480074886;0,6635464027814924;0,6755817063385932;0,6544530623161273;0,7009895694035838;0,6868146563252207;0,6951056432201124;0,6886035313001605;0,6907437132156233;0,6811548367810782;0,013703115695898741;382
15,813028788566589;7,641939899637262;0,02137026786804199;0,007162634060922417;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);constant;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6820005349023803;0,6737095480074886;0,6635464027814924;0,6755817063385932;0,6544530623161273;0,7009895694035838;0,6868146563252207;0,6951056432201124;0,6886035313001605;0,6907437132156233;0,6811548367810782;0,013703115695898741;382
15,94428060054779;7,728374324954891;0,025023174285888673;0,008144763490895187;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6820005349023803;0,6737095480074886;0,6635464027814924;0,6755817063385932;0,6544530623161273;0,7009895694035838;0,6868146563252207;0,6951056432201124;0,6886035313001605;0,6907437132156233;0,6811548367810782;0,013703115695898741;382
15,821415042877197;7,689385237824516;0,024445295333862305;0,010636396059106676;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6820005349023803;0,6737095480074886;0,6635464027814924;0,6755817063385932;0,6544530623161273;0,7009895694035838;0,6868146563252207;0,6951056432201124;0,6886035313001605;0,6907437132156233;0,6811548367810782;0,013703115695898741;382
15,975658750534057;7,775345098283108;0,026841902732849122;0,007976190893499888;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6820005349023803;0,6737095480074886;0,6635464027814924;0,6755817063385932;0,6544530623161273;0,7009895694035838;0,6868146563252207;0,6951056432201124;0,6886035313001605;0,6907437132156233;0,6811548367810782;0,013703115695898741;382
614,9867145299911;67,90401166154204;0,4473050594329834;0,03144930339366757;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6822679860925381;0,6779887670500133;0,6795934741909602;0,6849424979941161;0,6672907194437016;0,6894891682267986;0,6846750468039583;0,6801283765712758;0,6797752808988764;0,6853932584269663;0,6811544575699205;0,005683617245520192;390
1101,785889863968;159,20033442597173;0,43736863136291504;0,034283479184059246;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6820005349023803;0,6836052420433271;0,6635464027814924;0,6769189622893822;0,6726397432468575;0,6959079967905857;0,6961754479807435;0,6828028884728538;0,6688068485821295;0,6888710540395934;0,6811275121129345;0,010320959307200218;391
1752,149975681305;639,0579576774369;0,5721642971038818;0,048381013156537735;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6729071944370153;0,6830703396630114;0,6753142551484355;0,6737095480074886;0,6624765980208612;0,7071409467772132;0,6785236694303289;0,6868146563252207;0,6827180310326377;0,6883360085607276;0,681101124740294;0,01130633691181397;392
1165,7471552848815;222,22461871178675;0,46066272258758545;0,028230866391089064;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6956405456004279;0,6710350361059106;0,6670232682535437;0,6777213158598556;0,674511901577962;0,6905589729874297;0,6777213158598556;0,6795934741909602;0,6867308721241305;0,689673622257892;0,6810210324817968;0,008797798280624347;393
620,3699365615845;107,9703494632849;0,4423118352890015;0,01668206985242237;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6892217170366408;0,6753142551484355;0,6841401444236427;0,6822679860925381;0,6734420968173308;0,6860123027547472;0,6841401444236427;0,673174645627173;0,6792402354200107;0,6800428036383093;0,6806996331382471;0,005175376049146744;394
561,6828846454621;67,34743626018657;0,4453468084335327;0,04748383864203925;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6828028884728538;0,6817330837122225;0,6598020861192833;0,6801283765712758;0,6755817063385932;0,6983150575020058;0,6715699384862263;0,6820005349023803;0,6816479400749064;0,6923488496522204;0,6805930461831967;0,010002776875913878;395
784,5012109756469;71,35846054835727;0,603702712059021;0,04774894408754334;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6892217170366408;0,6787911206204867;0,6755817063385932;0,670500133725595;0,6806632789515913;0,7055362396362663;0,6779887670500133;0,6779887670500133;0,6685393258426966;0,6808453718566078;0,6805656428108504;0,009928554829762059;396
333,5800257921219;56,82497443880397;0,28252971172332764;0,022421568854951137;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6814656325220647;0,670500133725595;0,6801283765712758;0,6836052420433271;0,6696977801551217;0,6921636801283766;0,6723722920566997;0,675849157528751;0,6832530765115035;0,6947565543071161;0,6803791925549831;0,008135186477361368;397
568,7830444574356;96,16512693854149;0,4453561782836914;0,039629389784814846;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6782562182401711;0,6846750468039583;0,6726397432468575;0,6691628777748061;0,6683605242043327;0,7017919229740572;0,682535437282696;0,6777213158598556;0,6722846441947565;0,6963616907437132;0,6803789421325204;0,010697173692932669;398
644,26806473732;137,06944177181725;0,42885260581970214;0,03016924711992424;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6873495587055363;0,6828028884728538;0,675849157528751;0,690291521797272;0,6659534634929125;0,6838726932334849;0,674511901577962;0,6742444503878042;0,689673622257892;0,6789727126805778;0,6803521970135046;0,007442845469967028;399
223,54708206653595;99,1818532001433;0,15992977619171142;0,004210214689959757;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6841401444236427;0,674511901577962;0,6833377908531693;0,6608718908799144;0,6683605242043327;0,6943032896496389;0,674511901577962;0,6787911206204867;0,6746923488496522;0,7097378277153558;0,6803258740352117;0,013066656614319128;400
236,34040839672087;83,73190839385838;0,17311241626739501;0,010272591684861304;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6795934741909602;0,6857448515645894;0,6779887670500133;0,6683605242043327;0,6520460016047072;0,7055362396362663;0,6948381920299546;0,6721048408665419;0,6795077581594435;0,6867308721241305;0,6802451521430939;0,013905639233286844;401
291,8055193424225;24,899585758709193;0,26650147438049315;0,012703902186523099;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,682535437282696;0,662744049211019;0,6814656325220647;0,6761166087189088;0,6878844610858519;0,69296603369885;0,6721048408665419;0,6876170098956941;0,6709470304975923;0,6880684858212948;0,6802449589600512;0,009047192336325265;402
310,67098662853243;74,43838512257018;0,30138919353485105;0,07742404233482394;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6742444503878042;0,6694303289649639;0,6603369884995989;0,6814656325220647;0,6718373896763841;0,7001872158331105;0,6935009360791655;0,6876170098956941;0,6861958266452648;0,6765650080256822;0,6801380786529734;0,011393283911025405;403
324,62716534137724;70,2059839906648;0,18831372261047363;0,011004230758353913;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6793260230008024;0,6785236694303289;0,6750468039582777;0,6894891682267986;0,6718373896763841;0,6937683872693233;0,6718373896763841;0,6715699384862263;0,6795077581594435;0,6899411449973247;0,6800847672881294;0,007810889272555006;404
1150,1039229393004;331,390857545805;0,43204708099365235;0,026495781099409733;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6852099491842739;0,6683605242043327;0,6857448515645894;0,6820005349023803;0,662744049211019;0,6897566194169564;0,6795934741909602;0,682535437282696;0,6754949170679507;0,6894060995184591;0,6800846456543618;0,008413551115493316;405
928,0907141208648;223,75500524120608;0,5735029458999634;0,0396171317346708;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6908264241775876;0,6838726932334849;0,67718641347954;0,6696977801551217;0,6777213158598556;0,6878844610858519;0,6696977801551217;0,6763840599090666;0,6819154628143392;0,6853932584269663;0,6800579649296936;0,006823135170980767;406
66,67183496952057;56,882179856022155;0,07437608242034913;0,03141036103424275;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);adaptive;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6737095480074886;0,6782562182401711;0,6721048408665419;0,6849424979941161;0,664081305161808;0,688954265846483;0,6865472051350628;0,6940358384594811;0,678705189941145;0,6789727126805778;0,6800309622332876;0,008399696598859653;407
66,75012376308442;56,96812993909989;0,07175912857055664;0,032892630164696346;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);adaptive;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6737095480074886;0,6782562182401711;0,6721048408665419;0,6849424979941161;0,664081305161808;0,688954265846483;0,6865472051350628;0,6940358384594811;0,678705189941145;0,6789727126805778;0,6800309622332876;0,008399696598859653;407
66,80627601146698;56,78633665100871;0,07094969749450683;0,032593611687706615;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);constant;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6737095480074886;0,6782562182401711;0,6721048408665419;0,6849424979941161;0,664081305161808;0,688954265846483;0,6865472051350628;0,6940358384594811;0,678705189941145;0,6789727126805778;0,6800309622332876;0,008399696598859653;407
66,91425080299378;57,13245908378877;0,07441184520721436;0,035171097349667974;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);adaptive;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6737095480074886;0,6782562182401711;0,6721048408665419;0,6849424979941161;0,664081305161808;0,688954265846483;0,6865472051350628;0,6940358384594811;0,678705189941145;0,6789727126805778;0,6800309622332876;0,008399696598859653;407
66,6373595237732;56,90259336804454;0,0729015588760376;0,03489662205517085;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6737095480074886;0,6782562182401711;0,6721048408665419;0,6849424979941161;0,664081305161808;0,688954265846483;0,6865472051350628;0,6940358384594811;0,678705189941145;0,6789727126805778;0,6800309622332876;0,008399696598859653;407
66,7024438381195;56,89556526341566;0,07187094688415527;0,034174613202978404;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);constant;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6737095480074886;0,6782562182401711;0,6721048408665419;0,6849424979941161;0,664081305161808;0,688954265846483;0,6865472051350628;0,6940358384594811;0,678705189941145;0,6789727126805778;0,6800309622332876;0,008399696598859653;407
66,57615182399749;56,859271370915984;0,06747915744781494;0,03153166404503665;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);constant;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6737095480074886;0,6782562182401711;0,6721048408665419;0,6849424979941161;0,664081305161808;0,688954265846483;0,6865472051350628;0,6940358384594811;0,678705189941145;0,6789727126805778;0,6800309622332876;0,008399696598859653;407
66,90727336406708;57,22026941689005;0,06804273128509522;0,03271003178969241;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);constant;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6737095480074886;0,6782562182401711;0,6721048408665419;0,6849424979941161;0,664081305161808;0,688954265846483;0,6865472051350628;0,6940358384594811;0,678705189941145;0,6789727126805778;0,6800309622332876;0,008399696598859653;407
1725,595047688484;457,6525464080485;0,586923336982727;0,022442489437176017;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6886868146563252;0,6921636801283766;0,6838726932334849;0,66140679326023;0,6686279753944905;0,688954265846483;0,6638138539716502;0,6806632789515913;0,6757624398073836;0,6960941680042804;0,6800045963254295;0,01154570476176222;415
1137,5509610652923;353,4366931756701;0,4263529062271118;0,03365060143239996;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6806632789515913;0,6787911206204867;0,6817330837122225;0,6785236694303289;0,6841401444236427;0,6795934741909602;0,6956405456004279;0,6718373896763841;0,6653290529695024;0,6827180310326377;0,6798969790608185;0,007471034993959019;416
543,1505355119705;58,242206024945524;0,43542306423187255;0,03541584761629418;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6846750468039583;0,6699652313452795;0,6603369884995989;0,6844075956138005;0,674511901577962;0,7023268253543729;0,6865472051350628;0,6747793527681198;0,6746923488496522;0,6864633493846977;0,6798705845332506;0,010941295785233824;417
198,08259239196778;117,16513831635561;0,14990694522857667;0,008020805490894727;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6715699384862263;0,6897566194169564;0,6632789515913345;0,6737095480074886;0,6913613265579032;0,6953730944102702;0,6779887670500133;0,673174645627173;0,6816479400749064;0,680577849117175;0,6798438680339447;0,009509305669232642;418
527,3907849311829;71,70302556253615;0,4516919136047363;0,036932380878079575;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,690291521797272;0,6753142551484355;0,6849424979941161;0,6774538646696978;0,6648836587322814;0,6892217170366408;0,6766515110992244;0,6742444503878042;0,6749598715890851;0,689673622257892;0,679763697071245;0,007969245611651863;419
800,0454741001129;242,74416532440708;0,5700496912002564;0,0476627004894759;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6817330837122225;0,6635464027814924;0,6750468039582777;0,6932334848890077;0,6710350361059106;0,7015244717838994;0,686279753944905;0,6715699384862263;0,6631888710540396;0,6883360085607276;0,679549385527671;0,012155784569438782;420
590,9658660650254;129,88568272825538;0,43592650890350343;0,03894076436588674;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6897566194169564;0,6803958277614336;0,6790585718106446;0,675849157528751;0,6688954265846483;0,6814656325220647;0,6830703396630114;0,674511901577962;0,6795077581594435;0,6803103263777421;0,6792821561402658;0,005231209497855469;421
242,12574009895326;58,4715443185628;0,1867911100387573;0,012574791906817623;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6787911206204867;0,6779887670500133;0,6710350361059106;0,6822679860925381;0,6646162075421236;0,6951056432201124;0,6841401444236427;0,6753142551484355;0,6827180310326377;0,6803103263777421;0,6792287517613643;0,007723309334175599;422
879,6038052558899;126,49765732815611;0,5992197513580322;0,03684658188607883;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6857448515645894;0,690291521797272;0,6766515110992244;0,6635464027814924;0,6755817063385932;0,6873495587055363;0,6777213158598556;0,6761166087189088;0,6792402354200107;0,6784376672017122;0,6790681379487195;0,007134401854472377;423
205,06701033115388;51,083412359271186;0,1741175889968872;0,036230354713113186;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6779887670500133;0,6803958277614336;0,670500133725595;0,6852099491842739;0,6747793527681198;0,6932334848890077;0,67718641347954;0,6710350361059106;0,6744248261102194;0,6845906902086677;0,6789344481282782;0,006730994625371866;424
1217,3650089263915;419,1377640814625;0,44736053943634035;0,036331381169978916;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,673174645627173;0,6766515110992244;0,6664883658732281;0,679860925381118;0,6713024872960685;0,6943032896496389;0,6699652313452795;0,6860123027547472;0,6819154628143392;0,6888710540395934;0,6788545275880409;0,008524670986405174;425
216,1745863676071;51,2758811826744;0,1799637794494629;0,020690368651964046;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6785236694303289;0,6803958277614336;0,6777213158598556;0,6742444503878042;0,6648836587322814;0,6988499598823215;0,6820005349023803;0,6803958277614336;0,680577849117175;0,6704119850187266;0,6788005078853742;0,008405442833480754;426
566,6797232866287;84,89962149396682;0,4606314182281494;0,06334163909575954;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,698047606311848;0,6739769991976464;0,6654185611125969;0,6659534634929125;0,6715699384862263;0,7004546670232683;0,6656860123027547;0,682535437282696;0,6902086677367576;0,6738897806313536;0,678774113357806;0,01264601875450209;427
302,998219537735;35,133890352325025;0,2721338987350464;0,018128651865067732;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6761166087189088;0,6638138539716502;0,6747793527681198;0,6811981813319069;0,6836052420433271;0,688954265846483;0,673174645627173;0,6860123027547472;0,6736222578919208;0,6856607811663992;0,6786937492120637;0,00733027876337623;428
1663,6167728185653;428,08425589565957;0,5995414733886719;0,0475717143567866;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6809307301417491;0,670500133725595;0,6651511099224392;0,675849157528751;0,6616742444503878;0,6932334848890077;0,6951056432201124;0,6937683872693233;0,6779026217228464;0,6725521669341894;0,6786667679804401;0,0114001502984914;429
215,33693203926086;63,762946153330766;0,1723557949066162;0,008595637445345737;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,69296603369885;0,674511901577962;0,6616742444503878;0,6785236694303289;0,6755817063385932;0,6959079967905857;0,6785236694303289;0,6801283765712758;0,6639914392723382;0,6845906902086677;0,6786399727769318;0,010343517528074364;430
579,880513715744;144,84274640421833;0,44969198703765867;0,046483620153579916;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6830703396630114;0,6833377908531693;0,6787911206204867;0,6691628777748061;0,6782562182401711;0,6849424979941161;0,6777213158598556;0,6833377908531693;0,6762974852862493;0,671482075976458;0,6786399513121493;0,005010399903048604;431
634,0626294612885;129,534362560606;0,4384928226470947;0,019052541328356952;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6811981813319069;0,6806632789515913;0,6723722920566997;0,6884193634661674;0,6638138539716502;0,6830703396630114;0,6769189622893822;0,6734420968173308;0,6883360085607276;0,6773675762439807;0,6785601953352448;0,007145269080794543;432
594,0873724937439;163,38427118031865;0,27522029876708987;0,01700650157064862;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6881519122760096;0,670500133725595;0,6753142551484355;0,6702326825354373;0,6774538646696978;0,6961754479807435;0,6860123027547472;0,6686279753944905;0,6781701444622793;0,6746923488496522;0,6785331067797088;0,008471471263134911;433
279,6337747097015;61,51506465406638;0,19139087200164795;0,008768372073229306;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6734420968173308;0,6803958277614336;0,6782562182401711;0,6795934741909602;0,6715699384862263;0,6926985825086922;0,6777213158598556;0,6667558170633859;0,6797752808988764;0,6837881219903692;0,6783996673817303;0,00669387221084906;434
1009,0309910535813;313,3032819397285;0,4032145977020264;0,023052889659586923;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6795934741909602;0,6654185611125969;0,6817330837122225;0,6747793527681198;0,6643487563519658;0,6967103503610591;0,674511901577962;0,6886868146563252;0,6741573033707865;0,6837881219903692;0,6783727720092367;0,009459533988481168;435
991,4811787605286;286,4956834830966;0,49337170124053953;0,0343447146468373;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6774538646696978;0,6801283765712758;0,6646162075421236;0,6686279753944905;0,6729071944370153;0,6953730944102702;0,6849424979941161;0,6868146563252207;0,6666666666666666;0,6851257356875334;0,678265626969841;0,009507688969841707;436
1097,5313450813294;355,10614471330297;0,44671475887298584;0,013348263891547708;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6873495587055363;0,6774538646696978;0,6729071944370153;0,6737095480074886;0,673174645627173;0,6900240706071142;0,6662209146830703;0,6846750468039583;0,680577849117175;0,6762974852862493;0,6782390177944478;0,007015662089049672;437
206,8874938249588;22,943446834913928;0,16250598430633545;0,007150621275528888;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6924311313185344;0,6806632789515913;0,6622091468307034;0,6715699384862263;0,6683605242043327;0,6951056432201124;0,6721048408665419;0,6713024872960685;0,6682718031032637;0,7001070090957732;0,6782125803373148;0,012466295376066066;438
339,099178481102;65,48786189887936;0,26026484966278074;0,014917274153281007;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6822679860925381;0,6678256218240172;0,6683605242043327;0,6811981813319069;0,673174645627173;0,6884193634661674;0,6795934741909602;0,6857448515645894;0,6701444622792937;0,6851257356875334;0,6781854846268511;0,007289664849095042;439
1767,7415565013885;404,27692732163194;0,5746015310287476;0,060305467234324166;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6828028884728538;0,6793260230008024;0,6755817063385932;0,6696977801551217;0,6630115004011767;0,6873495587055363;0,6865472051350628;0,6801283765712758;0,6666666666666666;0,6902086677367576;0,6781320373183848;0,008755437269180467;440
786,918229842186;230,8819084780337;0,5525303840637207;0,05466442456227077;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6838726932334849;0,6667558170633859;0,67718641347954;0,6908264241775876;0,6667558170633859;0,7025942765445307;0,6699652313452795;0,6715699384862263;0,6650615302300695;0,6856607811663992;0,6780248922789889;0,011787272436040297;441
656,1851133346557;105,55093460364621;0,4411926746368408;0,04215672208473822;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6739769991976464;0,679860925381118;0,6710350361059106;0,6793260230008024;0,6608718908799144;0,7017919229740572;0,6878844610858519;0,6544530623161273;0,6760299625468165;0,6947565543071161;0,6779986837795361;0,013660777233903286;442
268,79844465255735;55,65793326949811;0,18679494857788087;0,00947893624966989;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6822679860925381;0,6696977801551217;0,6774538646696978;0,6790585718106446;0,6696977801551217;0,6913613265579032;0,6828028884728538;0,6670232682535437;0,6762974852862493;0,6835205992509363;0,6779181550704612;0,007161551951128335;443
604,4922304868699;159,2224444817089;0,3021182298660278;0,011548671913783335;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6696977801551217;0,6860123027547472;0,6646162075421236;0,6761166087189088;0,6632789515913345;0,6945707408397968;0,691628777748061;0,6753142551484355;0,6803103263777421;0,6771000535045479;0,6778646004380819;0,010030037990237323;444
945,5430097341538;222,65162697921932;0,4410345792770386;0,019887015996327823;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,674511901577962;0,6841401444236427;0,6630115004011767;0,6696977801551217;0,6763840599090666;0,682535437282696;0,6940358384594811;0,6817330837122225;0,6666666666666666;0,6856607811663992;0,6778377193754437;0,009080662553240578;445
786,3155567407608;147,10140802033214;0,5696964502334595;0,049870833241694126;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6854774003744316;0,6742444503878042;0,6702326825354373;0,6726397432468575;0,6707675849157528;0,7060711420165819;0,6678256218240172;0,6777213158598556;0,6722846441947565;0,680577849117175;0,677784243447267;0,01068558285560008;446
279,8950902223587;36,91004801008679;0,26625120639801025;0,01887312394236757;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6672907194437016;0,6713024872960685;0,6600695373094411;0,6844075956138005;0,6638138539716502;0,6964428991709013;0,6857448515645894;0,69296603369885;0,680577849117175;0,6738897806313536;0,6776505607817531;0,011703736289559495;447
211,13756992816926;67,63260640043325;0,16524920463562012;0,014209436211684688;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6852099491842739;0,6755817063385932;0,6721048408665419;0,6774538646696978;0,6729071944370153;0,6943032896496389;0,6817330837122225;0,6750468039582777;0,6647940074906367;0,6773675762439807;0,6776502316550879;0,007621343046075421;448
185,83862822055818;46,29426244320725;0,15886082649230956;0,007244337468737534;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,691628777748061;0,6793260230008024;0,6624765980208612;0,6729071944370153;0,6713024872960685;0,7044664348756352;0,6656860123027547;0,6686279753944905;0,6746923488496522;0,6848582129481006;0,6775972064873442;0,012229332777826675;449
320,6936363697052;70,6944817967366;0,2483670473098755;0,012895843221150118;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,682535437282696;0,6651511099224392;0,670500133725595;0,6838726932334849;0,6715699384862263;0,6892217170366408;0,6742444503878042;0,6822679860925381;0,6717495987158909;0,6848582129481006;0,6775971277831416;0,007486472539446861;450
1600,0682626247406;390,8202714317183;0,5857632875442504;0,03418206396218061;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6857448515645894;0,6619416956405456;0,6544530623161273;0,6755817063385932;0,6608718908799144;0,69296603369885;0,6945707408397968;0,6935009360791655;0,6728196896736223;0,6819154628143392;0,6774366069845544;0,013961996234148096;451
769,1305198669434;229,5295136484168;0,4411712408065796;0,0425006839328298;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,679860925381118;0,6828028884728538;0,6702326825354373;0,6579299277881786;0,6531158063653383;0,6953730944102702;0,6935009360791655;0,6696977801551217;0,6784376672017122;0,6910112359550562;0,6771962944344252;0,013722053648614679;452
567,5842370033264;104,82838879071542;0,45158047676086427;0,07614446811285841;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6817330837122225;0,6742444503878042;0,6667558170633859;0,6739769991976464;0,6713024872960685;0,6785236694303289;0,6873495587055363;0,6726397432468575;0,6779026217228464;0,6875334403424291;0,6771961871105125;0,006452662818386106;453
974,7459851980209;206,52977315195625;0,4250244140625;0,038157879425671275;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6945707408397968;0,6603369884995989;0,6646162075421236;0,6632789515913345;0,6723722920566997;0,691628777748061;0,6860123027547472;0,6702326825354373;0,6765650080256822;0,6902086677367576;0,6769822619330239;0,012104141241005614;454
1044,9693472385406;233,01657951433148;0,6002825736999512;0,03495125813976466;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6809307301417491;0,6769189622893822;0,6675581706338594;0,686279753944905;0,6648836587322814;0,6828028884728538;0,6707675849157528;0,6790585718106446;0,6717495987158909;0,6886035313001605;0,6769553450957481;0,007592547986772732;455
272,2533543348312;39,85890433501067;0,25935850143432615;0,012512615854374215;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6715699384862263;0,6806632789515913;0,674511901577962;0,66140679326023;0,6683605242043327;0,6857448515645894;0,6841401444236427;0,6702326825354373;0,6864633493846977;0,685928303905832;0,6769021768294541;0,00842204861277567;456
649,0593090295791;103,44178274554172;0,4415342092514038;0,02914578510022517;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6742444503878042;0,6643487563519658;0,6699652313452795;0,6811981813319069;0,6651511099224392;0,698047606311848;0,6876170098956941;0,6598020861192833;0,678705189941145;0,6899411449973247;0,676902076660469;0,011819186948786298;457
518,1465346813202;77,78819727870597;0,29481050968170164;0,0173959813391429;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6820005349023803;0,6742444503878042;0,6651511099224392;0,6694303289649639;0,6782562182401711;0,6894891682267986;0,6785236694303289;0,6857448515645894;0,6736222578919208;0,6720171214553237;0,676847971098672;0,007089802647317572;458
1485,4533425331115;362,8622233575848;0,5571417570114136;0,03691321865316322;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6664883658732281;0,6868146563252207;0,6581973789783364;0,6667558170633859;0,6707675849157528;0,700722118213426;0,6801283765712758;0,6894891682267986;0,6709470304975923;0,6779026217228464;0,6768213118387862;0,012123471435960802;459
520,0343202352524;92,6124434298879;0,2917992353439331;0,017366918409627237;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6793260230008024;0,675849157528751;0,6721048408665419;0,6699652313452795;0,6753142551484355;0,6905589729874297;0,6787911206204867;0,6790585718106446;0,6722846441947565;0,6746923488496522;0,676794516635278;0,005490503525054122;460
585,0088545560836;189,12410698126126;0,4473323583602905;0,03716746999933694;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6811981813319069;0,673174645627173;0,6581973789783364;0,6763840599090666;0,6664883658732281;0,6959079967905857;0,6886868146563252;0,6683605242043327;0,6722846441947565;0,685928303905832;0,6766610915471543;0,010799099856687925;461
894,9746082782746;247,63433279443464;0,5844362497329711;0,04814370018582341;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6910938753677454;0,6820005349023803;0,673174645627173;0,6683605242043327;0,6785236694303289;0,6926985825086922;0,628510296870821;0,6785236694303289;0,6861958266452648;0,6869983948635634;0,676608001985063;0,017601849314198212;462
0,38094377517700195;0,05081634125797969;0,023940324783325195;0,0024452722546101356;DecisionTreeClassifier();;gini;;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6785236694303289;0,66140679326023;0,6696977801551217;0,6723722920566997;0,6755817063385932;0,6857448515645894;0,690291521797272;0,6779887670500133;0,6741573033707865;0,6800428036383093;0,6765807488661943;0,007693606574109848;463
757,697435426712;231,18334486961575;0,45691442489624023;0,022479480487857025;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6675581706338594;0,6729071944370153;0,6555228670767584;0,6841401444236427;0,6622091468307034;0,690291521797272;0,6854774003744316;0,6803958277614336;0,6821829855537721;0,6840556447298021;0,6764740903618691;0,010820626622033334;464
0,3917661666870117;0,05053492136467167;0,02711453437805176;0,0056811023381193775;DecisionTreeClassifier();balanced;gini;;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6779887670500133;0,6630115004011767;0,670500133725595;0,6707675849157528;0,6742444503878042;0,6865472051350628;0,6881519122760096;0,6787911206204867;0,6736222578919208;0,6800428036383093;0,6763667736042132;0,007216096727213027;465
216,23836348056793;31,077304107446693;0,17387187480926514;0,03244163457520816;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6868146563252207;0,6702326825354373;0,6581973789783364;0,6739769991976464;0,6656860123027547;0,698047606311848;0,6774538646696978;0,6651511099224392;0,6669341894060995;0,7001070090957732;0,6762601508745252;0,013587464954302379;466
286,69509053230286;70,07097047619853;0,19186785221099853;0,009535270773623313;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6814656325220647;0,6729071944370153;0,6707675849157528;0,6782562182401711;0,670500133725595;0,6830703396630114;0,6868146563252207;0,66140679326023;0,675227394328518;0,6819154628143392;0,6762331410231919;0,007191036450410328;467
617,6037631273269;69,03424623660426;0,47446815967559813;0,03917673768069994;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6822679860925381;0,6785236694303289;0,6635464027814924;0,6742444503878042;0,675849157528751;0,6683605242043327;0,6814656325220647;0,6721048408665419;0,6829855537720706;0,682450508293205;0,6761798725879129;0,006303521395702837;468
605,4419988155365;149,25252744673992;0,4481574773788452;0,036825835322342376;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,670500133725595;0,675849157528751;0,682535437282696;0,6726397432468575;0,6721048408665419;0,6943032896496389;0,675849157528751;0,6753142551484355;0,6669341894060995;0,675227394328518;0,6761257598711884;0,007194288778835301;469
1397,035350203514;494,8888859472084;0,5907332181930542;0,03412166309583221;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6710350361059106;0,6611393420700722;0,6769189622893822;0,6876170098956941;0,6715699384862263;0,6747793527681198;0,6846750468039583;0,6801283765712758;0,6754949170679507;0,6776350989834136;0,6760993081042004;0,007053614835598473;470
906,5287196397782;187,57355292398523;0,589287805557251;0,030634991548982447;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6918962289382188;0,6830703396630114;0,6787911206204867;0,6680930730141749;0,6734420968173308;0,6852099491842739;0,6269055897298743;0,6787911206204867;0,6851257356875334;0,6888710540395934;0,6760196308314984;0,01769561070739193;471
308,47054557800294;37,0825418288225;0,2626790523529053;0,017982466561798482;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6846750468039583;0,6737095480074886;0,6739769991976464;0,6713024872960685;0,6581973789783364;0,6841401444236427;0,6737095480074886;0,6793260230008024;0,6701444622792937;0,6910112359550562;0,6760192873949781;0,008750922453674979;472
1004,9666495323181;193,0000359454894;0,5881080150604248;0,015117953296751304;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6809307301417491;0,67718641347954;0,6659534634929125;0,6782562182401711;0,6710350361059106;0,6787911206204867;0,6721048408665419;0,6739769991976464;0,6712145532370252;0,6899411449973247;0,6759390520379308;0,006329834033658444;473
200,1165627002716;40,813636272923;0,16278471946716308;0,007657146103019148;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6779887670500133;0,6670232682535437;0,6723722920566997;0,6870821075153785;0,6739769991976464;0,6894891682267986;0,6729071944370153;0,6699652313452795;0,6819154628143392;0,6658640984483681;0,6758584589345082;0,00768162230023689;474
554,4005791187286;129,26740721656398;0,28081986904144285;0,007795091969318201;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,675849157528751;0,6702326825354373;0,664081305161808;0,6707675849157528;0,6734420968173308;0,7028617277346885;0,664081305161808;0,6691628777748061;0,6741573033707865;0,6936864633493847;0,6758322504350552;0,011981402624532999;475
543,5755886554718;73,80337872625712;0,4374967336654663;0,05023018497067179;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6836052420433271;0,6675581706338594;0,6726397432468575;0,6654185611125969;0,6611393420700722;0,6787911206204867;0,6841401444236427;0,6777213158598556;0,685928303905832;0,6813804173354735;0,6758322361252003;0,008230767970782801;476
280,93772077560425;46,560145733587255;0,28237347602844237;0,0184558832726847;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,67718641347954;0,6820005349023803;0,6664883658732281;0,6646162075421236;0,6718373896763841;0,67718641347954;0,6811981813319069;0,6670232682535437;0,6837881219903692;0,6867308721241305;0,6758055768653147;0,007478248934950805;477
194,13627717494964;37,00730230702276;0,1619737148284912;0,0099057476218924;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,691628777748061;0,675849157528751;0,6552554158866007;0,6726397432468575;0,6664883658732281;0,7076758491575288;0,6630115004011767;0,6747793527681198;0,6701444622792937;0,6803103263777421;0,6757782951267359;0,014150289583300958;478
191,9248685836792;42,39786471654072;0,1593719244003296;0,01067046972582165;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6836052420433271;0,670500133725595;0,6651511099224392;0,6696977801551217;0,6589997325488098;0,6940358384594811;0,6857448515645894;0,6729071944370153;0,6720171214553237;0,6845906902086677;0,6757249694520371;0,010262746361558002;479
170,71576459407805;41,88954823638753;0,16131224632263183;0,010406228512675026;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6726397432468575;0,6643487563519658;0,664081305161808;0,67718641347954;0,6675581706338594;0,7066060443968976;0,6785236694303289;0,6699652313452795;0,678705189941145;0,6768325307651151;0,6756447054752798;0,011610496382430524;480
204,00476531982423;38,79813716529477;0,18048994541168212;0,014894037979467886;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6849424979941161;0,6761166087189088;0,6659534634929125;0,6528483551751806;0,6680930730141749;0,6975127039315325;0,673174645627173;0,6790585718106446;0,6653290529695024;0,693151417870519;0,6756180390604664;0,012907936083713557;481
160,20187187194824;21,874860178971662;0,1542433261871338;0,008558238288629394;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6795934741909602;0,6766515110992244;0,6678256218240172;0,6795934741909602;0,6667558170633859;0,6918962289382188;0,6769189622893822;0,6662209146830703;0,6698769395398609;0,6808453718566078;0,6756178315675687;0,00766289777737765;482
1285,9550661087037;416,3049801777408;0,45092246532440183;0,0183070072020598;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6900240706071142;0,6678256218240172;0,67718641347954;0,6774538646696978;0,6563252206472319;0,7098154586787911;0,6675581706338594;0,6664883658732281;0,6725521669341894;0,6701444622792937;0,6755373815626963;0,014154041423170508;483
1101,0572788715363;371,76920601235935;0,4313751935958862;0,023970781941112976;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6956405456004279;0,6707675849157528;0,6667558170633859;0,6718373896763841;0,6616742444503878;0,690291521797272;0,664081305161808;0,6723722920566997;0,6800428036383093;0,6813804173354735;0,6754843921695901;0,010598285231579546;484
694,5924344539642;179,44693644835124;0,4535282850265503;0,08031177954611371;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6801283765712758;0,6715699384862263;0,6702326825354373;0,6729071944370153;0,6632789515913345;0,7012570205937416;0,6795934741909602;0,66140679326023;0,6725521669341894;0,6819154628143392;0,675484206141475;0,0107206952052058;485
803,3430615186692;240,47560981724018;0,4538872718811035;0,020965235903375352;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,67718641347954;0,6779887670500133;0,6726397432468575;0,6680930730141749;0,6501738432736026;0,7015244717838994;0,6945707408397968;0,6729071944370153;0,6746923488496522;0,6650615302300695;0,6754838126204622;0,013677704712975247;486
172,53803429603576;24,54468313395111;0,16474034786224365;0,0126859986191858;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6766515110992244;0,6694303289649639;0,6659534634929125;0,6793260230008024;0,6654185611125969;0,6967103503610591;0,6718373896763841;0,6699652313452795;0,6776350989834136;0,6813804173354735;0,675430837537211;0,008823800585563991;487
718,7977939128875;215,23565509753087;0,44095444679260254;0,01919547870816369;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6857448515645894;0,6683605242043327;0,6667558170633859;0,6696977801551217;0,6565926718373897;0,691628777748061;0,6787911206204867;0,6803958277614336;0,673354735152488;0,6829855537720706;0,6754307659879359;0,009894788860476657;488
745,8863063573838;160,4625283739759;0,5784003973007202;0,07414501873308124;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6814656325220647;0,6793260230008024;0,6734420968173308;0,6702326825354373;0,649638940893287;0,6953730944102702;0,6838726932334849;0,6755817063385932;0,6647940074906367;0,6803103263777421;0,6754037203619648;0,011634924011031961;489
365,043425822258;142,8639934949897;0,28517732620239256;0,024970481633694197;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6747793527681198;0,688954265846483;0,6688954265846483;0,6624765980208612;0,6595346349291255;0,6948381920299546;0,6846750468039583;0,6686279753944905;0,6712145532370252;0,6792402354200107;0,6753236281034678;0,010895292994561661;490
317,1295257806778;45,867656497215904;0,28724074363708496;0,053217142293783055;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6747793527681198;0,6723722920566997;0,674511901577962;0,6806632789515913;0,6589997325488098;0,6849424979941161;0,673174645627173;0,6787911206204867;0,6639914392723382;0,6902086677367576;0,6752434929154054;0,008739164361829069;491
338,4333722114563;91,41318204628529;0,2800232172012329;0,019579525017557043;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,67718641347954;0,6881519122760096;0,6729071944370153;0,6608718908799144;0,6635464027814924;0,69296603369885;0,67718641347954;0,6696977801551217;0,668004280363831;0,6819154628143392;0,6752433784365653;0,009822245602113438;492
729,4608364105225;180,19868543905804;0,4462413311004639;0,01881398313462101;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6795934741909602;0,6782562182401711;0,6790585718106446;0,6643487563519658;0,6573950254078631;0,6921636801283766;0,6787911206204867;0,67718641347954;0,6637239165329053;0,6816479400749064;0,675216511683782;0,009778447712538474;493
637,4000206232071;185,43190801448907;0,44120540618896487;0,08005696803443357;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6833377908531693;0,6713024872960685;0,6555228670767584;0,6723722920566997;0,6595346349291255;0,6881519122760096;0,6828028884728538;0,6820005349023803;0,6827180310326377;0,6738897806313536;0,6751633219527056;0,010256854452741689;494
312,89300825595853;42,484672730199364;0,26506314277648924;0,010353016736796289;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,67718641347954;0,6664883658732281;0,6803958277614336;0,6595346349291255;0,673174645627173;0,6865472051350628;0,6868146563252207;0,6691628777748061;0,6725521669341894;0,6795077581594435;0,6751364551999223;0,008258173699534434;495
178,14304263591765;29,183443969465422;0,16296758651733398;0,007329453841105579;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6753142551484355;0,6686279753944905;0,6675581706338594;0,6803958277614336;0,6737095480074886;0,6940358384594811;0,6683605242043327;0,6726397432468575;0,6797752808988764;0,6709470304975923;0,6751364194252847;0,007602123816766357;496
644,1414874553681;186,409609170167;0,4248886823654175;0,045267304033897296;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,686279753944905;0,6779887670500133;0,6809307301417491;0,6646162075421236;0,652313452794865;0,6854774003744316;0,6836052420433271;0,6750468039582777;0,6688068485821295;0,6762974852862493;0,675136269171807;0,010087234045921201;497
1121,649650168419;335,9168374831268;0,46158251762390134;0,044173513750680064;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6828028884728538;0,6702326825354373;0,664081305161808;0,6830703396630114;0,6576624765980209;0,6803958277614336;0,6878844610858519;0,6688954265846483;0,6631888710540396;0,6928838951310862;0,675109817404819;0,011225668648187135;498
136,7084175825119;15,329081549278904;0,16220731735229493;0,05064228201893279;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6654185611125969;0,6854774003744316;0,6672907194437016;0,6664883658732281;0,6721048408665419;0,6860123027547472;0,6763840599090666;0,6787911206204867;0,6682718031032637;0,6848582129481006;0,6751097387006164;0,007885013366579492;499
1001,6962970495224;184,1965787961165;0,5987011194229126;0,04485054036493651;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6750468039582777;0,6726397432468575;0,6723722920566997;0,6509761968440759;0,664081305161808;0,6865472051350628;0,6820005349023803;0,6849424979941161;0,680577849117175;0,6813804173354735;0,6750564845751927;0,010304502847885486;500
521,0908263444901;129,79337430772097;0,4336492300033569;0,035857348544632905;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6854774003744316;0,6726397432468575;0,662744049211019;0,6608718908799144;0,6611393420700722;0,682535437282696;0,6870821075153785;0,6688954265846483;0,6864633493846977;0,6821829855537721;0,6750031732103488;0,010393776404055794;501
572,8511691331863;154,46068270471494;0,4553005456924438;0,03773766631965095;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6860123027547472;0,6592671837389676;0,6547205135062851;0,6726397432468575;0,6656860123027547;0,7015244717838994;0,6918962289382188;0,6696977801551217;0,6706795077581594;0,6779026217228464;0,6750026365907857;0,013844156017151091;502
544,8823827505112;148,53068528942453;0,2873892307281494;0,02293450814604698;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6699652313452795;0,6774538646696978;0,6680930730141749;0,664081305161808;0,6573950254078631;0,6983150575020058;0,6860123027547472;0,6763840599090666;0,6768325307651151;0,6725521669341894;0,6747084617463946;0,010878912929500668;503
664,1992743730545;111,18898460462393;0,436096715927124;0,030019154573515568;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6844075956138005;0,6694303289649639;0,6664883658732281;0,6718373896763841;0,6624765980208612;0,6817330837122225;0,674511901577962;0,6801283765712758;0,6749598715890851;0,680577849117175;0,6746551360716958;0,006786805653210986;504
707,538247847557;178,43852511492003;0,43835601806640623;0,018699107479524864;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6793260230008024;0,6707675849157528;0,6723722920566997;0,6675581706338594;0,6696977801551217;0,6983150575020058;0,6814656325220647;0,6659534634929125;0,6583734617442483;0,6827180310326377;0,6746547497056105;0,01062582210382591;505
0,4246444463729858;0,023616283822919457;0,024047350883483885;0,0019751177501575908;DecisionTreeClassifier();balanced;entropy;;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,67718641347954;0,6710350361059106;0,6670232682535437;0,6713024872960685;0,6622091468307034;0,6886868146563252;0,6870821075153785;0,6672907194437016;0,6690743713215623;0,6853932584269663;0,67462836233297;0,008921312075521557;506
5,627429056167602;1,777257558130914;0,022600579261779784;0,006209098185417803;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);constant;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6766515110992244;0,6707675849157528;0,6696977801551217;0,673174645627173;0,6611393420700722;0,6940358384594811;0,6785236694303289;0,6729071944370153;0,6728196896736223;0,6765650080256822;0,6746282263893474;0,00793211316595176;507
5,657531833648681;1,7995029873815307;0,0354994535446167;0,012897981914873012;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);constant;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6766515110992244;0,6707675849157528;0,6696977801551217;0,673174645627173;0,6611393420700722;0,6940358384594811;0,6785236694303289;0,6729071944370153;0,6728196896736223;0,6765650080256822;0,6746282263893474;0,00793211316595176;507
5,686397433280945;1,80463385101339;0,03440248966217041;0,020897190235656345;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);constant;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6766515110992244;0,6707675849157528;0,6696977801551217;0,673174645627173;0,6611393420700722;0,6940358384594811;0,6785236694303289;0,6729071944370153;0,6728196896736223;0,6765650080256822;0,6746282263893474;0,00793211316595176;507
5,646694779396057;1,7952158037350456;0,018981099128723145;0,0070442403199257285;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);adaptive;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6766515110992244;0,6707675849157528;0,6696977801551217;0,673174645627173;0,6611393420700722;0,6940358384594811;0,6785236694303289;0,6729071944370153;0,6728196896736223;0,6765650080256822;0,6746282263893474;0,00793211316595176;507
5,654831671714783;1,8132887951707504;0,02487361431121826;0,012861039346320657;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);constant;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6766515110992244;0,6707675849157528;0,6696977801551217;0,673174645627173;0,6611393420700722;0,6940358384594811;0,6785236694303289;0,6729071944370153;0,6728196896736223;0,6765650080256822;0,6746282263893474;0,00793211316595176;507
5,6244041442871096;1,7398019549391195;0,027015304565429686;0,012496448548047472;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);adaptive;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6766515110992244;0,6707675849157528;0,6696977801551217;0,673174645627173;0,6611393420700722;0,6940358384594811;0,6785236694303289;0,6729071944370153;0,6728196896736223;0,6765650080256822;0,6746282263893474;0,00793211316595176;507
5,651379203796386;1,7992696040246192;0,01751117706298828;0,0026019437523281705;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);adaptive;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6766515110992244;0,6707675849157528;0,6696977801551217;0,673174645627173;0,6611393420700722;0,6940358384594811;0,6785236694303289;0,6729071944370153;0,6728196896736223;0,6765650080256822;0,6746282263893474;0,00793211316595176;507
5,67844717502594;1,824103122424521;0,03155138492584229;0,01292081440449936;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6766515110992244;0,6707675849157528;0,6696977801551217;0,673174645627173;0,6611393420700722;0,6940358384594811;0,6785236694303289;0,6729071944370153;0,6728196896736223;0,6765650080256822;0,6746282263893474;0,00793211316595176;507
491,6999038934708;111,1576853686236;0,3084131956100464;0,022590048090937554;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6857448515645894;0,6739769991976464;0,6664883658732281;0,6664883658732281;0,6723722920566997;0,686279753944905;0,6779887670500133;0,6611393420700722;0,6655965757089353;0,6894060995184591;0,6745481412857777;0,009436634942513558;515
334,3194939851761;141,30514099973595;0,193076491355896;0,009019407870026502;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6795934741909602;0,6753142551484355;0,6680930730141749;0,6632789515913345;0,6683605242043327;0,6870821075153785;0,6908264241775876;0,6838726932334849;0,668004280363831;0,6610486891385767;0,6745474472578097;0,009834016748416257;516
660,5509909391403;151,594133033632;0,4408320426940918;0,040639117280582775;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6608718908799144;0,6777213158598556;0,6742444503878042;0,6747793527681198;0,6755817063385932;0,6806632789515913;0,6774538646696978;0,67718641347954;0,664258962011771;0,682450508293205;0,6745211743640093;0,006476332026688021;517
1681,3171271324159;379,3875935379241;0,5855735301971435;0,06527489688113448;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,675849157528751;0,6790585718106446;0,6766515110992244;0,6734420968173308;0,6694303289649639;0,6844075956138005;0,6868146563252207;0,6814656325220647;0,6511503477795613;0,6669341894060995;0,6745204087867661;0,009771516554800718;518
992,3397315740585;300,02126628421126;0,43414528369903566;0,030142808544920813;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6656860123027547;0,6769189622893822;0,6651511099224392;0,6721048408665419;0,6680930730141749;0,6932334848890077;0,674511901577962;0,6726397432468575;0,6765650080256822;0,6795077581594435;0,6744411894294247;0,007755233523644425;519
1294,3514819860459;508,9282197547262;0,5917333602905274;0,05897749065433093;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6729071944370153;0,6632789515913345;0,6651511099224392;0,6852099491842739;0,670500133725595;0,6782562182401711;0,6857448515645894;0,6600695373094411;0,6765650080256822;0,685928303905832;0,6743611257906375;0,009110566875157872;520
342,39933252334595;70,64431090927266;0,2814410924911499;0,0235522789943256;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,688954265846483;0,6632789515913345;0,6606044396897566;0,679860925381118;0,6531158063653383;0,6937683872693233;0,6924311313185344;0,6632789515913345;0,6738897806313536;0,6741573033707865;0,6743339943055362;0,01353835277534536;521
1537,4735079050065;415,0014208501866;0,5772791862487793;0,07040196927683202;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6854774003744316;0,6766515110992244;0,6696977801551217;0,6616742444503878;0,6581973789783364;0,6878844610858519;0,6646162075421236;0,6782562182401711;0,6704119850187266;0,6899411449973247;0,6742808331941699;0,010602225727780903;522
324,04648728370665;53,659969339897756;0,27304036617279054;0,02340128236323745;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,688954265846483;0,662744049211019;0,6611393420700722;0,6785236694303289;0,6547205135062851;0,6924311313185344;0,6913613265579032;0,6616742444503878;0,6768325307651151;0,6741573033707865;0,6742538376526915;0,013070330343509474;523
734,29116897583;96,65824126210535;0,6344673156738281;0,056743828972250034;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6836052420433271;0,670500133725595;0,6777213158598556;0,6715699384862263;0,6520460016047072;0,6932334848890077;0,6713024872960685;0,6670232682535437;0,6762974852862493;0,6789727126805778;0,6742272070125158;0,010303443872239958;524
0,46956279277801516;0,04511860209422857;0,03060126304626465;0,011027642807316102;DecisionTreeClassifier();;entropy;;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6742444503878042;0,6715699384862263;0,6670232682535437;0,6710350361059106;0,6608718908799144;0,6886868146563252;0,6870821075153785;0,6678256218240172;0,6693418940609952;0,6843231674692349;0,674200418963935;0,008880366368320616;525
259,14119935035706;38,277697571708465;0,2592494249343872;0,012157714963898466;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,698047606311848;0,6664883658732281;0,6729071944370153;0,6592671837389676;0,6547205135062851;0,6897566194169564;0,6822679860925381;0,6656860123027547;0,6618512573568753;0,6910112359550562;0,6742003974991524;0,014307292758880857;526
0,22329280376434327;0,023782332912218485;0,03228592872619629;0,00315098932411692;DecisionTreeClassifier();;gini;4;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,2292651653289795;0,025271537918187398;0,03620483875274658;0,004821592007526238;DecisionTreeClassifier();;gini;4;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,2594869613647461;0,024640500126909992;0,033802342414855954;0,004802182097942674;DecisionTreeClassifier();;gini;4;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,2527043104171753;0,030751862378002953;0,04131350517272949;0,008581878643297979;DecisionTreeClassifier();balanced;gini;4;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,20767419338226317;0,03114519583283345;0,04006514549255371;0,014492769252537924;DecisionTreeClassifier();;gini;4;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,20089330673217773;0,02459836397282558;0,03779888153076172;0,006092033182886658;DecisionTreeClassifier();;gini;4;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,2521883726119995;0,039726230334427716;0,03984248638153076;0,008707886774428642;DecisionTreeClassifier();;gini;4;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,24986670017242432;0,04307671958204991;0,04557173252105713;0,010910615965972726;DecisionTreeClassifier();balanced;gini;4;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,22972655296325684;0,038936034058284615;0,043388986587524415;0,014625774592400609;DecisionTreeClassifier();;gini;4;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,2605681657791138;0,029244547672239246;0,03886713981628418;0,007729258725343839;DecisionTreeClassifier();balanced;gini;4;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,20944421291351317;0,04119528711906288;0,03294048309326172;0,005547391015409183;DecisionTreeClassifier();balanced;gini;4;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,22894642353057862;0,04219997796465114;0,03775985240936279;0,004495710042644163;DecisionTreeClassifier();balanced;gini;4;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,26959469318389895;0,034848258921338394;0,036379122734069826;0,008733282597860431;DecisionTreeClassifier();balanced;gini;4;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,22350168228149414;0,03655399245995405;0,04094123840332031;0,009268922442048995;DecisionTreeClassifier();;gini;4;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,24628937244415283;0,044924345284979454;0,031972646713256836;0,0053440773952488484;DecisionTreeClassifier();balanced;gini;4;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,2676879644393921;0,03486044410161852;0,033395028114318846;0,004405664115150674;DecisionTreeClassifier();;gini;4;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,23756804466247558;0,02372327824197948;0,03923804759979248;0,010482744025502599;DecisionTreeClassifier();balanced;gini;4;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
0,23478055000305176;0,03644311696239975;0,043877029418945314;0,007594232927056727;DecisionTreeClassifier();balanced;gini;4;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6830703396630114;0,6723722920566997;0,6696977801551217;0,6729071944370153;0,6664883658732281;0,6833377908531693;0,6742444503878042;0,6656860123027547;0,6749598715890851;0,6779026217228464;0,6740666719040735;0,0057752255833736325;527
446,518893623352;159,45212845402185;0,2731987476348877;0,015688438601969126;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6811981813319069;0,6753142551484355;0,6822679860925381;0,6584648301684942;0,6539181599358117;0,6935009360791655;0,6769189622893822;0,6672907194437016;0,6685393258426966;0,6827180310326377;0,6740131387364772;0,011428757905537875;545
118,06870882511139;15,928572095350809;0,1320185422897339;0,007094049430217693;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6664883658732281;0,679860925381118;0,6635464027814924;0,6622091468307034;0,664081305161808;0,6782562182401711;0,6881519122760096;0,6795934741909602;0,6693418940609952;0,687800963081862;0,6739330607878348;0,009482912035776914;546
951,7441070318222;315,20857208399735;0,42636220455169677;0,02725971746546487;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6969778015512169;0,6598020861192833;0,6723722920566997;0,6718373896763841;0,6755817063385932;0,679860925381118;0,6726397432468575;0,6675581706338594;0,6690743713215623;0,6728196896736223;0,6738524175999195;0,009178906738983875;547
323,8377982854843;96,42375055015779;0,26425509452819823;0,02617357262015457;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6801283765712758;0,6632789515913345;0,6739769991976464;0,6517785504145494;0,6699652313452795;0,6908264241775876;0,6787911206204867;0,6670232682535437;0,6757624398073836;0,6861958266452648;0,6737727188624352;0,010810442058215285;548
353,65888996124266;130,24363373288256;0,283285117149353;0,02810541786233677;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6865472051350628;0,6814656325220647;0,6635464027814924;0,6766515110992244;0,6656860123027547;0,6790585718106446;0,6654185611125969;0,6696977801551217;0,6728196896736223;0,6768325307651151;0,6737723897357698;0,007247318534570561;549
306,747204208374;44,512962194538424;0,27762370109558104;0,026010004628086596;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,675849157528751;0,6761166087189088;0,6624765980208612;0,6619416956405456;0,6656860123027547;0,6959079967905857;0,6651511099224392;0,6715699384862263;0,6741573033707865;0,6883360085607276;0,6737192429342587;0,010602543671727882;550
234,70744652748107;67,33617671196906;0,18772106170654296;0,029830254866719308;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,682535437282696;0,6619416956405456;0,6755817063385932;0,652313452794865;0,6686279753944905;0,6945707408397968;0,6852099491842739;0,6579299277881786;0,6712145532370252;0,6872659176029963;0,673719135610346;0,013076479504770023;551
191,90508697032928;43,54034325154907;0,1513214111328125;0,007529312005860146;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6854774003744316;0,6651511099224392;0,6616742444503878;0,6630115004011767;0,6568601230275475;0,6908264241775876;0,691628777748061;0,6726397432468575;0,6650615302300695;0,6840556447298021;0,673638649830836;0,012457686294550088;552
287,3488302230835;52,490948661987936;0,27245006561279295;0,025429355296174672;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6761166087189088;0,6787911206204867;0,6688954265846483;0,6571275742177053;0,664081305161808;0,6913613265579032;0,690291521797272;0,6688954265846483;0,6669341894060995;0,673354735152488;0,6735849234801968;0,010382947419048221;553
578,6335982561111;156,0657926033562;0,4726043462753296;0,052523103325918134;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6734420968173308;0,6750468039582777;0,6822679860925381;0,6563252206472319;0,6670232682535437;0,6921636801283766;0,6795934741909602;0,6753142551484355;0,6637239165329053;0,6706795077581594;0,6735580209527761;0,009531226892907493;554
688,7340722084045;184,78572527891504;0,3029796123504639;0,029638101118437548;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6737095480074886;0,6865472051350628;0,6552554158866007;0,6654185611125969;0,6734420968173308;0,6811981813319069;0,6664883658732281;0,6787911206204867;0,6629213483146067;0,6899411449973247;0,6733712988096633;0,010425573248753803;555
0,41399962902069093;0,0680963119171322;0,026308655738830566;0,006398720651270851;DecisionTreeClassifier();balanced;gini;;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6742444503878042;0,66140679326023;0,6721048408665419;0,6675581706338594;0,6686279753944905;0,688954265846483;0,6849424979941161;0,6659534634929125;0,6744248261102194;0,6754949170679507;0,6733712201054607;0,007994827989976453;556
5,854197144508362;2,3572332609013933;0,023993778228759765;0,010390533176151379;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);constant;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6750468039582777;0,6686279753944905;0,6713024872960685;0,670500133725595;0,6576624765980209;0,6951056432201124;0,6766515110992244;0,6718373896763841;0,6720171214553237;0,6749598715890851;0,6733711414012581;0,008800277587668588;557
5,867339539527893;2,3672497389634777;0,024462318420410155;0,011031867642180046;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);adaptive;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6750468039582777;0,6686279753944905;0,6713024872960685;0,670500133725595;0,6576624765980209;0,6951056432201124;0,6766515110992244;0,6718373896763841;0,6720171214553237;0,6749598715890851;0,6733711414012581;0,008800277587668588;557
5,837744736671448;2,3415027732673095;0,033428192138671875;0,01570493024675968;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);adaptive;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6750468039582777;0,6686279753944905;0,6713024872960685;0,670500133725595;0,6576624765980209;0,6951056432201124;0,6766515110992244;0,6718373896763841;0,6720171214553237;0,6749598715890851;0,6733711414012581;0,008800277587668588;557
5,88146402835846;2,3822971747254753;0,04783840179443359;0,04851010163015;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6750468039582777;0,6686279753944905;0,6713024872960685;0,670500133725595;0,6576624765980209;0,6951056432201124;0,6766515110992244;0,6718373896763841;0,6720171214553237;0,6749598715890851;0,6733711414012581;0,008800277587668588;557
5,779451131820679;2,316845529675207;0,02013561725616455;0,0043301363010337275;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);constant;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6750468039582777;0,6686279753944905;0,6713024872960685;0,670500133725595;0,6576624765980209;0,6951056432201124;0,6766515110992244;0,6718373896763841;0,6720171214553237;0,6749598715890851;0,6733711414012581;0,008800277587668588;557
5,866585731506348;2,302409626281099;0,019696497917175294;0,004608052864800296;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);adaptive;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6750468039582777;0,6686279753944905;0,6713024872960685;0,670500133725595;0,6576624765980209;0,6951056432201124;0,6766515110992244;0,6718373896763841;0,6720171214553237;0,6749598715890851;0,6733711414012581;0,008800277587668588;557
5,804266333580017;2,3261778085457494;0,033489227294921875;0,017966345756213364;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);constant;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6750468039582777;0,6686279753944905;0,6713024872960685;0,670500133725595;0,6576624765980209;0,6951056432201124;0,6766515110992244;0,6718373896763841;0,6720171214553237;0,6749598715890851;0,6733711414012581;0,008800277587668588;557
5,798021817207337;2,338484615866918;0,022316956520080568;0,0068929803809114915;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);constant;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6750468039582777;0,6686279753944905;0,6713024872960685;0,670500133725595;0,6576624765980209;0,6951056432201124;0,6766515110992244;0,6718373896763841;0,6720171214553237;0,6749598715890851;0,6733711414012581;0,008800277587668588;557
1728,0823520421982;389,6835839345896;0,62744140625;0,048717011890785394;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6878844610858519;0,6678256218240172;0,6670232682535437;0,6386734420968173;0,6442899170901311;0,6926985825086922;0,6900240706071142;0,670500133725595;0,6813804173354735;0,693151417870519;0,6733451332397754;0,018562991309377375;565
225,11945109367372;49,45357840485887;0,1831312894821167;0,01608593577316437;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6822679860925381;0,6702326825354373;0,6809307301417491;0,6571275742177053;0,6619416956405456;0,6945707408397968;0,6924311313185344;0,6600695373094411;0,6556982343499197;0,6781701444622793;0,6733440456907946;0,013658808485180968;566
210,3055792093277;62,08681283290519;0,18303232192993163;0,016020840574392292;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6777213158598556;0,664081305161808;0,6686279753944905;0,6691628777748061;0,6565926718373897;0,7055362396362663;0,6750468039582777;0,6571275742177053;0,671482075976458;0,6875334403424291;0,6732912280159487;0,013900645686101212;567
876,3437746763229;237,31225723864816;0,43594796657562257;0,04136697211513791;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,7015244717838994;0,6606044396897566;0,6670232682535437;0,6713024872960685;0,6643487563519658;0,6795934741909602;0,6699652313452795;0,6715699384862263;0,6738897806313536;0,6728196896736223;0,6732641537702676;0,010656441911970852;568
203,72099928855897;53,25940830964623;0,15721633434295654;0,002996343783164748;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6857448515645894;0,6664883658732281;0,6662209146830703;0,6624765980208612;0,670500133725595;0,6985825086921637;0,6675581706338594;0,6766515110992244;0,6709470304975923;0,6672017121455324;0,6732371796935716;0,010499828634964726;569
441,3345211029053;104,39631625233254;0,2961719989776611;0,026558475774313577;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6822679860925381;0,6678256218240172;0,6672907194437016;0,6726397432468575;0,6646162075421236;0,6787911206204867;0,6787911206204867;0,6608718908799144;0,6706795077581594;0,6883360085607276;0,6732109926589013;0,00818523824823587;570
0,375879693031311;0,030380497496487066;0,025093841552734374;0,003146568611799269;DecisionTreeClassifier();;gini;;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6737095480074886;0,6592671837389676;0,673174645627173;0,6667558170633859;0,6686279753944905;0,6884193634661674;0,6846750468039583;0,6667558170633859;0,6746923488496522;0,6754949170679507;0,6731572663082621;0,008179995468436419;571
261,3125557661057;65,7536559343611;0,19627845287322998;0,014776312208771738;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6694303289649639;0,6811981813319069;0,6646162075421236;0,6739769991976464;0,6512436480342337;0,6961754479807435;0,679860925381118;0,6638138539716502;0,6749598715890851;0,6760299625468165;0,6731305426540287;0,011427792453486543;572
246,88785803318024;53,89142390620747;0,19189612865447997;0,014965088249926501;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6678256218240172;0,6584648301684942;0,6696977801551217;0,6742444503878042;0,6619416956405456;0,7025942765445307;0,6737095480074886;0,6643487563519658;0,6744248261102194;0,6837881219903692;0,6731039907180557;0,012009408826301648;573
0,24544448852539064;0,040545630768825176;0,03120095729827881;0,0030862432235458535;DecisionTreeClassifier();balanced;entropy;4;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,25169484615325927;0,013909376466904601;0,02920663356781006;0,00367572467830346;DecisionTreeClassifier();;entropy;4;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,2844314813613892;0,043017777272999255;0,035318636894226076;0,005620643575232204;DecisionTreeClassifier();;entropy;4;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,23596181869506835;0,042372576898216746;0,031484127044677734;0,0054169278137566204;DecisionTreeClassifier();balanced;entropy;4;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,28877279758453367;0,03303667884619713;0,0417959451675415;0,007117092444586106;DecisionTreeClassifier();balanced;entropy;4;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,2771612644195557;0,025999977281222116;0,035729718208312986;0,005311567385361063;DecisionTreeClassifier();;entropy;4;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,2250767707824707;0,01919317026712379;0,039174556732177734;0,010001296522743933;DecisionTreeClassifier();;entropy;4;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,27263214588165285;0,024184704845197788;0,0432098388671875;0,006355131110455438;DecisionTreeClassifier();balanced;entropy;4;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,2323173999786377;0,028603640940885397;0,036360549926757815;0,00923801656248166;DecisionTreeClassifier();;entropy;4;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,2077850580215454;0,033683051484790866;0,04281318187713623;0,014196516227667667;DecisionTreeClassifier();;entropy;4;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,20449364185333252;0,03254288831845483;0,029461121559143065;0,006236271422417755;DecisionTreeClassifier();balanced;entropy;4;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,2477271318435669;0,04158110785771172;0,037182283401489255;0,006405193362635931;DecisionTreeClassifier();;entropy;4;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,2189202070236206;0,028036699144582136;0,030237412452697753;0,006115523944150392;DecisionTreeClassifier();balanced;entropy;4;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,229394268989563;0,020021234140668264;0,03427357673645019;0,00713323505195192;DecisionTreeClassifier();;entropy;4;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,2813991069793701;0,022851956940163218;0,030179572105407716;0,004400575270696288;DecisionTreeClassifier();balanced;entropy;4;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,19883615970611573;0,02493692009665698;0,02729218006134033;0,0042437402599005;DecisionTreeClassifier();balanced;entropy;4;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,21586177349090577;0,03172219554402308;0,04052393436431885;0,00686802494300109;DecisionTreeClassifier();balanced;entropy;4;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
0,26649675369262693;0,025260571435437258;0,04243524074554443;0,005457890187901606;DecisionTreeClassifier();;entropy;4;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,679860925381118;0,6683605242043327;0,6696977801551217;0,6696977801551217;0,6648836587322814;0,6894891682267986;0,6729071944370153;0,6662209146830703;0,6722846441947565;0,6776350989834136;0,673103768915303;0,007042917124178326;574
902,8667504549027;179,55970909368466;0,4526466608047485;0,044695666767681164;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6777213158598556;0,6683605242043327;0,6646162075421236;0,6571275742177053;0,6694303289649639;0,6913613265579032;0,6795934741909602;0,674511901577962;0,6688068485821295;0,6789727126805778;0,6730502214378513;0,009027229040523289;592
280,7737039804459;94,42237422254954;0,2036518335342407;0,014705607303085762;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6485691361326558;0,674511901577962;0,6750468039582777;0,6573950254078631;0,6774538646696978;0,7028617277346885;0,679860925381118;0,6702326825354373;0,6666666666666666;0,6776350989834136;0,6730233833047781;0,013692105086108295;593
329,3000715494156;80,89286264602679;0,27743756771087646;0,020974647801578813;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6857448515645894;0,6710350361059106;0,6656860123027547;0,675849157528751;0,673174645627173;0,679860925381118;0,6630115004011767;0,6664883658732281;0,6773675762439807;0,6717495987158909;0,6729967669744574;0,006616780649819992;594
1253,2200630664825;598,2703072880306;0,41679141521453855;0,04096052683612465;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6860123027547472;0,6713024872960685;0,6852099491842739;0,6606044396897566;0,6664883658732281;0,6715699384862263;0,6734420968173308;0,6723722920566997;0,6556982343499197;0,6872659176029963;0,6729966024111247;0,010113543656258245;595
205,20714118480683;57,66321384415625;0,17190394401550294;0,008701024864824177;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6868146563252207;0,6654185611125969;0,6680930730141749;0,6531158063653383;0,6667558170633859;0,6993848622626371;0,6710350361059106;0,6779887670500133;0,6688068485821295;0,6725521669341894;0,6729965594815597;0,012039371436155981;596
832,0537328958511;159,01263052524556;0,5914812088012695;0,054683420558614734;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6943032896496389;0,6576624765980209;0,6670232682535437;0,6779887670500133;0,6576624765980209;0,6828028884728538;0,6737095480074886;0,6713024872960685;0,6768325307651151;0,6704119850187266;0,6729699717709491;0,010515594343578122;597
221,5882476568222;51,71584964451029;0,19456162452697753;0,02619385865264911;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6787911206204867;0,658732281358652;0,6608718908799144;0,6779887670500133;0,6707675849157528;0,6878844610858519;0,6747793527681198;0,6734420968173308;0,6629213483146067;0,6835205992509363;0,6729699503061666;0,00922620888623767;598
0,39382712841033934;0,022530973985879367;0,02432703971862793;0,005866280282271052;DecisionTreeClassifier();balanced;gini;;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6715699384862263;0,6598020861192833;0,6710350361059106;0,6694303289649639;0,6670232682535437;0,6894891682267986;0,6838726932334849;0,6686279753944905;0,6701444622792937;0,6784376672017122;0,6729432624265708;0,008218684921381406;599
1155,3653245449066;303,7070312263921;0,5013386249542237;0,056653052321420615;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6905589729874297;0,6672907194437016;0,6630115004011767;0,6464295266113934;0,6820005349023803;0,6739769991976464;0,690291521797272;0,6595346349291255;0,6768325307651151;0,6789727126805778;0,6728899653715817;0,01326344995967703;600
0,38850176334381104;0,06021680003269486;0,02484550476074219;0,003549586743627993;DecisionTreeClassifier();;gini;;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6715699384862263;0,658732281358652;0,6721048408665419;0,6683605242043327;0,6680930730141749;0,6886868146563252;0,6838726932334849;0,6686279753944905;0,6698769395398609;0,6789727126805778;0,6728897793434667;0,008250626509378306;601
195,15372929573059;86,5299550348878;0,15771348476409913;0,01389230305175336;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6699652313452795;0,6688954265846483;0,6643487563519658;0,6713024872960685;0,6565926718373897;0,6822679860925381;0,6656860123027547;0,6873495587055363;0,6784376672017122;0,6837881219903692;0,6728633919708262;0,009295419988428803;602
873,7057278633117;146,78293115197496;0,6073962450027466;0,09509212526432372;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6694303289649639;0,6785236694303289;0,662744049211019;0,652313452794865;0,6630115004011767;0,6876170098956941;0,675849157528751;0,6806632789515913;0,6792402354200107;0,6789727126805778;0,6728365395278978;0,010153760506200392;603
200,12233493328094;55,94185384651914;0,1749906063079834;0,012388414684481442;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6795934741909602;0,6811981813319069;0,6766515110992244;0,6619416956405456;0,6386734420968173;0,6822679860925381;0,6865472051350628;0,6579299277881786;0,671482075976458;0,6918138041733547;0,6728099303525046;0,015089889830314814;604
511,1272516965866;131,32623568218114;0,2788779497146606;0,020203284888451054;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,670500133725595;0,664081305161808;0,6662209146830703;0,662744049211019;0,6659534634929125;0,7004546670232683;0,6721048408665419;0,6630115004011767;0,6765650080256822;0,685928303905832;0,6727564186496906;0,0114898817700776;605
849,3571061372757;270,5912399368104;0,41886472702026367;0,02606372312700861;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6860123027547472;0,6723722920566997;0,6662209146830703;0,662744049211019;0,6536507087456539;0,6894891682267986;0,6648836587322814;0,6710350361059106;0,6749598715890851;0,6856607811663992;0,6727028783271665;0,010955053845619836;606
625,7340011358261;124,63318211227902;0,4618037939071655;0,033817663806788106;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,662744049211019;0,6624765980208612;0,6793260230008024;0,6734420968173308;0,6664883658732281;0,6782562182401711;0,6753142551484355;0,6779887670500133;0,6639914392723382;0,6867308721241305;0,672675868475833;0,00790603388803343;607
174,2810249567032;53,16042537520386;0,1451237678527832;0,009855646047497802;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6838726932334849;0,6696977801551217;0,6635464027814924;0,6531158063653383;0,6769189622893822;0,686279753944905;0,6870821075153785;0,6651511099224392;0,6663991439272338;0,6744248261102194;0,6726488586244995;0,01053499480964684;608
951,6932509183883;348,0160752810586;0,47642126083374026;0,041495266949266876;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,691628777748061;0,6702326825354373;0,6718373896763841;0,6774538646696978;0,648301684942498;0,6935009360791655;0,6555228670767584;0,6648836587322814;0,6819154628143392;0,6706795077581594;0,6725956832032782;0,013640871445426313;609
1736,3660210609437;554,8491353665222;0,5708488941192627;0,049603098304439396;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6584648301684942;0,6718373896763841;0,6646162075421236;0,6811981813319069;0,6517785504145494;0,69296603369885;0,6918962289382188;0,6723722920566997;0,6623863028357411;0,6784376672017122;0,672595368386468;0,0130274955847486;610
738,6442419767379;123,38472347626173;0,5642354488372803;0,050236929478790854;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6932334848890077;0,6571275742177053;0,6686279753944905;0,6718373896763841;0,664081305161808;0,6795934741909602;0,6723722920566997;0,6710350361059106;0,6773675762439807;0,6701444622792937;0,6725420570216241;0,00913344892678361;611
1211,0231462717056;355,954014535175;0,45434842109680174;0,031291213363860496;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6801283765712758;0,6782562182401711;0,675849157528751;0,658732281358652;0,6651511099224392;0,6793260230008024;0,6707675849157528;0,6734420968173308;0,6704119850187266;0,6730872124130551;0,6725152045786957;0,006334706049109299;612
164,21404094696044;52,61423709677165;0,14614782333374024;0,007638302145814493;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,670500133725595;0,6557903182669163;0,6761166087189088;0,6699652313452795;0,6624765980208612;0,6953730944102702;0,6734420968173308;0,6592671837389676;0,6712145532370252;0,6883360085607276;0,6722481826841882;0,01163682632058051;613
342,3569185256958;59,3796232574991;0,30109200477600095;0,025550079182848903;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6755817063385932;0,675849157528751;0,6549879646964429;0,6568601230275475;0,664081305161808;0,6951056432201124;0,6643487563519658;0,6739769991976464;0,6677367576243981;0,6934189406099518;0,6721947353757217;0,012968667700933417;614
1501,5258822917938;412,0171466545222;0,5688563585281372;0,04283211275825627;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6721048408665419;0,6418828563787109;0,6718373896763841;0,6691628777748061;0,6718373896763841;0,6828028884728538;0,6846750468039583;0,6830703396630114;0,6704119850187266;0,6741573033707865;0,6721942917702164;0,011497240390009014;615
459,9650254249573;151,13126341479244;0,29458601474761964;0,02677193361466285;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6852099491842739;0,670500133725595;0,6702326825354373;0,6563252206472319;0,6547205135062851;0,6940358384594811;0,6795934741909602;0,6678256218240172;0,6639914392723382;0,678705189941145;0,6721140063286765;0,011805872400039443;616
876,5792148590087;292,59672812754195;0,592562460899353;0,05787035453824245;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6801283765712758;0,6512436480342337;0,6820005349023803;0,6777213158598556;0,6549879646964429;0,6870821075153785;0,6766515110992244;0,6656860123027547;0,6623863028357411;0,6827180310326377;0,6720605804849926;0,011896578402912002;617
1284,7128458976745;412,1626446136678;0,444021201133728;0,034216903777900425;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6811981813319069;0,6691628777748061;0,6763840599090666;0,6777213158598556;0,6552554158866007;0,6961754479807435;0,6643487563519658;0,6651511099224392;0,6658640984483681;0,6693418940609952;0,6720603157526748;0,01076833265078845;618
1518,0742740631104;339,38197735272183;0,5628616094589234;0,04786587606718418;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6721048408665419;0,6622091468307034;0,6670232682535437;0,6750468039582777;0,6501738432736026;0,6900240706071142;0,6721048408665419;0,6713024872960685;0,671482075976458;0,6886035313001605;0,6720074909229014;0,010989146284819583;619
679,0160132646561;157,94178462410173;0,45062623023986814;0,050436300297753714;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6694303289649639;0,6662209146830703;0,6616742444503878;0,6680930730141749;0,6710350361059106;0,6836052420433271;0,6699652313452795;0,6726397432468575;0,6594435527019796;0,6934189406099518;0,6715526307165903;0,00957331023427125;620
702,4010411024094;231,15559696492164;0,43074114322662355;0,0470712631358474;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6656860123027547;0,6683605242043327;0,66140679326023;0,6664883658732281;0,6691628777748061;0,6828028884728538;0,6702326825354373;0,6806632789515913;0,6615837346174425;0,6891385767790262;0,6715525734771702;0,008937904302326612;621
261,67570385932925;25,436351385685597;0,2715889930725098;0,024112893416701406;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6894891682267986;0,6680930730141749;0,6729071944370153;0,6622091468307034;0,6589997325488098;0,6820005349023803;0,6790585718106446;0,6632789515913345;0,6519529159978599;0,6875334403424291;0,6715522729702151;0,012057717096052172;622
325,9161199092865;102,35329459067871;0,1909276247024536;0,00521051520197552;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6608718908799144;0,6766515110992244;0,670500133725595;0,6638138539716502;0,6672907194437016;0,6846750468039583;0,6820005349023803;0,6844075956138005;0,6637239165329053;0,660781166399144;0,6714716369372276;0,0091820004654764;623
658,2042972564698;163,0693172096574;0,45477445125579835;0,03636909868223474;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6747793527681198;0,6560577694570741;0,6573950254078631;0,6573950254078631;0,6624765980208612;0,6945707408397968;0,679860925381118;0,6664883658732281;0,6749598715890851;0,6902086677367576;0,6714192342481766;0,013106255758462904;624
217,44581570625306;50,08853902469761;0,184456467628479;0,015057986053434039;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6766515110992244;0,6589997325488098;0,6571275742177053;0,662744049211019;0,6680930730141749;0,6894891682267986;0,6672907194437016;0,6729071944370153;0,6816479400749064;0,6792402354200107;0,6714191197693367;0,00991851868986142;625
168,07755937576295;52,77240369035764;0,1424208402633667;0,008161877959184348;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6683605242043327;0,6680930730141749;0,6563252206472319;0,6739769991976464;0,6563252206472319;0,6838726932334849;0,6846750468039583;0,67718641347954;0,6690743713215623;0,6762974852862493;0,6714187047835412;0,009359385591083517;626
617,0964937925339;90,67358470495894;0,43187129497528076;0,038427539436302144;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6766515110992244;0,6790585718106446;0,6683605242043327;0,6793260230008024;0,6579299277881786;0,6750468039582777;0,6715699384862263;0,6622091468307034;0,6706795077581594;0,6730872124130551;0,6713919167349605;0,00664003141334299;627
300,324285364151;39,67488974024298;0,30962343215942384;0,015859975680642856;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6814656325220647;0,6811981813319069;0,6707675849157528;0,6664883658732281;0,6563252206472319;0,6793260230008024;0,6750468039582777;0,6611393420700722;0,6653290529695024;0,6768325307651151;0,6713918738053953;0,008347841850058393;628
21,778888034820557;2,7485127546454775;0,025764894485473634;0,007175159828751306;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6729071944370153;0,6713024872960685;0,6654185611125969;0,6651511099224392;0,6552554158866007;0,690291521797272;0,6737095480074886;0,670500133725595;0,6690743713215623;0,6800428036383093;0,6713653147144947;0,008836757993041035;629
837,5922749757767;278,791258286104;0,5500019550323486;0,05997982836360741;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6809307301417491;0,6581973789783364;0,6491040385129714;0,6616742444503878;0,6544530623161273;0,7017919229740572;0,6777213158598556;0,6710350361059106;0,6666666666666666;0,6915462814339219;0,6713120677439984;0,015924835727652936;630
1031,2162458658217;250,12847562801844;0,43598620891571044;0,03424761847095006;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6854774003744316;0,673174645627173;0,6568601230275475;0,6517785504145494;0,6557903182669163;0,6854774003744316;0,6886868146563252;0,662744049211019;0,6738897806313536;0,6792402354200107;0,6713119318003757;0,012965019952555978;631
614,5052293539047;127,8607354257318;0,4539003610610962;0,037261803681484004;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6774538646696978;0,67718641347954;0,6672907194437016;0,6801283765712758;0,6507087456539181;0,6833377908531693;0,6707675849157528;0,6675581706338594;0,6685393258426966;0,6698769395398609;0,6712847931603472;0,008714192474817438;632
0,46388232707977295;0,06093373826599197;0,025631427764892578;0,0042821468064990495;DecisionTreeClassifier();;entropy;;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6787911206204867;0,6579299277881786;0,6729071944370153;0,6624765980208612;0,6611393420700722;0,6846750468039583;0,6801283765712758;0,66140679326023;0,6690743713215623;0,6837881219903692;0,6712316892884009;0,009664976900792056;633
770,1148399114609;175,91359563439715;0,5760162830352783;0,030312845041399594;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6806632789515913;0,6622091468307034;0,6536507087456539;0,6611393420700722;0,6638138539716502;0,6977801551216903;0,6932334848890077;0,6648836587322814;0,6615837346174425;0,6730872124130551;0,6712044576343148;0,014007312038520242;634
262,9679641723633;60,766168682124906;0,19371335506439208;0,021875740724184464;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6828028884728538;0,6833377908531693;0,6766515110992244;0,6525809039850228;0,6632789515913345;0,67718641347954;0,6670232682535437;0,6793260230008024;0,6631888710540396;0,6666666666666666;0,6712043288456198;0,009618364207241303;635
258,1360278606415;61,45328087514888;0,19524624347686767;0,009622634935261951;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6672907194437016;0,6691628777748061;0,6747793527681198;0,6547205135062851;0,6525809039850228;0,7036640813051618;0,6795934741909602;0,6694303289649639;0,6631888710540396;0,6771000535045479;0,6711511176497609;0,013700189641887262;636
855,3594950437546;235,34886350838755;0,5909242153167724;0,045928730333014416;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6878844610858519;0,662744049211019;0,6528483551751806;0,6600695373094411;0,6565926718373897;0,7009895694035838;0,6913613265579032;0,6675581706338594;0,651685393258427;0,6792402354200107;0,6710973769892667;0,016662649402255817;637
246,3421897172928;77,62139536606315;0,18927242755889892;0,0105752847814969;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6696977801551217;0,673174645627173;0,6560577694570741;0,6753142551484355;0,6525809039850228;0,6983150575020058;0,673174645627173;0,664081305161808;0,6784376672017122;0,6693418940609952;0,6710175923926521;0,012018094321531045;638
0,5062047481536865;0,14756668242491103;0,028391265869140626;0,008292301423843336;DecisionTreeClassifier();balanced;entropy;;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6774538646696978;0,6579299277881786;0,6713024872960685;0,662744049211019;0,6598020861192833;0,6846750468039583;0,6806632789515913;0,6608718908799144;0,6706795077581594;0,6835205992509363;0,6709642738728807;0,009725967668692012;639
664,636180973053;167,8007054041821;0,45596840381622317;0,04282154362232405;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6686279753944905;0,6616742444503878;0,6737095480074886;0,6742444503878042;0,6555228670767584;0,6739769991976464;0,6739769991976464;0,6774538646696978;0,6776350989834136;0,6728196896736223;0,6709641737038956;0,006758005334129056;640
542,4538328170777;210,473239695871;0,29231939315795896;0,02649532713528436;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6873495587055363;0,6512436480342337;0,664081305161808;0,6664883658732281;0,6509761968440759;0,6913613265579032;0,6606044396897566;0,6814656325220647;0,678705189941145;0,6771000535045479;0,6709375716834299;0,01362174649497941;641
580,9447314023971;125,68034741203276;0,4395208597183228;0,0421121932815241;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6747793527681198;0,6718373896763841;0,6632789515913345;0,6611393420700722;0,6643487563519658;0,6811981813319069;0,6830703396630114;0,6667558170633859;0,6682718031032637;0,6746923488496522;0,6709372282469097;0,007105048349483106;642
172,3254904270172;42,60377201823093;0,15104131698608397;0,008736081408319982;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6632789515913345;0,6630115004011767;0,6694303289649639;0,6672907194437016;0,66140679326023;0,6860123027547472;0,6662209146830703;0,675849157528751;0,673354735152488;0,6832530765115035;0,6709108480291966;0,008117939143812019;643
160,28097681999208;55,69362739740572;0,1441486120223999;0,008742630031555084;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6589997325488098;0,6544530623161273;0,6806632789515913;0,6718373896763841;0,6512436480342337;0,6921636801283766;0,6699652313452795;0,6638138539716502;0,6776350989834136;0,687800963081862;0,6708575939037729;0,013148794970250467;644
281,9829120397568;31,864822547642166;0,2787386178970337;0,023836373541721106;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6766515110992244;0,6790585718106446;0,6683605242043327;0,6616742444503878;0,6616742444503878;0,6734420968173308;0,675849157528751;0,6622091468307034;0,6730872124130551;0,6762974852862493;0,6708304194891066;0,006455043907802741;645
11,107934379577637;2,773919771399381;0,027506041526794433;0,009907882866832302;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);constant;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6707675849157528;0,6713024872960685;0,6654185611125969;0,6651511099224392;0,6531158063653383;0,690291521797272;0,6737095480074886;0,6718373896763841;0,6666666666666666;0,6800428036383093;0,6708303479398317;0,009304943926881958;646
166,82208445072175;57,28195419277934;0,14557552337646484;0,008579962499426377;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6667558170633859;0,6737095480074886;0,6598020861192833;0,6763840599090666;0,6531158063653383;0,6822679860925381;0,6806632789515913;0,6750468039582777;0,666131621187801;0,6738897806313536;0,6707766788286124;0,008762743927594373;647
0,4685071468353271;0,05548199836912809;0,024916815757751464;0,002787068514000844;DecisionTreeClassifier();;entropy;;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6763840599090666;0,6611393420700722;0,6707675849157528;0,6643487563519658;0,6624765980208612;0,6836052420433271;0,6769189622893822;0,6573950254078631;0,6720171214553237;0,682450508293205;0,670750320075682;0,008681641358859479;648
830,816248345375;294,3470399815873;0,5906582117080689;0,0665702511637505;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6803958277614336;0,6493714897031292;0,6777213158598556;0,6713024872960685;0,6643487563519658;0,686279753944905;0,6718373896763841;0,6533832575554961;0,6615837346174425;0,6907437132156233;0,6706967725982305;0,012913803381145117;649
291,40199115276334;51,15343663090683;0,2724111080169678;0,01804179557660873;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6881519122760096;0,6809307301417491;0,6651511099224392;0,6670232682535437;0,6630115004011767;0,682535437282696;0,6715699384862263;0,6515110992243915;0,6645264847512039;0,6725521669341894;0,6706963647673626;0,01031139955185928;650
244,0889079093933;35,07161870511952;0,18781664371490478;0,008819135585297878;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6857448515645894;0,6838726932334849;0,6713024872960685;0,6515110992243915;0,6643487563519658;0,6774538646696978;0,6694303289649639;0,6761166087189088;0,6629213483146067;0,6637239165329053;0,6706425954871582;0,009972408022879688;651
284,5994577884674;42,9316750229775;0,18903257846832275;0,007283295536922982;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6648836587322814;0,6624765980208612;0,6707675849157528;0,6659534634929125;0,6560577694570741;0,6940358384594811;0,6830703396630114;0,6606044396897566;0,6757624398073836;0,6725521669341894;0,6706164299172704;0,010802218453588423;652
149,60516283512115;46,660597094641744;0,15585908889770508;0,016020219913200028;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6881519122760096;0,6670232682535437;0,6710350361059106;0,6480342337523401;0,6563252206472319;0,6905589729874297;0,6868146563252207;0,6589997325488098;0,6615837346174425;0,6768325307651151;0,6705359298279054;0,013964144590961985;653
176,5594648838043;48,63302539407327;0,1577207088470459;0,016191931655169276;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6828028884728538;0,6643487563519658;0,675849157528751;0,6480342337523401;0,658732281358652;0,6846750468039583;0,6795934741909602;0,6616742444503878;0,6666666666666666;0,6821829855537721;0,6704559735130309;0,011720437717649006;654
538,08538210392;177,549754082801;0,3057033777236938;0,025107939395886292;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6793260230008024;0,6651511099224392;0,6729071944370153;0,6707675849157528;0,6539181599358117;0,6820005349023803;0,6713024872960685;0,6715699384862263;0,6666666666666666;0,6709470304975923;0,6704556730060756;0,00732296799722232;655
314,65347661972044;91,59038792180364;0,2747196197509766;0,030407103015866115;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6854774003744316;0,6699652313452795;0,6624765980208612;0,6544530623161273;0,6528483551751806;0,6852099491842739;0,6803958277614336;0,6664883658732281;0,6591760299625468;0,687800963081862;0,6704291783095225;0,012712108153906818;656
0,47949678897857667;0,08529078898496004;0,026961803436279297;0,0033259212141338017;DecisionTreeClassifier();balanced;entropy;;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6782562182401711;0,6608718908799144;0,6683605242043327;0,6635464027814924;0,6603369884995989;0,6836052420433271;0,6777213158598556;0,6563252206472319;0,6722846441947565;0,682450508293205;0,6703758955643886;0,009379449909521958;657
631,9084767103195;138,93248844964037;0,45108990669250487;0,04809312708925177;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6729071944370153;0,664081305161808;0,673174645627173;0,6734420968173308;0,6528483551751806;0,6846750468039583;0,6675581706338594;0,673174645627173;0,6706795077581594;0,6712145532370252;0,6703755521278683;0,007690984554648131;658
1022,2909636974334;314,0802306426158;0,4772417783737183;0,07817409159433444;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6742444503878042;0,6750468039582777;0,6600695373094411;0,6750468039582777;0,6592671837389676;0,6905589729874297;0,6699652313452795;0,6611393420700722;0,6556982343499197;0,6827180310326377;0,6703754591138107;0,010718331074970097;659
21,90871663093567;2,8294963689211694;0,021679019927978514;0,0054496721801713215;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);adaptive;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6699652313452795;0,6713024872960685;0,6616742444503878;0,6646162075421236;0,6552554158866007;0,6886868146563252;0,6729071944370153;0,6713024872960685;0,6688068485821295;0,678705189941145;0,6703222121433143;0,008677066898494741;660
2378,862066245079;535,6351818818714;1,120788073539734;0,06966522788819232;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6803958277614336;0,6785236694303289;0,658732281358652;0,6726397432468575;0,6549879646964429;0,6849424979941161;0,6787911206204867;0,6595346349291255;0,6613162118780096;0,673354735152488;0,6703218687067941;0,010177079397988849;661
982,5200911521912;302,85824121403056;0,4706594467163086;0,039824428209349845;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6694303289649639;0,6715699384862263;0,670500133725595;0,6624765980208612;0,6606044396897566;0,6991174110724793;0,6678256218240172;0,6608718908799144;0,6586409844836811;0,6808453718566078;0,6701882719004103;0,01153293666770373;662
210,19497578144075;46,45894135035896;0,16736900806427002;0,01076069170478698;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6630115004011767;0,6694303289649639;0,6616742444503878;0,6755817063385932;0,6608718908799144;0,6779887670500133;0,6643487563519658;0,6672907194437016;0,6797752808988764;0,6781701444622793;0,6698143339241873;0,007057049610936768;663
806,1749574422836;162,86913490153003;0,577207064628601;0,06521652844470067;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6846750468039583;0,6662209146830703;0,6555228670767584;0,664081305161808;0,6600695373094411;0,6803958277614336;0,6683605242043327;0,6598020861192833;0,6738897806313536;0,6848582129481006;0,6697876102699539;0,010114718259495828;664
11,105045366287232;3,3904240180018683;0,03489522933959961;0,03866150222606608;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);constant;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6699652313452795;0,6713024872960685;0,6579299277881786;0,6646162075421236;0,6552554158866007;0,6886868146563252;0,6729071944370153;0,6713024872960685;0,6666666666666666;0,678705189941145;0,6697337622855473;0,009161332979367045;665
187,23786416053773;67,26793220909205;0,16799359321594237;0,010537859042652113;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6721048408665419;0,6675581706338594;0,6488365873228136;0,6811981813319069;0,6507087456539181;0,682535437282696;0,6691628777748061;0,6737095480074886;0,6669341894060995;0,6835205992509363;0,6696269177531067;0,011481495043068217;666
183,68154413700103;63,82885316419649;0,16009056568145752;0,018104143620470622;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6822679860925381;0,6616742444503878;0,6718373896763841;0,6477667825621825;0,6517785504145494;0,6935009360791655;0,6892217170366408;0,6565926718373897;0,6634563937934724;0,6779026217228464;0,6695999293665557;0,01501575629047896;667
184,28475596904755;58,50430587521774;0,16379351615905763;0,008839757555016812;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6672907194437016;0,6670232682535437;0,6517785504145494;0,6795934741909602;0,6565926718373897;0,6822679860925381;0,6718373896763841;0,6632789515913345;0,6647940074906367;0,6904761904761905;0,6694933209467229;0,01123777124979174;668
316,6364555597305;81,34485157671847;0,2926734447479248;0,030842719526332118;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6670232682535437;0,6750468039582777;0,6488365873228136;0,6787911206204867;0,6643487563519658;0,679860925381118;0,6811981813319069;0,6707675849157528;0,6540930979133226;0,6738897806313536;0,6693856106680541;0,010387747786321058;669
179,93532950878142;31,364988339581494;0,17856161594390868;0,043991418222326384;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6691628777748061;0,682535437282696;0,6547205135062851;0,6715699384862263;0,6643487563519658;0,6793260230008024;0,6742444503878042;0,6541856111259695;0,6773675762439807;0,6658640984483681;0,6693325282608905;0,009207163332512132;670
851,1582687854767;271,0316988807872;0,5640573740005493;0,029932046518919064;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6811981813319069;0,6541856111259695;0,6536507087456539;0,6579299277881786;0,658732281358652;0,7041989836854774;0,662744049211019;0,6699652313452795;0,6637239165329053;0,6864633493846977;0,669279224050974;0,015629773013363196;671
533,5501708745957;107,98935668876405;0,4100076913833618;0,035945888405797384;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6710350361059106;0,6643487563519658;0,6544530623161273;0,6686279753944905;0,6624765980208612;0,682535437282696;0,6651511099224392;0,6638138539716502;0,6730872124130551;0,6864633493846977;0,6691992391163895;0,00908997829353578;672
818,7236902952194;185,02665673937295;0,5957563400268555;0,06438188786047133;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6857448515645894;0,6595346349291255;0,6659534634929125;0,6643487563519658;0,6563252206472319;0,6782562182401711;0,6702326825354373;0,6603369884995989;0,6696094168004281;0,6813804173354735;0,6691722650396934;0,00936559071306172;673
541,1371034145355;117,9897965677723;0,4571459054946899;0,1040568673619569;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6699652313452795;0,6598020861192833;0,6579299277881786;0,6662209146830703;0,6624765980208612;0,6838726932334849;0,6656860123027547;0,6670232682535437;0,6779026217228464;0,680577849117175;0,6691457202586477;0,008411514639568721;674
1447,1819866895676;460,3946920344201;0,5729791164398194;0,04018205100060194;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6654185611125969;0,6611393420700722;0,6795934741909602;0,6753142551484355;0,6440224658999733;0,6683605242043327;0,673174645627173;0,674511901577962;0,6631888710540396;0,6861958266452648;0,669091986753081;0,011082346697571032;675
186,99237232208253;36,30195435472899;0,1671607494354248;0,013826597604153024;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6667558170633859;0,6782562182401711;0,6763840599090666;0,6608718908799144;0,6563252206472319;0,6785236694303289;0,6659534634929125;0,6654185611125969;0,6634563937934724;0,6789727126805778;0,6690918007249659;0,007841333600067623;676
173,83516745567323;52,72333480227046;0,17153735160827638;0,027021657170228874;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6785236694303289;0,6809307301417491;0,6750468039582777;0,6598020861192833;0,6357314790050815;0,6830703396630114;0,6619416956405456;0,6573950254078631;0,6698769395398609;0,6883360085607276;0,669065477746673;0,014893218184130105;677
218,40221168994904;65,83957457247713;0,17339768409729003;0,01533102224928281;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,675849157528751;0,6718373896763841;0,6672907194437016;0,6531158063653383;0,646964428991709;0,6803958277614336;0,6830703396630114;0,6584648301684942;0,6757624398073836;0,6773675762439807;0,6690118515650187;0,011620378857271066;678
310,8614252090454;35,1801835303567;0,29211952686309817;0,026228355726384753;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6713024872960685;0,6696977801551217;0,6458946242310778;0,6793260230008024;0,6638138539716502;0,6820005349023803;0,6833377908531693;0,6686279753944905;0,6565008025682183;0,6696094168004281;0,6690111289173408;0,010974945281451893;679
202,9917691230774;59,06207198801811;0,17705509662628174;0,014541751273777381;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6678256218240172;0,6683605242043327;0,6515110992243915;0,6563252206472319;0,6662209146830703;0,6782562182401711;0,6836052420433271;0,6790585718106446;0,6701444622792937;0,6685393258426966;0,6689847200799177;0,009368608800268978;680
829,8420619249343;188,80913535426222;0,6020328521728515;0,044696195174183884;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6892217170366408;0,6635464027814924;0,6622091468307034;0,6624765980208612;0,6573950254078631;0,6801283765712758;0,6715699384862263;0,6651511099224392;0,6605136436597111;0,6771000535045479;0,6689312012221761;0,009720321701060396;681
525,529999256134;87,30180988866748;0,45154192447662356;0,05059934552345249;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6707675849157528;0,6753142551484355;0,6632789515913345;0,6603369884995989;0,6723722920566997;0,6766515110992244;0,673174645627173;0,6536507087456539;0,6669341894060995;0,6760299625468165;0,6688511089636788;0,007260750532949859;682
219,23955218791963;44,909533080423685;0,17996597290039062;0,013832959505551997;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6747793527681198;0,6755817063385932;0,6544530623161273;0,6568601230275475;0,6694303289649639;0,6769189622893822;0,6678256218240172;0,6549879646964429;0,6795077581594435;0,6768325307651151;0,6687177411149753;0,009312819383944801;683
217,02341911792755;66,19719072847879;0,1852696180343628;0,011517195662770352;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6630115004011767;0,6737095480074886;0,6485691361326558;0,6557903182669163;0,675849157528751;0,6742444503878042;0,6814656325220647;0,6809307301417491;0,6704119850187266;0,6631888710540396;0,6687171329461372;0,010281391821964215;684
265,6024792432785;44,60453499680848;0,18433151245117188;0,005629764988493089;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,664081305161808;0,6680930730141749;0,6713024872960685;0,6499063920834448;0,6528483551751806;0,6881519122760096;0,6833377908531693;0,6622091468307034;0,6757624398073836;0,6712145532370252;0,6686907455734967;0,011506177251219489;685
153,56667845249177;30,815698329465715;0,14642179012298584;0,006036798216824573;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6678256218240172;0,6680930730141749;0,6688954265846483;0,6659534634929125;0,6699652313452795;0,6726397432468575;0,6667558170633859;0,6672907194437016;0,6696094168004281;0,6688068485821295;0,6685835361397535;0,001797377959976626;686
145,62697677612306;20,581467429273367;0,14847288131713868;0,011987518516307605;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6670232682535437;0,6688954265846483;0,6667558170633859;0,6662209146830703;0,6702326825354373;0,6766515110992244;0,6648836587322814;0,6581973789783364;0,6677367576243981;0,6784376672017122;0,6685035082756039;0,005464287640113747;687
189,04783568382263;55,219958645101016;0,18329744338989257;0,03353076572118547;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6854774003744316;0,6622091468307034;0,6536507087456539;0,6539181599358117;0,6600695373094411;0,6833377908531693;0,6606044396897566;0,6750468039582777;0,6696094168004281;0,6795077581594435;0,6683431162657116;0,011311618544746377;688
297,39684493541716;126,7537946997425;0,18689513206481934;0,009008277177169531;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6828028884728538;0,6667558170633859;0,6595346349291255;0,6793260230008024;0,6632789515913345;0,69296603369885;0,6702326825354373;0,6560577694570741;0,649812734082397;0,6626538255751739;0,6683421360406435;0,012537923397939977;689
201,52347121238708;35,52719702594852;0,17552077770233154;0,015043500759602013;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6801283765712758;0,6715699384862263;0,652313452794865;0,6507087456539181;0,6493714897031292;0,6753142551484355;0,6790585718106446;0,6662209146830703;0,6757624398073836;0,6821829855537721;0,6682631170212721;0,012213084556147152;690
709,2753297328949;194,02171791993396;0,365165114402771;0,021102002463355637;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6595346349291255;0,6766515110992244;0,6707675849157528;0,6734420968173308;0,646964428991709;0,6694303289649639;0,6838726932334849;0,6806632789515913;0,6364365971107544;0,6848582129481006;0,6682621367962037;0,01523282539699839;691
27,368022751808166;7,281785356453285;0,027330183982849122;0,013307998508016278;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);adaptive;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6707675849157528;0,6702326825354373;0,6560577694570741;0,6531158063653383;0,6579299277881786;0,6921636801283766;0,6678256218240172;0,658732281358652;0,6720171214553237;0,682450508293205;0,6681292984121356;0,011716648711345295;692
182,23083834648133;40,3836058249296;0,17669358253479003;0,01876986305802957;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6822679860925381;0,664081305161808;0,6648836587322814;0,6453597218507623;0,6656860123027547;0,6750468039582777;0,6699652313452795;0,6710350361059106;0,6696094168004281;0,673354735152488;0,6681289907502528;0,00916737673651413;693
159,48380630016328;80,77183433494194;0,1408233642578125;0,009054154175168347;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6680930730141749;0,6488365873228136;0,6723722920566997;0,6608718908799144;0,6683605242043327;0,6857448515645894;0,6675581706338594;0,6699652313452795;0,6578384162653825;0,6816479400749064;0,6681288977361953;0,010225443333564729;694
181,21112477779388;38,457541195643934;0,17637429237365723;0,011351064490425283;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6678256218240172;0,670500133725595;0,6680930730141749;0,6573950254078631;0,6589997325488098;0,6696977801551217;0,6723722920566997;0,6651511099224392;0,6666666666666666;0,6840556447298021;0,668075708005119;0,006995568580738404;695
207,25524110794066;55,88426202453458;0,16509585380554198;0,00944431725999961;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6750468039582777;0,6630115004011767;0,6600695373094411;0,6678256218240172;0,66140679326023;0,6844075956138005;0,6656860123027547;0,6547205135062851;0,6688068485821295;0,6797752808988764;0,6680756507656989;0,008781202107604602;696
210,0352077960968;57,74184509289698;0,1718648910522461;0,012352351454842722;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6565926718373897;0,6531158063653383;0,6619416956405456;0,6734420968173308;0,6517785504145494;0,6761166087189088;0,6630115004011767;0,675849157528751;0,682450508293205;0,6843231674692349;0,667862176348643;0,011439265815271125;697
2374,807439303398;623,1117271779719;1,1748643398284913;0,08630263646756653;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6696977801551217;0,6624765980208612;0,6672907194437016;0,6782562182401711;0,6584648301684942;0,6726397432468575;0,6729071944370153;0,6512436480342337;0,6613162118780096;0,6843231674692349;0,6678616111093701;0,009312966192193675;698
183,14644215106964;39,50196636182078;0,1655989408493042;0,009507693437336475;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6678256218240172;0,6803958277614336;0,6509761968440759;0,6680930730141749;0,662744049211019;0,6822679860925381;0,6688954265846483;0,652313452794865;0,6827180310326377;0,6623863028357411;0,6678615967995151;0,010814425397625765;699
169,0799147605896;39,62383139988665;0,16811959743499755;0,007704715819371739;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6803958277614336;0,6670232682535437;0,6528483551751806;0,6616742444503878;0,6646162075421236;0,6801283765712758;0,6635464027814924;0,6710350361059106;0,6610486891385767;0,6762974852862493;0,6678613893066173;0,008536793733554699;700
144,20930862426758;22,38069175593392;0,1497586965560913;0,012018441052978704;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6702326825354373;0,6611393420700722;0,6581973789783364;0,6766515110992244;0,6571275742177053;0,6721048408665419;0,6769189622893822;0,6686279753944905;0,6613162118780096;0,6749598715890851;0,6677276350918284;0,007282624072686434;701
188,48081884384155;39,497658670558415;0,1833350419998169;0,049348103832369664;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6710350361059106;0,6611393420700722;0,6643487563519658;0,6782562182401711;0,6632789515913345;0,6694303289649639;0,6707675849157528;0,6672907194437016;0,6663991439272338;0,6653290529695024;0,6677275134580609;0,004650296951931908;702
2062,702641940117;955,8679426768488;1,109524917602539;0,08221055206899902;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6729071944370153;0,6718373896763841;0,6504412944637603;0,6579299277881786;0,6491040385129714;0,6833377908531693;0,6739769991976464;0,648301684942498;0,6912787586944891;0,6773675762439807;0,6676482654810092;0,014467165772339167;703
787,7971294403076;159,83328818461482;0,6016053199768067;0,07177917642665904;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6822679860925381;0,6606044396897566;0,664081305161808;0,6632789515913345;0,6573950254078631;0,6803958277614336;0,6696977801551217;0,6592671837389676;0,6621187800963082;0,6773675762439807;0,6676474855939112;0,008730855308751766;704
198,1872686624527;23,445874452966258;0,16943278312683105;0,011989932287577785;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6710350361059106;0,6648836587322814;0,6734420968173308;0,6742444503878042;0,6638138539716502;0,6672907194437016;0,6638138539716502;0,6659534634929125;0,6639914392723382;0,668004280363831;0,667647285255941;0,0037695640825146154;705
11,157703232765197;2,8453224614949475;0,026632261276245118;0,011480074010318614;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);adaptive;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6675581706338594;0,6600695373094411;0,6638138539716502;0,6541856111259695;0,6584648301684942;0,6908264241775876;0,6699652313452795;0,6656860123027547;0,6698769395398609;0,6749598715890851;0,6675406482163982;0,009708156683556807;706
212,81221697330474;53,63240501670963;0,16302390098571778;0,007028235698805947;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6721048408665419;0,6672907194437016;0,6632789515913345;0,6589997325488098;0,6581973789783364;0,6814656325220647;0,6672907194437016;0,658732281358652;0,6698769395398609;0,6773675762439807;0,6674604772536984;0,007568472595833239;707
218,90370073318482;47,30238684824456;0,18224895000457764;0,009187868919101392;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6656860123027547;0,6790585718106446;0,6504412944637603;0,6432201123294998;0,6723722920566997;0,6737095480074886;0,6726397432468575;0,6568601230275475;0,6811128945960406;0,6792402354200107;0,6674340827261304;0,01241944342004783;708
143,2211403131485;35,58802749065698;0,14677798748016357;0,011738243888766466;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6688954265846483;0,6544530623161273;0,6635464027814924;0,6606044396897566;0,6702326825354373;0,6755817063385932;0,6696977801551217;0,6696977801551217;0,658908507223114;0,6827180310326377;0,667433581881205;0,007893982458950597;709
27,611822366714478;7,099942470603273;0,026936650276184082;0,008825911890711188;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);adaptive;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6686279753944905;0,6702326825354373;0,6557903182669163;0,6531158063653383;0,6552554158866007;0,6905589729874297;0,6678256218240172;0,658732281358652;0,6709470304975923;0,6829855537720706;0,6674071658888545;0,011674693843471693;710
192,49073984622956;39,218744689079685;0,1782524824142456;0,009615427056375154;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6694303289649639;0,6568601230275475;0,6576624765980209;0,6694303289649639;0,6598020861192833;0,6785236694303289;0,670500133725595;0,6707675849157528;0,6712145532370252;0,6698769395398609;0,6674068224523342;0,006612519902802075;711
1956,8809670686721;673,7224966987781;1,108713698387146;0,060938989634512906;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6557903182669163;0,6646162075421236;0,6576624765980209;0,6806632789515913;0,6680930730141749;0,6967103503610591;0,6820005349023803;0,6565926718373897;0,6567683253076512;0,6540930979133226;0,667299033469463;0,013757991490004265;712
241,43720724582673;70,15129859206205;0,18810076713562013;0,003845612150269767;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,679860925381118;0,6525809039850228;0,664081305161808;0,6565926718373897;0,6533832575554961;0,6846750468039583;0,6707675849157528;0,6680930730141749;0,6565008025682183;0,6861958266452648;0,6672731397868203;0,01217096669743004;713
2146,211781549454;540,0281330451132;1,1242811679840088;0,11086518294206239;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6814656325220647;0,6844075956138005;0,6549879646964429;0,6683605242043327;0,6555228670767584;0,6809307301417491;0,6539181599358117;0,6549879646964429;0,6573033707865169;0,6800428036383093;0,6671927613312228;0,012503599710177516;714
11,542164421081543;6,5398085072588135;0,025843596458435057;0,00714065177725577;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);constant;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6702326825354373;0,6686279753944905;0,6560577694570741;0,6531158063653383;0,6555228670767584;0,6868146563252207;0,6678256218240172;0,658732281358652;0,6722846441947565;0,682450508293205;0,667166481282495;0,010887397766968085;715
11,89495117664337;6,534939307899721;0,028461337089538574;0,01595886924233499;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);constant;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6696977801551217;0,6713024872960685;0,6557903182669163;0,6531158063653383;0,6552554158866007;0,686279753944905;0,6678256218240172;0,658732281358652;0,6701444622792937;0,6829855537720706;0,6671129481148983;0,010900441288776612;716
25,622650241851808;2,802467841130723;0,02279026508331299;0,00717122583124565;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);adaptive;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6699652313452795;0,6632789515913345;0,6608718908799144;0,6579299277881786;0,6579299277881786;0,6870821075153785;0,6729071944370153;0,6619416956405456;0,6650615302300695;0,6741573033707865;0,667112576058668;0,008621805458852567;717
566,9582281112671;156,98067706519814;0,45377001762390134;0,03843913394893464;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6675581706338594;0,6557903182669163;0,6568601230275475;0,6611393420700722;0,6581973789783364;0,6753142551484355;0,6870821075153785;0,6662209146830703;0,6546281433921883;0,6880684858212948;0,6670859239537099;0,011876506340605254;718
1321,3915276527405;494,88069893829714;0,6988866567611695;0,04286312373156498;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6857448515645894;0,6654185611125969;0,6507087456539181;0,66140679326023;0,6598020861192833;0,6734420968173308;0,6664883658732281;0,6713024872960685;0,6522204387372926;0,6843231674692349;0,6670857593903772;0,011318555988027399;719
25,274182629585265;2,2930419109470233;0,04034852981567383;0,020775736919122316;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6699652313452795;0,66140679326023;0,6606044396897566;0,6584648301684942;0,658732281358652;0,6865472051350628;0,6718373896763841;0,6624765980208612;0,6658640984483681;0,6744248261102194;0,6670323693213308;0,008393727516083594;720
252,5425954580307;73,72747590681796;0,19794988632202148;0,016161928503547047;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6675581706338594;0,6729071944370153;0,6571275742177053;0,6533832575554961;0,6576624765980209;0,6838726932334849;0,6718373896763841;0,6606044396897566;0,6602461209202782;0,6845906902086677;0,6669790007170668;0,010532380889139;721
138,1514536857605;23,838087055601047;0,15270380973815917;0,013656881020235545;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6573950254078631;0,6702326825354373;0,6608718908799144;0,6552554158866007;0,6678256218240172;0,6817330837122225;0,6616742444503878;0,6723722920566997;0,6677367576243981;0,6744248261102194;0,6669521840487761;0,007802649183267479;722
295,30599756240844;88,78704899128614;0,2578118801116943;0,029158891662516777;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,673174645627173;0,6691628777748061;0,6555228670767584;0,6533832575554961;0,6501738432736026;0,6803958277614336;0,6822679860925381;0,6656860123027547;0,6575708935259497;0,6821829855537721;0,6669521196544286;0,01173353498466455;723
366,4523499727249;91,90267686082451;0,17066266536712646;0,00717742183871199;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6672907194437016;0,6680930730141749;0,6651511099224392;0,6635464027814924;0,6664883658732281;0,6809307301417491;0,6707675849157528;0,6474993313720246;0,668004280363831;0,671482075976458;0,6669253673804852;0,007914952452808781;724
0,6087126493453979;0,10997449185540728;0,032517218589782716;0,006487511361517782;LinearSVC();balanced;;;;;42;;0.01;False;1000;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6659534634929125;0,6699652313452795;0,6579299277881786;0,6592671837389676;0,6507087456539181;0,6900240706071142;0,6715699384862263;0,6654185611125969;0,6647940074906367;0,6736222578919208;0,6669253387607752;0,010097096288492452;725
0,5305760860443115;0,09748791025576967;0,028408169746398926;0,00409224749717899;LinearSVC();balanced;;;;;42;;0.01;False;10000;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6659534634929125;0,6699652313452795;0,6579299277881786;0,6592671837389676;0,6507087456539181;0,6900240706071142;0,6715699384862263;0,6654185611125969;0,6647940074906367;0,6736222578919208;0,6669253387607752;0,010097096288492452;725
4,979636120796203;3,026943016840735;0,0378434419631958;0,019265428087595148;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);constant;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6635464027814924;0,6600695373094411;0,6638138539716502;0,6541856111259695;0,6584648301684942;0,6881519122760096;0,6699652313452795;0,6656860123027547;0,6698769395398609;0,6749598715890851;0,6668720202410036;0,009146381589511572;727
1194,8238095760346;407,52239090882364;0,755596113204956;0,09483761688407177;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6702326825354373;0,6589997325488098;0,6664883658732281;0,6624765980208612;0,649638940893287;0,673174645627173;0,6766515110992244;0,6849424979941161;0,6567683253076512;0,6693418940609952;0,6668715193960784;0,009796946133629832;728
12,089097809791564;9,182656560080122;0,05093116760253906;0,01991854710448559;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);adaptive;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6723722920566997;0,6672907194437016;0,6565926718373897;0,6616742444503878;0,6531158063653383;0,6876170098956941;0,673174645627173;0,6600695373094411;0,6631888710540396;0,673354735152488;0,6668450533192353;0,009613942796836479;729
12,036427521705628;9,095125224709045;0,04117155075073242;0,007825092611670699;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);adaptive;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6723722920566997;0,6672907194437016;0,6565926718373897;0,6616742444503878;0,6531158063653383;0,6876170098956941;0,673174645627173;0,6600695373094411;0,6631888710540396;0,673354735152488;0,6668450533192353;0,009613942796836479;729
12,057699418067932;9,111318178119918;0,04919867515563965;0,019505724892228616;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);adaptive;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6723722920566997;0,6672907194437016;0,6565926718373897;0,6616742444503878;0,6531158063653383;0,6876170098956941;0,673174645627173;0,6600695373094411;0,6631888710540396;0,673354735152488;0,6668450533192353;0,009613942796836479;729
12,135310435295105;9,13235209372253;0,04019935131072998;0,015347701088063678;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);constant;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6723722920566997;0,6672907194437016;0,6565926718373897;0,6616742444503878;0,6531158063653383;0,6876170098956941;0,673174645627173;0,6600695373094411;0,6631888710540396;0,673354735152488;0,6668450533192353;0,009613942796836479;729
12,070564651489258;9,132192533842924;0,0418816328048706;0,012237396472116613;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);constant;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6723722920566997;0,6672907194437016;0,6565926718373897;0,6616742444503878;0,6531158063653383;0,6876170098956941;0,673174645627173;0,6600695373094411;0,6631888710540396;0,673354735152488;0,6668450533192353;0,009613942796836479;729
12,224739289283752;9,40859568175863;0,04196908473968506;0,012747578187395232;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);adaptive;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6723722920566997;0,6672907194437016;0,6565926718373897;0,6616742444503878;0,6531158063653383;0,6876170098956941;0,673174645627173;0,6600695373094411;0,6631888710540396;0,673354735152488;0,6668450533192353;0,009613942796836479;729
12,11182997226715;9,15854944886202;0,037557148933410646;0,00988189732558036;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);constant;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6723722920566997;0,6672907194437016;0,6565926718373897;0,6616742444503878;0,6531158063653383;0,6876170098956941;0,673174645627173;0,6600695373094411;0,6631888710540396;0,673354735152488;0,6668450533192353;0,009613942796836479;729
12,085488033294677;9,119871590337246;0,04193637371063232;0,013904708240750928;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);constant;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6723722920566997;0,6672907194437016;0,6565926718373897;0,6616742444503878;0,6531158063653383;0,6876170098956941;0,673174645627173;0,6600695373094411;0,6631888710540396;0,673354735152488;0,6668450533192353;0,009613942796836479;729
0,44822742938995364;0,12379052210355178;0,03278605937957764;0,010725335300795955;LinearSVC();balanced;;;;;42;;0.01;False;10000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6662209146830703;0,6699652313452795;0,658732281358652;0,6595346349291255;0,6507087456539181;0,688954265846483;0,6696977801551217;0,6616742444503878;0,6650615302300695;0,6773675762439807;0,6667917204896089;0,01013574547668589;737
0,4300461530685425;0,08746191139791261;0,03327934741973877;0,006044587635454113;LinearSVC();balanced;;;;;42;;0.01;False;1000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6662209146830703;0,6699652313452795;0,658732281358652;0,6595346349291255;0,6507087456539181;0,688954265846483;0,6696977801551217;0,6616742444503878;0,6650615302300695;0,6773675762439807;0,6667917204896089;0,01013574547668589;737
0,3405149936676025;0,08082656378487652;0,027117133140563965;0,003807881069986791;LinearSVC();balanced;;;;;42;;0.01;False;100;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6662209146830703;0,6699652313452795;0,658732281358652;0,6595346349291255;0,6507087456539181;0,688954265846483;0,6696977801551217;0,6616742444503878;0,6650615302300695;0,6773675762439807;0,6667917204896089;0,01013574547668589;737
2528,9115895986556;945,6927929194419;1,159098744392395;0,07674854504146067;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6638138539716502;0,6739769991976464;0,6547205135062851;0,6528483551751806;0,6715699384862263;0,6643487563519658;0,6860123027547472;0,6696977801551217;0,6637239165329053;0,6672017121455324;0,6667914128277261;0,009038154198487752;740
0,38030662536621096;0,04643533819902623;0,028610372543334962;0,005099534984167543;LinearSVC();;;;;;42;;0.01;False;100;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6659534634929125;0,6688954265846483;0,6571275742177053;0,6603369884995989;0,6512436480342337;0,688954265846483;0,6699652313452795;0,6635464027814924;0,6650615302300695;0,6762974852862493;0,6667382016318673;0,009934969825455482;741
0,5094435930252075;0,12014488858030935;0,03055751323699951;0,006795134441104457;LinearSVC();;;;;;42;;0.01;False;10000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6659534634929125;0,6688954265846483;0,6571275742177053;0,6603369884995989;0,6512436480342337;0,688954265846483;0,6699652313452795;0,6635464027814924;0,6650615302300695;0,6762974852862493;0,6667382016318673;0,009934969825455482;741
0,47931125164031985;0,15797930528816806;0,030580306053161622;0,004654151685112179;LinearSVC();;;;;;42;;0.01;False;1000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6659534634929125;0,6688954265846483;0,6571275742177053;0,6603369884995989;0,6512436480342337;0,688954265846483;0,6699652313452795;0,6635464027814924;0,6650615302300695;0,6762974852862493;0,6667382016318673;0,009934969825455482;741
1008,1112317323684;292,31574699690464;0,44340269565582274;0,03613663334083627;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6504412944637603;0,6638138539716502;0,6589997325488098;0,6707675849157528;0,6584648301684942;0,6817330837122225;0,6729071944370153;0,6678256218240172;0,6738897806313536;0,668004280363831;0,6666847257036906;0,008576213532515763;744
0,4588681697845459;0,0249916768644978;0,028912663459777832;0,004622723397506361;LinearSVC();;;;;;42;;0.1;False;100;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6648836587322814;0,6675581706338594;0,6600695373094411;0,6603369884995989;0,6517785504145494;0,6884193634661674;0,6710350361059106;0,6635464027814924;0,6647940074906367;0,6741573033707865;0,6666579018804722;0,009331833058614705;745
7,10095784664154;5,072077277079674;0,03987910747528076;0,0122816215423829;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);constant;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6659534634929125;0,6696977801551217;0,6525809039850228;0,6619416956405456;0,6499063920834448;0,6881519122760096;0,6710350361059106;0,6734420968173308;0,6663991439272338;0,6674692348849652;0,6666577659368498;0,01019145205298282;746
7,058517074584961;5,051518455149412;0,03290252685546875;0,011927854956797683;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);adaptive;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6659534634929125;0,6696977801551217;0,6525809039850228;0,6619416956405456;0,6499063920834448;0,6881519122760096;0,6710350361059106;0,6734420968173308;0,6663991439272338;0,6674692348849652;0,6666577659368498;0,01019145205298282;746
7,108218121528625;5,072428523277055;0,037004828453063965;0,008357476519556439;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);constant;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6659534634929125;0,6696977801551217;0,6525809039850228;0,6619416956405456;0,6499063920834448;0,6881519122760096;0,6710350361059106;0,6734420968173308;0,6663991439272338;0,6674692348849652;0,6666577659368498;0,01019145205298282;746
7,099510073661804;5,1031744353345285;0,040732288360595705;0,018095861666810292;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);adaptive;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6659534634929125;0,6696977801551217;0,6525809039850228;0,6619416956405456;0,6499063920834448;0,6881519122760096;0,6710350361059106;0,6734420968173308;0,6663991439272338;0,6674692348849652;0,6666577659368498;0,01019145205298282;746
7,193397498130798;5,261177720756727;0,03676850795745849;0,012929650438127691;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);adaptive;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6659534634929125;0,6696977801551217;0,6525809039850228;0,6619416956405456;0,6499063920834448;0,6881519122760096;0,6710350361059106;0,6734420968173308;0,6663991439272338;0,6674692348849652;0,6666577659368498;0,01019145205298282;746
7,0572899103164675;5,060784699463629;0,046396613121032715;0,01850896575453218;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);constant;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6659534634929125;0,6696977801551217;0,6525809039850228;0,6619416956405456;0,6499063920834448;0,6881519122760096;0,6710350361059106;0,6734420968173308;0,6663991439272338;0,6674692348849652;0,6666577659368498;0,01019145205298282;746
7,0850482940673825;5,020210870351653;0,04713616371154785;0,018755183512438104;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);constant;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6659534634929125;0,6696977801551217;0,6525809039850228;0,6619416956405456;0,6499063920834448;0,6881519122760096;0,6710350361059106;0,6734420968173308;0,6663991439272338;0,6674692348849652;0,6666577659368498;0,01019145205298282;746
7,0900520324707035;5,059687781311464;0,036938142776489255;0,006803031081012692;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);adaptive;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6659534634929125;0,6696977801551217;0,6525809039850228;0,6619416956405456;0,6499063920834448;0,6881519122760096;0,6710350361059106;0,6734420968173308;0,6663991439272338;0,6674692348849652;0,6666577659368498;0,01019145205298282;746
269,02228927612305;95,36575607359799;0,19544539451599122;0,008305420846901137;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6683605242043327;0,6769189622893822;0,6654185611125969;0,6766515110992244;0,652313452794865;0,6723722920566997;0,6654185611125969;0,6702326825354373;0,6543606206527555;0,6645264847512039;0,6666573652609095;0,007861902014574564;754
218,4023495912552;76,01544852213955;0,19391324520111083;0,024082552589935028;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6672907194437016;0,6646162075421236;0,6632789515913345;0,6552554158866007;0,6499063920834448;0,6763840599090666;0,6913613265579032;0,6539181599358117;0,6738897806313536;0,6704119850187266;0,6666312998600066;0,011662592103066388;755
0,4820783376693726;0,10437945455821661;0,030449771881103517;0,004930560987543288;LinearSVC();balanced;;;;;42;;0.1;False;100;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6651511099224392;0,6675581706338594;0,6592671837389676;0,6608718908799144;0,6520460016047072;0,6884193634661674;0,6713024872960685;0,6619416956405456;0,6653290529695024;0,6744248261102194;0,6666311782262391;0,009402919592635067;756
0,5363002061843872;0,12695528634293493;0,03014092445373535;0,0054562080532070305;LinearSVC();balanced;;;;;42;;1.0;False;100;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6654185611125969;0,6678256218240172;0,6589997325488098;0,6608718908799144;0,6525809039850228;0,6868146563252207;0,6713024872960685;0,6619416956405456;0,6658640984483681;0,6741573033707865;0,666577695143135;0,008944848942747621;757
0,5914991617202758;0,11940967669126334;0,03179163932800293;0,006022140012469135;LinearSVC();balanced;;;;;42;;1.0;False;10000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6654185611125969;0,6678256218240172;0,6589997325488098;0,6608718908799144;0,6525809039850228;0,6868146563252207;0,6713024872960685;0,6619416956405456;0,6658640984483681;0,6741573033707865;0,666577695143135;0,008944848942747621;757
0,6191301822662354;0,23144829526626678;0,03406128883361816;0,007067549358711455;LinearSVC();balanced;;;;;42;;1.0;False;1000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6654185611125969;0,6678256218240172;0,6589997325488098;0,6608718908799144;0,6525809039850228;0,6868146563252207;0,6713024872960685;0,6619416956405456;0,6658640984483681;0,6741573033707865;0,666577695143135;0,008944848942747621;757
0,9018065929412842;0,14223164848854697;0,03691267967224121;0,010385138814806204;LinearSVC();balanced;;;;;42;;0.1;False;1000;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6659534634929125;0,6680930730141749;0,658732281358652;0,66140679326023;0,6517785504145494;0,6881519122760096;0,6702326825354373;0,6630115004011767;0,6639914392723382;0,6744248261102194;0,6665776522135699;0,009326195205829878;760
0,9445128202438354;0,11101131665956544;0,035383868217468264;0,012788916352536532;LinearSVC();balanced;;;;;42;;0.1;False;10000;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6659534634929125;0,6680930730141749;0,658732281358652;0,66140679326023;0,6517785504145494;0,6881519122760096;0,6702326825354373;0,6630115004011767;0,6639914392723382;0,6744248261102194;0,6665776522135699;0,009326195205829878;760
10,426268029212952;2,394322248835841;0,024328732490539552;0,006458101314270462;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);adaptive;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6688954265846483;0,6603369884995989;0,6622091468307034;0,6541856111259695;0,648301684942498;0,691628777748061;0,6699652313452795;0,6654185611125969;0,6693418940609952;0,675227394328518;0,6665510716578869;0,011286299413013304;762
208,26248860359192;82,50453267223696;0,1725494384765625;0,01246611134733062;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6723722920566997;0,6678256218240172;0,6547205135062851;0,6846750468039583;0,6515110992243915;0,6809307301417491;0,6584648301684942;0,6667558170633859;0,6514178705189941;0,6765650080256822;0,6665238829333657;0,01153967739311229;763
14,679978799819946;2,5450775554682035;0,025439691543579102;0,011532967614257405;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);constant;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6635464027814924;0,6632789515913345;0,6608718908799144;0,6579299277881786;0,6579299277881786;0,6870821075153785;0,6729071944370153;0,6619416956405456;0,6650615302300695;0,6741573033707865;0,6664706932022895;0,008624471620618161;764
0,49713683128356934;0,18397253174813558;0,031216883659362794;0,007391741101936297;LinearSVC();balanced;;;;;42;;0.1;False;100;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6656860123027547;0,6670232682535437;0,6589997325488098;0,6606044396897566;0,6520460016047072;0,6868146563252207;0,6710350361059106;0,6622091468307034;0,6653290529695024;0,6744248261102194;0,6664172172741128;0,009036784768385587;765
0,5779763460159302;0,15145705264779807;0,03346493244171143;0,01334344222651166;LinearSVC();balanced;;;;;42;;0.1;False;1000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6656860123027547;0,6670232682535437;0,6589997325488098;0,6606044396897566;0,6520460016047072;0,6868146563252207;0,6710350361059106;0,6622091468307034;0,6653290529695024;0,6744248261102194;0,6664172172741128;0,009036784768385587;765
0,5663227319717408;0,1135516713357124;0,03475520610809326;0,013272724158173318;LinearSVC();balanced;;;;;42;;0.1;False;10000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6656860123027547;0,6670232682535437;0,6589997325488098;0,6606044396897566;0,6520460016047072;0,6868146563252207;0,6710350361059106;0,6622091468307034;0,6653290529695024;0,6744248261102194;0,6664172172741128;0,009036784768385587;765
0,4627353668212891;0,02088263462174467;0,03150496482849121;0,010029185315723577;LinearSVC();;;;;;42;;1.0;False;100;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6656860123027547;0,6656860123027547;0,6595346349291255;0,6595346349291255;0,6528483551751806;0,6878844610858519;0,6710350361059106;0,662744049211019;0,6650615302300695;0,6738897806313536;0,6663904506903144;0,00912826443961913;768
0,6303408145904541;0,11265991846553802;0,03464961051940918;0,006014215503382461;LinearSVC();;;;;;42;;0.1;False;10000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6662209146830703;0,6672907194437016;0,6600695373094411;0,6595346349291255;0,6525809039850228;0,6868146563252207;0,6707675849157528;0,6632789515913345;0,6631888710540396;0,6741573033707865;0,6663904077607495;0,008916624817766578;769
0,4623960018157959;0,10915919793457544;0,02840595245361328;0,004907647369049574;LinearSVC();;;;;;42;;0.1;False;1000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6662209146830703;0,6672907194437016;0,6600695373094411;0,6595346349291255;0,6525809039850228;0,6868146563252207;0,6707675849157528;0,6632789515913345;0,6631888710540396;0,6741573033707865;0,6663904077607495;0,008916624817766578;769
0,456126070022583;0,06724977443476762;0,03253169059753418;0,011367409485064988;LinearSVC();;;;;;42;;0.1;False;100;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6662209146830703;0,6672907194437016;0,6600695373094411;0,6595346349291255;0,6525809039850228;0,6868146563252207;0,6707675849157528;0,6632789515913345;0,6631888710540396;0,6741573033707865;0,6663904077607495;0,008916624817766578;769
0,917217493057251;0,06026041845286548;0,042355823516845706;0,013086983339540486;LinearSVC();balanced;;;;;42;;1.0;False;1000;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6654185611125969;0,6675581706338594;0,658732281358652;0,6606044396897566;0,6520460016047072;0,6868146563252207;0,6710350361059106;0,66140679326023;0,6655965757089353;0,6741573033707865;0,6663369819170655;0,009081187584383593;772
1,040117907524109;0,10141367440196164;0,035991120338439944;0,008567041906486198;LinearSVC();balanced;;;;;42;;1.0;False;10000;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6654185611125969;0,6675581706338594;0,658732281358652;0,6606044396897566;0,6520460016047072;0,6868146563252207;0,6710350361059106;0,66140679326023;0,6655965757089353;0,6741573033707865;0,6663369819170655;0,009081187584383593;772
0,9350930213928222;0,04694717872046118;0,029521870613098144;0,003601245857489001;LinearSVC();;;;;;42;;1.0;False;1000;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6662209146830703;0,6664883658732281;0,6600695373094411;0,6598020861192833;0,6528483551751806;0,6881519122760096;0,6707675849157528;0,6619416956405456;0,6631888710540396;0,6738897806313536;0,6663369103677904;0,0091965238346224;774
0,9131943941116333;0,0681773794858369;0,031642913818359375;0,008637480961611713;LinearSVC();;;;;;42;;1.0;False;10000;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6662209146830703;0,6664883658732281;0,6600695373094411;0,6598020861192833;0,6528483551751806;0,6881519122760096;0,6707675849157528;0,6619416956405456;0,6631888710540396;0,6738897806313536;0,6663369103677904;0,0091965238346224;774
0,45651946067810056;0,023425458972892183;0,02780458927154541;0,005955050821800441;LinearSVC();balanced;;;;;42;;1.0;False;100;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6656860123027547;0,6670232682535437;0,6592671837389676;0,6595346349291255;0,6525809039850228;0,6884193634661674;0,6710350361059106;0,6611393420700722;0,6645264847512039;0,6738897806313536;0,6663102010234121;0,009399003380860062;776
190,61102678775788;69,25302820154388;0,16173143386840821;0,008780542777318653;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6715699384862263;0,6568601230275475;0,6595346349291255;0,6769189622893822;0,6541856111259695;0,6873495587055363;0,673174645627173;0,6600695373094411;0,6623863028357411;0,6610486891385767;0,6663098003474718;0,009971108973753173;777
14,503587675094604;2,420028708247783;0,036466550827026364;0,017786820786963333;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);constant;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6635464027814924;0,66140679326023;0,6606044396897566;0,6584648301684942;0,658732281358652;0,6865472051350628;0,6718373896763841;0,6624765980208612;0,6647940074906367;0,6744248261102194;0,6662834773691789;0,008403177461534763;778
0,5162728071212769;0,09453796849051013;0,03143279552459717;0,004958698610181422;LinearSVC();;;;;;42;;1.0;False;10000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6664883658732281;0,6662209146830703;0,6598020861192833;0,6598020861192833;0,6528483551751806;0,6881519122760096;0,6707675849157528;0,6616742444503878;0,6631888710540396;0,6736222578919208;0,6662566678558156;0,009206373124063055;779
0,5871145963668823;0,16108048802370606;0,03195114135742187;0,0065681582537541056;LinearSVC();;;;;;42;;1.0;False;100;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6664883658732281;0,6662209146830703;0,6598020861192833;0,6598020861192833;0,6528483551751806;0,6881519122760096;0,6707675849157528;0,6616742444503878;0,6631888710540396;0,6736222578919208;0,6662566678558156;0,009206373124063055;779
0,5860684394836426;0,15743575850528305;0,044611883163452146;0,014453610576511542;LinearSVC();;;;;;42;;1.0;False;1000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6664883658732281;0,6662209146830703;0,6598020861192833;0,6598020861192833;0,6528483551751806;0,6881519122760096;0,6707675849157528;0,6616742444503878;0,6631888710540396;0,6736222578919208;0,6662566678558156;0,009206373124063055;779
0,3810275077819824;0,0315630719859059;0,028519082069396972;0,004439878477636288;LinearSVC();;;;;;42;;0.01;False;100;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6654185611125969;0,6686279753944905;0,6560577694570741;0,6603369884995989;0,6512436480342337;0,6873495587055363;0,6707675849157528;0,6638138539716502;0,6637239165329053;0,6749598715890851;0,6662299728212924;0,009613301377663338;782
143,41418478488922;18,443955425728625;0,1505054473876953;0,014528369363784818;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6608718908799144;0,6721048408665419;0,6581973789783364;0,6630115004011767;0,6672907194437016;0,6774538646696978;0,6528483551751806;0,6721048408665419;0,671482075976458;0,6669341894060995;0,6662299656663648;0,007119462414763765;783
0,6153058052062989;0,07361323085056896;0,03349535465240479;0,007039982453412204;LinearSVC();;;;;;42;;0.01;False;10000;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6654185611125969;0,6694303289649639;0,6557903182669163;0,6581973789783364;0,6517785504145494;0,6873495587055363;0,6718373896763841;0,6654185611125969;0,6623863028357411;0,6746923488496522;0,6662299298917274;0,009786609508407625;784
0,555678391456604;0,06991127424769979;0,032442331314086914;0,005439084672248102;LinearSVC();;;;;;42;;0.01;False;1000;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6654185611125969;0,6694303289649639;0,6557903182669163;0,6581973789783364;0,6517785504145494;0,6873495587055363;0,6718373896763841;0,6654185611125969;0,6623863028357411;0,6746923488496522;0,6662299298917274;0,009786609508407625;784
254,5801548242569;86,23365516275028;0,2051025390625;0,011176097209012264;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6846750468039583;0,6501738432736026;0,6659534634929125;0,6555228670767584;0,6488365873228136;0,6806632789515913;0,6723722920566997;0,6648836587322814;0,6581059390048154;0,6808453718566078;0,666203234857204;0,012420676787126345;786
1292,658561730385;490,7425292458748;0,7319929599761963;0,0328088740562741;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6803958277614336;0,6777213158598556;0,6691628777748061;0,6531158063653383;0,6474993313720246;0,6959079967905857;0,6608718908799144;0,6493714897031292;0,6567683253076512;0,6712145532370252;0,6662029415051764;0,014738408136388255;787
189,457461476326;53,87918944445773;0,16463589668273926;0,010260980012826828;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6675581706338594;0,652313452794865;0,6699652313452795;0,6643487563519658;0,6531158063653383;0,6785236694303289;0,6686279753944905;0,6696977801551217;0,6677367576243981;0,6698769395398609;0,6661764539635507;0,007545590347506009;788
4,3804292440414425;2,101683034177318;0,043896603584289554;0,022302634195288787;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);constant;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6688954265846483;0,6603369884995989;0,6616742444503878;0,6541856111259695;0,648301684942498;0,6881519122760096;0,6699652313452795;0,6654185611125969;0,6693418940609952;0,675227394328518;0,6661498948726502;0,010558561556116399;789
0,27727489471435546;0,040383161884064586;0,02958259582519531;0,005455075881589507;LinearSVC();balanced;;;;;42;;0.01;False;100;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6672907194437016;0,6696977801551217;0,6560577694570741;0,6592671837389676;0,649638940893287;0,6881519122760096;0,6713024872960685;0,6648836587322814;0,6623863028357411;0,6725521669341894;0,6661228921762442;0,010015543088212788;790
0,8224004507064819;0,12499640365834203;0,03243281841278076;0,00671640331153494;LinearSVC();;;;;;42;;0.1;False;1000;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6662209146830703;0,6656860123027547;0,6581973789783364;0,6598020861192833;0,6512436480342337;0,6886868146563252;0,6707675849157528;0,6624765980208612;0,6631888710540396;0,6746923488496522;0,6660962257614309;0,00974881999720213;791
0,8824039697647095;0,12959878757843205;0,028613018989562988;0,004292864190883649;LinearSVC();;;;;;42;;0.1;False;10000;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6662209146830703;0,6656860123027547;0,6581973789783364;0,6598020861192833;0,6512436480342337;0,6886868146563252;0,6707675849157528;0,6624765980208612;0,6631888710540396;0,6746923488496522;0,6660962257614309;0,00974881999720213;791
148,57674951553344;33,33568238936817;0,15965125560760499;0,009839203199278602;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6696977801551217;0,6555228670767584;0,6622091468307034;0,6755817063385932;0,652313452794865;0,675849157528751;0,6678256218240172;0,6662209146830703;0,6639914392723382;0,6717495987158909;0,6660961685220109;0,007445350569230262;793
195,54409770965577;84,12730540617677;0,15153915882110597;0,01238377945677858;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6643487563519658;0,6571275742177053;0,6563252206472319;0,6675581706338594;0,6595346349291255;0,6718373896763841;0,664081305161808;0,6694303289649639;0,6795077581594435;0,6698769395398609;0,6659628078282349;0,006828446123631868;794
2766,863962697983;848,9839833895154;1,3906922817230225;0,14374362620890002;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,662744049211019;0,6541856111259695;0,6699652313452795;0,682535437282696;0,6531158063653383;0,635196576624766;0,6900240706071142;0,6549879646964429;0,6800428036383093;0,6765650080256822;0,6659362558922617;0,016004305884869025;795
0,22674522399902344;0,04625085836367453;0,025188541412353514;0,0022680801138733756;LinearSVC();;;;;;42;;0.001;False;10000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6721048408665419;0,6662209146830703;0,6576624765980209;0,6581973789783364;0,6504412944637603;0,6894891682267986;0,6683605242043327;0,6584648301684942;0,6621187800963082;0,6757624398073836;0,6658822648093047;0,010649454261278878;796
0,20798583030700685;0,03182283722855525;0,03178417682647705;0,012394497356693434;LinearSVC();;;;;;42;;0.001;False;1000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6721048408665419;0,6662209146830703;0,6576624765980209;0,6581973789783364;0,6504412944637603;0,6894891682267986;0,6683605242043327;0,6584648301684942;0,6621187800963082;0,6757624398073836;0,6658822648093047;0,010649454261278878;796
0,22935256958007813;0,03510232305491545;0,03481428623199463;0,00857753821579009;LinearSVC();;;;;;42;;0.001;False;100;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6721048408665419;0,6662209146830703;0,6576624765980209;0,6581973789783364;0,6504412944637603;0,6894891682267986;0,6683605242043327;0,6584648301684942;0,6621187800963082;0,6757624398073836;0,6658822648093047;0,010649454261278878;796
694,4427182197571;217,4440628465739;0,3944345712661743;0,026439276305340417;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6656860123027547;0,6619416956405456;0,6600695373094411;0,6565926718373897;0,6598020861192833;0,6838726932334849;0,6841401444236427;0,6662209146830703;0,6524879614767255;0,668004280363831;0,6658817997390167;0,010068019607372228;799
194,11104161739348;74,79887720320295;0,17429125308990479;0,027432069388273146;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6662209146830703;0,6651511099224392;0,6544530623161273;0,652313452794865;0,6515110992243915;0,6822679860925381;0,6710350361059106;0,6638138539716502;0,671482075976458;0,6803103263777421;0,6658558917465192;0,010299320988949168;800
1002,0022911787033;286,5704500436942;0,45157310962677;0,04771570703779362;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6675581706338594;0,6568601230275475;0,6606044396897566;0,6603369884995989;0,6394757956672907;0,6897566194169564;0,6713024872960685;0,66140679326023;0,6728196896736223;0,6784376672017122;0,6658558774366642;0,012904523772414196;801
32,167371368408205;3,9010429470811565;0,020557713508605958;0,004681579585672851;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);adaptive;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6624765980208612;0,6622091468307034;0,6579299277881786;0,6573950254078631;0,6584648301684942;0,6860123027547472;0,6737095480074886;0,6638138539716502;0,6618512573568753;0,6746923488496522;0,6658554839156514;0,00883178429550912;802
220,54107518196105;46,3956506211202;0,1929187297821045;0,005861176827095649;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6662209146830703;0,6696977801551217;0,6547205135062851;0,6742444503878042;0,6638138539716502;0,6849424979941161;0,6723722920566997;0,6624765980208612;0,651685393258427;0,6583734617442483;0,6658547755778284;0,009425493313418083;803
37,351766681671144;5,391080900073592;0,018745613098144532;0,000508229641420515;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);adaptive;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,662744049211019;0,6608718908799144;0,6595346349291255;0,6557903182669163;0,6581973789783364;0,6884193634661674;0,6750468039582777;0,6581973789783364;0,6647940074906367;0,6744248261102194;0,6658020652268948;0,009804141503249507;804
467,79571118354795;108,2285327014429;0,3037703037261963;0,022987135667952203;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6664883658732281;0,6793260230008024;0,6576624765980209;0,652313452794865;0,6488365873228136;0,6836052420433271;0,6747793527681198;0,6688954265846483;0,6610486891385767;0,6647940074906367;0,6657749623615038;0,010724311405299603;805
5,000217843055725;0,6601561885951863;0,04290814399719238;0,019883075314952578;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);constant;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6672907194437016;0,6560577694570741;0,6573950254078631;0,652313452794865;0,6884193634661674;0,6742444503878042;0,6592671837389676;0,660781166399144;0,6738897806313536;0,6656949631170642;0,010334558754285555;806
5,0244792938232425;0,7078448197758779;0,048848724365234374;0,027029268452418778;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);constant;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6672907194437016;0,6560577694570741;0,6573950254078631;0,652313452794865;0,6884193634661674;0,6742444503878042;0,6592671837389676;0,660781166399144;0,6738897806313536;0,6656949631170642;0,010334558754285555;806
5,0033841848373415;0,6453678447901924;0,028148937225341796;0,007072926907997979;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);adaptive;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6672907194437016;0,6560577694570741;0,6573950254078631;0,652313452794865;0,6884193634661674;0,6742444503878042;0,6592671837389676;0,660781166399144;0,6738897806313536;0,6656949631170642;0,010334558754285555;806
4,97889723777771;0,6601290025930009;0,03852415084838867;0,014247771303924054;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);adaptive;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6672907194437016;0,6560577694570741;0,6573950254078631;0,652313452794865;0,6884193634661674;0,6742444503878042;0,6592671837389676;0,660781166399144;0,6738897806313536;0,6656949631170642;0,010334558754285555;806
4,999874496459961;0,6493076229035039;0,03793404102325439;0,011979832279236808;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);adaptive;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6672907194437016;0,6560577694570741;0,6573950254078631;0,652313452794865;0,6884193634661674;0,6742444503878042;0,6592671837389676;0,660781166399144;0,6738897806313536;0,6656949631170642;0,010334558754285555;806
5,025866317749023;0,66834410963811;0,041492891311645505;0,017233461622364877;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6672907194437016;0,6560577694570741;0,6573950254078631;0,652313452794865;0,6884193634661674;0,6742444503878042;0,6592671837389676;0,660781166399144;0,6738897806313536;0,6656949631170642;0,010334558754285555;806
5,005659747123718;0,6853513898739781;0,03903806209564209;0,012350169167365688;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);constant;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6672907194437016;0,6560577694570741;0,6573950254078631;0,652313452794865;0,6884193634661674;0,6742444503878042;0,6592671837389676;0,660781166399144;0,6738897806313536;0,6656949631170642;0,010334558754285555;806
4,9852001667022705;0,6815284176397856;0,044029641151428225;0,02027999053164481;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);constant;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6672907194437016;0,6560577694570741;0,6573950254078631;0,652313452794865;0,6884193634661674;0,6742444503878042;0,6592671837389676;0,660781166399144;0,6738897806313536;0,6656949631170642;0,010334558754285555;806
4,877527022361756;0,6243689279831205;0,02887680530548096;0,00882654328540757;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);constant;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6662209146830703;0,6592671837389676;0,6568601230275475;0,6512436480342337;0,6860123027547472;0,6715699384862263;0,6581973789783364;0,6647940074906367;0,675227394328518;0,6656683610965984;0,009624082297514585;814
4,878681230545044;0,7198526657951321;0,03804605007171631;0,016663979248437266;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);adaptive;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6662209146830703;0,6592671837389676;0,6568601230275475;0,6512436480342337;0,6860123027547472;0,6715699384862263;0,6581973789783364;0,6647940074906367;0,675227394328518;0,6656683610965984;0,009624082297514585;814
4,858968997001648;0,6650600519285377;0,03387746810913086;0,009344730729735169;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);constant;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6662209146830703;0,6592671837389676;0,6568601230275475;0,6512436480342337;0,6860123027547472;0,6715699384862263;0,6581973789783364;0,6647940074906367;0,675227394328518;0,6656683610965984;0,009624082297514585;814
4,865000557899475;0,6457712517541427;0,036858987808227536;0,01390728258600292;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);adaptive;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6662209146830703;0,6592671837389676;0,6568601230275475;0,6512436480342337;0,6860123027547472;0,6715699384862263;0,6581973789783364;0,6647940074906367;0,675227394328518;0,6656683610965984;0,009624082297514585;814
4,8433716773986815;0,6473355209937318;0,03522047996520996;0,01844928115622285;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);adaptive;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6662209146830703;0,6592671837389676;0,6568601230275475;0,6512436480342337;0,6860123027547472;0,6715699384862263;0,6581973789783364;0,6647940074906367;0,675227394328518;0,6656683610965984;0,009624082297514585;814
4,887937474250793;0,6686890599869567;0,0301544189453125;0,009119811587760016;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);constant;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6662209146830703;0,6592671837389676;0,6568601230275475;0,6512436480342337;0,6860123027547472;0,6715699384862263;0,6581973789783364;0,6647940074906367;0,675227394328518;0,6656683610965984;0,009624082297514585;814
4,895190095901489;0,639718855758059;0,0383831262588501;0,015720712885015753;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);constant;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6662209146830703;0,6592671837389676;0,6568601230275475;0,6512436480342337;0,6860123027547472;0,6715699384862263;0,6581973789783364;0,6647940074906367;0,675227394328518;0,6656683610965984;0,009624082297514585;814
4,846474075317383;0,6532648825688067;0,038274741172790526;0,01741265622341667;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6662209146830703;0,6592671837389676;0,6568601230275475;0,6512436480342337;0,6860123027547472;0,6715699384862263;0,6581973789783364;0,6647940074906367;0,675227394328518;0,6656683610965984;0,009624082297514585;814
209,89629533290864;58,48042732630512;0,17112176418304442;0,006849563424236447;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,662744049211019;0,6488365873228136;0,6694303289649639;0,66140679326023;0,6547205135062851;0,6779887670500133;0,6721048408665419;0,6713024872960685;0,668004280363831;0,6693418940609952;0,6655880541902761;0,00829385231296181;822
32,13213872909546;3,438465204651854;0,025492525100708006;0,013482323159932186;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6624765980208612;0,6611393420700722;0,6603369884995989;0,6555228670767584;0,6573950254078631;0,6865472051350628;0,673174645627173;0,6606044396897566;0,6653290529695024;0,6728196896736223;0,6655345854170271;0,008941439693448607;823
217,00655767917632;77,39223076531837;0,1772838830947876;0,013967078954131639;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6680930730141749;0,6672907194437016;0,6565926718373897;0,6814656325220647;0,6509761968440759;0,6710350361059106;0,6598020861192833;0,6691628777748061;0,6538255751738897;0,6768325307651151;0,665507639960041;0,009467580812820224;824
1844,0274376869202;476,84545300077;1,1129955530166626;0,0656762599388416;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6739769991976464;0,6688954265846483;0,6325220647231881;0,6611393420700722;0,649638940893287;0,6868146563252207;0,6777213158598556;0,6528483551751806;0,6725521669341894;0,678705189941145;0,6654814457704433;0,015586427093518812;825
365,12277660369875;105,65087820982072;0,173584246635437;0,03933646473168734;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6696977801551217;0,6555228670767584;0,6589997325488098;0,6437550147098154;0,66140679326023;0,6884193634661674;0,664081305161808;0,6632789515913345;0,6645264847512039;0,6851257356875334;0,6654814028408782;0,012519478785739174;826
2151,467514896393;716,4900324104769;1,0611623287200929;0,06690218309968866;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6584648301684942;0,6579299277881786;0,6598020861192833;0,6680930730141749;0,6533832575554961;0,6787911206204867;0,6696977801551217;0,6474993313720246;0,6773675762439807;0,6835205992509363;0,6654549582288178;0,011298963217290939;827
241,78324477672578;58,23345562114119;0,1899413585662842;0,008601115899793888;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6707675849157528;0,6683605242043327;0,6525809039850228;0,6544530623161273;0,6568601230275475;0,6686279753944905;0,6715699384862263;0,6606044396897566;0,6613162118780096;0,6894060995184591;0,6654546863415726;0,010291236250854603;828
2,3552993535995483;0,5216383854251363;0,0353973388671875;0,016800933867741612;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);adaptive;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6656860123027547;0,6664883658732281;0,6568601230275475;0,6603369884995989;0,6517785504145494;0,6817330837122225;0,6707675849157528;0,66140679326023;0,6637239165329053;0,6749598715890851;0,6653741290127874;0,008313205249671326;829
2,3731422662734984;0,5048764762080203;0,03348395824432373;0,012469159681490339;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);constant;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6656860123027547;0,6664883658732281;0,6568601230275475;0,6603369884995989;0,6517785504145494;0,6817330837122225;0,6707675849157528;0,66140679326023;0,6637239165329053;0,6749598715890851;0,6653741290127874;0,008313205249671326;829
2,346887707710266;0,5556791297028565;0,03076624870300293;0,012686865418893276;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);adaptive;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6656860123027547;0,6664883658732281;0,6568601230275475;0,6603369884995989;0,6517785504145494;0,6817330837122225;0,6707675849157528;0,66140679326023;0,6637239165329053;0,6749598715890851;0,6653741290127874;0,008313205249671326;829
2,3506001472473144;0,5043785783311611;0,03671274185180664;0,01810519270138286;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);constant;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6656860123027547;0,6664883658732281;0,6568601230275475;0,6603369884995989;0,6517785504145494;0,6817330837122225;0,6707675849157528;0,66140679326023;0,6637239165329053;0,6749598715890851;0,6653741290127874;0,008313205249671326;829
2,3204604148864747;0,5113638781389687;0,026185154914855957;0,006914993382330811;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);constant;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6656860123027547;0,6664883658732281;0,6568601230275475;0,6603369884995989;0,6517785504145494;0,6817330837122225;0,6707675849157528;0,66140679326023;0,6637239165329053;0,6749598715890851;0,6653741290127874;0,008313205249671326;829
2,3195826768875123;0,5128359146777657;0,023390960693359376;0,006951514606360284;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);adaptive;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6656860123027547;0,6664883658732281;0,6568601230275475;0,6603369884995989;0,6517785504145494;0,6817330837122225;0,6707675849157528;0,66140679326023;0,6637239165329053;0,6749598715890851;0,6653741290127874;0,008313205249671326;829
2,329151082038879;0,5242694307794153;0,037464570999145505;0,017735937417863494;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);constant;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6656860123027547;0,6664883658732281;0,6568601230275475;0,6603369884995989;0,6517785504145494;0,6817330837122225;0,6707675849157528;0,66140679326023;0,6637239165329053;0,6749598715890851;0,6653741290127874;0,008313205249671326;829
2,336643195152283;0,4958902749127904;0,027970600128173827;0,018690982668304983;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);adaptive;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6656860123027547;0,6664883658732281;0,6568601230275475;0,6603369884995989;0,6517785504145494;0,6817330837122225;0,6707675849157528;0,66140679326023;0,6637239165329053;0,6749598715890851;0,6653741290127874;0,008313205249671326;829
152,77088775634766;22,225744569307725;0,16991004943847657;0,047996228600856755;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6654185611125969;0,6646162075421236;0,6531158063653383;0,6787911206204867;0,6573950254078631;0,6686279753944905;0,6787911206204867;0,6544530623161273;0,6639914392723382;0,6682718031032637;0,6653472121755115;0,008453985037819195;837
970,4684521198272;230,45706037365198;0,4751404285430908;0,04499982079211086;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6691628777748061;0,6555228670767584;0,6643487563519658;0,6667558170633859;0,6528483551751806;0,6699652313452795;0,6715699384862263;0,662744049211019;0,6637239165329053;0,6765650080256822;0,665320681704321;0,0068232795904314076;838
0,19019081592559814;0,04385074137924144;0,028221487998962402;0,004828130798750035;LinearSVC();balanced;;;;;42;;0.001;False;100;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6715699384862263;0,6678256218240172;0,6576624765980209;0,6579299277881786;0,6512436480342337;0,688954265846483;0,6659534634929125;0,6573950254078631;0,6597110754414125;0,6749598715890851;0,6653205314508434;0,010501935845058305;839
0,20115463733673095;0,03268673296185173;0,03190722465515137;0,007276788580890524;LinearSVC();balanced;;;;;42;;0.001;False;1000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6715699384862263;0,6678256218240172;0,6576624765980209;0,6579299277881786;0,6512436480342337;0,688954265846483;0,6659534634929125;0,6573950254078631;0,6597110754414125;0,6749598715890851;0,6653205314508434;0,010501935845058305;839
0,2232454776763916;0,04666808684172802;0,031058645248413085;0,00853677998645446;LinearSVC();balanced;;;;;42;;0.001;False;10000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6715699384862263;0,6678256218240172;0,6576624765980209;0,6579299277881786;0,6512436480342337;0,688954265846483;0,6659534634929125;0,6573950254078631;0,6597110754414125;0,6749598715890851;0,6653205314508434;0,010501935845058305;839
197,85408058166504;83,86865269448326;0,17722976207733154;0,00842990074063174;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6683605242043327;0,6664883658732281;0,6547205135062851;0,6592671837389676;0,6410805028082375;0,6844075956138005;0,6699652313452795;0,6606044396897566;0,6736222578919208;0,6744248261102194;0,6652941440782029;0,011432928049723927;842
3,115950083732605;0,919135452578851;0,030730533599853515;0,02003381297481092;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);adaptive;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6654185611125969;0,6678256218240172;0,662744049211019;0,6547205135062851;0,6474993313720246;0,686279753944905;0,6688954265846483;0,6600695373094411;0,6629213483146067;0,675227394328518;0,6651601537508062;0,010129982847846329;843
3,135725569725037;0,8779648487196828;0,030820131301879883;0,013972173046453847;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);constant;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6654185611125969;0,6678256218240172;0,662744049211019;0,6547205135062851;0,6474993313720246;0,686279753944905;0,6688954265846483;0,6600695373094411;0,6629213483146067;0,675227394328518;0,6651601537508062;0,010129982847846329;843
3,1503944396972656;0,8709480746901813;0,04131226539611817;0,01806939666140701;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);constant;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6654185611125969;0,6678256218240172;0,662744049211019;0,6547205135062851;0,6474993313720246;0,686279753944905;0,6688954265846483;0,6600695373094411;0,6629213483146067;0,675227394328518;0,6651601537508062;0,010129982847846329;843
3,1329954624176026;0,9146650083951287;0,032493066787719724;0,0178646499307651;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);adaptive;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6654185611125969;0,6678256218240172;0,662744049211019;0,6547205135062851;0,6474993313720246;0,686279753944905;0,6688954265846483;0,6600695373094411;0,6629213483146067;0,675227394328518;0,6651601537508062;0,010129982847846329;843
3,146520709991455;0,8781644181298117;0,03386466503143311;0,009823190821350459;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);constant;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6654185611125969;0,6678256218240172;0,662744049211019;0,6547205135062851;0,6474993313720246;0,686279753944905;0,6688954265846483;0,6600695373094411;0,6629213483146067;0,675227394328518;0,6651601537508062;0,010129982847846329;843
3,2121596813201903;1,0108967252049996;0,027874159812927245;0,007885209711682589;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);adaptive;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6654185611125969;0,6678256218240172;0,662744049211019;0,6547205135062851;0,6474993313720246;0,686279753944905;0,6688954265846483;0,6600695373094411;0,6629213483146067;0,675227394328518;0,6651601537508062;0,010129982847846329;843
3,1457425117492677;0,8821858317282737;0,0322035551071167;0,01569171210311341;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);adaptive;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6654185611125969;0,6678256218240172;0,662744049211019;0,6547205135062851;0,6474993313720246;0,686279753944905;0,6688954265846483;0,6600695373094411;0,6629213483146067;0,675227394328518;0,6651601537508062;0,010129982847846329;843
3,2121716260910036;0,8917826664748062;0,03049468994140625;0,008863167330386399;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);constant;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6654185611125969;0,6678256218240172;0,662744049211019;0,6547205135062851;0,6474993313720246;0,686279753944905;0,6688954265846483;0,6600695373094411;0,6629213483146067;0,675227394328518;0,6651601537508062;0,010129982847846329;843
1143,8914504289628;487,8903368292329;0,7671534538269043;0,14738166449577303;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,682535437282696;0,6675581706338594;0,6651511099224392;0,6512436480342337;0,6450922706606045;0,690291521797272;0,6651511099224392;0,6488365873228136;0,6511503477795613;0,6845906902086677;0,6651600893564587;0,015413971196984863;851
376,8306077003479;107,81753043873947;0,19495692253112792;0,0547875312296688;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,664081305161808;0,6750468039582777;0,664081305161808;0,6376036373361862;0,652313452794865;0,6913613265579032;0,6598020861192833;0,6624765980208612;0,6626538255751739;0,6819154628143392;0,6651335803500504;0,014261485971281957;852
0,395756196975708;0,051577568562794364;0,02588646411895752;0,005230436346637162;DecisionTreeClassifier();balanced;gini;;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6619416956405456;0,6533832575554961;0,6595346349291255;0,6606044396897566;0,6606044396897566;0,6694303289649639;0,6761166087189088;0,67718641347954;0,6599785981808454;0,6722846441947565;0,6651065061043695;0,0076334566628053074;853
21,128649187088012;4,638790658242105;0,023389554023742674;0,009702494692649895;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);constant;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6624765980208612;0,6579299277881786;0,6598020861192833;0,6549879646964429;0,6571275742177053;0,6860123027547472;0,6737095480074886;0,6638138539716502;0,6618512573568753;0,6730872124130551;0,6650798325346289;0,009163086894821957;854
26,920115447044374;5,922880540113765;0,017903518676757813;0,0003268114843868776;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);constant;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6598020861192833;0,6563252206472319;0,6595346349291255;0,6557903182669163;0,6581973789783364;0,6884193634661674;0,6750468039582777;0,6581973789783364;0,6647940074906367;0,6744248261102194;0,665053201894453;0,010235996261647045;855
246,75706658363342;78,5173123872941;0,18540186882019044;0,01184864183632516;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6643487563519658;0,6549879646964429;0,670500133725595;0,6576624765980209;0,6702326825354373;0,6817330837122225;0,664081305161808;0,6499063920834448;0,6779026217228464;0,6591760299625468;0,665053144655033;0,009597717321533117;856
151,77711498737335;32,81656642133699;0,16090357303619385;0,010027462665505391;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6710350361059106;0,6568601230275475;0,6632789515913345;0,6715699384862263;0,6488365873228136;0,6707675849157528;0,6734420968173308;0,664081305161808;0,6610486891385767;0,6696094168004281;0,6650529729367729;0,007431492587090425;857
1018,0255446195603;365,64945869452725;0,4565549850463867;0,0421657880739261;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6464295266113934;0,6517785504145494;0,6603369884995989;0,6763840599090666;0,6611393420700722;0,679860925381118;0,6761166087189088;0,658732281358652;0,6690743713215623;0,6698769395398609;0,6649729593824782;0,010535665643359267;858
204,3593069076538;56,05353056787652;0,15313892364501952;0,009385115465923232;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6675581706338594;0,6525809039850228;0,6541856111259695;0,6525809039850228;0,6584648301684942;0,6753142551484355;0,6670232682535437;0,6710350361059106;0,6811128945960406;0,6693418940609952;0,6649197768063294;0,009486747457797264;859
280,74575238227845;83,9769044310551;0,20700533390045167;0,01538971399885781;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6707675849157528;0,6739769991976464;0,6579299277881786;0,6424177587590265;0,670500133725595;0,6777213158598556;0,6809307301417491;0,6493714897031292;0,6586409844836811;0,6669341894060995;0,6649191113980714;0,011866042614921628;860
33,09173333644867;4,635695032553484;0,022767400741577147;0,005206710045938657;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);adaptive;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6635464027814924;0,6624765980208612;0,6589997325488098;0,6560577694570741;0,6560577694570741;0,6849424979941161;0,6737095480074886;0,6581973789783364;0,6610486891385767;0,6738897806313536;0,6648926167015182;0,009048599543836485;861
20,73288459777832;4,100816705506873;0,027190899848937987;0,013463453028580213;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);constant;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6624765980208612;0,6579299277881786;0,6603369884995989;0,6555228670767584;0,6579299277881786;0,6865472051350628;0,6742444503878042;0,6598020861192833;0,6613162118780096;0,6728196896736223;0,6648925952367358;0,009323421200990953;862
181,94999039173126;61,5046201284942;0,1640235662460327;0,008458760179428064;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6718373896763841;0,6499063920834448;0,658732281358652;0,6779887670500133;0,64562717304092;0,6881519122760096;0,6707675849157528;0,662744049211019;0,6610486891385767;0,6618512573568753;0,6648655496107647;0,01207301846599199;863
36,257156586647035;4,785755409025295;0,024974417686462403;0,012444935401633512;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,662744049211019;0,658732281358652;0,6589997325488098;0,6547205135062851;0,6579299277881786;0,6838726932334849;0,6750468039582777;0,6592671837389676;0,6631888710540396;0,6738897806313536;0,6648391837029067;0,008989228859765873;864
216,00717194080352;44,29415244147982;0,18123855590820312;0,015284551342191394;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6643487563519658;0,6713024872960685;0,6624765980208612;0,652313452794865;0,6619416956405456;0,6774538646696978;0,66140679326023;0,6581973789783364;0,6728196896736223;0,6658640984483681;0,664812481513456;0,007018852050301623;865
10,242045736312866;2,0609429492126976;0,054931020736694335;0,023388752709625354;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);adaptive;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6638138539716502;0,6515110992243915;0,6595346349291255;0,6536507087456539;0,686279753944905;0,6696977801551217;0,6579299277881786;0,6639914392723382;0,6744248261102194;0,6648124743585286;0,009806412596599905;866
10,169334769248962;1,8326567353494019;0,053580856323242186;0,01495965175135629;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);constant;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6638138539716502;0,6515110992243915;0,6595346349291255;0,6536507087456539;0,686279753944905;0,6696977801551217;0,6579299277881786;0,6639914392723382;0,6744248261102194;0,6648124743585286;0,009806412596599905;866
10,197310042381286;1,8595479708777751;0,04040374755859375;0,010616989602251672;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);adaptive;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6638138539716502;0,6515110992243915;0,6595346349291255;0,6536507087456539;0,686279753944905;0,6696977801551217;0,6579299277881786;0,6639914392723382;0,6744248261102194;0,6648124743585286;0,009806412596599905;866
10,266534662246704;1,871563787728475;0,04405038356781006;0,01646231668924511;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);constant;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6638138539716502;0,6515110992243915;0,6595346349291255;0,6536507087456539;0,686279753944905;0,6696977801551217;0,6579299277881786;0,6639914392723382;0,6744248261102194;0,6648124743585286;0,009806412596599905;866
10,259497833251952;1,8767345754314024;0,05749387741088867;0,033813862531774784;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6638138539716502;0,6515110992243915;0,6595346349291255;0,6536507087456539;0,686279753944905;0,6696977801551217;0,6579299277881786;0,6639914392723382;0,6744248261102194;0,6648124743585286;0,009806412596599905;866
10,208368945121766;1,8927762893947357;0,04551899433135986;0,011762616092567435;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);adaptive;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6638138539716502;0,6515110992243915;0,6595346349291255;0,6536507087456539;0,686279753944905;0,6696977801551217;0,6579299277881786;0,6639914392723382;0,6744248261102194;0,6648124743585286;0,009806412596599905;866
10,22673683166504;2,017690619796828;0,0391028881072998;0,010969021556473871;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);constant;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6638138539716502;0,6515110992243915;0,6595346349291255;0,6536507087456539;0,686279753944905;0,6696977801551217;0,6579299277881786;0,6639914392723382;0,6744248261102194;0,6648124743585286;0,009806412596599905;866
10,202277112007142;1,8822749327248915;0,037476968765258786;0,01277660882151029;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);constant;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6672907194437016;0,6638138539716502;0,6515110992243915;0,6595346349291255;0,6536507087456539;0,686279753944905;0,6696977801551217;0,6579299277881786;0,6639914392723382;0,6744248261102194;0,6648124743585286;0,009806412596599905;866
7,652897691726684;1,2010114139440282;0,04273233413696289;0,012532542431884603;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);constant;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6675581706338594;0,6662209146830703;0,6549879646964429;0,6517785504145494;0,6517785504145494;0,6838726932334849;0,6737095480074886;0,6632789515913345;0,6578384162653825;0,6771000535045479;0,6648123813444708;0,010441424862838194;874
7,570778131484985;1,1774909613994429;0,0398193359375;0,012646199922423815;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);adaptive;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6675581706338594;0,6662209146830703;0,6549879646964429;0,6517785504145494;0,6517785504145494;0,6838726932334849;0,6737095480074886;0,6632789515913345;0,6578384162653825;0,6771000535045479;0,6648123813444708;0,010441424862838194;874
7,5733904361724855;1,2188288948994892;0,037609529495239255;0,0120422187470266;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);adaptive;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6675581706338594;0,6662209146830703;0,6549879646964429;0,6517785504145494;0,6517785504145494;0,6838726932334849;0,6737095480074886;0,6632789515913345;0,6578384162653825;0,6771000535045479;0,6648123813444708;0,010441424862838194;874
7,597072601318359;1,2662407654073349;0,03252003192901611;0,009487221743828139;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6675581706338594;0,6662209146830703;0,6549879646964429;0,6517785504145494;0,6517785504145494;0,6838726932334849;0,6737095480074886;0,6632789515913345;0,6578384162653825;0,6771000535045479;0,6648123813444708;0,010441424862838194;874
7,619582748413086;1,340389327813695;0,04061810970306397;0,017490160502140424;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);adaptive;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6675581706338594;0,6662209146830703;0,6549879646964429;0,6517785504145494;0,6517785504145494;0,6838726932334849;0,6737095480074886;0,6632789515913345;0,6578384162653825;0,6771000535045479;0,6648123813444708;0,010441424862838194;874
7,546497201919555;1,210374542463761;0,0400810956954956;0,01079981959745417;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);constant;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6675581706338594;0,6662209146830703;0,6549879646964429;0,6517785504145494;0,6517785504145494;0,6838726932334849;0,6737095480074886;0,6632789515913345;0,6578384162653825;0,6771000535045479;0,6648123813444708;0,010441424862838194;874
7,563919091224671;1,175075547506271;0,048270678520202635;0,0161036562642755;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);constant;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6675581706338594;0,6662209146830703;0,6549879646964429;0,6517785504145494;0,6517785504145494;0,6838726932334849;0,6737095480074886;0,6632789515913345;0,6578384162653825;0,6771000535045479;0,6648123813444708;0,010441424862838194;874
7,587151002883911;1,2128361272616277;0,04756157398223877;0,01070943318433801;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);constant;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6675581706338594;0,6662209146830703;0,6549879646964429;0,6517785504145494;0,6517785504145494;0,6838726932334849;0,6737095480074886;0,6632789515913345;0,6578384162653825;0,6771000535045479;0,6648123813444708;0,010441424862838194;874
8,660480189323426;0,8549682511748873;0,046424365043640135;0,012837047365551354;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);adaptive;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6664883658732281;0,6651511099224392;0,6509761968440759;0,6584648301684942;0,6512436480342337;0,6886868146563252;0,6747793527681198;0,6600695373094411;0,6575708935259497;0,6746923488496522;0,664812309795196;0,011227832163137223;882
8,716371822357178;0,8459675528509797;0,03928682804107666;0,011755096391797134;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);adaptive;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6664883658732281;0,6651511099224392;0,6509761968440759;0,6584648301684942;0,6512436480342337;0,6886868146563252;0,6747793527681198;0,6600695373094411;0,6575708935259497;0,6746923488496522;0,664812309795196;0,011227832163137223;882
8,572278904914857;0,8644042372278474;0,04613087177276611;0,018644976346093536;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);constant;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6664883658732281;0,6651511099224392;0,6509761968440759;0,6584648301684942;0,6512436480342337;0,6886868146563252;0,6747793527681198;0,6600695373094411;0,6575708935259497;0,6746923488496522;0,664812309795196;0,011227832163137223;882
8,66465368270874;0,8513923200432391;0,04356226921081543;0,016775207882337884;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);adaptive;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6664883658732281;0,6651511099224392;0,6509761968440759;0,6584648301684942;0,6512436480342337;0,6886868146563252;0,6747793527681198;0,6600695373094411;0,6575708935259497;0,6746923488496522;0,664812309795196;0,011227832163137223;882
8,655270314216613;0,8692517514336886;0,046529293060302734;0,014651326013689;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);constant;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6664883658732281;0,6651511099224392;0,6509761968440759;0,6584648301684942;0,6512436480342337;0,6886868146563252;0,6747793527681198;0,6600695373094411;0,6575708935259497;0,6746923488496522;0,664812309795196;0,011227832163137223;882
8,647839093208313;0,8748463564141002;0,04451167583465576;0,016629537263493088;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);constant;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6664883658732281;0,6651511099224392;0,6509761968440759;0,6584648301684942;0,6512436480342337;0,6886868146563252;0,6747793527681198;0,6600695373094411;0,6575708935259497;0,6746923488496522;0,664812309795196;0,011227832163137223;882
8,638158011436463;0,8542095713931642;0,049155807495117186;0,015231061520941608;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6664883658732281;0,6651511099224392;0,6509761968440759;0,6584648301684942;0,6512436480342337;0,6886868146563252;0,6747793527681198;0,6600695373094411;0,6575708935259497;0,6746923488496522;0,664812309795196;0,011227832163137223;882
8,655914807319641;0,8776372635166135;0,05171689987182617;0,014321723731533195;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);constant;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6664883658732281;0,6651511099224392;0,6509761968440759;0,6584648301684942;0,6512436480342337;0,6886868146563252;0,6747793527681198;0,6600695373094411;0,6575708935259497;0,6746923488496522;0,664812309795196;0,011227832163137223;882
2107,8301042795183;803,6219378100732;1,1653780221939087;0,04826751299316212;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6795934741909602;0,6630115004011767;0,6445573682802889;0,6557903182669163;0,6440224658999733;0,6956405456004279;0,6747793527681198;0,6656860123027547;0,6530230069555912;0,6717495987158909;0,6647853643382099;0,015437597398753401;890
0,398819899559021;0,04984814856584827;0,025357484817504883;0,0025904816274259974;DecisionTreeClassifier();;gini;;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6603369884995989;0,6504412944637603;0,6598020861192833;0,662744049211019;0,6603369884995989;0,6680930730141749;0,6753142551484355;0,6769189622893822;0,6615837346174425;0,6717495987158909;0,6647321030578587;0,007759341262875498;891
1412,2009396076203;578,8015960668804;0,7655813932418823;0,06806858144206691;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6683605242043327;0,6694303289649639;0,6592671837389676;0,6571275742177053;0,6426852099491843;0,67718641347954;0,6779887670500133;0,6849424979941161;0,653558052434457;0,6565008025682183;0,6647047354601499;0,012413354669344803;892
3023,4276424646378;974,2605504273477;1,4028559684753419;0,15175209999843492;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6790585718106446;0,6715699384862263;0,6721048408665419;0,6405456004279219;0,6539181599358117;0,6787911206204867;0,6678256218240172;0,6509761968440759;0,6722846441947565;0,6597110754414125;0,6646785770451895;0,012194109122584382;893
2198,712093639374;729,4948428343357;1,1805941343307496;0,06115761573987148;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6630115004011767;0,6646162075421236;0,6458946242310778;0,6437550147098154;0,6598020861192833;0,6691628777748061;0,6892217170366408;0,6707675849157528;0,6623863028357411;0,6779026217228464;0,6646520537289264;0,012871942653359447;894
343,2002071857452;140,29325023466595;0,15946567058563232;0,0029712808861345314;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6616742444503878;0,6648836587322814;0,6622091468307034;0,6600695373094411;0,6672907194437016;0,6787911206204867;0,6632789515913345;0,6485691361326558;0,671482075976458;0,6682718031032637;0,6646520394190714;0,007503742042907334;895
1226,5631628990172;370,7849622254705;0,6882202386856079;0,0416521498399023;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6785236694303289;0,6648836587322814;0,6474993313720246;0,6589997325488098;0,6579299277881786;0,6774538646696978;0,6675581706338594;0,6630115004011767;0,6567683253076512;0,6738897806313536;0,6646517961515362;0,00941455800722888;896
316,24854121208193;210,67545670753915;0,2074146270751953;0,016336041856279595;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6616742444503878;0,6766515110992244;0,6571275742177053;0,6394757956672907;0,6737095480074886;0,6774538646696978;0,6873495587055363;0,6651511099224392;0,6538255751738897;0,6540930979133226;0,6646511879826982;0,013540201699834985;897
177,13989036083223;30,450234169823215;0,16848561763763428;0,013022953079679522;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6507087456539181;0,6670232682535437;0,6606044396897566;0,649638940893287;0,6603369884995989;0,6924311313185344;0,6600695373094411;0,6651511099224392;0,668004280363831;0,6722846441947565;0,6646253086099106;0,011501510317871104;898
3047,34568297863;1008,2781069292898;1,3979865074157716;0,07576351103416183;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,66140679326023;0,6670232682535437;0,6755817063385932;0,6600695373094411;0,6568601230275475;0,6811981813319069;0,6598020861192833;0,6440224658999733;0,6645264847512039;0,675227394328518;0,6645718040620241;0,010256660935829599;899
177,69200439453124;44,202492600478216;0,16730499267578125;0,021994314411717526;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6480342337523401;0,6672907194437016;0,6616742444503878;0,64562717304092;0,6603369884995989;0,6967103503610591;0,6589997325488098;0,6630115004011767;0,6682718031032637;0,6754949170679507;0,6645451662669208;0,01365825125438381;900
202,57086148262024;49,74617114216593;0,18093640804290773;0,009474215585811942;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6667558170633859;0,67718641347954;0,66140679326023;0,6501738432736026;0,6646162075421236;0,6777213158598556;0,6648836587322814;0,6619416956405456;0,6551631888710541;0,6653290529695024;0,664517798669212;0,008063556954077676;901
0,4000013589859009;0,041353638476985775;0,025278782844543456;0,006082481211460782;DecisionTreeClassifier();balanced;gini;;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6608718908799144;0,6552554158866007;0,6608718908799144;0,6598020861192833;0,6606044396897566;0,6718373896763841;0,6763840599090666;0,6672907194437016;0,6602461209202782;0,671482075976458;0,6644646089381359;0,006470881710074438;902
1262,1741719722747;411,84709669310774;0,7266398429870605;0,03331917546318009;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,662744049211019;0,6648836587322814;0,6504412944637603;0,6608718908799144;0,6584648301684942;0,673174645627173;0,6828028884728538;0,6616742444503878;0,6615837346174425;0,6677367576243981;0,6644377994247725;0,008292386999237168;903
2160,624879407883;763,8221773498694;1,117753505706787;0,08428948495061055;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6774538646696978;0,6595346349291255;0,6619416956405456;0,6774538646696978;0,6576624765980209;0,6622091468307034;0,6793260230008024;0,6520460016047072;0,6522204387372926;0,6645264847512039;0,6644374631431796;0,009718369088857143;904
0,37551393508911135;0,011302378383764735;0,02515122890472412;0,008142620993514529;DecisionTreeClassifier();;gini;;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6603369884995989;0,6565926718373897;0,6619416956405456;0,6606044396897566;0,6606044396897566;0,6723722920566997;0,6734420968173308;0,6675581706338594;0,6597110754414125;0,6698769395398609;0,664304080984621;0,005652434208908227;905
33,11498589515686;5,444909990137041;0,027877116203308107;0,014045136918093361;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6635464027814924;0,6579299277881786;0,6598020861192833;0,6557903182669163;0,6557903182669163;0,6803958277614336;0,6750468039582777;0,658732281358652;0,660781166399144;0,6746923488496522;0,6642507481549946;0,00855648367625559;906
2591,205233502388;858,8169428019203;1,3760212421417237;0,09519628813605498;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6761166087189088;0,6517785504145494;0,6659534634929125;0,6785236694303289;0,6557903182669163;0,6346616742444504;0,6787911206204867;0,6493714897031292;0,6730872124130551;0,6781701444622793;0,6642244251767017;0,01467890521153281;907
567,7160233974457;264,5263405157867;0,1994448184967041;0,019453940429251783;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,662744049211019;0,6656860123027547;0,6504412944637603;0,6536507087456539;0,6563252206472319;0,6662209146830703;0,6769189622893822;0,675849157528751;0,6613162118780096;0,6722846441947565;0,6641437175944389;0,008614724004411567;908
6,090653276443481;0,7030713748990435;0,027839398384094237;0,008747063626777393;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);constant;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6635464027814924;0,6611393420700722;0,6560577694570741;0,6576624765980209;0,6448248194704467;0,6878844610858519;0,6739769991976464;0,6611393420700722;0,6637239165329053;0,6712145532370252;0,6641170082500608;0,010997728587147421;909
25,110744452476503;4,461359673008089;0,0198763370513916;0,003836983685742984;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);constant;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6592671837389676;0,658732281358652;0,6573950254078631;0,6547205135062851;0,6579299277881786;0,6814656325220647;0,6747793527681198;0,6592671837389676;0,6631888710540396;0,6738897806313536;0,6640635752514491;0,008710891649452471;910
269,3466866016388;82,41754397497348;0,1948018789291382;0,00580526878863314;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6699652313452795;0,6726397432468575;0,6480342337523401;0,6517785504145494;0,6632789515913345;0,6683605242043327;0,6648836587322814;0,6643487563519658;0,6720171214553237;0,6650615302300695;0,6640368301324334;0,007748049782903739;911
0,20318474769592285;0,027686669336663153;0,026938319206237793;0,003984201410613333;LinearSVC();;;;;;42;;0.001;False;100;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6648836587322814;0,6611393420700722;0,6573950254078631;0,6573950254078631;0,6552554158866007;0,6814656325220647;0,6715699384862263;0,6571275742177053;0,660781166399144;0,6725521669341894;0,6639564946064012;0,008159334486530025;912
11,988873481750488;0,828365987331112;0,030579018592834472;0,010874498438566266;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);adaptive;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6635464027814924;0,6611393420700722;0,6560577694570741;0,6576624765980209;0,6448248194704467;0,6878844610858519;0,6718373896763841;0,6611393420700722;0,6637239165329053;0,6712145532370252;0,6639030472979345;0,010823250046805233;913
25,473691153526307;4,793892813885145;0,017920613288879395;0,0006087152915535033;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);constant;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6635464027814924;0,6624765980208612;0,6589997325488098;0,6560577694570741;0,6461620754212356;0,6849424979941161;0,6737095480074886;0,6581973789783364;0,6610486891385767;0,6738897806313536;0,6639030472979344;0,010400758202274466;914
1848,606926369667;691,5355472794779;1,0757083892822266;0,07248874985187533;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6573950254078631;0,6659534634929125;0,6512436480342337;0,6595346349291255;0,6392083444771329;0,6833377908531693;0,6726397432468575;0,6691628777748061;0,675227394328518;0,6650615302300695;0,6638764452774687;0,01202917740641076;915
2074,952733540535;994,8844789862733;1,0554049015045166;0,0756365555146314;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6536507087456539;0,6793260230008024;0,6507087456539181;0,6777213158598556;0,6448248194704467;0,6755817063385932;0,6806632789515913;0,664081305161808;0,6602461209202782;0,6519529159978599;0,6638756940100807;0,012827669425181336;916
15,07160279750824;1,7221487872261303;0,023746013641357422;0,009264903136545467;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);adaptive;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6651511099224392;0,6608718908799144;0,6549879646964429;0,6573950254078631;0,6440224658999733;0,688954265846483;0,6739769991976464;0,6606044396897566;0,6602461209202782;0,6717495987158909;0,6637959881176688;0,011586940345847297;917
5,96888644695282;0,841520777865852;0,03203413486480713;0,015441798502556827;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);constant;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6632789515913345;0,658732281358652;0,6560577694570741;0,6560577694570741;0,6448248194704467;0,6878844610858519;0,6737095480074886;0,6611393420700722;0,6647940074906367;0,6712145532370252;0,6637693503225656;0,011167760617323358;918
6,549087405204773;1,1065641640612653;0,04028470516204834;0,016003144142954125;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);adaptive;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6670232682535437;0,6659534634929125;0,6504412944637603;0,6539181599358117;0,6515110992243915;0,6860123027547472;0,6683605242043327;0,6592671837389676;0,6613162118780096;0,6738897806313536;0,663769328857783;0,010415586347190364;919
6,525579142570495;1,0656131386955363;0,06065990924835205;0,022997811222549132;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);constant;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6670232682535437;0,6659534634929125;0,6504412944637603;0,6539181599358117;0,6515110992243915;0,6860123027547472;0,6683605242043327;0,6592671837389676;0,6613162118780096;0,6738897806313536;0,663769328857783;0,010415586347190364;919
6,575659894943238;1,0551062822613015;0,04526398181915283;0,015188325511881273;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);constant;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6670232682535437;0,6659534634929125;0,6504412944637603;0,6539181599358117;0,6515110992243915;0,6860123027547472;0,6683605242043327;0,6592671837389676;0,6613162118780096;0,6738897806313536;0,663769328857783;0,010415586347190364;919
6,5665318965911865;1,066948748277911;0,04544498920440674;0,018771755702137394;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);adaptive;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6670232682535437;0,6659534634929125;0,6504412944637603;0,6539181599358117;0,6515110992243915;0,6860123027547472;0,6683605242043327;0,6592671837389676;0,6613162118780096;0,6738897806313536;0,663769328857783;0,010415586347190364;919
6,539894461631775;1,0929993838208198;0,04500634670257568;0,015775213174065734;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);constant;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6670232682535437;0,6659534634929125;0,6504412944637603;0,6539181599358117;0,6515110992243915;0,6860123027547472;0,6683605242043327;0,6592671837389676;0,6613162118780096;0,6738897806313536;0,663769328857783;0,010415586347190364;919
6,5588836669921875;1,0602936510742946;0,03578617572784424;0,011464506342217453;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);adaptive;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6670232682535437;0,6659534634929125;0,6504412944637603;0,6539181599358117;0,6515110992243915;0,6860123027547472;0,6683605242043327;0,6592671837389676;0,6613162118780096;0,6738897806313536;0,663769328857783;0,010415586347190364;919
6,5792022228240965;1,0756253823250934;0,05594854354858399;0,018503952871647956;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);adaptive;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6670232682535437;0,6659534634929125;0,6504412944637603;0,6539181599358117;0,6515110992243915;0,6860123027547472;0,6683605242043327;0,6592671837389676;0,6613162118780096;0,6738897806313536;0,663769328857783;0,010415586347190364;919
6,597360372543335;1,056647258860251;0,04062988758087158;0,01197420589319184;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);constant;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6670232682535437;0,6659534634929125;0,6504412944637603;0,6539181599358117;0,6515110992243915;0,6860123027547472;0,6683605242043327;0,6592671837389676;0,6613162118780096;0,6738897806313536;0,663769328857783;0,010415586347190364;919
580,9964604854583;308,01387003685994;0,19718942642211915;0,025577281653279268;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,658732281358652;0,6729071944370153;0,6392083444771329;0,6509761968440759;0,6608718908799144;0,673174645627173;0,6777213158598556;0,6809307301417491;0,6626538255751739;0,6605136436597111;0,6637690068860453;0,012139395428391696;927
261,6555417776108;126,37690627473164;0,20767996311187745;0,018596001288685552;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6766515110992244;0,66140679326023;0,6664883658732281;0,6539181599358117;0,6507087456539181;0,6793260230008024;0,6779887670500133;0,6525809039850228;0,660781166399144;0,6578384162653825;0,6637688852522778;0,010295817413797852;928
2693,1686375856398;883,4642269860298;1,1245217084884644;0,06559639838408068;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6841401444236427;0,652313452794865;0,6432201123294998;0,6408130516180797;0,6632789515913345;0,6873495587055363;0,662744049211019;0,6656860123027547;0,6626538255751739;0,675227394328518;0,6637426552880423;0,014795219728852125;929
1183,9133912801742;312,79265421731526;0,7285913944244384;0,05577255648142296;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6894891682267986;0,6589997325488098;0,6445573682802889;0,6400106980476064;0,6515110992243915;0,6680930730141749;0,6755817063385932;0,6480342337523401;0,6666666666666666;0,6936864633493847;0,6636630209449056;0,017542041155946864;930
14,930394411087036;1,056230139474041;0,038222885131835936;0,025288033724526433;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);adaptive;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6646162075421236;0,6608718908799144;0,6549879646964429;0,6576624765980209;0,6440224658999733;0,6886868146563252;0,6715699384862263;0,6603369884995989;0,6645264847512039;0,6693418940609952;0,6636623126070824;0,011128705049173154;931
8,898842573165894;1,6548152005145187;0,026034069061279298;0,009580227667865086;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);constant;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6651511099224392;0,6589997325488098;0,6549879646964429;0,6573950254078631;0,6440224658999733;0,688954265846483;0,6739769991976464;0,6606044396897566;0,6602461209202782;0,6717495987158909;0,6636087722845583;0,011647639636108828;932
1679,1083346128464;573,5162484566571;1,06262104511261;0,08350321611760939;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6683605242043327;0,6632789515913345;0,6632789515913345;0,6779887670500133;0,6638138539716502;0,6571275742177053;0,6852099491842739;0,6541856111259695;0,6508828250401284;0,6514178705189941;0,6635544878495736;0,010665711916330228;933
2886,2389949798585;1029,8997493391626;1,4642646074295045;0,11547696162281165;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6638138539716502;0,6699652313452795;0,6309173575822412;0,6680930730141749;0,6557903182669163;0,6664883658732281;0,662744049211019;0,6742444503878042;0,6591760299625468;0,6840556447298021;0,6635288374344662;0,013229624927472492;934
11,782896041870117;0,8626936289735873;0,02300550937652588;0,006862255330719733;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);adaptive;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6632789515913345;0,658732281358652;0,6560577694570741;0,6560577694570741;0,6448248194704467;0,6878844610858519;0,6737095480074886;0,658732281358652;0,6647940074906367;0,6712145532370252;0,6635286442514235;0,011247508605333793;935
254,17849023342131;88,74534671726921;0,20028891563415527;0,019657563565208216;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6600695373094411;0,6608718908799144;0,6699652313452795;0,6509761968440759;0,6461620754212356;0,6787911206204867;0,6785236694303289;0,6579299277881786;0,6666666666666666;0,6650615302300695;0,6635017846535678;0,010104179147105074;936
0,2118997812271118;0,01928393130568907;0,025577664375305176;0,002249298387241631;LinearSVC();;;;;;42;;0.001;False;10000;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6648836587322814;0,6611393420700722;0,6573950254078631;0,6571275742177053;0,6509761968440759;0,6814656325220647;0,6715699384862263;0,6568601230275475;0,660781166399144;0,6725521669341894;0,663475082464117;0,008737933318443532;937
0,21456100940704345;0,049403014207266074;0,03226439952850342;0,008852996452302172;LinearSVC();;;;;;42;;0.001;False;1000;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6648836587322814;0,6611393420700722;0,6573950254078631;0,6571275742177053;0,6509761968440759;0,6814656325220647;0,6715699384862263;0,6568601230275475;0,660781166399144;0,6725521669341894;0,663475082464117;0,008737933318443532;937
1814,3988342046737;566,3795377333155;1,113454818725586;0,05127982267685866;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6694303289649639;0,6606044396897566;0,6424177587590265;0,6472318801818668;0,6440224658999733;0,6961754479807435;0,6729071944370153;0,6694303289649639;0,6581059390048154;0,673354735152488;0,6633680519035613;0,01565064417017742;939
499,94357080459594;159,5908955414766;0,3112745761871338;0,017618063804824488;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6573950254078631;0,6565926718373897;0,6544530623161273;0,6493714897031292;0,6346616742444504;0,6854774003744316;0,6846750468039583;0,6680930730141749;0,6433921883360085;0,6993044408774746;0,6633416072915008;0,019587263877856906;940
826,8191170930862;351,03628189021515;0,49564347267150877;0,04959179093456915;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,652313452794865;0,6589997325488098;0,6381385397165017;0,6656860123027547;0,6691628777748061;0,7001872158331105;0,6801283765712758;0,6434875635196576;0,6578384162653825;0,6674692348849652;0,6633411422212129;0,017017491215143992;941
2085,93000395298;388,3112573896134;1,1769901990890503;0,11817916042380162;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,675849157528751;0,6606044396897566;0,6656860123027547;0,6651511099224392;0,6477667825621825;0,6729071944370153;0,6686279753944905;0,66140679326023;0,6645264847512039;0,6508828250401284;0,6633408774888953;0,008337214368986648;942
0,26816296577453613;0,05615888680921075;0,023508739471435548;0,0017607187136798378;LinearSVC();balanced;;;;;42;;0.001;False;100;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 100, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6622091468307034;0,66140679326023;0,6573950254078631;0,6557903182669163;0,6557903182669163;0,679860925381118;0,6713024872960685;0,6568601230275475;0,6599785981808454;0,6720171214553237;0,6632610857373531;0,007869017714622797;943
2258,7565587997437;559,5885835288943;1,1814809560775756;0,04753961105540424;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6838726932334849;0,648301684942498;0,6386734420968173;0,6386734420968173;0,6622091468307034;0,6956405456004279;0,6737095480074886;0,6515110992243915;0,6626538255751739;0,675227394328518;0,6630472821936321;0,018159292952389872;944
463,7935967683792;126,76266452209802;0,2943725109100342;0,024174155682026587;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6619416956405456;0,6581973789783364;0,6608718908799144;0,6595346349291255;0,6477667825621825;0,6849424979941161;0,6699652313452795;0,6672907194437016;0,6591760299625468;0,660781166399144;0,6630468028134893;0,009168945945014387;945
232,21848895549775;58,516426345601616;0,20074763298034667;0,013832290584327776;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,670500133725595;0,6544530623161273;0,6651511099224392;0,6635464027814924;0,6499063920834448;0,673174645627173;0,6691628777748061;0,6632789515913345;0,6602461209202782;0,660781166399144;0,6630200863141835;0,006780530037351257;946
8,331001996994019;0,7452949997743026;0,03439934253692627;0,014760207775521464;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);constant;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6646162075421236;0,6592671837389676;0,6549879646964429;0,6576624765980209;0,6440224658999733;0,6886868146563252;0,670500133725595;0,6603369884995989;0,6605136436597111;0,6693418940609952;0,6629935773077753;0,011130732093223466;947
5,708272552490234;1,9458692742115886;0,037232375144958495;0,0111885986019195;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);constant;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6667558170633859;0,6654185611125969;0,6515110992243915;0,6589997325488098;0,6480342337523401;0,6852099491842739;0,6659534634929125;0,6619416956405456;0,6559657570893526;0,6698769395398609;0,6629667248648469;0,009958982556794385;948
5,760415410995483;1,9766534945225513;0,046665310859680176;0,013609247852767794;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);constant;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6667558170633859;0,6654185611125969;0,6515110992243915;0,6589997325488098;0,6480342337523401;0,6852099491842739;0,6659534634929125;0,6619416956405456;0,6559657570893526;0,6698769395398609;0,6629667248648469;0,009958982556794385;948
5,695497536659241;1,9078921780030083;0,03292946815490723;0,010727585165852677;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);adaptive;0.001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6667558170633859;0,6654185611125969;0,6515110992243915;0,6589997325488098;0,6480342337523401;0,6852099491842739;0,6659534634929125;0,6619416956405456;0,6559657570893526;0,6698769395398609;0,6629667248648469;0,009958982556794385;948
5,759024906158447;1,9051508814627187;0,03961784839630127;0,01007853572984858;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);constant;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6667558170633859;0,6654185611125969;0,6515110992243915;0,6589997325488098;0,6480342337523401;0,6852099491842739;0,6659534634929125;0,6619416956405456;0,6559657570893526;0,6698769395398609;0,6629667248648469;0,009958982556794385;948
5,68982424736023;1,9163797363100439;0,039660286903381345;0,013181918830286691;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);constant;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6667558170633859;0,6654185611125969;0,6515110992243915;0,6589997325488098;0,6480342337523401;0,6852099491842739;0,6659534634929125;0,6619416956405456;0,6559657570893526;0,6698769395398609;0,6629667248648469;0,009958982556794385;948
5,688514828681946;1,892690195963343;0,0294572114944458;0,010367259939815594;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);adaptive;0.001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6667558170633859;0,6654185611125969;0,6515110992243915;0,6589997325488098;0,6480342337523401;0,6852099491842739;0,6659534634929125;0,6619416956405456;0,6559657570893526;0,6698769395398609;0,6629667248648469;0,009958982556794385;948
5,664375805854798;1,9221858833772114;0,03973629474639893;0,01577927509299555;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);adaptive;0.001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6667558170633859;0,6654185611125969;0,6515110992243915;0,6589997325488098;0,6480342337523401;0,6852099491842739;0,6659534634929125;0,6619416956405456;0,6559657570893526;0,6698769395398609;0,6629667248648469;0,009958982556794385;948
5,7120664596557615;1,9291842501682188;0,050501561164855956;0,028841868699636578;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);adaptive;0.001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6667558170633859;0,6654185611125969;0,6515110992243915;0,6589997325488098;0,6480342337523401;0,6852099491842739;0,6659534634929125;0,6619416956405456;0,6559657570893526;0,6698769395398609;0,6629667248648469;0,009958982556794385;948
1810,4926436901092;504,27004639406726;1,1253442287445068;0,07166005774155308;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,664081305161808;0,6584648301684942;0,6507087456539181;0,6651511099224392;0,6466969778015512;0,6849424979941161;0,6710350361059106;0,6643487563519658;0,6621187800963082;0,6621187800963082;0,6629666819352819;0,009963051187262687;956
417,71744525432587;155,9858878575067;0,16759228706359863;0,00507769457729931;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6670232682535437;0,642952661139342;0,6472318801818668;0,6638138539716502;0,6584648301684942;0,675849157528751;0,6643487563519658;0,6721048408665419;0,6602461209202782;0,6768325307651151;0,6628867900147549;0,010660951747229062;957
0,47907018661499023;0,10132316919436835;0,02497754096984863;0,002804594919724971;DecisionTreeClassifier();balanced;gini;;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6536507087456539;0,6528483551751806;0,6606044396897566;0,6584648301684942;0,6584648301684942;0,6729071944370153;0,6723722920566997;0,6616742444503878;0,6594435527019796;0,6773675762439807;0,6627798023837643;0,008022967418627323;958
8,05013840198517;1,7879433006559013;0,044362759590148924;0,018361988237136355;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);adaptive;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6699652313452795;0,6648836587322814;0,6525809039850228;0,6472318801818668;0,6477667825621825;0,6811981813319069;0,6702326825354373;0,6635464027814924;0,6591760299625468;0,6712145532370252;0,6627796306655042;0,010520003600434357;959
8,073646545410156;1,7457310626934384;0,03933894634246826;0,012133836996964536;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);adaptive;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6699652313452795;0,6648836587322814;0,6525809039850228;0,6472318801818668;0,6477667825621825;0,6811981813319069;0,6702326825354373;0,6635464027814924;0,6591760299625468;0,6712145532370252;0,6627796306655042;0,010520003600434357;959
8,101727628707886;1,7353096139890756;0,043054604530334474;0,015297332634434788;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);constant;0.0001;0.8999999999999999;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6699652313452795;0,6648836587322814;0,6525809039850228;0,6472318801818668;0,6477667825621825;0,6811981813319069;0,6702326825354373;0,6635464027814924;0,6591760299625468;0,6712145532370252;0,6627796306655042;0,010520003600434357;959
8,022212815284728;1,738537843683896;0,046109700202941896;0,012722284046830113;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);adaptive;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6699652313452795;0,6648836587322814;0,6525809039850228;0,6472318801818668;0,6477667825621825;0,6811981813319069;0,6702326825354373;0,6635464027814924;0,6591760299625468;0,6712145532370252;0,6627796306655042;0,010520003600434357;959
8,04305636882782;1,7135364437226017;0,04102537631988525;0,014992909723121787;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);constant;0.0001;0.3;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6699652313452795;0,6648836587322814;0,6525809039850228;0,6472318801818668;0,6477667825621825;0,6811981813319069;0,6702326825354373;0,6635464027814924;0,6591760299625468;0,6712145532370252;0,6627796306655042;0,010520003600434357;959
8,072634172439574;1,8207921290904572;0,04941625595092773;0,024054836024144453;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);constant;0.0001;0.6;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6699652313452795;0,6648836587322814;0,6525809039850228;0,6472318801818668;0,6477667825621825;0,6811981813319069;0,6702326825354373;0,6635464027814924;0,6591760299625468;0,6712145532370252;0,6627796306655042;0,010520003600434357;959
8,029955649375916;1,7014885715763577;0,032561206817626955;0,010973802469582761;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6699652313452795;0,6648836587322814;0,6525809039850228;0,6472318801818668;0,6477667825621825;0,6811981813319069;0,6702326825354373;0,6635464027814924;0,6591760299625468;0,6712145532370252;0,6627796306655042;0,010520003600434357;959
8,086057305335999;1,8476068647702504;0,049647402763366696;0,018365869771631245;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);constant;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,6699652313452795;0,6648836587322814;0,6525809039850228;0,6472318801818668;0,6477667825621825;0,6811981813319069;0,6702326825354373;0,6635464027814924;0,6591760299625468;0,6712145532370252;0,6627796306655042;0,010520003600434357;959
0,4719285249710083;0,05279614449070814;0,028315639495849608;0,006088322928390788;DecisionTreeClassifier();;entropy;;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6603369884995989;0,6560577694570741;0,6504412944637603;0,6672907194437016;0,6589997325488098;0,6774538646696978;0,6737095480074886;0,6581973789783364;0,6634563937934724;0,6610486891385767;0,6626992379000516;0,007727902787893571;967
261,45657336711884;106,19183639248405;0,200653338432312;0,012464139873558865;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6713024872960685;0,6801283765712758;0,6477667825621825;0,6589997325488098;0,6608718908799144;0,6675581706338594;0,6670232682535437;0,6648836587322814;0,6637239165329053;0,6447298020331729;0,6626988086044013;0,009943959394514696;968
2867,164911913872;1045,9800788991276;1,4716219902038574;0,12028070220690555;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6688954265846483;0,6702326825354373;0,6418828563787109;0,6699652313452795;0,6557903182669163;0,6376036373361862;0,6589997325488098;0,6734420968173308;0,6621187800963082;0,6875334403424291;0,6626464202252056;0,014159541954242192;969
0,4477109909057617;0,008047760978203792;0,026070022583007814;0,00559281291289142;DecisionTreeClassifier();balanced;entropy;;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6643487563519658;0,6547205135062851;0,6499063920834448;0,6664883658732281;0,6592671837389676;0,6766515110992244;0,6737095480074886;0,6568601230275475;0,6637239165329053;0,660781166399144;0,6626457476620201;0,007815771336421275;970
377,3786476135254;153,6704635904725;0,27745709419250486;0,011234624021525566;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6699652313452795;0,6426852099491843;0,6654185611125969;0,6541856111259695;0,6408130516180797;0,6726397432468575;0,6785236694303289;0,6638138539716502;0,6540930979133226;0,6840556447298021;0,662619367444307;0,013757922441856479;971
0,2208028793334961;0,02282671373187552;0,03136780261993408;0,010017717034038339;LinearSVC();balanced;;;;;42;;0.001;False;10000;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6622091468307034;0,66140679326023;0,6573950254078631;0,6560577694570741;0,6507087456539181;0,679860925381118;0,670500133725595;0,6565926718373897;0,6591760299625468;0,6720171214553237;0,6625924362971761;0,008424463212587288;972
0,2058035373687744;0,021931940401309184;0,028228187561035158;0,00448334054903255;LinearSVC();balanced;;;;;42;;0.001;False;1000;l1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6622091468307034;0,66140679326023;0,6573950254078631;0,6560577694570741;0,6507087456539181;0,679860925381118;0,670500133725595;0,6565926718373897;0,6591760299625468;0,6720171214553237;0,6625924362971761;0,008424463212587288;972
24,185225987434386;5,076308528586732;0,03094644546508789;0,02033677592570629;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);constant;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6635464027814924;0,6579299277881786;0,6579299277881786;0,6557903182669163;0,64562717304092;0,6753142551484355;0,674511901577962;0,6592671837389676;0,660781166399144;0,6746923488496522;0,6625390605379848;0,00918211694023874;974
16,848683762550355;1,2809248466123273;0,022204256057739256;0,009890532585058882;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);adaptive;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6648836587322814;0,6581973789783364;0,6560577694570741;0,6573950254078631;0,6453597218507623;0,6865472051350628;0,6656860123027547;0,6600695373094411;0,6597110754414125;0,6701444622792937;0,6624051846894282;0,010227406875591653;975
2081,576242637634;881,4799570146624;1,1419191837310791;0,05605576637530543;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6643487563519658;0,6544530623161273;0,6630115004011767;0,6571275742177053;0,6576624765980209;0,6977801551216903;0,6533832575554961;0,6515110992243915;0,6554307116104869;0,6693418940609952;0,6624050487458055;0,012907183286774088;976
585,6261213064193;204,8148290856289;0,3962831735610962;0,04918858173300847;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6531158063653383;0,6491040385129714;0,6718373896763841;0,6499063920834448;0,6515110992243915;0,686279753944905;0,6515110992243915;0,6803958277614336;0,6738897806313536;0,6559657570893526;0,6623516944513966;0,0134638530815181;977
636,9629812479019;176,86862090625752;0,4062528133392334;0,02934730771420874;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6691628777748061;0,6576624765980209;0,6592671837389676;0,64562717304092;0,6680930730141749;0,6844075956138005;0,6536507087456539;0,6654185611125969;0,6578384162653825;0,6623863028357411;0,6623514368740065;0,009912187999645813;978
393,4618817090988;194,54725976720388;0,16913516521453859;0,01043699273502917;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6742444503878042;0,6466969778015512;0,6520460016047072;0,6598020861192833;0,662744049211019;0,6686279753944905;0,6595346349291255;0,6721048408665419;0,6556982343499197;0,6717495987158909;0,6623248849380333;0,008800016405184663;979
715,6672778367996;278,91487966236235;0,3943630695343018;0,033245254310931;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6664883658732281;0,6654185611125969;0,6568601230275475;0,6817330837122225;0,6314522599625568;0,6616742444503878;0,6611393420700722;0,646964428991709;0,6722846441947565;0,6789727126805778;0,6622987766075655;0,014144535303101936;980
529,1472364902496;191,14593962386056;0,3246371507644653;0,018872063346630556;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6763840599090666;0,6584648301684942;0,6442899170901311;0,642952661139342;0,6616742444503878;0,6857448515645894;0,6646162075421236;0,6480342337523401;0,6706795077581594;0,6701444622792937;0,6622984975653928;0,013425472556375547;981
13,977308917045594;1,2667555436255722;0,03405740261077881;0,015119383962044358;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);adaptive;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6654185611125969;0,6592671837389676;0,6563252206472319;0,6528483551751806;0,6453597218507623;0,6865472051350628;0,670500133725595;0,6576624765980209;0,6597110754414125;0,6693418940609952;0,6622981827485825;0,010788394423936292;982
235,4330698490143;112,59654740485914;0,20486128330230713;0,015700375862220416;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6737095480074886;0,6603369884995989;0,6448248194704467;0,6488365873228136;0,6389408932869751;0,6836052420433271;0,673174645627173;0,6715699384862263;0,6634563937934724;0,6645264847512039;0,6622981541288726;0,013530417378016716;983
0,5005876779556274;0,07352455675947261;0,025124764442443846;0,0017708067876454532;DecisionTreeClassifier();;gini;;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6528483551751806;0,652313452794865;0,664081305161808;0,6579299277881786;0,6557903182669163;0,6721048408665419;0,6696977801551217;0,6611393420700722;0,6586409844836811;0,6776350989834136;0,662218140574578;0,008089543118455231;984
1758,4924641370774;807,3708469516754;1,1123160123825073;0,10038001105084293;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6822679860925381;0,649638940893287;0,6678256218240172;0,6274404921101899;0,6579299277881786;0,6742444503878042;0,6563252206472319;0,6656860123027547;0,6605136436597111;0,6800428036383093;0,6621915099344022;0,015269419163700823;985
1176,941409277916;263,13268671912755;0,7609825849533081;0,06620446555987104;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6589997325488098;0,6686279753944905;0,6474993313720246;0,6667558170633859;0,6517785504145494;0,6688954265846483;0,6817330837122225;0,6549879646964429;0,6519529159978599;0,6696094168004281;0,6620840214584863;0,010174397011348217;986
360,04980273246764;123,21326402913112;0,18114783763885497;0,01663069128265454;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6841401444236427;0,6616742444503878;0,6458946242310778;0,649638940893287;0,6598020861192833;0,6571275742177053;0,6675581706338594;0,6445573682802889;0,6709470304975923;0,6789727126805778;0,6620312896427702;0,012783949246051203;987
573,9005617141723;215,96077713807688;0,3697874307632446;0,021465933706702047;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6622091468307034;0,6718373896763841;0,6568601230275475;0,6777213158598556;0,6132655790318267;0,6755817063385932;0,6616742444503878;0,6525809039850228;0,6658640984483681;0,682450508293205;0,6620045015941893;0,018579242314780007;988
521,9580200195312;201,2044887468976;0,3571369409561157;0,05559455843937659;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6472318801818668;0,646964428991709;0,6576624765980209;0,6437550147098154;0,6525809039850228;0,6806632789515913;0,6742444503878042;0,6696977801551217;0,675227394328518;0,6720171214553237;0,6620044729744794;0,013104905854251406;989
1938,2424574375152;778,7020378504874;1,1135652780532836;0,09016852927152352;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6563252206472319;0,6480342337523401;0,6686279753944905;0,6573950254078631;0,6648836587322814;0,6811981813319069;0,6766515110992244;0,6630115004011767;0,6409844836811129;0,6610486891385767;0,6618160479586204;0,011520311176654854;990
1779,4583250761032;751,9953878493988;1,1376491785049438;0,10461190072224881;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6622091468307034;0,6787911206204867;0,6694303289649639;0,6376036373361862;0,6504412944637603;0,679860925381118;0,6702326825354373;0,6504412944637603;0,6581059390048154;0,660781166399144;0,6617897536000376;0,012659313051190479;991
424,09955978393555;127,3917749443331;0,3216963052749634;0,03085969657108781;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6691628777748061;0,6477667825621825;0,6688954265846483;0,6576624765980209;0,6317197111527146;0,6723722920566997;0,6750468039582777;0,6646162075421236;0,6508828250401284;0,6795077581594435;0,6617633161429046;0,013969070358064493;992
924,456933093071;240,60125372268405;0,6764114379882813;0,0505520548798734;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6606044396897566;0,6696977801551217;0,6488365873228136;0,6343942230542926;0,6485691361326558;0,6721048408665419;0,6785236694303289;0,6448248194704467;0,6701444622792937;0,6894060995184591;0,661710605791971;0,01632072675883979;993
827,9912755727768;280,1073043382638;0,508081030845642;0,04282608709807524;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6707675849157528;0,6573950254078631;0,658732281358652;0,6520460016047072;0,6611393420700722;0,6739769991976464;0,6450922706606045;0,6624765980208612;0,6645264847512039;0,6709470304975923;0,6617099618484955;0,008507146190067592;994
10,524988532066345;2,140714812325088;0,028220105171203613;0,011930323232785265;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);constant;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6648836587322814;0,6581973789783364;0,6560577694570741;0,6573950254078631;0,6453597218507623;0,6865472051350628;0,6600695373094411;0,6581973789783364;0,6597110754414125;0,6701444622792937;0,6616563213569864;0,010233925689373391;995
1586,5311866283416;341,4179316251274;1,0986523151397705;0,08802326516434611;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6651511099224392;0,6598020861192833;0,6536507087456539;0,6632789515913345;0,6434875635196576;0,679860925381118;0,670500133725595;0,6557903182669163;0,6602461209202782;0,6645264847512039;0,6616294402943479;0,009309823593123606;996
10,307034420967103;1,5611900713985947;0,030211997032165528;0,016186952105996747;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);constant;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6654185611125969;0,6592671837389676;0,6563252206472319;0,6528483551751806;0,6453597218507623;0,6865472051350628;0,670500133725595;0,6576624765980209;0,6597110754414125;0,6623863028357411;0,6616026236260572;0,010533045208447864;997
13,687329530715942;1,5429613082840643;0,0276566743850708;0,013278290628401954;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);adaptive;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6525809039850228;0,6592671837389676;0,6560577694570741;0,6563252206472319;0,6453597218507623;0,6860123027547472;0,670500133725595;0,6608718908799144;0,6594435527019796;0,6690743713215623;0,6615493051062857;0,010701711155249724;998
600,2714106321334;157,84621476313916;0,38458273410797117;0,018020003089279965;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6691628777748061;0,6517785504145494;0,6619416956405456;0,6450922706606045;0,6635464027814924;0,6809307301417491;0,66140679326023;0,6555228670767584;0,6621187800963082;0,6639914392723382;0,6615492407119381;0,009201503739009406;999
199,5756235599518;68,12744328496919;0,2270373821258545;0,060512818967703844;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6638138539716502;0,6659534634929125;0,6450922706606045;0,6525809039850228;0,6416154051885531;0,6857448515645894;0,6680930730141749;0,6675581706338594;0,6605136436597111;0,6645264847512039;0,6615492120922282;0,01203095750539725;1000
1150,2444151639938;343,3825429765937;0,7331523895263672;0,0741719438554152;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6696977801551217;0,6474993313720246;0,6667558170633859;0,6608718908799144;0,6715699384862263;0,6651511099224392;0,6886868146563252;0,6488365873228136;0,64258962011771;0,6538255751738897;0,6615484465149851;0,013122253713447269;1001
448,5780926465988;102,73914605187552;0,3026682615280151;0,012270516949390887;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6718373896763841;0,6632789515913345;0,6432201123294998;0,6499063920834448;0,6619416956405456;0,6943032896496389;0,6509761968440759;0,6413479539983953;0,675227394328518;0,6631888710540396;0,6615228247195877;0,015372010475069985;1002
16,482206845283507;2,087999377909126;0,024201226234436036;0,007667771801267117;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);adaptive;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6638138539716502;0,6589997325488098;0,6563252206472319;0,6525809039850228;0,6448248194704467;0,6868146563252207;0,6600695373094411;0,6603369884995989;0,660781166399144;0,6701444622792937;0,661469134143586;0,01056153438309569;1003
2741,199535727501;937,2096546414946;1,3724399089813233;0,07832172044985378;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6656860123027547;0,6753142551484355;0,6691628777748061;0,6346616742444504;0,6563252206472319;0,6707675849157528;0,6648836587322814;0,6520460016047072;0,6573033707865169;0,6685393258426966;0,6614689981999634;0,01126063793491218;1004
696,7831081390381;320,6512567942031;0,38213090896606444;0,02330252443428009;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,658732281358652;0,6584648301684942;0,6686279753944905;0,6533832575554961;0,6576624765980209;0,6675581706338594;0,6544530623161273;0,6713024872960685;0,6647940074906367;0,6591760299625468;0,6614154578774393;0,005889974678186336;1005
541,677655506134;133,20834054792644;0,3985177755355835;0,04706662553680586;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6381385397165017;0,6678256218240172;0,6619416956405456;0,6501738432736026;0,6509761968440759;0,6699652313452795;0,6806632789515913;0,6707675849157528;0,6594435527019796;0,6639914392723382;0,6613886984485684;0,011662292094577505;1006
10,517603445053101;2,0592675230339483;0,03558933734893799;0,013244497242870855;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);constant;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6638138539716502;0,6589997325488098;0,6563252206472319;0,6525809039850228;0,6448248194704467;0,6868146563252207;0,6600695373094411;0,6581973789783364;0,660781166399144;0,6701444622792937;0,6612551731914598;0,010603890420335901;1007
211,36204726696013;39,384271674058986;0,17116267681121827;0,01200634253495955;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6616742444503878;0,6437550147098154;0,6664883658732281;0,6635464027814924;0,6699652313452795;0,66140679326023;0,6710350361059106;0,6552554158866007;0,6474050294275013;0,671482075976458;0,6612013609816904;0,009181422436797242;1008
2057,732606434822;549,926031381977;1,1202787160873413;0,11487866487843208;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6630115004011767;0,6453597218507623;0,6608718908799144;0,6595346349291255;0,6504412944637603;0,6686279753944905;0,6702326825354373;0,6507087456539181;0,6634563937934724;0,6792402354200107;0,6611485075322069;0,009747678026062075;1009
756,9837775468826;304,3885308932137;0,48662943840026857;0,0415077458226248;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6541856111259695;0,6600695373094411;0,6301150040117679;0,6662209146830703;0,6782562182401711;0,6876170098956941;0,6734420968173308;0,6416154051885531;0,6562332798287854;0,6634563937934724;0,6611211470894255;0,016105470754710197;1010
1235,1216118574143;292,13642512814613;0,7595941305160523;0,0668344481324534;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6739769991976464;0,6434875635196576;0,6670232682535437;0,6573950254078631;0,6664883658732281;0,66140679326023;0,6806632789515913;0,646964428991709;0,6329588014981273;0,6797752808988764;0,6610139805852473;0,015090099426362961;1011
1942,911039686203;881,0365658747794;1,131016445159912;0,10445189067160493;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6841401444236427;0,6726397432468575;0,6608718908799144;0,6210216635464028;0,6520460016047072;0,6680930730141749;0,6453597218507623;0,6683605242043327;0,6540930979133226;0,6821829855537721;0,6608808846237888;0,017873996145844544;1012
1063,7329352378845;399,38105017852894;0,7106129646301269;0,07662435008995608;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,673174645627173;0,6801283765712758;0,646964428991709;0,6450922706606045;0,66140679326023;0,6547205135062851;0,6688954265846483;0,664081305161808;0,6565008025682183;0,6578384162653825;0,6608802979197334;0,01051520151903917;1013
506,5318510293961;184,85910365474527;0,311496639251709;0,014043374717489766;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6520460016047072;0,6729071944370153;0,6440224658999733;0,6293126504412945;0,6598020861192833;0,690291521797272;0,673174645627173;0,670500133725595;0,6468699839486356;0,6693418940609952;0,6608268577661944;0,01697388495430401;1014
2041,1818066596984;767,991635931629;1,1326773405075072;0,05604598809470467;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6739769991976464;0,6555228670767584;0,6421503075688687;0,6426852099491843;0,6552554158866007;0,6844075956138005;0,6592671837389676;0,6616742444503878;0,6554307116104869;0,6762974852862493;0,6606668020378951;0,013181186554502053;1015
493,5901773929596;198,70157848288758;0,2865813493728638;0,012655222332799613;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6595346349291255;0,6750468039582777;0,6440224658999733;0,6525809039850228;0,6493714897031292;0,691628777748061;0,6892217170366408;0,6458946242310778;0,6404494382022472;0,658908507223114;0,6606659362916669;0,017556035293790226;1016
833,9724044322968;242,46180884943837;0,531593132019043;0,06537941440880644;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6667558170633859;0,6598020861192833;0,6555228670767584;0,6544530623161273;0,6608718908799144;0,6753142551484355;0,6397432468574485;0,6715699384862263;0,6573033707865169;0,6650615302300695;0,6606398064964166;0,009511976523030291;1017
1859,408859705925;649,1043943342012;1,1051674127578734;0,07404623353860333;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6782562182401711;0,6565926718373897;0,6694303289649639;0,6333244182936614;0,6474993313720246;0,6897566194169564;0,6493714897031292;0,6400106980476064;0,6540930979133226;0,6867308721241305;0,6605065745913355;0,01856486609420735;1018
506,65277006626127;169,64112115881747;0,3124239444732666;0,014703423406282758;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,658732281358652;0,6512436480342337;0,6539181599358117;0,6279753944905054;0,6480342337523401;0,6900240706071142;0,6723722920566997;0,6707675849157528;0,6530230069555912;0,6789727126805778;0,6605063384787279;0,016913196895108375;1019
428,5115671157837;149,8317713938846;0,33416697978973386;0,04996800038905435;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6672907194437016;0,648301684942498;0,6512436480342337;0,6753142551484355;0,6635464027814924;0,6763840599090666;0,6678256218240172;0,6499063920834448;0,6447298020331729;0,6605136436597111;0,6605056229859774;0,010845400752876828;1020
500,58090858459474;118,08920293105021;0,31890881061553955;0,01642169902528197;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6616742444503878;0,6560577694570741;0,6319871623428724;0,6547205135062851;0,6499063920834448;0,69296603369885;0,6734420968173308;0,6424177587590265;0,6615837346174425;0,6800428036383093;0,6604798509371024;0,017062594831057227;1021
3092,0724905490874;967,3834454675751;1,4506750106811523;0,14263560014008986;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6713024872960685;0,6624765980208612;0,6359989301952393;0,6531158063653383;0,6370687349558706;0,6844075956138005;0,6680930730141749;0,6515110992243915;0,6765650080256822;0,664258962011771;0,6604798294723198;0,01518779780959902;1022
21,996725940704344;3,220501699225083;0,025497961044311523;0,006395064274441389;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);adaptive;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6680930730141749;0,664081305161808;0,6493714897031292;0,6528483551751806;0,6434875635196576;0,6662209146830703;0,6643487563519658;0,66140679326023;0,6615837346174425;0,673354735152488;0,6604796720639147;0,008700997287710047;1023
416,88742969036105;159,60362764149008;0,16431128978729248;0,009067898059473825;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6672907194437016;0,6603369884995989;0,6504412944637603;0,6397432468574485;0,6536507087456539;0,6622091468307034;0,6820005349023803;0,6646162075421236;0,6615837346174425;0,6626538255751739;0,6604526407477987;0,010549890790589395;1024
668,9029241085052;273,8664278905104;0,3681701898574829;0,01809106011932525;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6659534634929125;0,6742444503878042;0,6659534634929125;0,6624765980208612;0,6290451992511367;0,658732281358652;0,6664883658732281;0,6416154051885531;0,6594435527019796;0,6803103263777421;0,6604263106145782;0,01425070511075399;1025
2124,068622469902;600,9058948172856;1,1036868810653686;0,08233693542583054;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6630115004011767;0,6544530623161273;0,6512436480342337;0,6726397432468575;0,6552554158866007;0,6734420968173308;0,6624765980208612;0,6675581706338594;0,6530230069555912;0,6506153023006955;0,6603718544613335;0,008234702260664433;1026
0,46247951984405516;0,00948470334427734;0,027808642387390135;0,004488991698589449;DecisionTreeClassifier();balanced;entropy;;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6659534634929125;0,649638940893287;0,6565926718373897;0,6616742444503878;0,649638940893287;0,6737095480074886;0,6630115004011767;0,6549879646964429;0,6658640984483681;0,6623863028357411;0,6603457675956481;0,007249742599075198;1027
385,5461343050003;142,95435444875875;0,16516435146331787;0,012652691475038086;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6761166087189088;0,6592671837389676;0,6630115004011767;0,6373361861460284;0,6474993313720246;0,664081305161808;0,6662209146830703;0,6753142551484355;0,6540930979133226;0,6602461209202782;0,6603186504204019;0,011238711378200976;1028
9,563164567947387;2,0123722306159983;0,03309741020202637;0,01407595650915531;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);constant;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6509761968440759;0,6592671837389676;0,6549879646964429;0,6563252206472319;0,6453597218507623;0,6860123027547472;0,670500133725595;0,6576624765980209;0,6594435527019796;0,6623863028357411;0,6602921056393565;0,010641596801329624;1029
1220,4874611854552;406,91877932656234;0,7083297967910767;0,06441912047301597;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6820005349023803;0,6739769991976464;0,6472318801818668;0,6400106980476064;0,6702326825354373;0,6573950254078631;0,6624765980208612;0,6504412944637603;0,6639914392723382;0,6548956661316212;0,6602652818161381;0,012215790027104838;1030
599,0236826658249;188,26337778952467;0,39259018898010256;0,018406392388731527;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6472318801818668;0,6493714897031292;0,6491040385129714;0,652313452794865;0,6576624765980209;0,6943032896496389;0,6450922706606045;0,6763840599090666;0,6773675762439807;0,653558052434457;0,6602388586688601;0,01571373115296825;1031
21,346229815483092;2,1975134216819456;0,03114626407623291;0,015956925519459757;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);adaptive;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6691628777748061;0,6643487563519658;0,6493714897031292;0,6525809039850228;0,6432201123294998;0,6662209146830703;0,6646162075421236;0,6584648301684942;0,6615837346174425;0,6722846441947565;0,660185447135031;0,008762907895661374;1032
1836,9991545438766;756,9831047657693;1,0655730724334718;0,0652186867543764;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6493714897031292;0,6579299277881786;0,6533832575554961;0,6785236694303289;0,6341267718641348;0,6721048408665419;0,6833377908531693;0,658732281358652;0,6546281433921883;0,6597110754414125;0,6601849248253233;0,01376578035482843;1033
2508,8953602552415;698,8948185315637;1,371946883201599;0,09406432438524469;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,670500133725595;0,6472318801818668;0,6384059909066595;0,658732281358652;0,633859320673977;0,6918962289382188;0,6624765980208612;0,6616742444503878;0,6634563937934724;0,673354735152488;0,6601587807202179;0,01625075596839058;1034
700,7214775562286;181,62762056820807;0,49890737533569335;0,09212123319505759;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6688954265846483;0,6592671837389676;0,6450922706606045;0,6616742444503878;0,6541856111259695;0,670500133725595;0,6592671837389676;0,6670232682535437;0,6404494382022472;0,6749598715890851;0,6601314632070017;0,010509432734552522;1035
0,47333827018737795;0,04314409988849794;0,03168706893920899;0,007075497220597563;DecisionTreeClassifier();;entropy;;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6656860123027547;0,6493714897031292;0,658732281358652;0,6584648301684942;0,6501738432736026;0,6747793527681198;0,6630115004011767;0,6549879646964429;0,6629213483146067;0,6626538255751739;0,6600782448562152;0,00716901614165473;1036
228,0659594297409;52,21348463098924;0,1741469144821167;0,010817500182701742;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6581973789783364;0,6501738432736026;0,6608718908799144;0,6589997325488098;0,6579299277881786;0,6659534634929125;0,6793260230008024;0,646964428991709;0,6479400749063671;0,6744248261102194;0,6600781589970853;0,010189062977472666;1037
2758,6642660856246;636,4388619832328;1,392975640296936;0,09903414236933848;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6662209146830703;0,6563252206472319;0,6528483551751806;0,670500133725595;0,6269055897298743;0,6878844610858519;0,6688954265846483;0,6608718908799144;0,6471375066880685;0,6626538255751739;0,6600243324774608;0,015292989202359317;1038
6,98456838130951;2,589572588005736;0,025841569900512694;0,008660221035135064;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);constant;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6680930730141749;0,664081305161808;0,6493714897031292;0,6528483551751806;0,6434875635196576;0,6662209146830703;0,6643487563519658;0,66140679326023;0,6615837346174425;0,6682718031032637;0,6599713788589923;0,008058783870940557;1039
518,3814285993576;183,70242306150607;0,39566237926483155;0,05910181645961531;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,648301684942498;0,6520460016047072;0,6552554158866007;0,6568601230275475;0,6461620754212356;0,6686279753944905;0,6806632789515913;0,6795934741909602;0,6334938469769931;0,678705189941145;0,659970906633777;0,01536796613088587;1040
240,57954790592194;100,6172624913592;0,16753098964691163;0,04759622711496677;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,66140679326023;0,6576624765980209;0,6552554158866007;0,6544530623161273;0,6458946242310778;0,673174645627173;0,652313452794865;0,6667558170633859;0,6666666666666666;0,6655965757089353;0,6599179530153083;0,007833763151626592;1041
2728,4323411941527;915,9419198860828;1,3595367908477782;0,0768550526889452;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6686279753944905;0,6619416956405456;0,6359989301952393;0,6368012837657128;0,6370687349558706;0,6884193634661674;0,6713024872960685;0,6579299277881786;0,6781701444622793;0,6626538255751739;0,6598914368539728;0,017306234607341372;1042
1625,3645515918731;483,9524033576038;1,1329985857009888;0,07990935759690246;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6630115004011767;0,648301684942498;0,6458946242310778;0,6606044396897566;0,6466969778015512;0,6769189622893822;0,6638138539716502;0,6549879646964429;0,6701444622792937;0,6685393258426966;0,6598913796145526;0,010118530349005533;1043
0,748894476890564;0,028815791408152755;0,041566991806030275;0,014033777556040345;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6616742444503878;0,6603369884995989;0,6520460016047072;0,6520460016047072;0,6440224658999733;0,682535437282696;0,6686279753944905;0,6544530623161273;0,6610486891385767;0,660781166399144;0,6597572032590409;0,009994535059061102;1044
0,7598541975021362;0,03846527980771997;0,03881912231445313;0,01313768685846268;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6616742444503878;0,6603369884995989;0,6520460016047072;0,6520460016047072;0,6440224658999733;0,682535437282696;0,6686279753944905;0,6544530623161273;0,6610486891385767;0,660781166399144;0,6597572032590409;0,009994535059061102;1044
0,7573310375213623;0,02543329600071933;0,049837040901184085;0,01808873415069884;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6616742444503878;0,6603369884995989;0,6520460016047072;0,6520460016047072;0,6440224658999733;0,682535437282696;0,6686279753944905;0,6544530623161273;0,6610486891385767;0,660781166399144;0,6597572032590409;0,009994535059061102;1044
0,7608505249023437;0,03009325883442153;0,049307060241699216;0,019038971778445764;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6616742444503878;0,6603369884995989;0,6520460016047072;0,6520460016047072;0,6440224658999733;0,682535437282696;0,6686279753944905;0,6544530623161273;0,6610486891385767;0,660781166399144;0,6597572032590409;0,009994535059061102;1044
0,7475656747817994;0,04100857065527423;0,035201287269592284;0,012329363305372406;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6616742444503878;0,6603369884995989;0,6520460016047072;0,6520460016047072;0,6440224658999733;0,682535437282696;0,6686279753944905;0,6544530623161273;0,6610486891385767;0,660781166399144;0,6597572032590409;0,009994535059061102;1044
0,7631426334381104;0,03396832880335588;0,035088610649108884;0,008665382881926344;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;1.0;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 1.0, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6616742444503878;0,6603369884995989;0,6520460016047072;0,6520460016047072;0,6440224658999733;0,682535437282696;0,6686279753944905;0,6544530623161273;0,6610486891385767;0,660781166399144;0,6597572032590409;0,009994535059061102;1044
6,849979758262634;2,305392236292389;0,029438376426696777;0,013767433683041426;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);constant;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6691628777748061;0,6643487563519658;0,6493714897031292;0,6525809039850228;0,6432201123294998;0,6662209146830703;0,6646162075421236;0,6584648301684942;0,6615837346174425;0,6677367576243981;0,6597306584779952;0,008224651611281265;1050
450,5279402256012;150,39063020056673;0,3073416233062744;0,023974561813627202;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6672907194437016;0,6579299277881786;0,6453597218507623;0,6742444503878042;0,6544530623161273;0,670500133725595;0,6718373896763841;0,6563252206472319;0,64258962011771;0,6567683253076512;0,6597298571261148;0,010402722244261503;1051
565,030646777153;139,8628960502927;0,3733846187591553;0,02016146543383769;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6670232682535437;0,6721048408665419;0,6635464027814924;0,6525809039850228;0,6121957742711955;0,6755817063385932;0,6573950254078631;0,6440224658999733;0,6672017121455324;0,6853932584269663;0,6597045358376724;0,019363325455311158;1052
0,733808445930481;0,021584978534906003;0,03144192695617676;0,010966342528914064;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.1;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6616742444503878;0,6603369884995989;0,652313452794865;0,6520460016047072;0,6445573682802889;0,682535437282696;0,6686279753944905;0,6536507087456539;0,6602461209202782;0,660781166399144;0,6596769464372111;0,009929598085205917;1053
0,7304861307144165;0,01778495265718859;0,04410762786865234;0,02561854835845768;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6616742444503878;0,6603369884995989;0,652313452794865;0,6520460016047072;0,6445573682802889;0,682535437282696;0,6686279753944905;0,6536507087456539;0,6602461209202782;0,660781166399144;0,6596769464372111;0,009929598085205917;1053
0,7836394548416138;0,09136679822485959;0,04714968204498291;0,02081904486691512;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;1.0;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6616742444503878;0,6603369884995989;0,652313452794865;0,6520460016047072;0,6445573682802889;0,682535437282696;0,6686279753944905;0,6536507087456539;0,6602461209202782;0,660781166399144;0,6596769464372111;0,009929598085205917;1053
2105,650184249878;758,5892292876244;1,1153239250183105;0,06151069171762829;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6715699384862263;0,6512436480342337;0,6659534634929125;0,6242310778282963;0,6520460016047072;0,6828028884728538;0,6648836587322814;0,6453597218507623;0,6540930979133226;0,6843231674692349;0,6596506663884831;0,017239808599764456;1056
1851,727781176567;582,9330462262125;1,1567938566207885;0,2209531163806412;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,674511901577962;0,6432201123294998;0,6648836587322814;0,6608718908799144;0,642952661139342;0,6606044396897566;0,6622091468307034;0,6573950254078631;0,6674692348849652;0,6623863028357411;0,6596504374308029;0,009379101966444743;1057
0,7555379390716552;0,037602507942037934;0,03346993923187256;0,008914183879871173;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.05;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6616742444503878;0,6603369884995989;0,6520460016047072;0,6520460016047072;0,6445573682802889;0,682535437282696;0,6686279753944905;0,6533832575554961;0,6602461209202782;0,660781166399144;0,6596234561991794;0,009966171926683427;1058
0,761931300163269;0,03769229814196769;0,038835692405700686;0,014143443264750425;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;0.1;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.1, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6616742444503878;0,6603369884995989;0,6520460016047072;0,6520460016047072;0,6445573682802889;0,682535437282696;0,6686279753944905;0,6533832575554961;0,6602461209202782;0,660781166399144;0,6596234561991794;0,009966171926683427;1058
0,7658264875411988;0,033348296853457096;0,04058198928833008;0,014612557074079045;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;2;;;42;;;;;;;;;;0.01;;;;;100;1;0.75;1.0;1.0;binary:logistic;1.0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 1.0, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': 2, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 1.0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6616742444503878;0,6603369884995989;0,6520460016047072;0,6520460016047072;0,6445573682802889;0,682535437282696;0,6686279753944905;0,6533832575554961;0,6602461209202782;0,660781166399144;0,6596234561991794;0,009966171926683427;1058
369,6259034395218;65,9783596502079;0,162062668800354;0,01011255256433969;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6710350361059106;0,6638138539716502;0,6507087456539181;0,6592671837389676;0,6445573682802889;0,6838726932334849;0,6576624765980209;0,6563252206472319;0,653558052434457;0,6551631888710541;0,6595963819534985;0,010553647055063757;1061
391,67883946895597;115,55378687154226;0,18355147838592528;0,044077334317987875;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6664883658732281;0,6466969778015512;0,6421503075688687;0,6723722920566997;0,6547205135062851;0,6688954265846483;0,6774538646696978;0,6464295266113934;0,6663991439272338;0,6527554842161584;0,6594361902815765;0,011733730828498826;1062
1076,4890900611877;440,2395323957385;0,65794837474823;0,05238663277588346;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6501738432736026;0,6753142551484355;0,6397432468574485;0,6378710885263439;0,6378710885263439;0,6691628777748061;0,6884193634661674;0,670500133725595;0,6658640984483681;0,6586409844836811;0,6593560980230794;0,016597448882523062;1063
792,5153016328811;163,54903620733646;0,5052937507629395;0,04300604464953807;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,662744049211019;0,6517785504145494;0,6509761968440759;0,6573950254078631;0,6499063920834448;0,6560577694570741;0,6632789515913345;0,6654185611125969;0,6618512573568753;0,6738897806313536;0,6593296534110187;0,007160523026791086;1064
643,1366858959198;296,91845655734716;0,3707320213317871;0,010546619576624778;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6539181599358117;0,6515110992243915;0,6721048408665419;0,6619416956405456;0,6258357849692431;0,6600695373094411;0,6667558170633859;0,6742444503878042;0,6653290529695024;0,6615837346174425;0,6593294172984111;0,01304416204189677;1065
296,5989047527313;56,751238977137874;0,15494146347045898;0,030181524178384805;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,662744049211019;0,6434875635196576;0,6694303289649639;0,6501738432736026;0,6499063920834448;0,6814656325220647;0,6691628777748061;0,6408130516180797;0,6503477795612627;0,6757624398073836;0,6593293958336284;0,013481651275940932;1066
1822,067566013336;746,8443045396486;1,1100255489349364;0,07325495719931645;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6675581706338594;0,6560577694570741;0,6485691361326558;0,6442899170901311;0,6512436480342337;0,6900240706071142;0,6571275742177053;0,6491040385129714;0,6543606206527555;0,6746923488496522;0,6593027294188153;0,013409085175551444;1067
966,0657222747802;286,0632721439391;0,7211758613586425;0,024130333903087744;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6576624765980209;0,6638138539716502;0,6368012837657128;0,652313452794865;0,6376036373361862;0,6841401444236427;0,6584648301684942;0,6670232682535437;0,6647940074906367;0,6696094168004281;0,659222637160318;0,01364763747534081;1068
1884,0577903032304;712,9413087972895;1,1605450630187988;0,09161964864588074;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6515110992243915;0,6547205135062851;0,6504412944637603;0,6598020861192833;0,6541856111259695;0,6755817063385932;0,6442899170901311;0,6461620754212356;0,6762974852862493;0,678705189941145;0,6591696978517044;0,012307851674221944;1069
434,55939693450927;134,3222551946647;0,31192944049835203;0,009652048147229813;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6504412944637603;0,6571275742177053;0,6565926718373897;0,6507087456539181;0,6461620754212356;0,6884193634661674;0,658732281358652;0,6688954265846483;0,6396468699839486;0,6749598715890851;0,659168617457651;0,013815124918638289;1070
470,6944390773773;119,32075998359102;0,3336741209030151;0,030874789742578304;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6525809039850228;0,6696977801551217;0,6603369884995989;0,6557903182669163;0,635196576624766;0,6857448515645894;0,6410805028082375;0,6619416956405456;0,6634563937934724;0,6655965757089353;0,6591422587047207;0,013574095817946169;1071
1725,3184490442277;311,87024999855197;1,0817333936691285;0,11039450942882292;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6624765980208612;0,6600695373094411;0,6491040385129714;0,6723722920566997;0,6565926718373897;0,6694303289649639;0,6595346349291255;0,6563252206472319;0,6532905296950241;0,6522204387372926;0,6591416290711001;0,007002614346735543;1072
1773,8923922538756;649,5375115335867;1,1584211349487306;0,10564652934782157;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,648301684942498;0,6533832575554961;0,6504412944637603;0,6595346349291255;0,6499063920834448;0,6817330837122225;0,6437550147098154;0,6528483551751806;0,6717495987158909;0,6784376672017122;0,6590090983489147;0,012765784238102356;1073
222,87939751148224;38,380034420324755;0,20601298809051513;0,026071893370866215;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,670500133725595;0,6461620754212356;0,6595346349291255;0,6440224658999733;0,6678256218240172;0,6539181599358117;0,6710350361059106;0,6576624765980209;0,6623863028357411;0,6567683253076512;0,6589815232583083;0,008879580577310343;1074
705,8016428232193;240,44694891449015;0,3826728105545044;0,012185206267998664;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6603369884995989;0,6656860123027547;0,6474993313720246;0,6603369884995989;0,6362663813853972;0,6763840599090666;0,6624765980208612;0,652313452794865;0,6508828250401284;0,6771000535045479;0,6589282691328842;0,01204081322205558;1075
264,55189578533174;79,27055947672409;0,1476064920425415;0,012909493090248867;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6531158063653383;0,6563252206472319;0,6565926718373897;0,6624765980208612;0,6450922706606045;0,67718641347954;0,6659534634929125;0,6528483551751806;0,6436597110754414;0,6757624398073836;0,6589012950561883;0,010891421060393258;1076
458,8802982807159;81,1532862063657;0,38025522232055664;0,024129099368072258;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6611393420700722;0,6638138539716502;0,6544530623161273;0,6507087456539181;0,6424177587590265;0,6589997325488098;0,6713024872960685;0,6686279753944905;0,6586409844836811;0,6583734617442483;0,6588477404238093;0,007977963126884379;1077
246,81563491821288;83,35950818031792;0,20662274360656738;0,029806068947318652;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,673174645627173;0,6434875635196576;0,6581973789783364;0,6402781492377642;0,662744049211019;0,6515110992243915;0,6742444503878042;0,6635464027814924;0,6653290529695024;0,6546281433921883;0,658714093532933;0,010836167968846695;1078
1839,3293092012404;559,0564902295965;1,1442983865737915;0,06492854603177707;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6547205135062851;0,6450922706606045;0,6646162075421236;0,6723722920566997;0,6448248194704467;0,6646162075421236;0,6750468039582777;0,649638940893287;0,6543606206527555;0,6613162118780096;0,6586604888160612;0,010126410009778049;1079
2445,1567769289018;651,5995392048765;1,431304144859314;0,10136573056158216;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6306499063920834;0,6622091468307034;0,6531158063653383;0,6568601230275475;0,6368012837657128;0,674511901577962;0,6734420968173308;0,6667558170633859;0,6482075976457999;0,6835205992509363;0,6586074278736801;0,016036061855764516;1080
675,8052449226379;248,6644816007706;0,4128230094909668;0,06221232669405544;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,664081305161808;0,6544530623161273;0,6504412944637603;0,6646162075421236;0,6584648301684942;0,6651511099224392;0,6630115004011767;0,6386734420968173;0,6503477795612627;0,6768325307651151;0,6586073062399125;0,010049821748988533;1081
1505,2944966077805;340,7428035940676;1,1218650579452514;0,07969893167463588;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6624765980208612;0,6651511099224392;0,6410805028082375;0,6442899170901311;0,6525809039850228;0,6785236694303289;0,6664883658732281;0,6533832575554961;0,6500802568218299;0,6717495987158909;0,6585804180223466;0,011566214947561321;1082
229,8489047050476;65,23286991629278;0,13180856704711913;0,006511038653255394;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6632789515913345;0,6466969778015512;0,6683605242043327;0,642952661139342;0,6573950254078631;0,6801283765712758;0,6713024872960685;0,6541856111259695;0,6407169609416801;0,660781166399144;0,6585798742478562;0,012140844567730414;1083
588,8223052740098;195,11355201461026;0,39509484767913816;0,030502200217069054;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,664081305161808;0,6635464027814924;0,6303824552019256;0,6480342337523401;0,6552554158866007;0,6822679860925381;0,6565926718373897;0,6616742444503878;0,6514178705189941;0,6722846441947565;0,6585537229878233;0,013364310930410624;1084
1768,5220137119293;361,5946447744437;1,2024781703948975;0,06686131654028628;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6507087456539181;0,6392083444771329;0,6753142551484355;0,6584648301684942;0,6442899170901311;0,67718641347954;0,6549879646964429;0,6458946242310778;0,6639914392723382;0,6746923488496522;0,6584738883067163;0,013153979146403724;1085
677,5811703920365;252,2006746965197;0,4770312786102295;0,04929083941405067;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6680930730141749;0,6512436480342337;0,6544530623161273;0,6547205135062851;0,6474993313720246;0,6517785504145494;0,6691628777748061;0,6517785504145494;0,6546281433921883;0,6813804173354735;0,6584738167574412;0,010192689898437792;1086
1073,67484459877;349,68134261328487;0,7085846900939942;0,06327973432424365;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6622091468307034;0,648301684942498;0,64562717304092;0,6680930730141749;0,6448248194704467;0,6822679860925381;0,6555228670767584;0,6541856111259695;0,6629213483146067;0,6605136436597111;0,6584467353568326;0,010855781094387992;1087
619,9550542831421;200,9474124888967;0,3673561573028564;0,011173706009394711;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6750468039582777;0,6683605242043327;0,6547205135062851;0,6576624765980209;0,6488365873228136;0,6715699384862263;0,6565926718373897;0,6437550147098154;0,653558052434457;0,6543606206527555;0,6584463203710375;0,009554048581880071;1088
284,89404928684235;77,02343683387994;0,16753387451171875;0,0060579333554645265;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6611393420700722;0,6726397432468575;0,6472318801818668;0,6389408932869751;0,6547205135062851;0,6630115004011767;0,6659534634929125;0,642952661139342;0,664258962011771;0,6730872124130551;0,6583936171750314;0,011376198395745524;1089
1933,152743077278;425,9346066158959;1,1059123277664185;0,10075501896916789;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6646162075421236;0,6349291254346082;0,658732281358652;0,6549879646964429;0,6477667825621825;0,6849424979941161;0,6670232682535437;0,6472318801818668;0,6399143927233815;0,6835205992509363;0,6583664999997854;0,016095600995268324;1090
522,0735223770141;220,55201925487899;0,3033984899520874;0,01663720917647197;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6325220647231881;0,6715699384862263;0,6632789515913345;0,6440224658999733;0,6611393420700722;0,6595346349291255;0,6624765980208612;0,6737095480074886;0,6471375066880685;0,6682718031032637;0,6583662853519601;0,012480823921930803;1091
503,1702248573303;131,35745908264076;0,33935682773590087;0,02211480488711455;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6686279753944905;0,6477667825621825;0,6544530623161273;0,6458946242310778;0,6357314790050815;0,6793260230008024;0,6560577694570741;0,662744049211019;0,6754949170679507;0,6573033707865169;0,6583400053032322;0,012880836213923556;1092
21,879734659194945;1,4523323621033077;0,027536678314208984;0,007403574217494467;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);adaptive;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,66140679326023;0,6659534634929125;0,6531158063653383;0,6515110992243915;0,6437550147098154;0,6646162075421236;0,6659534634929125;0,6557903182669163;0,6530230069555912;0,6682718031032637;0,6583396976413495;0,007647127169866954;1093
561,5071067810059;112,27187413967057;0,4645864248275757;0,024661204593151596;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6592671837389676;0,6568601230275475;0,648301684942498;0,6643487563519658;0,6520460016047072;0,6648836587322814;0,6579299277881786;0,6707675849157528;0,6401819154628143;0,668004280363831;0,6582591116928544;0,00894437509790377;1094
524,1069034099579;155,94510940855707;0,3469967842102051;0,02657984792063277;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6638138539716502;0,6491040385129714;0,6531158063653383;0,6560577694570741;0,6389408932869751;0,6809307301417491;0,6507087456539181;0,6651511099224392;0,6594435527019796;0,6647940074906367;0,6582060507504732;0,010870847001903229;1095
24,08188133239746;3,101346946644457;0,029490041732788085;0,01717332270108258;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);adaptive;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6611393420700722;0,6670232682535437;0,6517785504145494;0,6515110992243915;0,6442899170901311;0,6670232682535437;0,6635464027814924;0,6549879646964429;0,6522204387372926;0,6685393258426966;0,6582059577364155;0,007907997991904576;1096
237,97171504497527;70,36135836051895;0,16008248329162597;0,008914485692646424;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6656860123027547;0,649638940893287;0,646964428991709;0,6589997325488098;0,6400106980476064;0,6820005349023803;0,6544530623161273;0,6659534634929125;0,6543606206527555;0,6629213483146067;0,6580988842462949;0,011245494058859952;1097
1666,3580223083495;364,5991973986097;1,1348615407943725;0,06772867345683402;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6491040385129714;0,6458946242310778;0,6747793527681198;0,6568601230275475;0,6402781492377642;0,6833377908531693;0,6509761968440759;0,6466969778015512;0,6591760299625468;0,6736222578919208;0,6580725541130745;0,013737064317334301;1098
300,4870171546936;86,9610143860622;0,1455164909362793;0,009222228015327955;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6573950254078631;0,6480342337523401;0,6541856111259695;0,6531158063653383;0,6507087456539181;0,675849157528751;0,6721048408665419;0,6525809039850228;0,6500802568218299;0,6666666666666666;0,658072124817424;0,00935914940710511;1099
7,215297293663025;1,030161652991656;0,02469925880432129;0,00859135031647129;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);constant;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,66140679326023;0,6659534634929125;0,6531158063653383;0,6515110992243915;0,6437550147098154;0,6646162075421236;0,6632789515913345;0,6547205135062851;0,6530230069555912;0,6682718031032637;0,6579652659751285;0,007459286202735592;1100
14,241880798339844;2,120292705097838;0,037279820442199706;0,01724844251697233;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);adaptive;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6635464027814924;0,662744049211019;0,6536507087456539;0,6501738432736026;0,6491040385129714;0,6646162075421236;0,6606044396897566;0,652313452794865;0,6474050294275013;0,6749598715890851;0,6579118043568071;0,008338337781122371;1101
7,885663032531738;2,1715774295672157;0,033733057975769046;0,010957465851619299;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);constant;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6638138539716502;0,6643487563519658;0,6525809039850228;0,6499063920834448;0,6493714897031292;0,6651511099224392;0,6592671837389676;0,6520460016047072;0,6476725521669342;0,6746923488496522;0,6578850592377914;0,008466313752792554;1102
2390,230009317398;892,4801420683644;1,3703647613525392;0,08902201077135308;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6753142551484355;0,6440224658999733;0,6461620754212356;0,6589997325488098;0,6464295266113934;0,691628777748061;0,6394757956672907;0,6568601230275475;0,658908507223114;0,6610486891385767;0,6578849948434436;0,015018303686765712;1103
24,20204977989197;3,116105135694775;0,02436823844909668;0,007328851842841691;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);adaptive;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6611393420700722;0,6670232682535437;0,6517785504145494;0,6517785504145494;0,6440224658999733;0,6659534634929125;0,6635464027814924;0,6549879646964429;0,6522204387372926;0,6663991439272338;0,6578849590688062;0,007556244391052624;1104
629,0556043863296;218,46374920910313;0,40375409126281736;0,026519876012754243;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6619416956405456;0,6592671837389676;0,6416154051885531;0,6606044396897566;0,6622091468307034;0,6951056432201124;0,6648836587322814;0,6445573682802889;0,657035848047084;0,6310861423220974;0,6578306531690389;0,01624812018019933;1105
17,870896339416504;2,955703282235808;0,025216293334960938;0,007047319300114556;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);adaptive;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6611393420700722;0,6630115004011767;0,6525809039850228;0,6536507087456539;0,6445573682802889;0,664081305161808;0,6635464027814924;0,6563252206472319;0,6522204387372926;0,6669341894060995;0,6578047380216139;0,006688418549910205;1106
8,553122925758363;1,2965441922943086;0,025006103515625;0,005626185572178003;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);constant;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6616742444503878;0,662744049211019;0,652313452794865;0,6536507087456539;0,6445573682802889;0,664081305161808;0,6635464027814924;0,6563252206472319;0,6522204387372926;0,6669341894060995;0,6578047380216139;0,006718296769110253;1106
17,300192260742186;1,3140514785911643;0,026340508460998537;0,008679582154328153;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);adaptive;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6616742444503878;0,662744049211019;0,652313452794865;0,6536507087456539;0,6445573682802889;0,664081305161808;0,6635464027814924;0,6563252206472319;0,6522204387372926;0,6669341894060995;0,6578047380216139;0,006718296769110253;1106
1105,127491593361;344,84766522588177;0,7178194284439087;0,07620315280071317;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6539181599358117;0,6560577694570741;0,6598020861192833;0,6480342337523401;0,6244985290184542;0,686279753944905;0,6662209146830703;0,6466969778015512;0,6704119850187266;0,6658640984483681;0,6577784508179585;0,01567112968277195;1109
7,825013303756714;1,982949521062143;0,03868834972381592;0,0173362938093361;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);constant;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6635464027814924;0,6622091468307034;0,6536507087456539;0,6501738432736026;0,6491040385129714;0,6646162075421236;0,6606044396897566;0,652313452794865;0,6474050294275013;0,6738897806313536;0,6577513050230024;0,008091951931641748;1110
7,221213030815124;0,9795745702508138;0,027796006202697753;0,01115218726853275;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);constant;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6616742444503878;0,6659534634929125;0,6528483551751806;0,6515110992243915;0,6434875635196576;0,6643487563519658;0,6619416956405456;0,6547205135062851;0,6527554842161584;0,6682718031032637;0,6577512978680748;0,0074498913064807324;1111
21,939246678352355;1,1690787136256873;0,026284313201904295;0,010500694552835246;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);adaptive;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6616742444503878;0,6659534634929125;0,6528483551751806;0,6515110992243915;0,6434875635196576;0,6643487563519658;0,6619416956405456;0,6547205135062851;0,6527554842161584;0,6682718031032637;0,6577512978680748;0,0074498913064807324;1111
2033,617848277092;472,87923047268674;1,1189477682113647;0,07117061146734928;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6715699384862263;0,6440224658999733;0,6638138539716502;0,6624765980208612;0,6368012837657128;0,6557903182669163;0,6603369884995989;0,6491040385129714;0,6672017121455324;0,666131621187801;0,6577248818757243;0,010593683481107124;1113
14,320902347564697;2,3887194807224015;0,039613771438598636;0,02143544372536695;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);adaptive;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6638138539716502;0,6643487563519658;0,6525809039850228;0,6499063920834448;0,6493714897031292;0,6651511099224392;0,6592671837389676;0,6520460016047072;0,6476725521669342;0,6730872124130551;0,6577245455941316;0,00815565764593175;1114
0,4828637599945068;0,06192251423842649;0,033267641067504884;0,009743627657528578;DecisionTreeClassifier();;entropy;;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6595346349291255;0,6624765980208612;0,652313452794865;0,6686279753944905;0,642952661139342;0,6635464027814924;0,6579299277881786;0,6520460016047072;0,6540930979133226;0,6637239165329053;0,6577244668899291;0,007124560557391066;1115
8,534491109848023;1,127354366524221;0,025417017936706542;0,008196338123678553;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);constant;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6560577694570741;0,6670232682535437;0,6517785504145494;0,6515110992243915;0,6442899170901311;0,6670232682535437;0,6635464027814924;0,6549879646964429;0,6522204387372926;0,6685393258426966;0,6576978004751158;0,00786633366704025;1116
2564,0649955511094;662,1452751570685;1,4238091707229614;0,17905595693069912;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6132655790318267;0,6654185611125969;0,648301684942498;0,6533832575554961;0,648301684942498;0,6924311313185344;0,6779887670500133;0,6466969778015512;0,6578384162653825;0,6722846441947565;0,6575910704215153;0,02044712514509578;1117
2419,3612180948257;437,33051209480874;1,4077523946762085;0,08194844281669185;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6493714897031292;0,6659534634929125;0,6515110992243915;0,6480342337523401;0,6421503075688687;0,670500133725595;0,6680930730141749;0,6547205135062851;0,6623863028357411;0,6629213483146067;0,6575641965138044;0,009169418872103284;1118
1664,9259439229966;359,10611422747456;1,1134724855422973;0,06380010874959;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6598020861192833;0,6648836587322814;0,6667558170633859;0,6325220647231881;0,648301684942498;0,6766515110992244;0,6595346349291255;0,6504412944637603;0,6546281433921883;0,6621187800963082;0,6575639675561243;0,011420506244791979;1119
1786,6521427869798;539,239709056879;1,0949861526489257;0,0695014918635292;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6477667825621825;0,6394757956672907;0,6541856111259695;0,6541856111259695;0,6477667825621825;0,6964428991709013;0,6737095480074886;0,6397432468574485;0,6415195291599786;0,680577849117175;0,6575373655356587;0,01849016782873107;1120
618,5874542713166;251,09073411704097;0,3876655101776123;0,0564791899545883;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6600695373094411;0,6713024872960685;0,670500133725595;0,6576624765980209;0,6135330302219845;0,6622091468307034;0,6662209146830703;0,6592671837389676;0,6487426431246656;0,6658640984483681;0,6575371651976886;0,01596002653336919;1121
1786,2908322572707;791,771390811305;1,0892157316207887;0,061534513256681925;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6598020861192833;0,6357314790050815;0,6664883658732281;0,6440224658999733;0,6646162075421236;0,6643487563519658;0,6782562182401711;0,6531158063653383;0,6484751203852327;0,6594435527019796;0,6574300058484377;0,011723340963479963;1122
603,1019523620605;180,80990562736002;0,3988576650619507;0,026235537000086382;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6643487563519658;0,6560577694570741;0,6416154051885531;0,6504412944637603;0,6565926718373897;0,6803958277614336;0,6589997325488098;0,6501738432736026;0,660781166399144;0,6546281433921883;0,6574034610673922;0,00975200250057359;1123
8,56262502670288;1,1062087378802552;0,030721759796142577;0,011748331141774681;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);constant;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6560577694570741;0,6670232682535437;0,6517785504145494;0,6517785504145494;0,6440224658999733;0,6659534634929125;0,6635464027814924;0,6549879646964429;0,6522204387372926;0,6663991439272338;0,6573768018075065;0,007490885582555097;1124
2013,4268716812135;560,7027714216005;1,1212454319000245;0,07919587003977059;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,649638940893287;0,6442899170901311;0,6589997325488098;0,6624765980208612;0,6584648301684942;0,6702326825354373;0,648301684942498;0,652313452794865;0,6519529159978599;0,6768325307651151;0,6573503285757358;0,009706557120385083;1125
1536,1394983530045;312,1562410317003;1,077542519569397;0,08311817316177088;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,66140679326023;0,6656860123027547;0,6464295266113934;0,633859320673977;0,6515110992243915;0,6787911206204867;0,6643487563519658;0,6528483551751806;0,6524879614767255;0,666131621187801;0,6573500566884907;0,011919872182559708;1126
8,1627907037735;0,7916196030311269;0,03051900863647461;0,0149692073016732;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);constant;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6563252206472319;0,6630115004011767;0,6525809039850228;0,6536507087456539;0,6445573682802889;0,664081305161808;0,6635464027814924;0,6563252206472319;0,6522204387372926;0,6669341894060995;0,6573233258793298;0,006603796165703088;1127
2830,0877291202546;772,9502019380399;1,3979029893875121;0,0780132041811817;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,674511901577962;0,6635464027814924;0,6413479539983953;0,6702326825354373;0,6258357849692431;0,6608718908799144;0,6488365873228136;0,6576624765980209;0,6637239165329053;0,6655965757089353;0,657216617290512;0,013933899215867098;1128
411,83233711719515;143,5133458650238;0,33431320190429686;0,024634976516082492;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6507087456539181;0,6424177587590265;0,6386734420968173;0,6466969778015512;0,6515110992243915;0,675849157528751;0,6600695373094411;0,6683605242043327;0,6768325307651151;0,6594435527019796;0,6570563326045324;0,012717733545526716;1129
349,6884788274765;86,97950707181559;0,16267614364624022;0,010711422719902384;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6474993313720246;0,6648836587322814;0,6579299277881786;0,6635464027814924;0,6434875635196576;0,6782562182401711;0,6635464027814924;0,6512436480342337;0,6487426431246656;0,6514178705189941;0,6570553666893193;0,010029217929137338;1130
2144,1416580438613;761,4274393423952;1,1535826683044434;0,08086067832130915;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6729071944370153;0,662744049211019;0,6509761968440759;0,6381385397165017;0,6517785504145494;0,6646162075421236;0,6691628777748061;0,6616742444503878;0,6348314606741573;0,6637239165329053;0,6570553237597542;0,012123335831885785;1131
445,5599149703979;185,50867926445528;0,3295530557632446;0,021458862580562146;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6782562182401711;0,6747793527681198;0,6359989301952393;0,6485691361326558;0,6394757956672907;0,6763840599090666;0,6573950254078631;0,6354640278149237;0,6720171214553237;0,6508828250401284;0,6569222492630782;0,0164003767359958;1132
0,4823299407958984;0,014621324049725421;0,0255781888961792;0,004115576273716812;DecisionTreeClassifier();;entropy;;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6672907194437016;0,6509761968440759;0,6571275742177053;0,6638138539716502;0,6437550147098154;0,6678256218240172;0,6565926718373897;0,6472318801818668;0,6621187800963082;0,6524879614767255;0,6569220274603256;0,007895159280382116;1133
2352,3606884479523;504,9184550251794;1,4287327527999878;0,11519497365693289;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6539181599358117;0,6672907194437016;0,6341267718641348;0,6515110992243915;0,6317197111527146;0,6713024872960685;0,6670232682535437;0,662744049211019;0,6698769395398609;0,6581059390048154;0,6567619144926062;0,013462151472609445;1134
942,3858874320983;398,8594282686092;0,7502969980239869;0,09281469808874135;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6531158063653383;0,6678256218240172;0,6392083444771329;0,6581973789783364;0,6384059909066595;0,6878844610858519;0,6517785504145494;0,6622091468307034;0,6610486891385767;0,6479400749063671;0,6567614064927533;0,013791839927146545;1135
245,35426406860353;89,24675676100588;0,14403975009918213;0,004551434254884961;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6528483551751806;0,6560577694570741;0,6477667825621825;0,6659534634929125;0,6501738432736026;0,6696977801551217;0,6624765980208612;0,6557903182669163;0,6396468699839486;0,6672017121455324;0,6567613492533333;0,009096503550730078;1136
0,5056319236755371;0,031570181979135255;0,02975451946258545;0,007912723695519559;DecisionTreeClassifier();balanced;entropy;;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,664081305161808;0,6499063920834448;0,6533832575554961;0,664081305161808;0,6445573682802889;0,6688954265846483;0,6598020861192833;0,6493714897031292;0,6613162118780096;0,6519529159978599;0,6567347758525776;0,007546226089259586;1137
789,4652679443359;207,02406181841926;0,47854340076446533;0,021070894197042216;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6654185611125969;0,6319871623428724;0,64562717304092;0,6734420968173308;0,6191495052152982;0,6683605242043327;0,6777213158598556;0,6544530623161273;0,6530230069555912;0,6776350989834136;0,6566817506848338;0,018799973950242375;1138
512,434194111824;256,0377695362846;0,36409571170806887;0,01009871345834423;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6654185611125969;0,6688954265846483;0,6528483551751806;0,6477667825621825;0,6298475528216101;0,6787911206204867;0,6437550147098154;0,6608718908799144;0,657035848047084;0,6602461209202782;0,6565476673433797;0,013137289833245198;1139
395,05213525295255;108,27715305236751;0,1700864315032959;0,009939694783617477;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,673174645627173;0,6491040385129714;0,6202193099759294;0,6568601230275475;0,6571275742177053;0,682535437282696;0,6533832575554961;0,6571275742177053;0,6548956661316212;0,6610486891385767;0,6565476315687422;0,015364731561170604;1140
0,47381656169891356;0,013556799603518245;0,03129129409790039;0,008347417685061139;DecisionTreeClassifier();balanced;entropy;;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6611393420700722;0,6608718908799144;0,652313452794865;0,6654185611125969;0,6405456004279219;0,6619416956405456;0,6563252206472319;0,652313452794865;0,6527554842161584;0,6613162118780096;0,6564940912462182;0,006903871545570757;1141
2826,2253378391265;858,7971951977365;1,414301061630249;0,106949695432563;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6073816528483552;0,6648836587322814;0,6418828563787109;0,6474993313720246;0,648301684942498;0,6921636801283766;0,6742444503878042;0,6702326825354373;0,6556982343499197;0,6623863028357411;0,6564674534511149;0,021576408458693255;1142
913,3450548171998;323,3952773352869;0,6861753225326538;0,04392860534989164;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6544530623161273;0,6721048408665419;0,6381385397165017;0,64562717304092;0,6357314790050815;0,6699652313452795;0,6811981813319069;0,6686279753944905;0,6538255751738897;0,6449973247726056;0,6564669382963345;0,014873626406235498;1143
2042,4712595939636;549,0089172417429;1,4114951372146607;0,10305251536104784;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,66140679326023;0,6616742444503878;0,6670232682535437;0,6568601230275475;0,6488365873228136;0,6678256218240172;0,6410805028082375;0,6547205135062851;0,6441947565543071;0,6599785981808454;0,6563601009188215;0,008677368855154325;1144
2124,247811841965;804,0504153467342;1,1649968862533568;0,0756817849012458;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6777213158598556;0,6581973789783364;0,6466969778015512;0,6437550147098154;0,6448248194704467;0,6632789515913345;0,670500133725595;0,6504412944637603;0,6468699839486356;0,6610486891385767;0,6563334559687908;0,011135013837263558;1145
369,7377265691757;102,02254815281479;0,16522555351257323;0,00799460613613567;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6656860123027547;0,6461620754212356;0,6557903182669163;0,652313452794865;0,6571275742177053;0,6643487563519658;0,6662209146830703;0,6343942230542926;0,6503477795612627;0,6706795077581594;0,6563070614412227;0,010454571814865117;1146
276,1072083711624;54,6366338833543;0,15255043506622315;0,014722616655166844;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6520460016047072;0,6557903182669163;0,6333244182936614;0,6592671837389676;0,6426852099491843;0,6734420968173308;0,6648836587322814;0,6608718908799144;0,6672017121455324;0,6532905296950241;0,656280302012352;0,011210412775128678;1147
2094,862031364441;857,1935909012985;1,1630468845367432;0,05960734570447192;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6638138539716502;0,6549879646964429;0,6477667825621825;0,6688954265846483;0,6648836587322814;0,6606044396897566;0,6501738432736026;0,6507087456539181;0,6466024612092027;0,6543606206527555;0,6562797797026441;0,007405664661302669;1148
978,325254392624;212,9124353791554;0,7221472263336182;0,024225473447574294;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6528483551751806;0,6480342337523401;0,6589997325488098;0,646964428991709;0,6322546135330303;0,6830703396630114;0,6581973789783364;0,6539181599358117;0,6685393258426966;0,658908507223114;0,6561735075644041;0,012787605304729464;1149
992,0165562868118;282,76855070616165;0,7583592414855957;0,05256915786827685;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6678256218240172;0,6646162075421236;0,6426852099491843;0,6424177587590265;0,6747793527681198;0,673174645627173;0,6646162075421236;0,6488365873228136;0,6500802568218299;0,6326912787586945;0,6561723126915107;0,013881910027528012;1150
553,4011581897736;233,7663657658569;0,39064290523529055;0,03404060667686084;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6573950254078631;0,6499063920834448;0,6103236159400909;0,6547205135062851;0,6547205135062851;0,6782562182401711;0,6638138539716502;0,6557903182669163;0,6771000535045479;0,6591760299625468;0,6561202534389802;0,017720831615610787;1151
2864,988037133217;757,9664077374457;1,403197956085205;0,13673146367031574;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6659534634929125;0,6354640278149237;0,6480342337523401;0,6528483551751806;0,6413479539983953;0,6670232682535437;0,6680930730141749;0,6672907194437016;0,64633493846977;0,6688068485821295;0,6561196881997071;0,012088784363812765;1152
862,9629363059997;193,24126687063892;0,6847159624099731;0,05998456038977659;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6528483551751806;0,6595346349291255;0,664081305161808;0,6485691361326558;0,6448248194704467;0,6662209146830703;0,6643487563519658;0,6368012837657128;0,6682718031032637;0,6554307116104869;0,6560931720383716;0,009805255555065959;1153
258,0666372537613;81,70818390005928;0,15331296920776366;0,010345097322036043;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6531158063653383;0,6584648301684942;0,6560577694570741;0,64562717304092;0,642952661139342;0,6734420968173308;0,6680930730141749;0,6598020861192833;0,6380417335473515;0,6650615302300695;0,6560658759899378;0,010778303072672432;1154
1105,9871912956237;421,46994952499296;0,7250898361206055;0,02448732954850746;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6672907194437016;0,6600695373094411;0,6555228670767584;0,6440224658999733;0,6440224658999733;0,6568601230275475;0,6552554158866007;0,6354640278149237;0,6704119850187266;0,6712145532370252;0,6560134160614671;0,011372767010346474;1155
2594,7651184797287;645,0200989336039;1,442584753036499;0,15788052531392419;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6491040385129714;0,6386734420968173;0,6461620754212356;0,6485691361326558;0,6493714897031292;0,6750468039582777;0,6624765980208612;0,6675581706338594;0,6623863028357411;0,660781166399144;0,6560129223714692;0,010703572570458206;1156
621,0060605287551;304,797641696885;0,37466933727264407;0,023685792011345786;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6918962289382188;0,6477667825621825;0,6608718908799144;0,6402781492377642;0,6630115004011767;0,6464295266113934;0,67718641347954;0,6239636266381385;0,6631888710540396;0,64446227929374;0,6559055269096108;0,01851457555830743;1157
598,5881571769714;203,7277730295983;0,38467504978179934;0,045757924079236165;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6549879646964429;0,6595346349291255;0,6632789515913345;0,6557903182669163;0,615405188553089;0,6721048408665419;0,6509761968440759;0,6651511099224392;0,660781166399144;0,660781166399144;0,6558791538468254;0,014589050878279185;1158
449,17433021068575;127,76354969702729;0,16499993801116944;0,008540252460166537;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,673174645627173;0,6501738432736026;0,6105910671302487;0,6568601230275475;0,6579299277881786;0,6822679860925381;0,6646162075421236;0,6333244182936614;0,6530230069555912;0,6762974852862493;0,6558258711016914;0,02023443473677105;1159
30,870192694664002;5,530084630117449;0,025912547111511232;0,006884343920493121;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);adaptive;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6555228670767584;0,6598020861192833;0,6520460016047072;0,6528483551751806;0,636533832575555;0,6622091468307034;0,6632789515913345;0,6555228670767584;0,651685393258427;0,6685393258426966;0,6557988827151404;0,008284880784024127;1160
2514,4125920057295;655,5517921408308;1,3403039932250977;0,10765732945687384;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6747793527681198;0,6648836587322814;0,6386734420968173;0,6595346349291255;0,6295801016314523;0,6579299277881786;0,6432201123294998;0,66140679326023;0,6688068485821295;0,658908507223114;0,6557723379340947;0,013455622667595457;1161
594,6054528713227;233,75115714717072;0,3675131559371948;0,011243728749480321;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6742444503878042;0,6384059909066595;0,6536507087456539;0,6672907194437016;0,6461620754212356;0,6777213158598556;0,6504412944637603;0,6362663813853972;0,6554307116104869;0,6581059390048154;0,6557719587229369;0,013298732701171233;1162
619,6970498323441;172,6629359807874;0,4304851531982422;0,032687195038151096;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6646162075421236;0,6622091468307034;0,6515110992243915;0,6426852099491843;0,6392083444771329;0,6619416956405456;0,6477667825621825;0,6616742444503878;0,6674692348849652;0,6581059390048154;0,6557187904566433;0,00928795081089014;1163
2004,3264589548112;485,63406961339837;1,1846992731094361;0,07712380718592653;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6694303289649639;0,6552554158866007;0,6480342337523401;0,6560577694570741;0,664081305161808;0,6536507087456539;0,6520460016047072;0,6504412944637603;0,6506153023006955;0,6575708935259497;0,6557183253863553;0,006264296878335672;1164
552,1686537265778;148,20824090538304;0,3605456590652466;0,010956228008779486;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6306499063920834;0,6651511099224392;0,6584648301684942;0,6282428456806632;0,648301684942498;0,6654185611125969;0,6806632789515913;0,6584648301684942;0,6578384162653825;0,6637239165329053;0,655691938013715;0,015255558875595725;1165
1120,5868750572204;378,5083556849633;0,7395873546600342;0,07060127001073645;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,652313452794865;0,6491040385129714;0,6397432468574485;0,6672907194437016;0,6424177587590265;0,673174645627173;0,6557903182669163;0,6536507087456539;0,6621187800963082;0,660781166399144;0,6556384835503208;0,009984529179504719;1166
2040,1804273605346;647,0567661368557;1,430755615234375;0,13607423806783014;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,658732281358652;0,6600695373094411;0,6480342337523401;0,6418828563787109;0,6549879646964429;0,6822679860925381;0,6606044396897566;0,6432201123294998;0,6238630283574104;0,682450508293205;0,6556112948257997;0,017009511433353622;1167
590,2859018802643;231,14372972603036;0,3982731580734253;0,027815667367492653;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6766515110992244;0,658732281358652;0,6536507087456539;0,6378710885263439;0,6255683337790853;0,6648836587322814;0,6595346349291255;0,648301684942498;0,6712145532370252;0,6586409844836811;0,655504943983357;0,014425314199802947;1168
560,5922877073288;154,78158300294177;0,39947869777679446;0,03397116838116125;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6846750468039583;0,6531158063653383;0,6138004814121423;0,6552554158866007;0,6509761968440759;0,6777213158598556;0,6643487563519658;0,6557903182669163;0,6781701444622793;0,6206527554842162;0,6554506237737349;0,022173532362986633;1169
810,78885846138;233,90849288425227;0,4879592418670654;0,025406240785531296;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6656860123027547;0,6279753944905054;0,6453597218507623;0,6702326825354373;0,6349291254346082;0,6648836587322814;0,6742444503878042;0,6557903182669163;0,6364365971107544;0,6776350989834136;0,6553173060095239;0,017020372302410637;1170
2020,9040379285811;730,4503758514575;1,082037091255188;0,05109994524229953;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6517785504145494;0,6563252206472319;0,6253008825889276;0,6611393420700722;0,6450922706606045;0,6418828563787109;0,6838726932334849;0,6737095480074886;0,6401819154628143;0,6738897806313536;0,6553173060095236;0,017208015029352472;1171
664,7034857273102;190,7495653606589;0,39104042053222654;0,0434066871771008;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6656860123027547;0,6531158063653383;0,6517785504145494;0,615405188553089;0,6557903182669163;0,6809307301417491;0,6589997325488098;0,6525809039850228;0,6508828250401284;0,6674692348849652;0,6552639302503322;0,016007752767552057;1172
29,576859498023985;3,8844148656696453;0,026368021965026855;0,010730210183016899;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);adaptive;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6555228670767584;0,6598020861192833;0,6520460016047072;0,6528483551751806;0,636533832575555;0,6603369884995989;0,6603369884995989;0,6555228670767584;0,6514178705189941;0,6674692348849652;0,6551837092031401;0,007764693840633849;1173
391,80546028614043;124,09157555439734;0,3404017448425293;0,03486892623303997;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6573950254078631;0,6707675849157528;0,6584648301684942;0,6536507087456539;0,6105910671302487;0,6841401444236427;0,6349291254346082;0,6517785504145494;0,660781166399144;0,6669341894060995;0,6549432392446056;0,019179447694235595;1174
256,2892240047455;88,97887381686054;0,14789888858795167;0,008918099557125846;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6667558170633859;0,6413479539983953;0,6520460016047072;0,6464295266113934;0,6405456004279219;0,6528483551751806;0,6606044396897566;0,6619416956405456;0,6559657570893526;0,6709470304975923;0,654943217779823;0,009773029554682514;1175
601,8057430505753;262,44902239147046;0,3993235111236572;0,020469157007043905;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6638138539716502;0,6418828563787109;0,6432201123294998;0,6392083444771329;0,6477667825621825;0,6779887670500133;0,648301684942498;0,646964428991709;0,6768325307651151;0,6631888710540396;0,6549168232522551;0,013681279590574481;1176
437,1323871850967;154,97003043080406;0,32431349754333494;0,027832046076855677;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6822679860925381;0,6742444503878042;0,6359989301952393;0,64562717304092;0,6400106980476064;0,6696977801551217;0,6595346349291255;0,6325220647231881;0,6332263242375602;0,675227394328518;0,6548357436137622;0,018472350997867298;1177
0,3859993934631348;0,027537080875335306;0,03114461898803711;0,006485516514132355;DecisionTreeClassifier();;gini;;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6528483551751806;0,64562717304092;0,6549879646964429;0,6474993313720246;0,6520460016047072;0,6622091468307034;0,6688954265846483;0,6598020861192833;0,6433921883360085;0,6605136436597111;0,654782131741963;0,007682755646504839;1178
1725,7672149658204;489,0213437392842;1,12502760887146;0,07083795602393056;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,649638940893287;0,6541856111259695;0,6619416956405456;0,6531158063653383;0,628510296870821;0,6611393420700722;0,6670232682535437;0,6742444503878042;0,6441947565543071;0,653558052434457;0,6547552220596147;0,01205685940639136;1179
624,4405638694764;191,56972985287527;0,3848397970199585;0,04826027301319229;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6549879646964429;0,662744049211019;0,6512436480342337;0,648301684942498;0,649638940893287;0,6531158063653383;0,6509761968440759;0,6592671837389676;0,6586409844836811;0,6581059390048154;0,6547022398214359;0,00455692934883185;1180
333,1505154132843;104,72348023866085;0,17714307308197022;0,014672472515766435;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6632789515913345;0,6354640278149237;0,631184808772399;0,6702326825354373;0,6493714897031292;0,6664883658732281;0,6753142551484355;0,6440224658999733;0,6484751203852327;0,6631888710540396;0,6547021038778132;0,014335185164424032;1181
3,2295376300811767;0,050137925966996365;0,0670705795288086;0,014792347231178032;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42)";balanced;entropy;2;;;42;;;;;;;;;;;;;;0.75;100;1;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 2, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__random_state': 42}";0,6576624765980209;0,6501738432736026;0,6491040385129714;0,6434875635196576;0,6448248194704467;0,6766515110992244;0,6598020861192833;0,6504412944637603;0,6573033707865169;0,657035848047084;0,6546486851890567;0,009066747808295488;1182
0,390805983543396;0,012103134367013936;0,026695680618286134;0,0033412196364311897;DecisionTreeClassifier();balanced;gini;;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6512436480342337;0,64562717304092;0,6568601230275475;0,6474993313720246;0,6515110992243915;0,6595346349291255;0,6702326825354373;0,6600695373094411;0,64258962011771;0,6605136436597111;0,6545681493250542;0,00796682600747692;1183
660,9092750310898;293,9096441074788;0,4092745304107666;0,02829690938174702;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6507087456539181;0,6499063920834448;0,6386734420968173;0,6426852099491843;0,6539181599358117;0,6702326825354373;0,6809307301417491;0,6464295266113934;0,657035848047084;0,6530230069555912;0,654354374401043;0,012022960874922233;1184
502,0527463197708;247,42374104594276;0,3613210916519165;0,021238102292449126;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6571275742177053;0,6392083444771329;0,6606044396897566;0,6458946242310778;0,6392083444771329;0,6774538646696978;0,6408130516180797;0,6606044396897566;0,6583734617442483;0,6629213483146067;0,6542209493129195;0,011926906737500513;1185
31,58436589241028;0,18406491146980003;0,4366611003875732;0,04357048851652528;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42)";balanced;entropy;2;;;42;;;;;;;;;;;;;;0.75;1000;1;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 2, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__random_state': 42}";0,6541856111259695;0,6501738432736026;0,6485691361326558;0,6424177587590265;0,6434875635196576;0,6766515110992244;0,6592671837389676;0,6501738432736026;0,6586409844836811;0,6581059390048154;0,6541673374411203;0,009393715723068897;1186
1901,8261099100114;492,55122511027446;1,1919217109680176;0,10834902495973651;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6721048408665419;0,6696977801551217;0,6648836587322814;0,6303824552019256;0,6453597218507623;0,6643487563519658;0,6531158063653383;0,6491040385129714;0,6407169609416801;0,6511503477795613;0,6540864366758149;0,012811855242308936;1187
726,9194469690323;150,6423787925884;0,4858010530471802;0,01940338997560794;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6536507087456539;0,6234287242578229;0,6477667825621825;0,6536507087456539;0,66140679326023;0,6477667825621825;0,6753142551484355;0,6464295266113934;0,6597110754414125;0,671482075976458;0,6540607433311425;0,013846391228044026;1188
19,463760471343996;4,367289584524627;0,029311776161193848;0,011002631095027469;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);constant;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6555228670767584;0,6477667825621825;0,6520460016047072;0,6528483551751806;0,636533832575555;0,6603369884995989;0,6643487563519658;0,6555228670767584;0,6474050294275013;0,6672017121455324;0,6539533192495741;0,008477699444433998;1189
1635,1515925168992;500,99388081217955;1,1233915090560913;0,08289900493165414;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6769189622893822;0,6702326825354373;0,6611393420700722;0,6410805028082375;0,6509761968440759;0,6544530623161273;0,6488365873228136;0,6531158063653383;0,6452648475120385;0,6375066880684859;0,6539524678132008;0,011797301987390176;1190
2665,9369560956957;599,805074385246;1,3837279081344604;0,09401231856282914;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6646162075421236;0,6533832575554961;0,6485691361326558;0,6603369884995989;0,6301150040117679;0,6688954265846483;0,6675581706338594;0,6584648301684942;0,6324237560192616;0,6548956661316212;0,6539258443279528;0,012826312551842547;1191
1196,78050801754;419,20976490616744;0,7174209356307983;0,028487125379752693;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6488365873228136;0,6266381385397165;0,6384059909066595;0,6713024872960685;0,6549879646964429;0,6793260230008024;0,6531158063653383;0,6499063920834448;0,6519529159978599;0,6645264847512039;0,653899879096035;0,014466172993892197;1192
3,2297482252120973;0,016327791656215677;0,06710832118988037;0,01414468164444334;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42)";;entropy;2;;;42;;;;;;;;;;;;;;0.75;100;1;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 2, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__random_state': 42}";0,6563252206472319;0,6501738432736026;0,6488365873228136;0,6421503075688687;0,6450922706606045;0,6766515110992244;0,6589997325488098;0,6501738432736026;0,6551631888710541;0,6551631888710541;0,6538729694136866;0,00906499980396196;1193
233,4656555891037;81,72129300892573;0,15527005195617677;0,011537271326109561;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6557903182669163;0,6606044396897566;0,6563252206472319;0,642952661139342;0,6480342337523401;0,6729071944370153;0,6493714897031292;0,6474993313720246;0,6436597110754414;0,660781166399144;0,6537925766482342;0,008851575718257489;1194
551,4250184297562;243,9334765707952;0,41703698635101316;0,029364433028404233;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6515110992243915;0,6450922706606045;0,6461620754212356;0,6421503075688687;0,6346616742444504;0,6499063920834448;0,6755817063385932;0,6606044396897566;0,6677367576243981;0,664258962011771;0,6537665684867515;0,012169254665957759;1195
876,8360116958618;472,56906784813566;0,5368999481201172;0,08651319516388695;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,682535437282696;0,6333244182936614;0,6515110992243915;0,6461620754212356;0,6416154051885531;0,646964428991709;0,6790585718106446;0,6544530623161273;0,6490101658640984;0,6530230069555912;0,6537657671348708;0,014716309296331378;1196
20,038339018821716;4,934864804425208;0,025146746635437013;0,005187230575775051;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);constant;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6555228670767584;0,6477667825621825;0,6520460016047072;0,6528483551751806;0,636533832575555;0,6619416956405456;0,6608718908799144;0,6555228670767584;0,6474050294275013;0,6666666666666666;0,653712598868577;0,008167668878142614;1197
1795,4636739253997;576,9696734009416;1,1390108108520507;0,05363456506421544;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6491040385129714;0,6584648301684942;0,6632789515913345;0,6520460016047072;0,6210216635464028;0,6630115004011767;0,6638138539716502;0,6678256218240172;0,6401819154628143;0,6581059390048154;0,6536854316088384;0,01340473135002965;1198
38,07290768623352;5,637382067449052;0,024100399017333983;0,003752248786480173;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);adaptive;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6557903182669163;0,6477667825621825;0,6520460016047072;0,6525809039850228;0,6370687349558706;0,6616742444503878;0,6638138539716502;0,6533832575554961;0,6474050294275013;0,664258962011771;0,6535788088791505;0,007981916850352124;1199
21,18419020175934;2,067465690565705;0,025542163848876955;0,011367646252838192;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);adaptive;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6507087456539181;0,6512436480342337;0,6472318801818668;0,6466969778015512;0,6405456004279219;0,6747793527681198;0,6595346349291255;0,6520460016047072;0,6551631888710541;0,6575708935259497;0,6535520923798448;0,00881431874752394;1200
2596,345695400238;828,0781580225215;1,3921831607818604;0,13496998523287132;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,633859320673977;0,6643487563519658;0,6384059909066595;0,6573950254078631;0,6488365873228136;0,6651511099224392;0,6683605242043327;0,6261032361594009;0,6562332798287854;0,6762974852862493;0,6534991316064487;0,015500199700182822;1201
703,9846178531647;203,66129952241732;0,4957018613815308;0,06916533566746323;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6531158063653383;0,6244985290184542;0,658732281358652;0,6499063920834448;0,66140679326023;0,636533832575555;0,6721048408665419;0,6504412944637603;0,6597110754414125;0,6685393258426966;0,6534990171276086;0,013609358839265033;1202
510,4108966588974;97,72845718948244;0,36193161010742186;0,018177063079444958;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6549879646964429;0,6651511099224392;0,6520460016047072;0,6480342337523401;0,6576624765980209;0,6565926718373897;0,6258357849692431;0,6507087456539181;0,668004280363831;0,6559657570893526;0,6534989026487684;0,010892180373277126;1203
31,886971473693848;0,2512123738482186;0,42049522399902345;0,007904205496266404;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42)";;entropy;2;;;42;;;;;;;;;;;;;;0.75;1000;1;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 2, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': 1, 'classifier__estimator__random_state': 42}";0,6539181599358117;0,6501738432736026;0,646964428991709;0,6418828563787109;0,6426852099491843;0,6766515110992244;0,6584648301684942;0,6491040385129714;0,6578384162653825;0,657035848047084;0,6534719142622174;0,009576806595404571;1204
38,46606342792511;5,827436296714631;0,029028773307800293;0,019750245717029186;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);adaptive;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6557903182669163;0,6461620754212356;0,6520460016047072;0,6528483551751806;0,6368012837657128;0,6606044396897566;0,6635464027814924;0,6539181599358117;0,6474050294275013;0,6653290529695024;0,6534451119037816;0,00817985167567859;1205
646,4020045042038;300,1793399786752;0,4005157709121704;0,05887635885481352;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6945707408397968;0,6501738432736026;0,6541856111259695;0,6461620754212356;0,6606044396897566;0,6453597218507623;0,6675581706338594;0,6212891147365606;0,6257356875334403;0,6688068485821295;0,6534446253687113;0,02027121296537186;1206
918,4761991024018;216,9049661367355;0,7043685674667358;0,05208156868016105;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6662209146830703;0,662744049211019;0,6408130516180797;0,6573950254078631;0,6517785504145494;0,6699652313452795;0,6552554158866007;0,6509761968440759;0,64633493846977;0,6329588014981273;0,6534442175378435;0,01086356351935767;1207
599,6000559568405;296,27914666763553;0,40062415599823;0,02578533170682861;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6606044396897566;0,636533832575555;0,642952661139342;0,6322546135330303;0,6485691361326558;0,6622091468307034;0,6715699384862263;0,6408130516180797;0,6669341894060995;0,671482075976458;0,6533923085387906;0,014114875924373447;1208
46,554315423965456;4,908498253394232;0,028010010719299316;0,00834056252578629;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);adaptive;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6557903182669163;0,6480342337523401;0,6520460016047072;0,6533832575554961;0,6362663813853972;0,6619416956405456;0,6619416956405456;0,6512436480342337;0,6476725521669342;0,6653290529695024;0,6533648837016618;0,008096691683357705;1209
29,26950271129608;5,736022504511389;0,029320955276489258;0,007560578211145007;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);constant;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6557903182669163;0,6477667825621825;0,6520460016047072;0,6525809039850228;0,6370687349558706;0,6616742444503878;0,6638138539716502;0,6507087456539181;0,6474050294275013;0,664258962011771;0,6533113576889927;0,008028659211006732;1210
47,78180766105652;6,301625466112328;0,025043463706970213;0,005471727079724277;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);adaptive;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6549879646964429;0,6480342337523401;0,6520460016047072;0,6528483551751806;0,6362663813853972;0,6622091468307034;0,6630115004011767;0,6515110992243915;0,64633493846977;0,6650615302300695;0,6532311151770179;0,008283614577494401;1211
1148,524872303009;369,30882195910135;0,7864855289459228;0,06562892862883539;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6603369884995989;0,642952661139342;0,6592671837389676;0,6547205135062851;0,6434875635196576;0,686279753944905;0,646964428991709;0,6440224658999733;0,6556982343499197;0,6385767790262172;0,6532306572616575;0,013140961257262575;1212
570,2640116930008;258,52940864292475;0,34418132305145266;0,024186017404422756;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6480342337523401;0,6549879646964429;0,6359989301952393;0,6301150040117679;0,6477667825621825;0,6386734420968173;0,6750468039582777;0,6710350361059106;0,6626538255751739;0,6674692348849652;0,6531781257839118;0,014790432686749337;1213
373,6367986679077;135,02913435680952;0,19404685497283936;0,05778039573158892;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6581973789783364;0,6426852099491843;0,6598020861192833;0,6525809039850228;0,652313452794865;0,6729071944370153;0,6306499063920834;0,6603369884995989;0,6474050294275013;0,6548956661316212;0,6531773816714512;0,01079147850964223;1214
294,5336642503738;110,18519834029809;0,17639236450195311;0,014970020821382284;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6715699384862263;0,6499063920834448;0,64562717304092;0,6531158063653383;0,6349291254346082;0,6691628777748061;0,6616742444503878;0,6341267718641348;0,6522204387372926;0,6591760299625468;0,6531508798199706;0,012110098311083927;1215
1751,768809914589;481,8903579793914;1,0835015773773193;0,09808273413719466;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6707675849157528;0,6584648301684942;0,6301150040117679;0,6531158063653383;0,6402781492377642;0,6255683337790853;0,6828028884728538;0,6549879646964429;0,6404494382022472;0,6744248261102194;0,6530974825959965;0,018144527012748744;1216
29,237203884124757;5,743743546549484;0,024291110038757325;0,0048192844176793825;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);constant;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6557903182669163;0,6461620754212356;0,6520460016047072;0,6528483551751806;0,6368012837657128;0,6606044396897566;0,6635464027814924;0,6504412944637603;0,6474050294275013;0,6653290529695024;0,6530974253565766;0,008226117065677541;1217
20,662066316604616;2,3861399979927915;0,027772164344787596;0,0120733784196899;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);adaptive;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6507087456539181;0,6507087456539181;0,6474993313720246;0,6466969778015512;0,6394757956672907;0,6747793527681198;0,6598020861192833;0,6477667825621825;0,6556982343499197;0,6573033707865169;0,6530439422734725;0,00914966964869152;1218
36,36630403995514;4,536041863657698;0,03298277854919433;0,013610852941062533;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(200, 100);constant;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6525809039850228;0,6480342337523401;0,6520460016047072;0,6533832575554961;0,6362663813853972;0,6619416956405456;0,6606044396897566;0,6509761968440759;0,6476725521669342;0,6653290529695024;0,6528834715593778;0,007924860434282343;1219
38,20657048225403;6,0606961572002325;0,027983784675598145;0,010536027473556147;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(200, 100);constant;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6512436480342337;0,6480342337523401;0,6520460016047072;0,6531158063653383;0,6362663813853972;0,6622091468307034;0,6630115004011767;0,6504412944637603;0,64633493846977;0,6650615302300695;0,6527764481537497;0,008304639815861494;1220
617,6225870847702;151,52346251834643;0,42021474838256834;0,033344611227186065;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6410805028082375;0,6330569671035036;0,6421503075688687;0,6458946242310778;0,6512436480342337;0,658732281358652;0,6814656325220647;0,6555228670767584;0,6682718031032637;0,6495452113429642;0,6526963845149625;0,01343444748069537;1221
591,1072686195373;182,6982505957116;0,4147951126098633;0,03189943355858955;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6696977801551217;0,6611393420700722;0,6330569671035036;0,6742444503878042;0,6033698849959882;0,6913613265579032;0,6504412944637603;0,6408130516180797;0,6487426431246656;0,6538255751738897;0,6526692315650788;0,02302528380860404;1222
556,8379251718521;138,9658863694078;0,3722312211990356;0,015183299516513626;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6440224658999733;0,6557903182669163;0,6301150040117679;0,6485691361326558;0,6408130516180797;0,6838726932334849;0,6528483551751806;0,6584648301684942;0,649812734082397;0,6618512573568753;0,6526159845945825;0,01360256812637662;1223
16,868372225761412;2,483845328353329;0,03125638961791992;0,019022634704326833;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);constant;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6507087456539181;0,6507087456539181;0,6474993313720246;0,6466969778015512;0,6394757956672907;0,6747793527681198;0,6598020861192833;0,6477667825621825;0,6556982343499197;0,6530230069555912;0,6526159058903799;0,009039856759811837;1224
17,26276776790619;2,292534567901117;0,025875186920166014;0,012102814294983121;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);constant;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6507087456539181;0,6512436480342337;0,6472318801818668;0,6466969778015512;0,6405456004279219;0,6747793527681198;0,6595346349291255;0,6480342337523401;0,6551631888710541;0,6522204387372926;0,6526158701157423;0,00884283903355405;1225
473,65865490436556;117,6950081410826;0,4162465810775757;0,018071990477812095;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,658732281358652;0,6509761968440759;0,6504412944637603;0,6408130516180797;0,6362663813853972;0,6488365873228136;0,6480342337523401;0,6598020861192833;0,6573033707865169;0,6712145532370252;0,6522420036887944;0,009512318783588963;1226
439,97225699424746;112,96129636373415;0,32327210903167725;0,020852022007419476;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,662744049211019;0,66140679326023;0,6544530623161273;0,6426852099491843;0,6309173575822412;0,6638138539716502;0,6432201123294998;0,6541856111259695;0,6447298020331729;0,6637239165329053;0,6521879768312;0,010735763159845289;1227
436,37480494976046;124,83198878697677;0,3973098278045654;0,02251562512975873;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6595346349291255;0,6667558170633859;0,6006953730944102;0,6485691361326558;0,6325220647231881;0,6557903182669163;0,6729071944370153;0,6694303289649639;0,6631888710540396;0,6522204387372926;0,6521614177402992;0,020440408321801034;1228
900,9769034862518;553,5401831830503;0,4953028917312622;0,01968707141163523;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,662744049211019;0,6394757956672907;0,6437550147098154;0,6327895159133459;0,6293126504412945;0,675849157528751;0,6945707408397968;0,6405456004279219;0,6514178705189941;0,6503477795612627;0,6520808174819492;0,019337232354678352;1229
2008,7162723064423;466,4704460687791;1,4667517423629761;0,14606301400974608;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6512436480342337;0,6624765980208612;0,6707675849157528;0,6552554158866007;0,6418828563787109;0,6672907194437016;0,6343942230542926;0,6520460016047072;0,6350989834135902;0,6503477795612627;0,6520803810313713;0,011864185297150484;1230
325,73725554943087;192,64071246635038;0,17084889411926268;0,013956956212334197;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6664883658732281;0,646964428991709;0,6384059909066595;0,6263706873495587;0,6549879646964429;0,6547205135062851;0,6576624765980209;0,6680930730141749;0,6449973247726056;0,6618512573568753;0,652054208306556;0,012370786493568145;1231
493,3879467725754;246,13656871490588;0,19201226234436036;0,010487529771602097;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6477667825621825;0,658732281358652;0,6557903182669163;0,6659534634929125;0,6370687349558706;0,6809307301417491;0,6747793527681198;0,6105910671302487;0,6144997324772605;0,6738897806313536;0,6520002243785266;0,023347955829882805;1232
844,795982003212;380,4554878243434;0,5141129493713379;0,06430637023868242;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6680930730141749;0,6512436480342337;0,6472318801818668;0,6464295266113934;0,6413479539983953;0,6598020861192833;0,6710350361059106;0,6491040385129714;0,6185125735687533;0,6666666666666666;0,651946648281365;0,014815101781864596;1233
257,30027866363525;65,59375552937476;0,14446640014648438;0,005339320320392592;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6536507087456539;0,6445573682802889;0,6533832575554961;0,6557903182669163;0,6416154051885531;0,6343942230542926;0,6571275742177053;0,6507087456539181;0,6551631888710541;0,6725521669341894;0,6518942956768068;0,009759332263004468;1234
320,7841158390045;84,55570445367452;0,17502095699310302;0,01089457650810875;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6654185611125969;0,6499063920834448;0,6448248194704467;0,6389408932869751;0,6528483551751806;0,6573950254078631;0,6421503075688687;0,6378710885263439;0,6527554842161584;0,6746923488496522;0,6516803275697531;0,011168816384811018;1235
1877,995042014122;403,1935472755417;1,1493009567260741;0,10735627235750303;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6718373896763841;0,6547205135062851;0,6402781492377642;0,64562717304092;0,6079165552286707;0,6873495587055363;0,6359989301952393;0,6397432468574485;0,6524879614767255;0,6803103263777421;0,6516269804302717;0,022312469199426144;1236
499,9213322401047;123,66945445594067;0,42032043933868407;0,020482844976389122;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6539181599358117;0,6555228670767584;0,6531158063653383;0,6715699384862263;0,6287777480609789;0,6635464027814924;0,6392083444771329;0,6413479539983953;0,6736222578919208;0,6350989834135902;0,6515728462487644;0,01449601385986568;1237
1897,485135412216;563,8039916208743;1,12262761592865;0,08333664831490255;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6656860123027547;0,66140679326023;0,6418828563787109;0,6488365873228136;0,6309173575822412;0,6713024872960685;0,6499063920834448;0,648301684942498;0,6420545746388443;0,6524879614767255;0,6512782707284331;0,011477036564886137;1238
527,4385514259338;103,72215735001684;0,40859413146972656;0,05737545492909639;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6378710885263439;0,6592671837389676;0,6319871623428724;0,6541856111259695;0,6322546135330303;0,6557903182669163;0,6667558170633859;0,6541856111259695;0,6543606206527555;0,6634563937934724;0,6510114420169684;0,011880806025967215;1239
617,1631049633027;151,71177124000192;0,5131702899932862;0,040079172068485054;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6737095480074886;0,6135330302219845;0,6234287242578229;0,6488365873228136;0,6346616742444504;0,67718641347954;0,6573950254078631;0,6504412944637603;0,6626538255751739;0,6672017121455324;0,650904783512643;0,02019021322810159;1240
484,50787777900695;159,1987310283224;0,3618261098861694;0,02442461424449937;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6370687349558706;0,6525809039850228;0,6477667825621825;0,6298475528216101;0,6394757956672907;0,6667558170633859;0,6509761968440759;0,674511901577962;0,6439272338148743;0,6647940074906367;0,6507704926782912;0,013520703336244638;1241
357,77883114814756;97,08850555709006;0,18064649105072023;0,010646476351618014;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6528483551751806;0,6477667825621825;0,6450922706606045;0,6461620754212356;0,6397432468574485;0,6568601230275475;0,6713024872960685;0,6608718908799144;0,6326912787586945;0,6543606206527555;0,6507699131291632;0,010434803736418466;1242
479,819943857193;199,4155463391381;0,34013028144836427;0,029281163812925594;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6461620754212356;0,6474993313720246;0,6512436480342337;0,6499063920834448;0,6405456004279219;0,6504412944637603;0,6255683337790853;0,6739769991976464;0,6647940074906367;0,6559657570893526;0,6506103439359341;0,012388096571069974;1243
1052,6745709896088;293,29360440442866;0,7315434694290162;0,04893874101325564;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6520460016047072;0,6461620754212356;0,6622091468307034;0,6515110992243915;0,6410805028082375;0,6651511099224392;0,6442899170901311;0,6549879646964429;0,6562332798287854;0,631888710540396;0,6505559807967469;0,009490217660173064;1244
2621,745898079872;788,6951215771401;1,3486610412597657;0,10252595525625907;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6480342337523401;0,6480342337523401;0,6437550147098154;0,6408130516180797;0,6600695373094411;0,6589997325488098;0,6539181599358117;0,649638940893287;0,6524879614767255;0,6482075976457999;0,6503958463642451;0,005803767391386328;1245
794,1941717147827;344,872273501633;0,4969233274459839;0,031209430301772683;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6619416956405456;0,6520460016047072;0,6491040385129714;0,6694303289649639;0,6445573682802889;0,6525809039850228;0,6258357849692431;0,6659534634929125;0,6342964151952916;0,6482075976457999;0,6503953598291746;0,012837789634015152;1246
719,7780171871185;324,06705523824036;0,3874495506286621;0,017349385345655062;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6897566194169564;0,6608718908799144;0,6539181599358117;0,6162075421235624;0,6271730409200321;0,6648836587322814;0,6648836587322814;0,6226263706873496;0,6342964151952916;0,6690743713215623;0,6503691727945043;0,02275647721857522;1247
1018,7613536119461;356,790132468538;0,7143345355987549;0,04074436172298895;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6416154051885531;0,6212891147365606;0,6450922706606045;0,6680930730141749;0,6579299277881786;0,6648836587322814;0,6549879646964429;0,6359989301952393;0,6532905296950241;0,6602461209202782;0,6503426995627337;0,013660213798791208;1248
775,2331697940826;477,5449984404504;0,4830794334411621;0,03307884466287609;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6493714897031292;0,6368012837657128;0,6432201123294998;0,6450922706606045;0,6170098956940359;0,674511901577962;0,6959079967905857;0,6413479539983953;0,649812734082397;0,6503477795612627;0,6503423418163585;0,02028600559474222;1249
540,0750317811966;216,72581613266135;0,3882061719894409;0,02540109088099897;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6533832575554961;0,6501738432736026;0,6464295266113934;0,6525809039850228;0,6381385397165017;0,6670232682535437;0,6333244182936614;0,6501738432736026;0,6768325307651151;0,6350989834135902;0,6503159115141528;0,012963426049114046;1250
2523,343048286438;688,8966308639807;1,3762082576751709;0,11609608828792;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6472318801818668;0,6333244182936614;0,6413479539983953;0,6410805028082375;0,6499063920834448;0,6472318801818668;0,6552554158866007;0,6739769991976464;0,6610486891385767;0,6508828250401284;0,6501286956810425;0,010830638324327463;1251
368,6781462430954;115,68724888654239;0,18488068580627443;0,017571446780368934;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6531158063653383;0,646964428991709;0,6525809039850228;0,6442899170901311;0,6581973789783364;0,6782562182401711;0,6279753944905054;0,6504412944637603;0,6332263242375602;0,6554307116104869;0,6500478378453021;0,013114510572105635;1252
276,9700263500214;70,84615333532506;0,16608109474182128;0,007546054019153473;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6565926718373897;0,6440224658999733;0,6418828563787109;0,624765980208612;0,6408130516180797;0,6670232682535437;0,658732281358652;0,6552554158866007;0,6492776886035313;0,6618512573568753;0,6500216937401969;0,011835840300772862;1253
2718,475326156616;1312,5407923388314;1,4395490884780884;0,11588257957934649;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6606044396897566;0,6608718908799144;0,64562717304092;0,6140679326023001;0,6178122492645092;0,6622091468307034;0,6699652313452795;0,6287777480609789;0,6674692348849652;0,6717495987158909;0,6499154645315219;0,0208641893890393;1254
630,999915099144;168,6272463172967;0,385779881477356;0,02707831357727425;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6394757956672907;0,6172773468841937;0,6533832575554961;0,6458946242310778;0,6295801016314523;0,6811981813319069;0,6584648301684942;0,6557903182669163;0,6559657570893526;0,6621187800963082;0,6499148992922488;0,016993216341370212;1255
621,5433647871017;251,43503063902247;0,4051457166671753;0,034099493403106106;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6440224658999733;0,6333244182936614;0,6517785504145494;0,635196576624766;0,6263706873495587;0,6517785504145494;0,6678256218240172;0,6488365873228136;0,6650615302300695;0,6736222578919208;0,6497817246265879;0,014836134348752436;1256
265,92223773002627;110,46911023070048;0,1813136100769043;0,012171330233799196;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,662744049211019;0,6480342337523401;0,6309173575822412;0,6392083444771329;0,6293126504412945;0,6710350361059106;0,6651511099224392;0,636533832575555;0,6490101658640984;0,6637239165329053;0,6495670696464936;0,014545330660512749;1257
288,06123557090757;144,4470676995818;0,20261669158935547;0,01401432633740873;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6664883658732281;0,6448248194704467;0,6458946242310778;0,6402781492377642;0,6376036373361862;0,6603369884995989;0,6536507087456539;0,6445573682802889;0,6490101658640984;0,6527554842161584;0,6495400311754501;0,00848496906141851;1258
311,8465075731277;88,24918441164259;0,17223143577575684;0,03578339622751286;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6466969778015512;0,6560577694570741;0,6507087456539181;0,6485691361326558;0,6458946242310778;0,6565926718373897;0,6539181599358117;0,6250334313987698;0,6519529159978599;0,6562332798287854;0,6491657712274894;0,008859251984672394;1259
379,37095096111295;85,87342597931912;0,3267699718475342;0,05204455550030064;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6333244182936614;0,6499063920834448;0,6370687349558706;0,6448248194704467;0,646964428991709;0,673174645627173;0,6584648301684942;0,6394757956672907;0,64633493846977;0,6591760299625468;0,6488715033690406;0,011338748476725126;1260
475,2831494808197;239,65336431343366;0,3523411273956299;0,029875744921492527;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6437550147098154;0,6536507087456539;0,6480342337523401;0,6464295266113934;0,646964428991709;0,6493714897031292;0,6269055897298743;0,6820005349023803;0,6332263242375602;0,6583734617442483;0,6488711313128104;0,014052271645962008;1261
348,38576691150666;79,61830934773371;0,20082519054412842;0,013498129061007048;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6464295266113934;0,6488365873228136;0,646964428991709;0,6402781492377642;0,6381385397165017;0,6654185611125969;0,6528483551751806;0,6426852099491843;0,6532905296950241;0,653558052434457;0,6488447940246624;0,007536701829996702;1262
28,722836112976076;3,950874420877882;0,018416285514831543;0,0038780512233919017;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);adaptive;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6472318801818668;0,6466969778015512;0,6474993313720246;0,6466969778015512;0,6413479539983953;0,658732281358652;0,6595346349291255;0,6357314790050815;0,6519529159978599;0,6519529159978599;0,6487377348443969;0,006877797344462403;1263
485,3371294736862;127,99614192755692;0,410221791267395;0,037866643127501314;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6630115004011767;0,6464295266113934;0,6418828563787109;0,6287777480609789;0,6461620754212356;0,658732281358652;0,6464295266113934;0,6437550147098154;0,6476725521669342;0,664258962011771;0,6487112043732062;0,010164521703086422;1264
621,111363196373;224,7767852157945;0,532047700881958;0,07624017654945885;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6734420968173308;0,620754212356245;0,6242310778282963;0,6362663813853972;0,6330569671035036;0,6763840599090666;0,64562717304092;0,6491040385129714;0,660781166399144;0,666131621187801;0,6485778794540675;0,019018005822004032;1265
641,0488308668137;337,8597563356262;0,4041795253753662;0,05203733122700012;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6675581706338594;0,6442899170901311;0,6445573682802889;0,6319871623428724;0,6306499063920834;0,6763840599090666;0,622091468307034;0,6763840599090666;0,6185125735687533;0,6725521669341894;0,6484966853367344;0,021720928084981578;1266
24,819399762153626;3,679534055896254;0,02496955394744873;0,015153863175853283;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);constant;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6472318801818668;0,6466969778015512;0,6474993313720246;0,6466969778015512;0,6413479539983953;0,658732281358652;0,6595346349291255;0,633859320673977;0,6506153023006955;0,6519529159978599;0,6484167576415698;0,007193073657622238;1267
28,736625456809996;4,205937725485512;0,024148941040039062;0,01164068194555219;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);adaptive;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6472318801818668;0,6504412944637603;0,646964428991709;0,6466969778015512;0,6392083444771329;0,6581973789783364;0,6592671837389676;0,633859320673977;0,6503477795612627;0,6519529159978599;0,6484167504866424;0,0073274073929293655;1268
372,4606059074402;128,17060579028373;0,18296384811401367;0,04555802898260537;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6397432468574485;0,6507087456539181;0,6362663813853972;0,6362663813853972;0,6426852099491843;0,6515110992243915;0,664081305161808;0,6357314790050815;0,6669341894060995;0,6597110754414125;0,6483639113470139;0,011379346127936934;1269
444,3813291549683;178,90378293248477;0,19493613243103028;0,011590714128126895;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6715699384862263;0,6253008825889276;0,6507087456539181;0,6349291254346082;0,646964428991709;0,6638138539716502;0,6603369884995989;0,6164749933137202;0,6527554842161584;0,6602461209202782;0,6483100562076796;0,016786230881803324;1270
685,7412137269973;304,71041417655437;0,4797736644744873;0,023709401680042954;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6541856111259695;0,6581973789783364;0,6202193099759294;0,6362663813853972;0,6445573682802889;0,6437550147098154;0,6630115004011767;0,6204867611660871;0,6693418940609952;0,6725521669341894;0,6482573387018186;0,017667798524248563;1271
2037,9411234140396;669,3229040653067;1,5193015336990356;0,17207060932280815;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6501738432736026;0,6362663813853972;0,6448248194704467;0,6464295266113934;0,6515110992243915;0,6873495587055363;0,6662209146830703;0,6533832575554961;0,6238630283574104;0,6219903691813804;0,6482012798448125;0,018262906395062107;1272
24,93648808002472;4,009039768191416;0,024614691734313965;0,009348617474297341;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);constant;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6472318801818668;0,6504412944637603;0,6442899170901311;0,6466969778015512;0,6392083444771329;0,6581973789783364;0,6595346349291255;0,633859320673977;0,6503477795612627;0,6519529159978599;0,6481760444155004;0,007464091142020374;1273
549,135527062416;150,12221205995792;0,3879750490188599;0,021704143835559776;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6589997325488098;0,6509761968440759;0,635196576624766;0,6734420968173308;0,6405456004279219;0,6346616742444504;0,6266381385397165;0,6541856111259695;0,64633493846977;0,6605136436597111;0,6481494209302523;0,013521428041361168;1274
1628,4867396354675;707,7407313864094;1,1084430694580079;0,08796472848267839;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6303824552019256;0,6378710885263439;0,675849157528751;0,6325220647231881;0,6493714897031292;0,6448248194704467;0,6541856111259695;0,6327895159133459;0,6575708935259497;0,6658640984483681;0,6481231194167419;0,014561162682804808;1275
859,2493104934692;368,42011770932737;0,5378796100616455;0,03693474165258489;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6670232682535437;0,6175447980743515;0,6421503075688687;0,6488365873228136;0,6258357849692431;0,690291521797272;0,6434875635196576;0,6381385397165017;0,6476725521669342;0,6581059390048154;0,6479086862394001;0,019554826535309447;1276
572,5818999052048;184,17886199795606;0,3868741750717163;0,018350609291159947;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6349291254346082;0,6330569671035036;0,6579299277881786;0,6410805028082375;0,6293126504412945;0,67718641347954;0,6622091468307034;0,6474993313720246;0,664258962011771;0,6316211878009631;0,6479084215070825;0,015736501065747012;1277
2722,3133932828905;907,0348056043397;1,0976269483566283;0,05582942063096481;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6565926718373897;0,6480342337523401;0,6541856111259695;0,6544530623161273;0,642952661139342;0,6408130516180797;0,6410805028082375;0,6488365873228136;0,6538255751738897;0,6383092562867844;0,6479083213380974;0,006381300384075277;1278
2114,9751370191575;687,5183126520101;1,4090919256210328;0,0607184682966157;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6533832575554961;0,6188820540251404;0,64562717304092;0,6426852099491843;0,6261032361594009;0,6648836587322814;0,6474993313720246;0,673174645627173;0,6508828250401284;0,6554307116104869;0,6478552103112236;0,015403141581781233;1279
282,2250712633133;113,15644509255915;0,1960287570953369;0,0074112622790132865;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6501738432736026;0,64562717304092;0,6389408932869751;0,6466969778015512;0,6373361861460284;0,6603369884995989;0,6528483551751806;0,6477667825621825;0,6487426431246656;0,6484751203852327;0,6476944963295939;0,006192287673692989;1280
2344,113789820671;689,4551326656592;1,4711179971694945;0,1366104779302443;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6552554158866007;0,6477667825621825;0,6397432468574485;0,6397432468574485;0,6474993313720246;0,6702326825354373;0,6509761968440759;0,6378710885263439;0,6348314606741573;0,651685393258427;0,6475604845374147;0,009899998207547032;1281
421,89279725551603;152,17859280188193;0,33998355865478513;0,02735668425090463;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6378710885263439;0,6515110992243915;0,6517785504145494;0,6424177587590265;0,6488365873228136;0,6474993313720246;0,6571275742177053;0,6335918694838192;0,6415195291599786;0,6623863028357411;0,6474539691316394;0,008355834033207846;1282
427,01689341068266;183,56523585985812;0,19261796474456788;0,01019580410869232;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6595346349291255;0,6488365873228136;0,6191495052152982;0,6327895159133459;0,6517785504145494;0,664081305161808;0,6520460016047072;0,619416956405456;0,6599785981808454;0,666131621187801;0,6473743276335749;0,016649419593486498;1283
0,45123236179351806;0,05191650201833998;0,03159317970275879;0,008585652469298525;DecisionTreeClassifier();balanced;gini;;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6413479539983953;0,6493714897031292;0,6405456004279219;0,6440224658999733;0,6453597218507623;0,6643487563519658;0,6493714897031292;0,6512436480342337;0,6361690743713215;0,6511503477795613;0,6472930548120394;0,007409942425033345;1284
398,26674208641055;112,87324543304642;0,1816356897354126;0,01374946534973386;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6397432468574485;0,6440224658999733;0,6442899170901311;0,6448248194704467;0,6341267718641348;0,6616742444503878;0,6555228670767584;0,649638940893287;0,6522204387372926;0,6455323702514714;0,6471596082591332;0,007506071076149924;1285
265,2318741083145;101,04309881038853;0,15638601779937744;0,012153708161031462;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6696977801551217;0,636533832575555;0,6298475528216101;0,6381385397165017;0,642952661139342;0,6539181599358117;0,6584648301684942;0,649638940893287;0,6508828250401284;0,6415195291599786;0,647159465160583;0,011157811771210075;1286
0,5873682737350464;0,07345482620354686;0,02957279682159424;0,010921794922580814;DecisionTreeClassifier();balanced;entropy;;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6533832575554961;0,6474993313720246;0,6464295266113934;0,6458946242310778;0,6368012837657128;0,6630115004011767;0,6557903182669163;0,6368012837657128;0,6452648475120385;0,6407169609416801;0,6471592934423229;0,007914806758596755;1287
1559,9327430725098;806,7032022426599;0,762934947013855;0,06038806993225072;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6413479539983953;0,648301684942498;0,6611393420700722;0,6359989301952393;0,6263706873495587;0,6581973789783364;0,6624765980208612;0,6466969778015512;0,6388443017656501;0,6519529159978599;0,6471326771120023;0,01111765282015444;1288
462,2685685634613;145,12092256396164;0,3500349998474121;0,030458642192823026;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6576624765980209;0,6333244182936614;0,66140679326023;0,6547205135062851;0,6343942230542926;0,652313452794865;0,6480342337523401;0,6474993313720246;0,6364365971107544;0,6455323702514714;0,6471324409993946;0,009326807271685542;1289
359,20234951972964;82,74140807726897;0,3116750717163086;0,01218670956077148;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6416154051885531;0,6402781492377642;0,6373361861460284;0,6408130516180797;0,6274404921101899;0,6445573682802889;0,6493714897031292;0,6560577694570741;0,6693418940609952;0,664258962011771;0,6471070767813873;0,012161291307186874;1290
597,1213064670562;223,78576941998952;0,4950901746749878;0,04517155692989616;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6659534634929125;0,6244985290184542;0,6568601230275475;0,622091468307034;0,6445573682802889;0,6849424979941161;0,6405456004279219;0,636533832575555;0,6107544141252006;0,6813804173354735;0,6468117714584504;0,023823114367779095;1291
398,3826932430267;148,26022192722175;0,35998642444610596;0,15458324398466936;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6400106980476064;0,6453597218507623;0,6290451992511367;0,6410805028082375;0,6405456004279219;0,6691628777748061;0,6672907194437016;0,6287777480609789;0,6476725521669342;0,658908507223114;0,6467854127055199;0,013518049974471749;1292
0,4171052694320679;0,02383726772588051;0,026309919357299805;0,003594474223311637;DecisionTreeClassifier();;gini;;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6402781492377642;0,6515110992243915;0,6418828563787109;0,6421503075688687;0,6416154051885531;0,6603369884995989;0,648301684942498;0,649638940893287;0,6385767790262172;0,6527554842161584;0,6467047695176048;0,006587640893426867;1293
0,6108573198318481;0,1844489864293528;0,028207945823669433;0,006616722306834888;DecisionTreeClassifier();balanced;entropy;;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6520460016047072;0,6397432468574485;0,6493714897031292;0,6354640278149237;0,6450922706606045;0,6549879646964429;0,6536507087456539;0,6421503075688687;0,6471375066880685;0,6471375066880685;0,6466781031027915;0,005924738904017968;1294
814,2180429935455;170,9663261289776;0,7081565856933594;0,0676984015717691;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6507087456539181;0,6539181599358117;0,6408130516180797;0,6416154051885531;0,6394757956672907;0,6504412944637603;0,6541856111259695;0,6325220647231881;0,6471375066880685;0,6554307116104869;0,6466248346675126;0,007268259863463019;1295
1763,2520029067994;417,26947891861494;1,1756163358688354;0,10408065773838535;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6595346349291255;0,6603369884995989;0,6370687349558706;0,6408130516180797;0,6303824552019256;0,6386734420968173;0,6571275742177053;0,6533832575554961;0,6385767790262172;0,6495452113429642;0,64654421294438;0,010178605615903334;1296
703,0481766939163;246,8915680834713;0,5127408266067505;0,03737345698239442;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6646162075421236;0,6293126504412945;0,6616742444503878;0,649638940893287;0,6368012837657128;0,6624765980208612;0,6450922706606045;0,6373361861460284;0,6562332798287854;0,6214553237025147;0,64646369854516;0,014215997824302681;1297
1868,8718220710755;962,3708649971541;1,1817034244537354;0,09868648938755376;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6196844075956138;0,6434875635196576;0,6715699384862263;0,6269055897298743;0,6485691361326558;0,6397432468574485;0,6520460016047072;0,6376036373361862;0,6650615302300695;0,6591760299625468;0,6463847081454986;0,015509710367604634;1298
338,3312000751495;98,86818213903469;0,20138814449310302;0,01534542699165836;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6424177587590265;0,6509761968440759;0,6346616742444504;0,6378710885263439;0,6389408932869751;0,664081305161808;0,6528483551751806;0,6424177587590265;0,6482075976457999;0,6492776886035313;0,6461700317006218;0,008270770502405243;1299
720,2490401744842;271,6889145672347;0,4973192930221558;0,03813018307354088;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6654185611125969;0,6662209146830703;0,608986359989302;0,608986359989302;0,6231612730676651;0,6876170098956941;0,6630115004011767;0,6341267718641348;0,6610486891385767;0,6428571428571429;0,6461434582998662;0,02538910680936271;1300
333,76440222263335;117,51801489580993;0,1870805263519287;0,01635834487588193;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6589997325488098;0,618079700454667;0,6488365873228136;0,6501738432736026;0,6287777480609789;0,6549879646964429;0,6515110992243915;0,6501738432736026;0,6554307116104869;0,64446227929374;0,6461433509759537;0,012207716548769993;1301
337,54537427425385;112,05038718409688;0,179118013381958;0,01293494569555241;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6573950254078631;0,6212891147365606;0,6327895159133459;0,6531158063653383;0,6635464027814924;0,6464295266113934;0,6528483551751806;0,6437550147098154;0,6380417335473515;0,6522204387372926;0,6461430933985634;0,011947593153555687;1302
1271,3680775403977;391,3675853191569;0,7497275352478028;0,04806281354726522;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6501738432736026;0,6635464027814924;0,6461620754212356;0,6306499063920834;0,6421503075688687;0,6448248194704467;0,6565926718373897;0,64562717304092;0,6401819154628143;0,6407169609416801;0,6460626076190533;0,008667266872424459;1303
397,2299061536789;188,09238593131656;0,19740705490112304;0,012810360259729927;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6507087456539181;0,6520460016047072;0,6515110992243915;0,6659534634929125;0,6186146028349826;0,6809307301417491;0,6723722920566997;0,607649104038513;0,6163723916532905;0,6439272338148743;0,6460085664516038;0,023464302756994255;1304
0,5442169666290283;0,009596919218785976;0,03056623935699463;0,004668737386071967;DecisionTreeClassifier();;entropy;;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,64562717304092;0,6442899170901311;0,6397432468574485;0,6499063920834448;0,633859320673977;0,66140679326023;0,6579299277881786;0,6402781492377642;0,6479400749063671;0,6388443017656501;0,6459825296704111;0,008199165960467871;1305
439,1251477241516;149,86528597426417;0,3379002332687378;0,0271456897432398;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6675581706338594;0,6386734420968173;0,6576624765980209;0,6349291254346082;0,6341267718641348;0,642952661139342;0,6480342337523401;0,6536507087456539;0,6423220973782772;0,6396468699839486;0,6459556557627002;0,010216709999697472;1306
0,523583960533142;0,03925359760134691;0,027900552749633788;0,009043219857752135;DecisionTreeClassifier();;entropy;;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6493714897031292;0,6343942230542926;0,6472318801818668;0,6319871623428724;0,6426852099491843;0,6565926718373897;0,6499063920834448;0,6477667825621825;0,649812734082397;0,6468699839486356;0,6456618529745395;0,0070686807675282145;1307
610,8608937978745;301,89844417132025;0,39808566570281984;0,03305674190828131;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,658732281358652;0,6242310778282963;0,6335918694838192;0,636533832575555;0,6239636266381385;0,6552554158866007;0,6504412944637603;0,66140679326023;0,6249331193151418;0,6864633493846977;0,6455552660194892;0,019460329033873805;1308
1840,7941650390626;847,4869794147404;1,1354768753051758;0,0749544330451919;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6670232682535437;0,6675581706338594;0,6354640278149237;0,6376036373361862;0,6116608718908799;0,6761166087189088;0,6359989301952393;0,6095212623696176;0,6401819154628143;0,6736222578919208;0,6454750950567895;0,02323623822418332;1309
1275,9930536031723;544,5051879142354;0,7672462940216065;0,024546102605548663;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6450922706606045;0,6541856111259695;0,6212891147365606;0,6450922706606045;0,6293126504412945;0,6691628777748061;0,6378710885263439;0,6434875635196576;0,6482075976457999;0,6548956661316212;0,6448596711223262;0,01279711283779837;1310
785,6080651521683;139,21200202780622;0,7498669862747193;0,05929315955192646;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6440224658999733;0,6442899170901311;0,6402781492377642;0,6434875635196576;0,6357314790050815;0,6539181599358117;0,6600695373094411;0,6290451992511367;0,6433921883360085;0,6540930979133226;0,6448327757498329;0,008707000962580213;1311
632,9535699367523;266,61115163622577;0,5374880075454712;0,07913778561321835;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6696977801551217;0,6552554158866007;0,6592671837389676;0,6162075421235624;0,6170098956940359;0,6737095480074886;0,6450922706606045;0,6335918694838192;0,608346709470305;0,6698769395398609;0,6448055154760366;0,023339875082851975;1312
732,7103813886642;282,4914378566068;0,5041678667068481;0,023610796234162304;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,662744049211019;0,6672907194437016;0,6004279219042524;0,5985557635731479;0,6359989301952393;0,6841401444236427;0,6779887670500133;0,6202193099759294;0,6562332798287854;0,6433921883360085;0,6446991073941739;0,028980411456545598;1313
3617,68197286129;1119,3768163520976;1,340643835067749;0,12087123563545615;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6421503075688687;0,6405456004279219;0,6381385397165017;0,6346616742444504;0,6335918694838192;0,6595346349291255;0,6533832575554961;0,6335918694838192;0,6583734617442483;0,6524879614767255;0,6446459176630978;0,009784752657842528;1314
303,62883479595183;92,26318487771329;0,19314866065979003;0,005690761960323664;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6458946242310778;0,6485691361326558;0,6392083444771329;0,6384059909066595;0,6325220647231881;0,6563252206472319;0,6536507087456539;0,6394757956672907;0,6348314606741573;0,6573033707865169;0,6446186716991564;0,008562665552623264;1315
348,0785835504532;103,55727692887105;0,18865344524383545;0,013689017157725799;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6670232682535437;0,6389408932869751;0,6520460016047072;0,6413479539983953;0,6389408932869751;0,6576624765980209;0,6392083444771329;0,6392083444771329;0,6243980738362761;0,64633493846977;0,6445111188288929;0,011281355002233021;1316
682,288212108612;253,25145759758516;0,48903369903564453;0,028301296809390433;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6811981813319069;0,6493714897031292;0,6170098956940359;0,6392083444771329;0,6450922706606045;0,6250334313987698;0,6453597218507623;0,6301150040117679;0,6712145532370252;0,6385767790262172;0,6442179671391352;0,01867917868327908;1317
12,872662901878357;4,086985378450879;0,03255131244659424;0,009286088467692006;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);constant;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6504412944637603;0,6544530623161273;0,6493714897031292;0,649638940893287;0,635196576624766;0,64562717304092;0,6397432468574485;0,6266381385397165;0,6476725521669342;0,6396468699839486;0,6438429344590038;0,008020599495098516;1318
13,011462259292603;4,181318439988595;0,04471056461334229;0,017937564410081135;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);constant;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6504412944637603;0,6541856111259695;0,6488365873228136;0,6491040385129714;0,6357314790050815;0,6453597218507623;0,6400106980476064;0,6266381385397165;0,6476725521669342;0,6396468699839486;0,6437626991019565;0,007836587548372787;1319
481,63379538059235;198,10107009965682;0,1924198627471924;0,008538469417430644;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6662209146830703;0,6055094945172506;0,6335918694838192;0,6699652313452795;0,6547205135062851;0,6303824552019256;0,6253008825889276;0,6603369884995989;0,6375066880684859;0,6538255751738897;0,6437360613068532;0,019526238740937795;1320
2787,28726747036;955,1942149780821;1,1369054794311524;0,06365079086370481;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6287777480609789;0,6322546135330303;0,6341267718641348;0,6560577694570741;0,6539181599358117;0,6394757956672907;0,648301684942498;0,6322546135330303;0,6602461209202782;0,651685393258427;0,6437098671172554;0,01099999253187116;1321
19,222998356819154;4,11082712504218;0,026464343070983887;0,010279659568565894;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);adaptive;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6515110992243915;0,6541856111259695;0,6472318801818668;0,6491040385129714;0,6357314790050815;0,6453597218507623;0,6400106980476064;0,6266381385397165;0,6476725521669342;0,6396468699839486;0,6437092088639249;0,007847403240025117;1322
19,367758440971375;4,233258055118241;0,030036067962646483;0,008786388535952807;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);adaptive;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6515110992243915;0,6544530623161273;0,6472318801818668;0,6491040385129714;0,635196576624766;0,64562717304092;0,6397432468574485;0,6266381385397165;0,6476725521669342;0,6396468699839486;0,6436824637449091;0,007958081461817765;1323
556,1834516525269;213,84482799920482;0,4339956521987915;0,055702819858208984;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6699652313452795;0,6389408932869751;0,646964428991709;0,664081305161808;0,6199518587857716;0,6343942230542926;0,6589997325488098;0,6282428456806632;0,6214553237025147;0,6527554842161584;0,6435751326773983;0,01684878097063766;1324
224,8243953704834;84,87343723431633;0,16302711963653566;0,01149995877914486;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6453597218507623;0,6266381385397165;0,6301150040117679;0,6317197111527146;0,6434875635196576;0,652313452794865;0,6630115004011767;0,6565926718373897;0,630016051364366;0,6562332798287854;0,6435487095301202;0,012567567897576045;1325
712,0156150102615;253,1838075909941;0,5202547550201416;0,039870936911742406;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6560577694570741;0,6592671837389676;0,628510296870821;0,6325220647231881;0,6314522599625568;0,6381385397165017;0,6472318801818668;0,6413479539983953;0,6273408239700374;0,6728196896736223;0,643468846229303;0,014369108930810198;1326
3003,44751496315;760,5722295206324;1,126675057411194;0,08891043884574727;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6517785504145494;0,6541856111259695;0,6250334313987698;0,6442899170901311;0,6349291254346082;0,6584648301684942;0,6421503075688687;0,6250334313987698;0,6428571428571429;0,6559657570893526;0,6434688104546656;0,011490845498067306;1327
3155,5303382396696;636,9686692388524;1,3234999418258666;0,08192348268808626;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6376036373361862;0,6472318801818668;0,6504412944637603;0,6418828563787109;0,6322546135330303;0,642952661139342;0,6619416956405456;0,6298475528216101;0,6369716425896201;0,651685393258427;0,64328132273431;0,009283729903245457;1328
547,5502133607864;146,94036849961822;0,39215922355651855;0,021344950285698633;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,652313452794865;0,64562717304092;0,6266381385397165;0,6204867611660871;0,6335918694838192;0,6418828563787109;0,6509761968440759;0,6485691361326558;0,6492776886035313;0,6629213483146067;0,6432284621298988;0,012199763689735209;1329
795,4242228746414;333,29451262659904;0,5396953105926514;0,04724969501222247;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6571275742177053;0,6520460016047072;0,6047071409467772;0,6424177587590265;0,642952661139342;0,6258357849692431;0,6384059909066595;0,6493714897031292;0,6575708935259497;0,6575708935259497;0,642800618929849;0,015901692441360304;1330
660,653813290596;363,3297804006865;0,5175790071487427;0,04690912553499227;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6384059909066595;0,6322546135330303;0,6255683337790853;0,6672907194437016;0,6357314790050815;0,6638138539716502;0,5993581171436213;0,6592671837389676;0,6487426431246656;0,6562332798287854;0,642666621447525;0,019730026967416686;1331
36,44271547794342;9,713013510283055;0,0485140323638916;0,016861037056270546;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);adaptive;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6386734420968173;0,6509761968440759;0,6322546135330303;0,6394757956672907;0,6293126504412945;0,6491040385129714;0,648301684942498;0,6373361861460284;0,6573033707865169;0,6436597110754414;0,6426397690045965;0,008359040683352357;1332
290,0548737287521;131,49208669906702;0,15660471916198732;0,008564922581388537;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6442899170901311;0,6648836587322814;0,6359989301952393;0,6357314790050815;0,6269055897298743;0,6464295266113934;0,6301150040117679;0,6491040385129714;0,6452648475120385;0,6474050294275013;0,642612802082828;0,010389963812354519;1333
3552,898293733597;1162,4232243497606;1,3594489097595215;0,10956902550532924;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6499063920834448;0,6509761968440759;0,6416154051885531;0,6413479539983953;0,6269055897298743;0,6525809039850228;0,6402781492377642;0,6146028349826157;0,6401819154628143;0,6663991439272338;0,6424794485439793;0,013540115734369794;1334
3385,7373688697817;858,4524267138055;1,417544388771057;0,12079787761752046;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6359989301952393;0,6376036373361862;0,6402781492377642;0,628510296870821;0,6461620754212356;0,6327895159133459;0,6595346349291255;0,6440224658999733;0,6441947565543071;0,6495452113429642;0,6418639673700961;0,008459015930648706;1335
0,48398401737213137;0,04064794067641583;0,0339390754699707;0,012450218984515466;DecisionTreeClassifier();balanced;gini;;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6303824552019256;0,646964428991709;0,6426852099491843;0,6472318801818668;0,6437550147098154;0,6547205135062851;0,6402781492377642;0,6335918694838192;0,6337613697164259;0,6452648475120385;0,6418635738490834;0,0071018032348158;1336
43,65180788040161;3,6725278498591467;0,02310326099395752;0,005129968871084859;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6343942230542926;0,6453597218507623;0,6421503075688687;0,6349291254346082;0,6346616742444504;0,6509761968440759;0,6549879646964429;0,6357314790050815;0,6383092562867844;0,6439272338148743;0,6415427182800242;0,006905106111166176;1337
44,15552878379822;6,2315767886391145;0,021681690216064455;0,004454016257885547;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);adaptive;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6346616742444504;0,64562717304092;0,6491040385129714;0,6343942230542926;0,6250334313987698;0,6512436480342337;0,6547205135062851;0,6362663813853972;0,6396468699839486;0,6439272338148743;0,6414625186976144;0,008658409381709876;1338
273,7776954650879;108,40452478141562;0,15524768829345703;0,01609337533763846;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;2;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6394757956672907;0,636533832575555;0,6474993313720246;0,6322546135330303;0,6303824552019256;0,6739769991976464;0,6333244182936614;0,6266381385397165;0,6447298020331729;0,6476725521669342;0,6412487938580959;0,01290039025609562;1339
0,46148364543914794;0,01970723416583921;0,026656842231750487;0,003682639583086009;DecisionTreeClassifier();;gini;;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6271730409200321;0,6531158063653383;0,6426852099491843;0,6437550147098154;0,6354640278149237;0,6579299277881786;0,6343942230542926;0,6389408932869751;0,6348314606741573;0,6415195291599786;0,6409809133722877;0,008671046057619071;1340
520,6368878126144;141,51553067480373;0,3908599138259888;0,021917255697382697;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6520460016047072;0,6354640278149237;0,6670232682535437;0,6250334313987698;0,6335918694838192;0,6688954265846483;0,6378710885263439;0,6231612730676651;0,6241305510968432;0,6423220973782772;0,640953903520954;0,015912741528597577;1341
3424,2023005008696;801,2540552752342;1,3614619970321655;0,0782899833060566;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6499063920834448;0,6539181599358117;0,6306499063920834;0,6424177587590265;0,616742444503878;0,6501738432736026;0,6491040385129714;0,6164749933137202;0,6514178705189941;0,6484751203852327;0,6409280527678767;0,013636108802670532;1342
765,4613917350769;425,6342094250576;0,5324904918670654;0,04694953545417081;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6515110992243915;0,6234287242578229;0,6464295266113934;0,6611393420700722;0,597218507622359;0,6664883658732281;0,6565926718373897;0,6595346349291255;0,6072766185125735;0,6393793472445158;0,6408998838182871;0,02268752634122823;1343
1106,5625939369202;336,9294331127667;0,7394830465316773;0,059708200198189884;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6491040385129714;0,6424177587590265;0,6132655790318267;0,6458946242310778;0,6343942230542926;0,6477667825621825;0,6445573682802889;0,6442899170901311;0,635366506153023;0,649812734082397;0,6406869531757218;0,010402718604060801;1344
1884,8433035850526;610,7675089805977;1,1090867042541503;0,0856253584682089;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6373361861460284;0,6386734420968173;0,6528483551751806;0,6290451992511367;0,6242310778282963;0,6499063920834448;0,6416154051885531;0,6515110992243915;0,635366506153023;0,6428571428571429;0,6403390806004015;0,00896848244754697;1345
2410,3889095783234;1363,6664115458136;1,1721566438674926;0,10348263155647319;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6654185611125969;0,6477667825621825;0,6405456004279219;0,6341267718641348;0,6151377373629313;0,6491040385129714;0,6343942230542926;0,6301150040117679;0,6436597110754414;0,6399143927233815;0,6400182822707622;0,012588763330231548;1346
34,583453345298764;5,162155196863486;0,019031214714050292;0,001293156852029018;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);constant;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6343942230542926;0,6453597218507623;0,6424177587590265;0,6341267718641348;0,6354640278149237;0,6458946242310778;0,649638940893287;0,6282428456806632;0,6359015516318887;0,6439272338148743;0,6395367699594932;0,006457769282935027;1347
2352,262256002426;910,6747141449874;1,1674380779266358;0,05444339318803376;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6333244182936614;0,6384059909066595;0,6442899170901311;0,6183471516448248;0,6421503075688687;0,6303824552019256;0,6611393420700722;0,6218240171168762;0,6407169609416801;0,6639914392723382;0,6394572000107037;0,014077888645721306;1348
2560,671059823036;727,8472136099512;1,1272922992706298;0,08904680305500046;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6392083444771329;0,6269055897298743;0,6317197111527146;0,624765980208612;0,6333244182936614;0,6638138539716502;0,6341267718641348;0,64562717304092;0,6377742108079186;0,6573033707865169;0,6394569424333135;0,012049744484234988;1349
33,67940797805786;4,780263236060696;0,036609435081481935;0,011510658004033667;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);adaptive;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6378710885263439;0,6491040385129714;0,6333244182936614;0,6376036373361862;0,6282428456806632;0,6493714897031292;0,648301684942498;0,6376036373361862;0,6276083467094703;0,6436597110754414;0,6392690898116552;0,007746237859003354;1350
877,8668555736542;266,9958090397759;0,3144011735916138;0,019000433699948374;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6319871623428724;0,6368012837657128;0,6279753944905054;0,6418828563787109;0,6432201123294998;0,6579299277881786;0,6397432468574485;0,6480342337523401;0,6142322097378277;0,6503477795612627;0,6392154207004358;0,011764097146856979;1351
2198,081500506401;921,5289555403962;1,1386634588241578;0,0862246059248455;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6392083444771329;0,6533832575554961;0,6416154051885531;0,6263706873495587;0,6271730409200321;0,620754212356245;0,6450922706606045;0,6405456004279219;0,6407169609416801;0,6565008025682183;0,6391360582445442;0,010929742379877096;1352
643,8616830348968;222,9826537503601;0,41503922939300536;0,020047345716471078;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6729071944370153;0,6317197111527146;0,6413479539983953;0,6571275742177053;0,6290451992511367;0,6298475528216101;0,6509761968440759;0,6129981278416688;0,6179775280898876;0,6423220973782772;0,6386269136032486;0,017293938217720434;1353
35,08775315284729;8,239790336165832;0,030356359481811524;0,03469800098719393;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);constant;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6346616742444504;0,64562717304092;0,6491040385129714;0,6343942230542926;0,6191495052152982;0,64562717304092;0,6491040385129714;0,6279753944905054;0,6361690743713215;0,6439272338148743;0,6385739528298524;0,00937078954044844;1354
2285,7314615726473;776,4886166505686;1,1292550086975097;0,052801570151267706;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6442899170901311;0,64562717304092;0,6368012837657128;0,6488365873228136;0,6397432468574485;0,6405456004279219;0,6491040385129714;0,6183471516448248;0,6233279828785446;0,6375066880684859;0,6384129669609774;0,009744046941037058;1355
2109,6325861930845;721,6651367091367;1,1105413675308227;0,0841604692929373;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6303824552019256;0,6442899170901311;0,6354640278149237;0,6330569671035036;0,6234287242578229;0,6424177587590265;0,648301684942498;0,652313452794865;0,6284109149277689;0,6420545746388443;0,6380120477531308;0,008829959027110148;1356
2169,1762184381487;735,1863984685673;1,1598408937454223;0,07514805720630484;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6266381385397165;0,6223589194971918;0,6384059909066595;0,6162075421235624;0,6279753944905054;0,6656860123027547;0,6480342337523401;0,6472318801818668;0,6538255751738897;0,6334938469769931;0,6379857533945481;0,014739352124779231;1357
380,08869116306306;193,36576381492927;0,19192736148834227;0,011106988554413028;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6646162075421236;0,6113934207007221;0,6006953730944102;0,6515110992243915;0,6512436480342337;0,6295801016314523;0,6544530623161273;0,6598020861192833;0,6286784376672017;0,6276083467094703;0,6379581783039416;0,020439425552508373;1358
17,084671449661254;10,687424928367756;0,0450730562210083;0,013828016680052463;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);constant;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6354640278149237;0,6499063920834448;0,6301150040117679;0,6362663813853972;0,6290451992511367;0,646964428991709;0,648301684942498;0,6354640278149237;0,6573033707865169;0,6046013911182451;0,6373431908200563;0,014036561009557677;1359
2274,5172786712646;1029,5712235026513;1,1127655744552611;0,07560774705370721;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6253008825889276;0,6359989301952393;0,6440224658999733;0,6250334313987698;0,6343942230542926;0,6400106980476064;0,6269055897298743;0,6517785504145494;0,6348314606741573;0,6540930979133226;0,6372369329916713;0,009812530327569293;1360
2794,6090819835663;900,836357867465;1,2281243562698365;0,10515954429056373;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6421503075688687;0,6491040385129714;0,6533832575554961;0,6116608718908799;0,6397432468574485;0,6397432468574485;0,6394757956672907;0,6261032361594009;0,6313536650615302;0,6359015516318887;0,6368619217763223;0,011208625348184216;1361
3195,149830007553;788,4874999338759;1,374605393409729;0,08302766105727828;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6188820540251404;0,6442899170901311;0,6434875635196576;0,6335918694838192;0,6418828563787109;0,6210216635464028;0,6480342337523401;0,631184808772399;0,6316211878009631;0,6492776886035313;0,6363273842973095;0,010222407331949193;1362
471,93954210281373;172,28985391356366;0,40864322185516355;0,019992347792941064;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6793260230008024;0,6461620754212356;0,6309173575822412;0,6199518587857716;0,636533832575555;0,6269055897298743;0,664081305161808;0,616742444503878;0,6235955056179775;0,6179775280898876;0,636219352046903;0,019960947814139627;1363
378,1294135808945;190,0773603635821;0,2090639591217041;0,016014891365427195;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6293126504412945;0,6317197111527146;0,6450922706606045;0,6477667825621825;0,6445573682802889;0,6603369884995989;0,6333244182936614;0,6306499063920834;0,6163723916532905;0,6166399143927234;0,6355772402328442;0,013205061682886585;1364
694,1596091032028;301,13973924887273;0,5424041032791138;0,044753479372246836;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6646162075421236;0,606311848087724;0,6434875635196576;0,6183471516448248;0,6004279219042524;0,6573950254078631;0,6557903182669163;0,6547205135062851;0,6128945960406634;0,6415195291599786;0,6355510675080288;0,02257322313343491;1365
0,7270090818405152;0,12378221089909108;0,04395527839660644;0,02226239321439304;GaussianNB();;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': GaussianNB()};0,6295801016314523;0,6389408932869751;0,6370687349558706;0,6335918694838192;0,624765980208612;0,6464295266113934;0,6461620754212356;0,6250334313987698;0,6289459604066345;0,6447298020331729;0,6355248375437935;0,007993922627004995;1366
3545,5156182527544;938,961496981008;1,3862308263778687;0,11968594030964393;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,628510296870821;0,6359989301952393;0,6461620754212356;0,6148702861727735;0,6148702861727735;0,6314522599625568;0,6458946242310778;0,6362663813853972;0,6449973247726056;0,6420545746388443;0,6341077039823324;0,011192637829916264;1367
2209,405809402466;577,7630983664825;1,1597854137420653;0,06289063593132546;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6402781492377642;0,6335918694838192;0,6263706873495587;0,6178122492645092;0,6293126504412945;0,6616742444503878;0,6333244182936614;0,6119283230810377;0,6361690743713215;0,6476725521669342;0,6338134218140289;0,013515092490973973;1368
592,4186948299408;243,18540367248184;0,43129990100860593;0,0834882420881732;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6373361861460284;0,6006953730944102;0,6263706873495587;0,6071142016581974;0,6466969778015512;0,6932334848890077;0,6309173575822412;0,6416154051885531;0,6005885500267523;0,653558052434457;0,6338126276170757;0,026715516565119453;1369
22,936969876289368;8,92059066596937;0,03844990730285645;0,0151805154793841;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);adaptive;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6501738432736026;0,6234287242578229;0,64562717304092;0,6325220647231881;0,6212891147365606;0,6405456004279219;0,6418828563787109;0,6250334313987698;0,6262707330123061;0,6308186195826645;0,6337592160832467;0,009627843837296169;1370
19,163725066185;8,914570630784677;0,036789751052856444;0,009693776952565394;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);constant;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6501738432736026;0,6234287242578229;0,64562717304092;0,6325220647231881;0,6212891147365606;0,6400106980476064;0,6418828563787109;0,6250334313987698;0,6262707330123061;0,6308186195826645;0,6337057258452152;0,009591408508530085;1371
34,308993625640866;7,57735960111577;0,02230989933013916;0,0081762197840139;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);adaptive;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6472318801818668;0,6458946242310778;0,6448248194704467;0,6480342337523401;0,6392083444771329;0,5308906124632254;0,6453597218507623;0,6327895159133459;0,6487426431246656;0,6522204387372926;0,6335196834202156;0,034593215012330675;1372
1291,0047266244887;425,21339012103795;0,7630127429962158;0,05089322416028533;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6162075421235624;0,6301150040117679;0,6327895159133459;0,6418828563787109;0,633859320673977;0,631184808772399;0,6477667825621825;0,6373361861460284;0,6187800963081862;0,6447298020331729;0,6334651914923334;0,009735414211122947;1373
20,377585673332213;4,6069023694111;0,028042411804199217;0,015241735095470145;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);adaptive;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6295801016314523;0,633859320673977;0,6453597218507623;0,6341267718641348;0,6239636266381385;0,6416154051885531;0,6432201123294998;0,6239636266381385;0,6260032102728732;0,6329588014981273;0,6334650698585657;0,00745149870605315;1374
599,3653615951538;243,8730223790053;0,4308001518249512;0,05699750447572976;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6512436480342337;0,6055094945172506;0,6204867611660871;0,6060443968975662;0,6517785504145494;0,6769189622893822;0,6343942230542926;0,6453597218507623;0,5933654360620653;0,6495452113429642;0,6334646405629154;0,025000887633906854;1375
22,084899687767027;7,339564045048664;0,034278345108032224;0,015181031818461126;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);adaptive;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6488365873228136;0,6239636266381385;0,6408130516180797;0,6322546135330303;0,6210216635464028;0,6405456004279219;0,6421503075688687;0,624765980208612;0,6262707330123061;0,6308186195826645;0,6331440783458838;0,008920933962890606;1376
17,92209389209747;6,402106183426042;0,028335714340209962;0,009199899855687291;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);constant;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6491040385129714;0,6239636266381385;0,6405456004279219;0,6322546135330303;0,6210216635464028;0,6400106980476064;0,6421503075688687;0,624765980208612;0,6262707330123061;0,6308186195826645;0,6330905881078522;0,008902835622818916;1377
19,235752201080324;3,959817774916076;0,030032658576965333;0,011381294903624625;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);adaptive;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6295801016314523;0,6306499063920834;0,64562717304092;0,6341267718641348;0,6244985290184542;0,6397432468574485;0,6432201123294998;0,6239636266381385;0,6260032102728732;0,6329588014981273;0,6330371479543132;0,007285120790669877;1378
3010,517428803444;1401,6751550460035;1,1411629676818849;0,10463269987439378;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6421503075688687;0,6244985290184542;0,6333244182936614;0,604974592136935;0,6359989301952393;0,6795934741909602;0,6202193099759294;0,6442899170901311;0,6144997324772605;0,6278758694489032;0,6327425080396344;0,01944257993860241;1379
3018,6641387939453;851,6187928352989;1,4431172370910645;0,07906652219637775;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,633859320673977;0,6341267718641348;0,6317197111527146;0,6119283230810377;0,6333244182936614;0,6301150040117679;0,6549879646964429;0,6368012837657128;0,6128945960406634;0,6393793472445158;0,6319136740824629;0,0117776646795878;1380
12,556383299827576;4,713821424719066;0,03410780429840088;0,016437917531434122;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);constant;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6236961754479807;0,6186146028349826;0,6453597218507623;0,6341267718641348;0,6239636266381385;0,6450922706606045;0,6432201123294998;0,6239636266381385;0,6260032102728732;0,6329588014981273;0,6316998920035243;0,00945289844733389;1381
486,72111382484434;297,3173879341407;0,2042564868927002;0,015340011087068839;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6298475528216101;0,6100561647499332;0,6081840064188285;0,6453597218507623;0,6384059909066595;0,6485691361326558;0,6571275742177053;0,635196576624766;0,613697164258962;0,6289459604066345;0,6315389848388518;0,015909840780479596;1382
12,470488429069519;4,485576750206623;0,03189570903778076;0,008978096776595171;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);constant;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6236961754479807;0,6188820540251404;0,64562717304092;0,6341267718641348;0,6244985290184542;0,6397432468574485;0,6432201123294998;0,6239636266381385;0,6260032102728732;0,6329588014981273;0,6312719700992717;0,008772352482089043;1383
31,655734753608705;9,269206231138872;0,026169514656066893;0,01278550172474328;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);adaptive;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6472318801818668;0,64562717304092;0,6445573682802889;0,6424177587590265;0,6392083444771329;0,5172506017651779;0,6464295266113934;0,6327895159133459;0,6452648475120385;0,6514178705189941;0,6312194887060185;0,038287157520271564;1384
2523,3857456684113;764,8216145314319;1,068883204460144;0,040969525643938104;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6525809039850228;0,6255683337790853;0,6301150040117679;0,6418828563787109;0,6183471516448248;0,635196576624766;0,6258357849692431;0,6033698849959882;0,628143392188336;0,6490101658640984;0,6310050054441843;0,013837566356074759;1385
727,0049660682678;176,1805659438742;0,32409284114837644;0,010918293632765724;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6317197111527146;0,6266381385397165;0,6127306766515112;0,6159400909334046;0,6135330302219845;0,6565926718373897;0,652313452794865;0,6349291254346082;0,6401819154628143;0,6252006420545746;0,6309779455083583;0,014587080921519153;1386
1299,2624968528748;649,7790073886138;0,730171799659729;0,04087921208893787;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6258357849692431;0,6156726397432468;0,6210216635464028;0,6440224658999733;0,6244985290184542;0,6277079433003477;0,6539181599358117;0,6376036373361862;0,6118245050829321;0,6474050294275013;0,63095103582601;0,01337724325075465;1387
492,2507526397705;172,90033037817238;0,41885886192321775;0,05158648129022433;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,649638940893287;0,6290451992511367;0,636533832575555;0,6416154051885531;0,6186146028349826;0,6683605242043327;0,6095212623696176;0,618079700454667;0,6086142322097379;0,6241305510968432;0,6304154251078712;0,017935755590227778;1388
29,61375868320465;10,458865906014694;0,03276958465576172;0,018761346344445273;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(100,);constant;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6472318801818668;0,6434875635196576;0,6448248194704467;0,6464295266113934;0,6392083444771329;0,5009360791655523;0,6453597218507623;0,6327895159133459;0,6487426431246656;0,6522204387372926;0,6301230533052117;0,04335831125938334;1389
795,2357767105102;198,98736005046507;0,3194216012954712;0,02038135838790884;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6424177587590265;0,6266381385397165;0,6394757956672907;0,6327895159133459;0,620754212356245;0,624765980208612;0,6199518587857716;0,6277079433003477;0,6297485286249331;0,6359015516318887;0,6300151283787179;0,007190705296269796;1390
12,489480710029602;3,9822890927889434;0,04084105491638183;0,0098850284871091;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);constant;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6354640278149237;0,6426852099491843;0,6306499063920834;0,6357314790050815;0,6274404921101899;0,646964428991709;0,6480342337523401;0,6354640278149237;0,5914927768860353;0,6046013911182451;0,6298527973834716;0,017323837273953594;1391
326,38260464668275;91,62834184315217;0,21010677814483641;0,013730081942954392;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6223589194971918;0,6317197111527146;0,6226263706873496;0,6343942230542926;0,6472318801818668;0,6357314790050815;0,6290451992511367;0,6290451992511367;0,6219903691813804;0,6235955056179775;0,6297738856880128;0,007558402050946154;1392
27,941279315948485;9,703090444133567;0,02233870029449463;0,008346281905771592;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(100,);constant;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6472318801818668;0,6432201123294998;0,6445573682802889;0,6408130516180797;0,6392083444771329;0,5009360791655523;0,6453597218507623;0,6327895159133459;0,6449973247726056;0,6514178705189941;0,6290531269108128;0,0429665207878377;1393
679,5022731542588;166,2371384376273;0,2965956449508667;0,002565190625376493;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6183471516448248;0,6218240171168762;0,6397432468574485;0,6223589194971918;0,6327895159133459;0,6327895159133459;0,6384059909066595;0,6164749933137202;0,6332263242375602;0,6345639379347244;0,6290523613335698;0,008045870590896561;1394
20,600350666046143;1,8420836235014462;0,035427975654602054;0,008794988962538336;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);adaptive;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6274404921101899;0,6236961754479807;0,6140679326023001;0,6343942230542926;0,6215565659267184;0,6405456004279219;0,6408130516180797;0,6234287242578229;0,6273408239700374;0,6342964151952916;0,6287580004610636;0,008198408638803415;1395
20,571261382102968;1,7315278636368512;0,02878265380859375;0,007191875544675286;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);adaptive;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6277079433003477;0,6236961754479807;0,6140679326023001;0,6343942230542926;0,6210216635464028;0,6416154051885531;0,6405456004279219;0,6234287242578229;0,6270733012306046;0,6340288924558587;0,6287579861512084;0,008351184157039756;1396
13,939454126358033;2,2134374437747195;0,03764750957489014;0,012462943619936119;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);constant;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,622091468307034;0,6236961754479807;0,6052420433270929;0,6343942230542926;0,6210216635464028;0,6416154051885531;0,6405456004279219;0,6234287242578229;0,6270733012306046;0,6340288924558587;0,6273137497243563;0,010281567699027154;1397
791,5224540233612;243,32678162915937;0,3890820026397705;0,01450124039367881;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6164749933137202;0,6317197111527146;0,6127306766515112;0,6236961754479807;0,6006953730944102;0,6274404921101899;0,6357314790050815;0,6421503075688687;0,6466024612092027;0,6356340288924559;0,6272875698446135;0,013429274871761371;1398
13,890658712387085;2,2886339925411736;0,03693702220916748;0,017075163498190937;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);constant;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6223589194971918;0,6236961754479807;0,6052420433270929;0,6343942230542926;0,6210216635464028;0,6402781492377642;0,6408130516180797;0,6234287242578229;0,6273408239700374;0,6342964151952916;0,6272870189151957;0,010142348320422562;1399
406,4693606376648;174,6455121679195;0,19523274898529053;0,009572486481492374;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;5;3;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 3, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6442899170901311;0,6081840064188285;0,6218240171168762;0,6236961754479807;0,5958812516715699;0,6648836587322814;0,6424177587590265;0,6287777480609789;0,6107544141252006;0,6286784376672017;0,6269387385090076;0,018978417627438196;1400
880,9496941804886;243,68155879937666;0,4127018690109253;0,05991725415654308;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6450922706606045;0,6287777480609789;0,6071142016581974;0,622091468307034;0,6156726397432468;0,6335918694838192;0,6491040385129714;0,6317197111527146;0,6013911182450509;0,6342964151952916;0,6268851481019909;0,014634124232009302;1401
973,6109145164489;239,11837487665963;0,7434574365615845;0,056020373569983045;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6434875635196576;0,6228938218775073;0,603637336186146;0,6116608718908799;0,6164749933137202;0,6279753944905054;0,6418828563787109;0,6183471516448248;0,6262707330123061;0,6476725521669342;0,6260303274481193;0,013770930668898621;1402
1045,0484452724456;250,63253020143983;0,39379134178161623;0,017062189010915114;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6354640278149237;0,6236961754479807;0,6242310778282963;0,6255683337790853;0,6138004814121423;0,6357314790050815;0,6402781492377642;0,6397432468574485;0,601123595505618;0,6179775280898876;0,6257614094978228;0,011904156713122453;1403
766,8785853862762;240,80849742184023;0,39858598709106446;0,031245764691442864;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6400106980476064;0,6525809039850228;0,6044396897566194;0,6097887135597754;0,6012302754747259;0,633859320673977;0,6183471516448248;0,6349291254346082;0,6337613697164259;0,6193151417870519;0,6248262390080638;0,015922466788500577;1404
1208,9537438631057;644,447893166734;0,7737336874008178;0,09143732640715345;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6236961754479807;0,6319871623428724;0,6084514576089863;0,6170098956940359;0,6052420433270929;0,6202193099759294;0,6317197111527146;0,6474993313720246;0,6257356875334403;0,635366506153023;0,62469272806081;0,012082566874781483;1405
982,0967903852463;224,71465199605805;0,3989081621170044;0,05950458539784018;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6231612730676651;0,6287777480609789;0,6317197111527146;0,6105910671302487;0,6210216635464028;0,6314522599625568;0,6389408932869751;0,6191495052152982;0,6268057784911717;0,6147672552166934;0,6246387155130706;0,00814324513290883;1406
783,5599079370498;290,9121837428027;0,39624638557434083;0,033348645746972674;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6349291254346082;0,6317197111527146;0,6370687349558706;0,6164749933137202;0,5867879112062049;0,616742444503878;0,6236961754479807;0,6466969778015512;0,6147672552166934;0,628143392188336;0,6237026721221558;0,015686431376421478;1407
48,895365715026855;14,61775302444865;0,022673392295837404;0,005046353050693568;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);adaptive;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6261032361594009;0,6432201123294998;0,6261032361594009;0,6343942230542926;0,6183471516448248;0,6271730409200321;0,576089863599893;0,6282428456806632;0,6364365971107544;0,6161048689138576;0,623221517557262;0,017471826697644036;1408
2633,862315940857;783,7352909625635;1,1232086420059204;0,06994810428394113;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6437550147098154;0,6539181599358117;0,635196576624766;0,604974592136935;0,6309173575822412;0,6044396897566194;0,6135330302219845;0,606311848087724;0,6056714820759764;0,6332263242375602;0,6231944075369433;0,017435997120343032;1409
2355,029034662247;786,8404476555185;1,1318305253982544;0,07921768995443065;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6250334313987698;0,6408130516180797;0,6306499063920834;0,6143353837924579;0,6119283230810377;0,6239636266381385;0,619416956405456;0,6113934207007221;0,5976457998929909;0,6436597110754414;0,6218839610995177;0,013354031151951953;1410
752,4991888761521;245,38274089873238;0,39911670684814454;0,041938890929169526;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6148702861727735;0,6044396897566194;0,648301684942498;0,6031024338058304;0,6146028349826157;0,6295801016314523;0,6333244182936614;0,6129981278416688;0,6252006420545746;0,6286784376672017;0,6215098657148895;0,013349117649206177;1411
491,38881573677065;95,89024696800475;0,36549303531646726;0,018465195835372886;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6442899170901311;0,6204867611660871;0,6186146028349826;0,6188820540251404;0,6073816528483552;0,6239636266381385;0,6111259695105643;0,6017651778550415;0,6388443017656501;0,6241305510968432;0,6209484614830935;0,012420828005760652;1412
45,26710085868835;13,46383344314757;0,02323460578918457;0,010086187354850435;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6258357849692431;0,6434875635196576;0,6263706873495587;0,6343942230542926;0,6178122492645092;0,6250334313987698;0,576089863599893;0,6277079433003477;0,6153023006955591;0,6161048689138576;0,6208138916065689;0,016975723030035087;1413
970,0342638969421;219,61117146066343;0,7070038080215454;0,061287569327916055;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6044396897566194;0,622091468307034;0,6172773468841937;0,6121957742711955;0,6081840064188285;0,642952661139342;0,6148702861727735;0,6172773468841937;0,6144997324772605;0,6466024612092027;0,6200390773520643;0,01323976604855658;1414
1828,5306369304658;545,4287030983241;1,0972773551940918;0,05706929256672083;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6223589194971918;0,6394757956672907;0,628510296870821;0,6129981278416688;0,6084514576089863;0,6218240171168762;0,6349291254346082;0,6044396897566194;0,6000535045478865;0,6270733012306046;0,6200114235572552;0,012473625622388546;1415
1036,0566482067109;311,3279139092033;0,7263997316360473;0,052020407624757244;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5998930195239369;0,6175447980743515;0,6186146028349826;0,6071142016581974;0,5870553623963627;0,6525809039850228;0,628510296870821;0,6215565659267184;0,6088817549491706;0,6474050294275013;0,6189156535647066;0,019138670918368638;1416
585,7640106201172;160,2998031686165;0,3785780191421509;0,055325519872164;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6236961754479807;0,633859320673977;0,6041722385664616;0,5998930195239369;0,6105910671302487;0,624765980208612;0,6253008825889276;0,633859320673977;0,6190476190476191;0,6070090957731408;0,6182194719634881;0,011532309874574546;1417
480,530944108963;135,6412603824372;0,3640475034713745;0,027802149528199212;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,608986359989302;0,6178122492645092;0,6188820540251404;0,604974592136935;0,6073816528483552;0,642952661139342;0,6330569671035036;0,5873228135865205;0,6286784376672017;0,6310861423220974;0,6181133930082907;0,015620673534767423;1418
1087,6415704488754;549,5889708794942;0,7352149248123169;0,07937777679802117;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6023000802353571;0,6223589194971918;0,6020326290451993;0,6020326290451993;0,6105910671302487;0,6512436480342337;0,6223589194971918;0,6183471516448248;0,6120920278223649;0,6369716425896201;0,6180328714541432;0,01532765865039626;1419
1036,8676847934723;486,0785370356365;0,4158328533172607;0,02565390536882927;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,619416956405456;0,6271730409200321;0,6071142016581974;0,6539181599358117;0,6156726397432468;0,6151377373629313;0,6159400909334046;0,6060443968975662;0,6169074371321562;0,5971107544141252;0,6174435415402929;0,014456880377715352;1420
916,2426469802856;171,7837436399755;0,3944981336593628;0,037370698800720054;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6215565659267184;0,6330569671035036;0,6124632254613533;0,6025675314255149;0,6044396897566194;0,6266381385397165;0,6186146028349826;0,6143353837924579;0,6086142322097379;0,6316211878009631;0,6173907524851567;0,010248914805193654;1421
1076,145089149475;370,7616861808069;0,7265085697174072;0,019834961011167704;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6293126504412945;0,6178122492645092;0,5916020326290452;0,6073816528483552;0,6087189087991441;0,6581973789783364;0,6421503075688687;0,6071142016581974;0,5979133226324238;0,613697164258962;0,6173899869079136;0,019389654517475742;1422
40,516630625724794;16,446997961620188;0,0232342004776001;0,01019641667575436;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);constant;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6239636266381385;0,6413479539983953;0,6261032361594009;0,6343942230542926;0,6183471516448248;0,6250334313987698;0,5242043327092806;0,6282428456806632;0,635366506153023;0,6161048689138576;0,6173108176350646;0,03188682311007074;1423
2499,4299490451813;724,5699916133298;1,1533327102661133;0,08426010993514219;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6218240171168762;0,6244985290184542;0,6095212623696176;0,618079700454667;0,5557635731479005;0,6341267718641348;0,6202193099759294;0,6421503075688687;0,6144997324772605;0,620920278223649;0,6161603482217358;0,021993849894408092;1424
484,4313010931015;154,74959667389405;0,36454219818115235;0,028766988404294133;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6092538111794598;0,6068467504680396;0,6095212623696176;0,594543995720781;0,6039047873763038;0,636533832575555;0,6317197111527146;0,6199518587857716;0,6233279828785446;0,6252006420545746;0,6160804634561362;0,012651373681769234;1425
1937,377193570137;626,6152402873325;1,1054231643676757;0,04262810028068069;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5980208611928323;0,6228938218775073;0,6269055897298743;0,6293126504412945;0,6057769457074084;0,624765980208612;0,6317197111527146;0,5843808504947847;0,5928303905831995;0,6401819154628143;0,6156788716851042;0,01793245812969081;1426
1862,347701740265;787,5577568623161;1,0527634382247926;0,07295518797267021;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6140679326023001;0,6121957742711955;0,6164749933137202;0,6100561647499332;0,5948114469109388;0,6105910671302487;0,6274404921101899;0,6346616742444504;0,6118245050829321;0,6241305510968432;0,6156254601512752;0,01045586875413862;1427
1734,4771276473998;505,71306996902877;1,0988275527954101;0,09337814543726153;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6239636266381385;0,6116608718908799;0,6191495052152982;0,5835784969243113;0,6124632254613533;0,64562717304092;0,6333244182936614;0,5977534100026745;0,6150347779561263;0,6134296415195292;0,6155985146942893;0,016348084875147564;1428
2754,9292350292208;759,2652799049501;1,3720958471298217;0,1403509544434818;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6317197111527146;0,6186146028349826;0,6121957742711955;0,5958812516715699;0,6081840064188285;0,6199518587857716;0,6277079433003477;0,6172773468841937;0,5936329588014981;0,628143392188336;0,6153308846309439;0,012376855341169446;1429
37,88517074584961;15,67423634459458;0,026024913787841795;0,009483748559505218;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);constant;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6239636266381385;0,6434875635196576;0,6263706873495587;0,6343942230542926;0,6178122492645092;0,6250334313987698;0,5242043327092806;0,6277079433003477;0,613697164258962;0,6161048689138576;0,6152776090407375;0,03148553200791899;1430
2158,0834831237794;856,9407365191639;1,135074257850647;0,053448213192121334;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6031024338058304;0,6183471516448248;0,603637336186146;0,6263706873495587;0,606311848087724;0,6111259695105643;0,6097887135597754;0,5932067397699919;0,6252006420545746;0,6409844836811129;0,6138076005650103;0,013299557456167132;1431
2899,5228083610536;730,3395131473181;1,3230592012405396;0,06700965196033376;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5803690826424177;0,6250334313987698;0,6202193099759294;0,619416956405456;0,6127306766515112;0,6196844075956138;0,608986359989302;0,6271730409200321;0,5997859818084538;0,5930979133226324;0,6106497160710118;0,0144224797635581;1432
1856,1663981437682;915,2379909832741;1,1350031852722169;0,09485597257928803;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6025675314255149;0,6571275742177053;0,6242310778282963;0,6025675314255149;0,576089863599893;0,6392083444771329;0,6210216635464028;0,594543995720781;0,592027822364901;0,5952380952380952;0,6104623499844237;0,02331561752445335;1433
860,9744971513749;239,50097922224668;0,42459831237792967;0,018847399341650167;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6159400909334046;0,5902647766782562;0,6095212623696176;0,5974859588125168;0,6073816528483552;0,6261032361594009;0,6282428456806632;0,6079165552286707;0,6134296415195292;0,6043338683788122;0,6100619888609227;0,011084833404183132;1434
1593,0919603824616;765,1167894487522;0,7267730951309204;0,04567189851982192;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,616742444503878;0,6378710885263439;0,6306499063920834;0,5998930195239369;0,587857715966836;0,5886600695373094;0,5977534100026745;0,5910671302487296;0,6292134831460674;0,6190476190476191;0,6098755886895477;0,018043825212822294;1435
2180,591831588745;681,1857832721971;1,0967157125473022;0,08457771029093902;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5782294731211554;0,636533832575555;0,589194971917625;0,6258357849692431;0,5924043861995186;0,600962824284568;0,6164749933137202;0,6196844075956138;0,6177100053504548;0,6072766185125735;0,6084307297840027;0,01722282289970902;1436
0,08122260570526123;0,012843899034070025;0,023025918006896972;0,003675337751661888;DecisionTreeClassifier();;gini;1;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,08827521800994872;0,013305732925701407;0,023088479042053224;0,0022275362778374328;DecisionTreeClassifier();;entropy;1;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,0884864330291748;0,016053790921735523;0,025830960273742674;0,004100575119976518;DecisionTreeClassifier();;entropy;1;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,11289393901824951;0,034186825481937175;0,030875325202941895;0,004578568390134591;DecisionTreeClassifier();balanced;entropy;1;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,14493086338043212;0,031048181020478967;0,04169952869415283;0,008683111789062536;DecisionTreeClassifier();;gini;1;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,12282757759094239;0,02037561842018041;0,03464229106903076;0,006730578100270778;DecisionTreeClassifier();;gini;1;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,123984694480896;0,0328507797341016;0,035866928100585935;0,005060912675570237;DecisionTreeClassifier();balanced;entropy;1;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,08774001598358154;0,01645150013261485;0,025182938575744628;0,0030143608190114084;DecisionTreeClassifier();;entropy;1;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,15284841060638427;0,026627596265017036;0,036956167221069335;0,004590403845669992;DecisionTreeClassifier();balanced;entropy;1;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,13635170459747314;0,018882335325087443;0,03478584289550781;0,005523367767972879;DecisionTreeClassifier();;entropy;1;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,13676941394805908;0,024800667092661984;0,02998065948486328;0,004359583766165813;DecisionTreeClassifier();;entropy;1;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,07492337226867676;0,004830818368972558;0,02541229724884033;0,00458473160208284;DecisionTreeClassifier();;entropy;1;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,07316777706146241;0,008740711546590115;0,02168881893157959;0,00145684254844401;DecisionTreeClassifier();;gini;1;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,09880571365356446;0,026075914339317257;0,03243401050567627;0,006857137599824612;DecisionTreeClassifier();;gini;1;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,07957062721252442;0,01759919340234463;0,02454977035522461;0,002565555978432302;DecisionTreeClassifier();;entropy;1;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,07855644226074218;0,01556363186504887;0,0221771240234375;0,0016013988657602631;DecisionTreeClassifier();;gini;1;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,0912461519241333;0,020804440478554127;0,029308462142944337;0,004921371618281273;DecisionTreeClassifier();;gini;1;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,14324512481689453;0,01702890873005994;0,03774757385253906;0,008764409352189919;DecisionTreeClassifier();;gini;1;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,08617534637451171;0,020890516441691005;0,025119328498840333;0,004195661020456867;DecisionTreeClassifier();;entropy;1;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,1334829807281494;0,0215435268889884;0,033298659324646;0,004126607810736522;DecisionTreeClassifier();;gini;1;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,11707472801208496;0,032331993154185674;0,03391263484954834;0,00629063491983417;DecisionTreeClassifier();;entropy;1;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,09233152866363525;0,0076073531529781465;0,022623181343078613;0,0021228926823188493;DecisionTreeClassifier();balanced;entropy;1;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,10967805385589599;0,026158817791418605;0,029998254776000977;0,01204318398996143;DecisionTreeClassifier();balanced;entropy;1;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,19268217086791992;0,13220842922841156;0,03864169120788574;0,01888375356753329;DecisionTreeClassifier();balanced;gini;1;1;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,13408420085906983;0,03721720365575241;0,034396243095397946;0,007871267020139343;DecisionTreeClassifier();balanced;gini;1;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,1010862112045288;0,01926951761929025;0,02692534923553467;0,004431644187736444;DecisionTreeClassifier();balanced;entropy;1;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,13969430923461915;0,032344685146692496;0,0380061149597168;0,006084250714876848;DecisionTreeClassifier();balanced;gini;1;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,14555580615997316;0,026356042775565417;0,037000489234924314;0,0027529053823660116;DecisionTreeClassifier();balanced;gini;1;5;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,1483243227005005;0,015190726795601931;0,029981565475463868;0,004957463372593816;DecisionTreeClassifier();balanced;gini;1;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,17406837940216063;0,022175036771026203;0,041593289375305174;0,010961316037350705;DecisionTreeClassifier();balanced;gini;1;5;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,08526351451873779;0,01213011205105585;0,022878646850585938;0,0018942539281421593;DecisionTreeClassifier();balanced;entropy;1;5;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,1652078866958618;0,03189641662841881;0,04417445659637451;0,011265782961269658;DecisionTreeClassifier();balanced;gini;1;10;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,16162385940551757;0,035265051561562503;0,037107086181640624;0,005067610724004368;DecisionTreeClassifier();balanced;gini;1;10;50;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,16959376335144044;0,022806761846625185;0,04064342975616455;0,006486945767959863;DecisionTreeClassifier();balanced;gini;1;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,08024024963378906;0,01126335185000848;0,021933317184448242;0,001463638503050801;DecisionTreeClassifier();balanced;entropy;1;1;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
0,08294594287872314;0,005664253886616562;0,023146772384643556;0,002242368032043752;DecisionTreeClassifier();balanced;entropy;1;1;2;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,604974592136935;0,6111259695105643;0,603637336186146;0,603637336186146;0,5977534100026745;0,6183471516448248;0,6111259695105643;0,6006953730944102;0,6099518459069021;0,6171749598715891;0,6078423944050757;0,00648010075865705;1437
2466,8094808101655;675,5328153364552;1,1298774242401124;0,08451970682091457;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,587857715966836;0,6242310778282963;0,5688686814656325;0,6234287242578229;0,5980208611928323;0,6295801016314523;0,6317197111527146;0,5926718373896764;0,5922953451043339;0,617442482611022;0,6066116538600619;0,02029248134936881;1473
2530,7621351003645;774,0626866300644;1,3562158584594726;0,11969668837943669;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6121957742711955;0,5916020326290452;0,6006953730944102;0,56432201123295;0,6081840064188285;0,6287777480609789;0,620754212356245;0,6023000802353571;0,6324237560192616;0,5955056179775281;0,60567606122958;0,01890278378896254;1474
1475,353653359413;641,9167324941742;0,5267917394638062;0,043098572592774345;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5974859588125168;0,6052420433270929;0,5798341802621022;0,5953463492912543;0,5859855576357315;0,622091468307034;0,5881251671569938;0,6477667825621825;0,5898876404494382;0,6359015516318887;0,6047666699436235;0,021755920370861583;1475
29,64161765575409;5,727930681905605;0,04282376766204834;0,015817870384528223;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);adaptive;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,622091468307034;0,6282428456806632;0,6178122492645092;0,6188820540251404;0,5857181064455736;0,5964161540518855;0,5998930195239369;0,5974859588125168;0,5821294810058855;0,5989834135901552;0,6047654750707301;0,01508621604616735;1476
29,77051475048065;5,740039455176788;0,03760690689086914;0,01000628359122457;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);adaptive;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6228938218775073;0,6269055897298743;0,6183471516448248;0,6178122492645092;0,5865204600160471;0,5956138004814121;0,5998930195239369;0,5964161540518855;0,5821294810058855;0,5995184590690209;0,6046050186664903;0,01491056517643931;1477
939,1185566902161;286,42502854156646;0,44284806251525877;0,03143217224638484;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6028349826156726;0,5982883123829901;0,6277079433003477;0,6039047873763038;0,5867879112062049;0,6097887135597754;0,5924043861995186;0,5849157528751003;0,6161048689138576;0,6219903691813804;0,6044728027611151;0,013756576773194452;1478
2122,772872638702;770,96731887688;1,0950660705566406;0,0691374267050128;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5482749398234822;0,622091468307034;0,6212891147365606;0,5875902647766783;0,5950788981010966;0,6303824552019256;0,6124632254613533;0,5814388874030489;0,6099518459069021;0,6356340288924559;0,6044195128610538;0,025281223837684372;1479
853,5578274011611;322,149794066576;0,4291503667831421;0,05908720572077707;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6458946242310778;0,6084514576089863;0,5314255148435411;0,5881251671569938;0,6014977266648837;0,6293126504412945;0,6226263706873496;0,6012302754747259;0,5955056179775281;0,6144997324772605;0,6038569137563641;0,029116730761313322;1480
2788,414573287964;1316,1330773771283;1,4186185598373413;0,16918618357777143;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5937416421503076;0,615405188553089;0,6033698849959882;0,5600427921904253;0,6073816528483552;0,6164749933137202;0,5921369350093608;0,6178122492645092;0,6276083467094703;0,5997859818084538;0,603375966684368;0,01799370661592698;1481
770,7716438531876;420,3447786462471;0,45266635417938234;0,0317717973966214;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5942765445306232;0,6119283230810377;0,5934741909601498;0,5897298742979407;0,5956138004814121;0,6004279219042524;0,6234287242578229;0,6079165552286707;0,6185125735687533;0,5925628678437668;0,602787137615443;0,011289146486694882;1482
2007,9600228309632;491,5753876515529;1,136556363105774;0,1329471894693521;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6183471516448248;0,6277079433003477;0,5843808504947847;0,6092538111794598;0,5680663278951591;0,6183471516448248;0,618079700454667;0,5776945707408397;0,6086142322097379;0,5874799357945425;0,6017971675359188;0,019527885116721884;1483
738,3427820444107;175,33457797480105;0,31678357124328616;0,031769861211658874;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6079165552286707;0,5814388874030489;0,590532227868414;0,6116608718908799;0,5988232147633057;0,5958812516715699;0,6081840064188285;0,6017651778550415;0,6048689138576779;0,6139646869983949;0,6015035793955833;0,009577867248267992;1484
769,7624484300613;236,59188208982607;0,3342496633529663;0,01690591367453776;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5851832040652581;0,6047071409467772;0,5841133993046269;0,5966836052420433;0,6012302754747259;0,6370687349558706;0,6129981278416688;0,6081840064188285;0,5834670947030498;0,601123595505618;0,6014759184458468;0,015392943911948063;1485
917,7993365526199;137,24078979649877;0,7146231412887574;0,06126822067211336;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6290451992511367;0,6132655790318267;0,5996255683337791;0,6057769457074084;0,5956138004814121;0,6001604707140947;0,6100561647499332;0,5990906659534635;0,5690208667736758;0,5906902086677368;0,6012345469664467;0,01485081873265179;1486
1191,535739159584;486,895145744981;0,7607817411422729;0,06453131262004412;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6108585183204065;0,6362663813853972;0,6236961754479807;0,5731479005081572;0,5846483016849425;0,589194971917625;0,5929392885798341;0,5921369350093608;0,599250936329588;0,6035313001605136;0,6005670709343806;0,01785951289780911;1487
886,0918372154235;254,26678861726;0,4323258399963379;0,017274871361595473;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6210216635464028;0,5990906659534635;0,6164749933137202;0,591869483819203;0,604974592136935;0,6156726397432468;0,5795667290719444;0,6017651778550415;0,5802568218298555;0,5882825040128411;0,5998975271282653;0,014136011924945891;1488
2515,1554003477095;581,0092733517649;1,3472467422485352;0,11725201540626125;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,587857715966836;0,6020326290451993;0,6143353837924579;0,576089863599893;0,5910671302487296;0,604974592136935;0,6282428456806632;0,600962824284568;0,5741037988229;0,6147672552166934;0,5994434038794876;0,016484779812963937;1489
722,5401411056519;250,03896322156592;0,43686904907226565;0,021084425298773152;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5894624231077829;0,5982883123829901;0,5974859588125168;0,607649104038513;0,5809039850227333;0,6097887135597754;0,591869483819203;0,6140679326023001;0,6126270733012306;0,5917602996254682;0,5993903286272514;0,01061558745321036;1490
791,697163271904;201,55115831572826;0,3148656845092773;0,015553647978355442;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6014977266648837;0,5953463492912543;0,5702059374164214;0,5937416421503076;0,6084514576089863;0,6178122492645092;0,5990906659534635;0,6170098956940359;0,5984483681112894;0,5880149812734082;0,598961927342856;0,013284923578169744;1491
656,5344973564148;217,88920150736044;0,35270004272460936;0,026823437626751722;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5825086921636802;0,6081840064188285;0,608986359989302;0,6119283230810377;0,6097887135597754;0,5886600695373094;0,6065792992778818;0,5907996790585718;0,586677367576244;0,5877474585339754;0,5981859969196607;0,011149083478290224;1492
910,8729244947433;350,3117848585562;0,42855286598205566;0,03424967102163295;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5961487028617277;0,5926718373896764;0,6258357849692431;0,577427119550682;0,5718106445573683;0,6378710885263439;0,6068467504680396;0,6052420433270929;0,5947030497592295;0,5690208667736758;0,5977577888183079;0,021180799224243624;1493
640,0247846126556;128,78493322176965;0,3122075080871582;0,02402208334081605;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5958812516715699;0,5867879112062049;0,6031024338058304;0,5897298742979407;0,5910671302487296;0,5921369350093608;0,6290451992511367;0,615405188553089;0,5963081861958266;0,5778491171749599;0,5977313227414649;0,014078400038845888;1494
680,4001087427139;184,19135684278422;0,3172211408615112;0,008132874545005619;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,618079700454667;0,603637336186146;0,5982883123829901;0,5664616207542124;0,5811714362128911;0,5667290719443702;0,6309173575822412;0,5966836052420433;0,5941680042803639;0,6054039593365436;0,596154040437647;0,019523089875973135;1495
782,8114521980285;279,11785512686;0,38712544441223146;0,019237676713049937;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6191495052152982;0,5803690826424177;0,5640545600427922;0,577427119550682;0,587857715966836;0,6140679326023001;0,6023000802353571;0,5763573147900508;0,615569823434992;0,6217228464419475;0,5958875980922673;0,020021183129096384;1496
12,320094871520997;6,94619070205905;0,04507544040679932;0,013010649651612848;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);constant;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,622091468307034;0,6282428456806632;0,6178122492645092;0,6188820540251404;0,5846483016849425;0,5881251671569938;0,5849157528751003;0,5707408397967371;0,559657570893526;0,5821294810058855;0,5957245730690532;0,022768164257168693;1497
1781,4716168403625;803,1507031694584;1,133132243156433;0,11428701493000352;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,603637336186146;0,5659267183738967;0,5977534100026745;0,5835784969243113;0,5688686814656325;0,600962824284568;0,5998930195239369;0,6079165552286707;0,5917602996254682;0,6359015516318887;0,5956198893247194;0,019096233548917284;1498
12,183117294311524;6,810350885772959;0,04351305961608887;0,012235372434733226;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);constant;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6228938218775073;0,6269055897298743;0,6183471516448248;0,6178122492645092;0,5846483016849425;0,5881251671569938;0,5846483016849425;0,5707408397967371;0,559657570893526;0,5821294810058855;0,5955908474739744;0,022633718662043757;1499
1587,989521074295;711,955053242361;1,0971423387527466;0,09070232452853143;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6164749933137202;0,6097887135597754;0,5942765445306232;0,5886600695373094;0,5838459481144691;0,6282428456806632;0,5897298742979407;0,5886600695373094;0,5783841626538255;0,5759764579989299;0,5954039679224566;0,01629238287796897;1500
1348,7330323696137;551,3614185315894;0,544681978225708;0,060612810968763496;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5985557635731479;0,6044396897566194;0,5913345814388874;0,5894624231077829;0,5974859588125168;0,6188820540251404;0,591869483819203;0,5731479005081572;0,5840021401819154;0,5979133226324238;0,5947093317855796;0,011568464102990018;1501
927,7169365406037;110,00147698850976;0,7539618492126465;0,0692846691962974;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6178122492645092;0,587857715966836;0,606311848087724;0,5977534100026745;0,5731479005081572;0,5916020326290452;0,5838459481144691;0,6095212623696176;0,581326912787587;0,5947030497592295;0,5943882329489849;0,01309423302207344;1502
1880,0448896646499;737,2730216421539;1,2304800033569336;0,06656412549572417;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6132655790318267;0,5990906659534635;0,5833110457341535;0,6060443968975662;0,5966836052420433;0,6095212623696176;0,5819737897833646;0,5835784969243113;0,5823970037453183;0,5789192081326913;0,5934785053814355;0,012317011307281578;1503
2491,3129073381424;749,5346694529834;1,3920192956924438;0,06614973170898036;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5996255683337791;0,5696710350361059;0,6097887135597754;0,5752875100294196;0,6031024338058304;0,6226263706873496;0,5916020326290452;0,5830435945439957;0,5858747993579454;0,5815944355270198;0,5922216493510266;0,015618560705364562;1504
905,5303130149841;453,12543272428456;0,40746819972991943;0,017900415065449066;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6239636266381385;0,6164749933137202;0,5792992778817866;0,5589729874297941;0,6148702861727735;0,5496121957742712;0,6202193099759294;0,6143353837924579;0,5936329588014981;0,5468164794007491;0,5918197499181119;0,029209001310987935;1505
1031,1619599342346;389,9615443633051;0,507562780380249;0,023892748194249726;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;10;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5916020326290452;0,5694035838459481;0,5667290719443702;0,5875902647766783;0,5841133993046269;0,5838459481144691;0,5926718373896764;0,624765980208612;0,5914927768860353;0,6163723916532905;0,5908587286752751;0,01718375853991176;1506
953,1091521263122;213,58419521427604;0,5211279392242432;0,04132426886226976;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;10;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5640545600427922;0,5937416421503076;0,5739502540786307;0,5889275207274672;0,6028349826156726;0,5894624231077829;0,5937416421503076;0,5966836052420433;0,5874799357945425;0,6062065275548422;0,5897083093464388;0,011990654501604097;1507
542,9036650180817;254,40111313611936;0,34810307025909426;0,02753749370792272;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5921369350093608;0,6071142016581974;0,5429259160203262;0,5645894624231078;0,6006953730944102;0,622091468307034;0,6287777480609789;0,6258357849692431;0,5615302300695559;0,5398608881754949;0,588555800778771;0,03224112123579597;1508
675,001328778267;278,6716079884229;0,357878303527832;0,022598957272708126;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,618079700454667;0,5851832040652581;0,5461353303022198;0,6079165552286707;0,576089863599893;0,5875902647766783;0,5926718373896764;0,6071142016581974;0,5666131621187801;0,5944355270197966;0,5881829646613838;0,020223052547566987;1509
2509,3753168344497;660,5682966046401;1,3580065011978149;0,09718772137406978;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5819737897833646;0,6097887135597754;0,5998930195239369;0,5742177052687885;0,5883926183471516;0,6084514576089863;0,5742177052687885;0,5809039850227333;0,5955056179775281;0,5588550026752274;0,5872199615036281;0,015494711108831237;1510
652,7489679098129;225,34934324289512;0,392836856842041;0,035737918528199776;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,578764375501471;0,5389141481679594;0,5677988767050013;0,5827761433538379;0,590532227868414;0,6279753944905054;0,5907996790585718;0,5792992778817866;0,6054039593365436;0,6016586409844836;0,5863922723348575;0,022542593402559475;1511
2558,5990676879883;709,3527302196846;1,3923561334609986;0,12778969337583126;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5755549612195774;0,5953463492912543;0,5768922171703664;0,5811714362128911;0,603637336186146;0,5822412409735224;0,6012302754747259;0,5814388874030489;0,5944355270197966;0,5716960941680043;0,5863644325119333;0,010747653141182745;1512
12,483224415779114;1,3389911912303736;0,04152815341949463;0,0129521264875987;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);constant;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5790318266916288;0,5913345814388874;0,5795667290719444;0,5875902647766783;0,589194971917625;0,5851832040652581;0,594543995720781;0,5809039850227333;0,5682182985553772;0,5818619582664526;0,5837429815527366;0,007163409250471524;1513
22,090378618240358;1,250976191550125;0,04378824234008789;0,017236283910865766;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);adaptive;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5790318266916288;0,5913345814388874;0,5795667290719444;0,5875902647766783;0,589194971917625;0,5851832040652581;0,594543995720781;0,5809039850227333;0,5682182985553772;0,5818619582664526;0,5837429815527366;0,007163409250471524;1513
12,504654717445373;1,3342643787250161;0,049977779388427734;0,01818508551372235;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);constant;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5784969243113132;0,5910671302487296;0,5798341802621022;0,5881251671569938;0,5883926183471516;0,5851832040652581;0,5942765445306232;0,5809039850227333;0,5682182985553772;0,5818619582664526;0,5836360010766736;0,007090806336113068;1515
22,15881998538971;1,2433895994944044;0,03811523914337158;0,007658860969934156;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);adaptive;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5784969243113132;0,5910671302487296;0,5798341802621022;0,5881251671569938;0,5883926183471516;0,5851832040652581;0,5942765445306232;0,5809039850227333;0,5682182985553772;0,5818619582664526;0,5836360010766736;0,007090806336113068;1515
669,641569519043;230,76820646990856;0,3940160274505615;0,024584535905254723;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6378710885263439;0,5579031826691628;0,5776945707408397;0,5528216100561647;0,6084514576089863;0,5707408397967371;0,590532227868414;0,6132655790318267;0,5695559122525414;0,550561797752809;0,5829398266303826;0,02753782322839095;1517
38,377226328849794;21,563665674143532;0,02022426128387451;0,0021728245232382187;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);adaptive;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6204867611660871;0,576089863599893;0,616742444503878;0,6199518587857716;0,6108585183204065;0,6250334313987698;0,5207274672372292;0,5135062851029687;0,5251471375066881;0,552434456928839;0,5780978224550531;0,04387259223791003;1518
35,83317840099335;20,013539720658283;0,031034564971923827;0,018366927805411236;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6121957742711955;0,5677988767050013;0,6164749933137202;0,6146028349826157;0,6111259695105643;0,6250334313987698;0,5207274672372292;0,5135062851029687;0,5251471375066881;0,5521669341894061;0,5758779704218159;0,042729737416448164;1519
28,040308547019958;22,84134251278998;0,023250985145568847;0,011146207316473472;MLPClassifier();;;;;;42;;;;1000;;relu;0.05;True;(50, 100, 50);constant;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6186146028349826;0,5562984755282161;0,6146028349826157;0,6199518587857716;0,6108585183204065;0,6250334313987698;0,5207274672372292;0,5135062851029687;0,5251471375066881;0,527019796682718;0,5731760408380367;0,04594707462055845;1520
7,128852605819702;0,6047299625218431;0,039403223991394044;0,009579782445077633;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);constant;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5653918159935811;0,5827761433538379;0,5667290719443702;0,5720780957475261;0,573415351698315;0,5784969243113132;0,576089863599893;0,5699384862262638;0,5537720706260032;0,5757089352594971;0,57143967587606;0,007717811807658413;1521
23,108443570137023;0,707857607590767;0,04831199645996094;0,016100911192908834;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);adaptive;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5653918159935811;0,5827761433538379;0,5667290719443702;0,5720780957475261;0,573415351698315;0,5784969243113132;0,576089863599893;0,5699384862262638;0,5537720706260032;0,5757089352594971;0,57143967587606;0,007717811807658413;1521
23,18132302761078;0,6726482599345489;0,03761141300201416;0,008160695581001966;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);adaptive;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5659267183738967;0,5830435945439957;0,566996523134528;0,5723455469376839;0,5731479005081572;0,578764375501471;0,5755549612195774;0,5694035838459481;0,5537720706260032;0,5751738897806313;0,5714129164471892;0,007676834020832041;1523
7,166531729698181;0,6003716737993694;0,04056367874145508;0,019574827082607868;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);constant;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5659267183738967;0,5830435945439957;0,566996523134528;0,5723455469376839;0,5731479005081572;0,578764375501471;0,5755549612195774;0,5694035838459481;0,5537720706260032;0,5751738897806313;0,5714129164471892;0,007676834020832041;1523
25,863799118995665;20,246565805890974;0,024010992050170897;0,006671604518578474;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);constant;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,6092538111794598;0,5562984755282161;0,6143353837924579;0,6124632254613533;0,607649104038513;0,6250334313987698;0,5207274672372292;0,5135062851029687;0,5251471375066881;0,527019796682718;0,5711434117928373;0,04405542463474838;1525
576,2374885082245;206,53698361699747;0,417891263961792;0,024264666271745696;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5897298742979407;0,5763573147900508;0,5365070874565392;0,5522867076758492;0,5386466969778015;0,5902647766782562;0,5833110457341535;0,5710082909868949;0,5510968432316747;0,5952380952380952;0,5684446733067257;0,020993358607084223;1526
607,5511595249176;268,2574428728157;0,41650516986846925;0,025778223991805002;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5736828028884728;0,5752875100294196;0,5621824017116877;0,5576357314790051;0,5490772933939556;0,5782294731211554;0,5496121957742712;0,5680663278951591;0,5588550026752274;0,6016586409844836;0,5674287379952838;0,014969178128401046;1527
520,9636204242706;201,36316956012908;0,4122208595275879;0,019356125086109312;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5562984755282161;0,5742177052687885;0,5410537576892217;0,552554158866007;0,5456004279219042;0,6039047873763038;0,5645894624231078;0,5464027814923776;0,5403959336543607;0,586677367576244;0,5611694857796532;0,020133293346292755;1528
819,342137336731;409,3386726729209;0,505337142944336;0,03937244451754864;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5474725862530089;0,6017651778550415;0,5469376838726933;0,5726129981278417;0,539449050548275;0,5362396362663814;0,5402514041187483;0,606311848087724;0,5406634563937934;0,5690208667736758;0,5600724708297183;0,024915646002679426;1529
464,38878242969514;267,66571299507103;0,41034660339355467;0,02907748693695722;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;2;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 2, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5538914148167959;0,5744851564589463;0,5431933672104841;0,5520192564856914;0,5303557100829098;0,5696710350361059;0,5694035838459481;0,5506820005349023;0,57223113964687;0,5492241840556448;0,5565156848174297;0,013730147680537935;1530
23,80281627178192;0,9321217720582529;0,04846644401550293;0,014919882355989456;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);adaptive;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5332976731746456;0,5426584648301684;0,5378443434073281;0,5423910136400107;0,5421235624498529;0,5378443434073281;0,5504145493447445;0,5450655255415887;0,5671482075976458;0,5823970037453183;0,5481184687138632;0,01442590358125127;1531
7,931676268577576;0,9200282160404635;0,050318670272827146;0,018779004253445888;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);constant;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5332976731746456;0,5426584648301684;0,5378443434073281;0,5423910136400107;0,5421235624498529;0,5378443434073281;0,5504145493447445;0,5450655255415887;0,5671482075976458;0,5823970037453183;0,5481184687138632;0,01442590358125127;1531
23,889430785179137;0,8991815722954171;0,04228076934814453;0,012888549436989562;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);adaptive;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5332976731746456;0,5415886600695373;0,5378443434073281;0,5421235624498529;0,5421235624498529;0,5373094410270126;0,5501470981545867;0,5456004279219042;0,5674157303370787;0,5829320492241841;0,5480382548215983;0,014667399674723762;1533
7,89283390045166;0,939008068803618;0,043205642700195314;0,014307833421255606;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);constant;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5332976731746456;0,5415886600695373;0,5378443434073281;0,5421235624498529;0,5421235624498529;0,5373094410270126;0,5501470981545867;0,5456004279219042;0,5674157303370787;0,5829320492241841;0,5480382548215983;0,014667399674723762;1533
1027,5444693088532;682,54023348375;0,5588347673416137;0,04662774637078664;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5306231612730676;0,5196576624765981;0,6044396897566194;0,5560310243380583;0,5726129981278417;0,536774538646697;0,5204600160470714;0,6004279219042524;0,5179240235420011;0,5192616372391653;0,5478212673351373;0,032131394808436714;1535
516,2740330219269;221,75689398523346;0,42905559539794924;0,019979775568851457;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5429259160203262;0,5370419898368548;0,5520192564856914;0,5520192564856914;0,5373094410270126;0,552554158866007;0,5501470981545867;0,5640545600427922;0,5510968432316747;0,5363830925628679;0,5475551612713504;0,008473987636338168;1536
485,11228306293486;130,88822265165786;0,4141418933868408;0,02306060033874219;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5699384862262638;0,525006686279754;0,5279486493714897;0,5520192564856914;0,5100294196309173;0,5814388874030489;0,5608451457608986;0,5434608184006419;0,5569823434991974;0,5444087747458534;0,5472078467803756;0,02064226530282534;1537
16,091476368904114;7,857795094556884;0,020574569702148438;0,0018082278554101107;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);adaptive;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5691361326557903;0,5913345814388874;0,5185878577159668;0,5667290719443702;0,573415351698315;0,5533565124364803;0,5576357314790051;0,5176565008025682;0,5168539325842697;0,5466176654301521;0,02888702213626701;1538
16,072453999519347;7,837354063909269;0,02937610149383545;0,009527679356235145;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);adaptive;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5691361326557903;0,5913345814388874;0,5185878577159668;0,5667290719443702;0,5726129981278417;0,5533565124364803;0,5576357314790051;0,5176565008025682;0,5168539325842697;0,5465374300731047;0,02881349932691842;1539
675,3123152971268;362,9373153003663;0,5184341907501221;0,04194899880404323;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5290184541321209;0,5541588660069537;0,566996523134528;0,5910671302487296;0,5362396362663814;0,4910403851297138;0,5391815993581172;0,591869483819203;0,5446762974852862;0,5115034777956127;0,5455751853376647;0,030468216004231365;1540
570,816035938263;351,76275752171193;0,38251054286956787;0,014124783282012407;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5169831505750201;0,5260764910403851;0,54854239101364;0,5116341267718642;0,5217972719978604;0,5068200053490238;0,5207274672372292;0,5707408397967371;0,5976457998929909;0,6171749598715891;0,5438142503546339;0,0367198085350272;1541
491,72898387908936;217,48878076543852;0,4311438798904419;0,02831237766480014;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,551216902915218;0,5613800481412142;0,5306231612730676;0,552554158866007;0,5239368815191228;0,5402514041187483;0,5779620219309975;0,5520192564856914;0,5369181380417335;0,5109684323167469;0,5437830405608548;0,018388414369434614;1542
547,5884665966034;175,08305224062698;0,45537734031677246;0,06263902595012459;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5415886600695373;0,5386466969778015;0,5461353303022198;0,5381117945974859;0,5207274672372292;0,5683337790853169;0,5568333779085317;0,5234019791388071;0,5470840021401819;0,5350454788657036;0,5415908566322816;0,013520634045269687;1543
8,96768352985382;7,732505410399965;0,03431141376495361;0,008418946430330568;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);constant;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5691361326557903;0,5883926183471516;0,5185878577159668;0,5667290719443702;0,5726129981278417;0,5094945172506018;0,5576357314790051;0,5042803638309257;0,5085607276618512;0,5396901000559372;0,03227497350390357;1544
8,98003420829773;7,757228532798897;0,0310316801071167;0,010272133106354683;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);constant;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5691361326557903;0,5883926183471516;0,5185878577159668;0,5667290719443702;0,5723455469376839;0,509227066060444;0,5576357314790051;0,5042803638309257;0,5082932049224184;0,5396098575439624;0,032298740175733275;1545
816,640600824356;699,9872153326129;0,560165810585022;0,07137553989634474;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5089596148702862;0,5062851029687082;0,5006686279753945;0,5710082909868949;0,534100026745119;0,5282161005616475;0,511901577962022;0,5330302219844878;0,5936329588014981;0,6067415730337079;0,5394544095889766;0,035983878299788295;1546
494,2726603269577;374,24158062208363;0,39221887588500975;0,02296655360118827;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5207274672372292;0,5565659267183739;0,5263439422305429;0,5282161005616475;0,505215298208077;0,5402514041187483;0,5110992243915485;0,5712757421770527;0,5050829320492242;0,6110219368646335;0,5375799974557077;0,03193654213643879;1547
15,513836431503297;0,39252528962660554;0,039197015762329104;0,011728431779008406;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);adaptive;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5306231612730676;0,5225996255683337;0,5252741374699117;0,5231345279486493;0,5193902112864403;0,5258090398502273;0,5883926183471516;0,5661941695640546;0,5329052969502408;0,5374531835205992;0,5371775971778676;0,021268007872663492;1548
463,37893471717837;173,77956460004037;0,5267055034637451;0,0663516902145249;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5453329767317464;0,5255415886600695;0,5554961219577427;0,5466702326825355;0,5012035303557101;0,5533565124364803;0,5415886600695373;0,5068200053490238;0,5377207062600321;0,5339753879079722;0,5347705722410849;0,017541745780284373;1549
430,1229005813599;173,53662973639302;0,49515681266784667;0,032111397569638676;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5322278684140145;0,551216902915218;0,5322278684140145;0,5378443434073281;0,5295533565124365;0,5456004279219042;0,5375768922171704;0,5362396362663814;0,5077581594435527;0,5123060460139112;0,5322551501525932;0,012721836122187382;1550
15,635951256752014;0,6158286737088833;0,03763666152954102;0,01128027425065657;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);adaptive;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5306231612730676;0,5231345279486493;0,5247392350895962;0,5217972719978604;0,5196576624765981;0,525006686279754;0,5883926183471516;0,5017384327360257;0,5337078651685393;0,5409309791332263;0,5309728440450467;0,021462909712217565;1551
384,8530037879944;99,55129351540687;0,5149903059005737;0,04191373861867522;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5242043327092806;0,5151109922439154;0,5185878577159668;0,5324953196041723;0,5177855041454934;0,5536239636266381;0,5217972719978604;0,5413212088793795;0,5304975922953451;0,5403959336543607;0,5295819976872412;0,011836603320324168;1552
363,2568240642548;328,12854530026345;0,4108343839645386;0,04617901800897562;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.1;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5217972719978604;0,5282161005616475;0,5295533565124365;0,5140411874832843;0,5033431398769724;0,5402514041187483;0,5244717838994384;0,5116341267718642;0,5037453183520599;0,6094168004280364;0,5286470490002347;0,02913233241010149;1553
495,5416311740875;234,77255008615816;0,5447206974029541;0,039553044555900696;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5204600160470714;0,5239368815191228;0,5442631719711153;0,5464027814923776;0,505215298208077;0,5439957207809575;0,5145760898635999;0,5268788446108585;0,5131086142322098;0,5230069555912252;0,5261844374316615;0,013589329192355002;1554
548,8027535438538;174,37568250932503;0,5900363206863404;0,05631582363589465;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;1.3;;;;;;;20;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 1.3, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5231345279486493;0,5381117945974859;0,5033431398769724;0,5177855041454934;0,5161807970045467;0,5464027814923776;0,522332174378176;0,5314255148435411;0,5147137506688069;0,5283574103798823;0,5241787395335932;0,011794337871318566;1555
419,8015866279602;88,195524080617;0,537272310256958;0,028823239473646716;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5012035303557101;0,5464027814923776;0,5234019791388071;0,5225996255683337;0,5319604172238567;0,5431933672104841;0,5290184541321209;0,5140411874832843;0,5093632958801498;0,5107009095773141;0,5231885548062438;0,014016109377246259;1556
352,67560398578644;167,4896753326473;0,4028779983520508;0,04380287643503656;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;10;1;0.001;sparsemax;8;2;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 10, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 2, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5030756886868146;0,5108317732013907;0,5686012302754747;0,5081572612998128;0,53276277079433;0,5284835517518053;0,5094945172506018;0,5362396362663814;0,5112359550561798;0,5227394328517924;0,5231621817434583;0,01861743189901224;1557
605,0649361610413;298,4067341089883;0,5435860872268676;0,06333183614243036;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.1;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5086921636801284;0,522332174378176;0,5100294196309173;0,5274137469911742;0,539449050548275;0,5383792457876437;0,5322278684140145;0,4971917625033431;0,5139111824505083;0,5347779561262708;0,522440457051045;0,01367254330313152;1558
3,8684980154037474;0,5512625708940309;0,03802509307861328;0,011018829390113798;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);constant;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5306231612730676;0,5231345279486493;0,5247392350895962;0,5217972719978604;0,5196576624765981;0,525006686279754;0,5006686279753945;0,5017384327360257;0,5337078651685393;0,5409309791332263;0,5222004450078711;0,012076133964001656;1559
3,878364682197571;0,5550290774518457;0,03872096538543701;0,007771509317626479;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);constant;0.001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5306231612730676;0,5225996255683337;0,5252741374699117;0,5231345279486493;0,5193902112864403;0,5258090398502273;0,5004011767852367;0,4990639208344477;0,5329052969502408;0,5374531835205992;0,5216654281487154;0,012071558572613295;1560
452,5952963352203;139,71962261440916;0,5288227796554565;0,03970630499410381;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.02;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;8;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['auc', 'balanced_accuracy', 'accuracy'], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__n_a': 8, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5172506017651779;0,536774538646697;0,5086921636801284;0,5480074886333244;0,5199251136667559;0,5402514041187483;0,5145760898635999;0,5311580636533833;0,49785981808453716;0,49919743178170145;0,5213692713894054;0,016338489954701278;1561
9,196858477592468;5,652978610346003;0,03642792701721191;0,017301409379641346;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);adaptive;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5244717838994384;0,5084247124899706;0,5215298208077026;0,5201925648569136;0,5127039315324953;0,5108317732013907;0,5565659267183739;0,5056179775280899;0,5037453183520599;0,5165554790932302;0,015252711521424314;1562
9,106541967391967;5,6153267202202715;0,03176772594451904;0,011662223493449751;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);adaptive;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5244717838994384;0,5084247124899706;0,5215298208077026;0,5201925648569136;0,5127039315324953;0,5108317732013907;0,5565659267183739;0,5056179775280899;0,5037453183520599;0,5165554790932302;0,015252711521424314;1562
4,781477403640747;5,708560055177901;0,029468989372253417;0,009552670193539416;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);constant;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,518320406525809;0,5014709815458679;0,5014709815458679;0,5201925648569136;0,5127039315324953;0,5084247124899706;0,5565659267183739;0,5056179775280899;0,5037453183520599;0,5129983782641314;0,015930940836673065;1564
4,764036512374878;5,768121803625677;0,03099203109741211;0,011443807251690905;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);constant;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,518320406525809;0,5014709815458679;0,5014709815458679;0,5201925648569136;0,5127039315324953;0,5084247124899706;0,5565659267183739;0,5056179775280899;0,5037453183520599;0,5129983782641314;0,015930940836673065;1564
15,038317155838012;1,5603651793619755;0,035514998435974124;0,008498464418569454;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);adaptive;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5375768922171704;0,5290184541321209;0,5016051364365971;0,5016051364365971;0,5078631508497692;0,012860551085651267;1566
3,4760135650634765;1,430099184768705;0,04585466384887695;0,02462168865461765;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);constant;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5375768922171704;0,5290184541321209;0,5016051364365971;0,5016051364365971;0,5078631508497692;0,012860551085651267;1566
3,4779781341552733;1,4534489945923497;0,04638383388519287;0,020443788936697547;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);constant;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5365070874565392;0,5290184541321209;0,5016051364365971;0,5016051364365971;0,5077561703737061;0,01261503853473195;1568
15,106227326393128;1,3771967102525136;0,03832070827484131;0,015369793596450609;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);adaptive;0.001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5365070874565392;0,5290184541321209;0,5016051364365971;0,5016051364365971;0,5077561703737061;0,01261503853473195;1568
8,461656165122985;2,6971104340180667;0,03651237487792969;0,017903375556649108;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);adaptive;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,4969243113131853;0,5017384327360257;0,5116341267718642;0,5204600160470714;0,5116341267718642;0,507889810109655;0,5094945172506018;0,5056179775280899;0,5029427501337613;0,5069807050207986;0,006397482704067501;1570
8,511190533638;2,633727473488663;0,03865036964416504;0,01808141396853468;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);adaptive;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,4969243113131853;0,5014709815458679;0,5116341267718642;0,5204600160470714;0,5116341267718642;0,507889810109655;0,5094945172506018;0,5056179775280899;0,5029427501337613;0,5069539599017828;0,006419862385885083;1571
2,0088623762130737;0,9135877557010418;0,03467440605163574;0,01472559285508638;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(100,);constant;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5204600160470714;0,5116341267718642;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5044665207347652;0,006118165224951302;1572
2,0388315200805662;0,8936124493362012;0,03778860569000244;0,011496515953101432;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(100,);constant;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5204600160470714;0,5116341267718642;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5044665207347652;0,006118165224951302;1572
13,250810694694518;0,17863492323273153;0,05558061599731445;0,013457594501889237;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);adaptive;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
13,257124996185302;0,12376865622320038;0,04895608425140381;0,014829560010589259;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);adaptive;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
3,7245113372802736;0,08838378378597735;0,05487170219421387;0,014413543364677962;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);constant;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
13,22237479686737;0,06479353151842579;0,05957903861999512;0,020440718985512408;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);adaptive;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
2,763655591011047;0,08026830927092604;0,04215683937072754;0,021679651740277563;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);constant;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
3,686015748977661;0,05344788787264947;0,05336055755615234;0,021337831348313685;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);constant;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
9,695223689079285;0,0456207839209001;0,040231847763061525;0,013138333772405177;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);adaptive;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
2,786579966545105;0,08233263296798642;0,046878623962402347;0,01790369465253292;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);constant;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
13,225483918190003;0,0817759788939994;0,04360740184783936;0,012610956407437597;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);adaptive;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
2,730540561676025;0,0551937221161473;0,049554181098937986;0,018127928470767152;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);constant;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
13,261893558502198;0,18802627418835577;0,04430534839630127;0,021489174502428217;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);adaptive;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
13,236740469932556;0,12285259273676326;0,04496667385101318;0,0166079746113875;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);adaptive;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
2,7445672750473022;0,04666847508952125;0,05464413166046143;0,019177750985541645;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);constant;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
3,7051048994064333;0,05420358105279257;0,058647656440734865;0,019404985944125038;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);constant;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
3,695587968826294;0,04814413314786049;0,05646755695343018;0,017641852429954998;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);constant;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
3,6847563982009888;0,07978708396021274;0,040237712860107425;0,010999209196382585;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(200, 100);constant;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
2,7589367151260378;0,028821256756853875;0,05358116626739502;0,0150012203952626;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);constant;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
9,75248761177063;0,22914105489499606;0,04035177230834961;0,01719566590512136;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);adaptive;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
9,674627208709717;0,059447367302774376;0,04455087184906006;0,021356931519544497;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);adaptive;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
9,68766210079193;0,04563213940681598;0,04503333568572998;0,02188173368649029;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);adaptive;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
14,396689128875732;0,30931753735092693;0,04554228782653809;0,024481677492647992;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);adaptive;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
3,6655658960342405;0,05269688784165242;0,05129849910736084;0,027015803289755294;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(200, 100);constant;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
14,307810306549072;0,06861122023862301;0,03094499111175537;0,007465141527947176;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);adaptive;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
14,293052649497985;0,06341230883296929;0,052187657356262206;0,02360753537830113;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);adaptive;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
14,328577542304993;0,06580856963478161;0,0375246524810791;0,011476482581819604;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);adaptive;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
9,680044436454773;0,05703900851376304;0,039747071266174314;0,012182177132551977;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);adaptive;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
9,681429839134216;0,04672707131924178;0,043423128128051755;0,009377839970303682;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);adaptive;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
9,636962699890137;0,047790605479604314;0,03369395732879639;0,011540539915562559;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);adaptive;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
9,708952927589417;0,05947407623193719;0,04090316295623779;0,01961979399462231;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);adaptive;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
2,7397541761398316;0,02970464347118322;0,04720492362976074;0,01691788586616879;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);constant;0.001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
2,754506063461304;0,0679046687784775;0,05010988712310791;0,017072886987551397;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);constant;0.001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
2,722290062904358;0,02660332363872858;0,047927045822143556;0,021818988531003405;MLPClassifier();;;;;;42;;;;1000;;logistic;0.05;True;(50, 100, 50);constant;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.05, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
2,754757261276245;0,03369974484466179;0,04645874500274658;0,015485898331937187;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);constant;0.0001;0.6;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.6, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
2,740015721321106;0,04107665722728191;0,04330267906188965;0,01049171954018127;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);constant;0.0001;0.3;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.3, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
2,7555365324020387;0,06742910020003241;0,03899571895599365;0,010525303275667789;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);constant;0.0001;0.0;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
2,750611901283264;0,0616061648851429;0,04338936805725098;0,014652038397522743;MLPClassifier();;;;;;42;;;;1000;;logistic;0.0001;True;(50, 100, 50);constant;0.0001;0.8999999999999999;sgd;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'constant', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.8999999999999999, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'sgd'};0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5014709815458679;0,5017384327360257;0,5017384327360257;0,5016051364365971;0,5016051364365971;0,5015513027620452;0,00010702353477839187;1574
0,20861217975616456;0,06390935084436469;0,0;0,0;DecisionTreeClassifier();balanced;gini;1;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1614
0,08438336849212646;0,026807949562267182;0,0;0,0;DecisionTreeClassifier();balanced;gini;1;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1630
0,1322999954223633;0,017392651453723207;0,0;0,0;DecisionTreeClassifier();balanced;gini;1;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1629
0,11962695121765136;0,018265316858994636;0,0;0,0;DecisionTreeClassifier();balanced;gini;4;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1612
0,1006103515625;0,016826623476258545;0,0;0,0;DecisionTreeClassifier();balanced;gini;4;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1623
0,08920731544494628;0,018283264507680776;0,0;0,0;DecisionTreeClassifier();balanced;gini;4;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1617
0,09241294860839844;0,01543699947930181;0,0;0,0;DecisionTreeClassifier();balanced;gini;7;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1620
0,08517735004425049;0,015915734111691206;0,0;0,0;DecisionTreeClassifier();balanced;gini;7;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1610
0,0790858507156372;0,020492066316077622;0,0;0,0;DecisionTreeClassifier();balanced;gini;7;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1628
0,07465038299560547;0,012883530125664592;0,0;0,0;DecisionTreeClassifier();balanced;gini;10;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1627
0,08286705017089843;0,02399083865979976;0,0;0,0;DecisionTreeClassifier();balanced;gini;10;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1625
0,06434879302978516;0,011493191344053131;0,0;0,0;DecisionTreeClassifier();balanced;gini;10;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1624
0,06673080921173095;0,014185352745047664;0,0;0,0;DecisionTreeClassifier();balanced;gini;;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1622
0,07971093654632569;0,01583248159314758;0,0;0,0;DecisionTreeClassifier();balanced;gini;;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1621
0,06751699447631836;0,011062704178386203;0,0;0,0;DecisionTreeClassifier();balanced;gini;;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1619
0,06823010444641113;0,011153294238604795;0,0;0,0;DecisionTreeClassifier();balanced;entropy;1;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1618
0,04802041053771973;0,0020351885453301875;0,0;0,0;DecisionTreeClassifier();balanced;entropy;1;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1659
0,06769733428955078;0,015758574595278112;0,0;0,0;DecisionTreeClassifier();balanced;entropy;1;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1653
0,11108195781707764;0,013406029550149797;0,0;0,0;DecisionTreeClassifier();balanced;entropy;4;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1654
0,09949741363525391;0,01581327136254818;0,0;0,0;DecisionTreeClassifier();balanced;entropy;4;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1655
0,08137662410736084;0,02193401223533029;0,0;0,0;DecisionTreeClassifier();balanced;entropy;4;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1656
0,06672141551971436;0,01316126665548918;0,0;0,0;DecisionTreeClassifier();balanced;entropy;7;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1669
0,09318642616271973;0,02736110986993026;0,0;0,0;DecisionTreeClassifier();balanced;entropy;7;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1657
0,07203135490417481;0,013016227051011036;0,0;0,0;DecisionTreeClassifier();balanced;entropy;7;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1658
0,0780716896057129;0,019765226173128765;0,0;0,0;DecisionTreeClassifier();balanced;entropy;10;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1660
0,07693817615509033;0,015391819178622333;0,0;0,0;DecisionTreeClassifier();balanced;entropy;10;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1668
0,07541453838348389;0,015839582994319742;0,0;0,0;DecisionTreeClassifier();balanced;entropy;10;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1661
0,06130175590515137;0,009838255646377516;0,0;0,0;DecisionTreeClassifier();balanced;entropy;;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1662
0,07111244201660157;0,011021731813391429;0,0;0,0;DecisionTreeClassifier();balanced;entropy;;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1663
0,06795241832733154;0,009202213647961728;0,0;0,0;DecisionTreeClassifier();balanced;entropy;;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1664
0,059815287590026855;0,011626199802884818;0,0;0,0;DecisionTreeClassifier();;gini;1;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1665
0,04415874481201172;0,002754988679555523;0,0;0,0;DecisionTreeClassifier();;gini;1;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1651
0,08337602615356446;0,022318638137066776;0,0;0,0;DecisionTreeClassifier();;gini;1;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1650
0,08409650325775146;0,0160505909844847;0,0;0,0;DecisionTreeClassifier();;gini;4;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1648
0,0908674955368042;0,019100012198454808;0,0;0,0;DecisionTreeClassifier();;gini;4;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1633
0,08643922805786133;0,017916301498216474;0,0;0,0;DecisionTreeClassifier();;gini;4;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1634
0,09889447689056396;0,023173338960320318;0,0;0,0;DecisionTreeClassifier();;gini;7;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1635
0,0851365327835083;0,018276957912093487;0,0;0,0;DecisionTreeClassifier();;gini;7;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1636
0,10235815048217774;0,01208891192145653;0,0;0,0;DecisionTreeClassifier();;gini;7;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1637
0,07065975666046143;0,015164875874065068;0,0;0,0;DecisionTreeClassifier();;gini;10;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1639
0,06844196319580079;0,014286404263833662;0,0;0,0;DecisionTreeClassifier();;gini;10;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1640
0,06337912082672119;0,017379722407648845;0,0;0,0;DecisionTreeClassifier();;gini;10;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1641
0,0625314712524414;0,008180410105680588;0,0;0,0;DecisionTreeClassifier();;gini;;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1642
0,07117781639099122;0,017044347682488897;0,0;0,0;DecisionTreeClassifier();;gini;;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1643
0,05863280296325683;0,011252668099920253;0,0;0,0;DecisionTreeClassifier();;gini;;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1644
0,07023799419403076;0,011300529453957625;0,0;0,0;DecisionTreeClassifier();;entropy;1;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1645
0,04387063980102539;0,003165338383546074;0,0;0,0;DecisionTreeClassifier();;entropy;1;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1647
0,044687414169311525;0,004396049372382092;0,0;0,0;DecisionTreeClassifier();;entropy;1;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 1, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1631
0,07268829345703125;0,016883945601776487;0,0;0,0;DecisionTreeClassifier();;entropy;4;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1646
0,08768250942230224;0,015861141888255756;0,0;0,0;DecisionTreeClassifier();;entropy;4;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1638
0,07812411785125732;0,013784309945461162;0,0;0,0;DecisionTreeClassifier();;entropy;4;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 4, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1649
0,07469699382781983;0,01584223707681131;0,0;0,0;DecisionTreeClassifier();;entropy;7;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1667
0,06720314025878907;0,013505517661946336;0,0;0,0;DecisionTreeClassifier();;entropy;7;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1666
0,06519274711608887;0,0128118056088853;0,0;0,0;DecisionTreeClassifier();;entropy;7;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1652
0,053797006607055664;0,007701528484565479;0,0;0,0;DecisionTreeClassifier();;entropy;10;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1632
0,05061674118041992;0,004284660074788905;0,0;0,0;DecisionTreeClassifier();;entropy;10;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1611
0,054803776741027835;0,012818016852779529;0,0;0,0;DecisionTreeClassifier();;entropy;10;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 10, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1613
0,05526862144470215;0,01233218165267525;0,0;0,0;DecisionTreeClassifier();;entropy;;1;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 1, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1616
0,06713259220123291;0,012861680428976086;0,0;0,0;DecisionTreeClassifier();;entropy;;5;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 5, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1626
0,06376872062683106;0,010211201471708791;0,0;0,0;DecisionTreeClassifier();;entropy;;10;1;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;;;;;;1615
