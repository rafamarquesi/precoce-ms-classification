mean_fit_time;std_fit_time;mean_score_time;std_score_time;param_classifier__estimator;param_classifier__estimator__class_weight;param_classifier__estimator__criterion;param_classifier__estimator__max_depth;param_classifier__estimator__min_samples_leaf;param_classifier__estimator__min_samples_split;param_classifier__estimator__random_state;param_classifier__estimator__splitter;param_classifier__estimator__C;param_classifier__estimator__dual;param_classifier__estimator__max_iter;param_classifier__estimator__penalty;param_classifier__estimator__activation;param_classifier__estimator__alpha;param_classifier__estimator__early_stopping;param_classifier__estimator__hidden_layer_sizes;param_classifier__estimator__learning_rate;param_classifier__estimator__learning_rate_init;param_classifier__estimator__momentum;param_classifier__estimator__solver;param_classifier__estimator__max_features;param_classifier__estimator__n_estimators;param_classifier__estimator__n_jobs;param_classifier__estimator__colsample_bytree;param_classifier__estimator__gamma;param_classifier__estimator__max_delta_step;param_classifier__estimator__objective;param_classifier__estimator__reg_alpha;param_classifier__estimator__reg_lambda;param_classifier__estimator__subsample;param_classifier__estimator__tree_method;param_classifier__estimator__cat_emb_dim;param_classifier__estimator__clip_value;param_classifier__estimator__lambda_sparse;param_classifier__estimator__mask_type;param_classifier__estimator__n_a;param_classifier__estimator__n_independent;param_classifier__estimator__n_shared;param_classifier__estimator__n_steps;param_classifier__estimator__optimizer_fn;param_classifier__estimator__optimizer_params;param_classifier__estimator__scheduler_fn;param_classifier__estimator__scheduler_params;param_classifier__estimator__seed;param_classifier__estimator__verbose;params;split0_test_score;split1_test_score;split2_test_score;split3_test_score;split4_test_score;mean_test_score;std_test_score;rank_test_score
32,82512407302856;0,6354168947790546;0,9231397628784179;0,033177648302327174;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42)";;entropy;;;;42;;;;;;;;;;;;;;0.75;1000;-1;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,6121923789502414;0,6162430411759052;0,6131487983829422;0,6129662341544216;0,6117204630655695;0,613254183145816;0,001581582645846312;1
2,055601644515991;0,10102000637211737;0,11972041130065918;0,003629160341810296;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;1000;-1;0.75;0.05;1.0;binary:logistic;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6089692629953152;0,6066042597805001;0,6013140274522932;0,6042413269707607;0,604794909881194;0,6051847574160127;0,0025440936303534624;2
0,17241182327270507;0,024467029362874173;0,02006669044494629;0,001955188218160263;DecisionTreeClassifier();;gini;;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,5557463631211861;0,5726682006985054;0,5552317244782947;0,5534273533576228;0,5758056210532021;0,5625758525417622;0,009603701851513047;3
1163,3028626918792;292,3166958046428;3,911709117889404;0,3204371689909411;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5035748500690054;0,5473011471752072;0,5506930577845657;0,5165348642094247;0,5697796945116693;0,5375767227499745;0,024093655688083374;4
5,714581441879273;1,6027026915495475;0,054821109771728514;0,008887596433665743;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,5182857119535631;0,5130284973871903;0,5292882284840218;0,5153891024993574;0,49680780253403556;0,5145598685716336;0,010478311599014271;5
0,12933835983276368;0,020140258564458488;0,020907068252563478;0,0006596134203970611;LinearSVC();;;;;;42;;0.001;False;10000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,5066811850795381;0,5100704359265713;0,5073598500993536;0,5059317578321584;0,508342918495264;0,5076772294865771;0,0014359724477387202;6
0,3783237934112549;0,6203434835419792;0,021677732467651367;0,0005575586565814393;GaussianNB();;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': GaussianNB()};0,4590469450266257;0,4623955791225294;0,46175770905150293;0,45613129983310824;0,4500353062175959;0,4578733678502724;0,004503016675106233;7
