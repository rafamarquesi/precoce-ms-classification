mean_fit_time;std_fit_time;mean_score_time;std_score_time;param_classifier__estimator;param_classifier__estimator__class_weight;param_classifier__estimator__criterion;param_classifier__estimator__max_depth;param_classifier__estimator__min_samples_leaf;param_classifier__estimator__min_samples_split;param_classifier__estimator__random_state;param_classifier__estimator__splitter;param_classifier__estimator__C;param_classifier__estimator__dual;param_classifier__estimator__max_iter;param_classifier__estimator__penalty;param_classifier__estimator__activation;param_classifier__estimator__alpha;param_classifier__estimator__early_stopping;param_classifier__estimator__hidden_layer_sizes;param_classifier__estimator__learning_rate;param_classifier__estimator__learning_rate_init;param_classifier__estimator__momentum;param_classifier__estimator__solver;param_classifier__estimator__max_features;param_classifier__estimator__n_estimators;param_classifier__estimator__n_jobs;param_classifier__estimator__colsample_bytree;param_classifier__estimator__gamma;param_classifier__estimator__max_delta_step;param_classifier__estimator__num_class;param_classifier__estimator__objective;param_classifier__estimator__reg_alpha;param_classifier__estimator__reg_lambda;param_classifier__estimator__subsample;param_classifier__estimator__tree_method;param_classifier__estimator__cat_emb_dim;param_classifier__estimator__clip_value;param_classifier__estimator__lambda_sparse;param_classifier__estimator__mask_type;param_classifier__estimator__n_a;param_classifier__estimator__n_independent;param_classifier__estimator__n_shared;param_classifier__estimator__n_steps;param_classifier__estimator__optimizer_fn;param_classifier__estimator__optimizer_params;param_classifier__estimator__scheduler_fn;param_classifier__estimator__scheduler_params;param_classifier__estimator__seed;param_classifier__estimator__verbose;params;split0_test_score;split1_test_score;split2_test_score;split3_test_score;split4_test_score;mean_test_score;std_test_score;rank_test_score
401,26125292778016;19,703161040338607;2,0371848583221435;0,3099404171080892;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42)";;entropy;;;;42;;;;;;;;;;;;;;0.75;1000;-1;;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,3533177004852293;0,3618428102113753;0,3639972610400588;0,3662371589315836;0,3553630841126642;0,36015160295618226;0,004986289107243378;1
75,53629579544068;16,106131164866504;0,6406619071960449;0,026720298488173946;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42;;;;;;;;;;0.01;;;;;1000;-1;0.75;0.05;1.0;6;multi:softmax;0;0.01;0.75;hist;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__num_class': 6, 'classifier__estimator__objective': 'multi:softmax', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,3420697786649944;0,3415057143269675;0,3371161616096831;0,3399389371488721;0,3366234003370597;0,33945079841751535;0,0022255212999432346;2
2,7349693775177;0,14087064150232803;0,02177462577819824;0,002607322461152003;DecisionTreeClassifier();;gini;;10;100;42;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,3158148759076103;0,3138761172230487;0,3084266208709888;0,30956667567353596;0,3088489493146331;0,3113066477979634;0,002976193331889113;3
224,36662340164185;27,299825804162094;0,06021261215209961;0,011028131808493902;MLPClassifier();;;;;;42;;;;1000;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,28954245051456895;0,2931594693183816;0,30251232782223303;0,3014443014573763;0,3151890855549784;0,30036952693350766;0,008883429160589531;4
6175,853392267227;7315,736454552596;4,320427703857422;0,27422045746052276;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;;20;1;0.001;sparsemax;64;5;5;10;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,28256606665184325;0,2853779015901778;0,34003895199609135;0,2882589786499105;0,22723015904621172;0,28469441158684694;0,035729152305249215;5
2,024633598327637;0,64753061885324;0,03723397254943848;0,005794491236875033;GaussianNB();;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': GaussianNB()};0,21861628864880098;0,21765915613369027;0,21350170476264882;0,21166749874590604;0,21280670579792912;0,21485027081779506;0,0027639664787553176;6
4,077618408203125;0,10809408984102721;0,02508120536804199;0,0031502722603991874;LinearSVC();;;;;;42;;0.001;False;10000;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,21535965595018888;0,21128937288864513;0,21133619088974998;0,21136732407844638;0,21364554406152303;0,21259961757371068;0,0016458012903444368;7
