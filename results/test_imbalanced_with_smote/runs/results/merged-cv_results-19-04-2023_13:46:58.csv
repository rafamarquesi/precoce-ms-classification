mean_fit_time;std_fit_time;mean_score_time;std_score_time;param_classifier__estimator;param_classifier__estimator__class_weight;param_classifier__estimator__criterion;param_classifier__estimator__max_depth;param_classifier__estimator__min_samples_leaf;param_classifier__estimator__min_samples_split;param_classifier__estimator__random_state;param_classifier__estimator__splitter;param_classifier__estimator__C;param_classifier__estimator__dual;param_classifier__estimator__max_iter;param_classifier__estimator__penalty;param_classifier__estimator__activation;param_classifier__estimator__alpha;param_classifier__estimator__early_stopping;param_classifier__estimator__hidden_layer_sizes;param_classifier__estimator__learning_rate;param_classifier__estimator__learning_rate_init;param_classifier__estimator__momentum;param_classifier__estimator__solver;param_classifier__estimator__max_features;param_classifier__estimator__n_estimators;param_classifier__estimator__n_jobs;param_classifier__estimator__colsample_bytree;param_classifier__estimator__gamma;param_classifier__estimator__max_delta_step;param_classifier__estimator__objective;param_classifier__estimator__reg_alpha;param_classifier__estimator__reg_lambda;param_classifier__estimator__subsample;param_classifier__estimator__tree_method;param_classifier__estimator__cat_emb_dim;param_classifier__estimator__clip_value;param_classifier__estimator__lambda_sparse;param_classifier__estimator__mask_type;param_classifier__estimator__n_a;param_classifier__estimator__n_independent;param_classifier__estimator__n_shared;param_classifier__estimator__n_steps;param_classifier__estimator__optimizer_fn;param_classifier__estimator__optimizer_params;param_classifier__estimator__scheduler_fn;param_classifier__estimator__scheduler_params;param_classifier__estimator__seed;param_classifier__estimator__verbose;param_classifier__estimator__num_class;params;split0_test_score;split1_test_score;split2_test_score;split3_test_score;split4_test_score;mean_test_score;std_test_score;rank_test_score
244,17516412734983;5,826735884176642;1,2758875370025635;0,0729578174830143;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42)";;entropy;;;;42,0;;;;;;;;;;;;;;0.75;1000,0;-1,0;;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,6678576644866185;0,6706297738605721;0,6721743538587442;0,6691791067309903;0,6765190953506783;0,6712719988575208;0,0029932121793505;1
73,69237155914307;0,932955112226588;1,1856140613555908;0,0376351694945873;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42)";;entropy;;;;42,0;;;;;;;;;;;;;;0.75;1000,0;-1,0;;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,6617679969838713;0,6704603298783113;0,6608863780464752;0,6639088170130227;0,6681917844038271;0,6650430612651015;0,0037027510875452;1
99,485724401474;4,251650756337314;1,0338690280914309;0,0322409017907375;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42)";;entropy;;;;42,0;;;;;;;;;;;;;;0.75;1000,0;-1,0;;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,655784556130566;0,670409548550204;0,6534301569192585;0,6607189758191597;0,6739514823347862;0,6628589439507949;0,0080446813378582;1
5,008563041687012;0,2730846597174182;0,1431707859039306;0,0091371253894783;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42,0;;;;;;;;;;0.01;;;;;1000,0;-1,0;0.75;0.05;1.0;binary:logistic;0,0;0.01;0.75;hist;;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6445281612056981;0,6609329845042939;0,645108074361082;0,6458002780626153;0,657304104671878;0,6507347205611135;0,0069525627550299;2
10,469129085540771;2,050247962342701;0,1314401149749756;0,0144873032797934;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42,0;;;;;;;;;;0.01;;;;;1000,0;-1,0;0.75;0.05;1.0;binary:logistic;0,0;0.01;0.75;hist;;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6321741562753642;0,642602195080457;0,6268371348523449;0,6373001964925963;0,6329933453301441;0,6343814056061813;0,005288012896438;2
0,4223959922790527;0,0284009180998218;0,0191029071807861;0,0012603375703089;DecisionTreeClassifier();;gini;;10,0;100,0;42,0;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6186254502415012;0,6388545064032863;0,6178645361258523;0,6086771466216359;0,6285383795586286;0,6225120037901808;0,0103102097322379;2
32,82512407302856;0,6354168947790546;0,923139762878418;0,0331776483023271;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42)";;entropy;;;;42,0;;;;;;;;;;;;;;0.75;1000,0;-1,0;;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,6121923789502414;0,6162430411759052;0,6131487983829422;0,6129662341544216;0,6117204630655695;0,613254183145816;0,0015815826458463;1
2,055601644515991;0,1010200063721173;0,1197204113006591;0,0036291603418102;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42,0;;;;;;;;;;0.01;;;;;1000,0;-1,0;0.75;0.05;1.0;binary:logistic;0,0;0.01;0.75;hist;;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,6089692629953152;0,6066042597805001;0,6013140274522932;0,6042413269707607;0,604794909881194;0,6051847574160127;0,0025440936303534;2
1,888882398605347;0,1303681566540069;0,0190174579620361;0,0009635365639598;DecisionTreeClassifier();;gini;;10,0;100,0;42,0;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6050760330254579;0,6058967464477077;0,6030350944000177;0,6075139699138641;0,6012310771492715;0,6045505841872638;0,0021993517475905;3
0,8170214653015136;0,0117251724194085;0,021857213973999;0,0010813061865887;DecisionTreeClassifier();;gini;;10,0;100,0;42,0;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6103136337363304;0,6086288913876825;0,602112486823189;0,5887604820225834;0,6046089662630745;0,6028848920465719;0,0076321390420078;3
5,25205807685852;0,7656210713070779;0,1232001781463623;0,013268648584706;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42,0;;;;;;;;;;0.01;;;;;1000,0;-1,0;0.75;0.05;1.0;binary:logistic;0,0;0.01;0.75;hist;;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,5948956094943423;0,6110296924865145;0,6013001173708168;0,5965814313068794;0,604896924847244;0,6017407551011594;0,0058294865505857;3
168,5032236099243;35,30560048745328;0,0612151622772216;0,0076222887774555;MLPClassifier();;;;;;42,0;;;;1000,0;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,5807373826221054;0,5782551293378208;0,6094550079503878;0,5723043882753326;0,5835755301922521;0,5848654876755797;0,0128438919684259;4
27,56097044944763;14,538450899390378;0,0616095066070556;0,0041975791624813;MLPClassifier();;;;;;42,0;;;;1000,0;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,5813759797657966;0,5556814471991243;0,5782388812509431;0,5558754955605649;0,5733177296429681;0,5688979066838794;0,011015887993863;4
0,172411823272705;0,0244670293628741;0,0200666904449462;0,0019551882181602;DecisionTreeClassifier();;gini;;10,0;100,0;42,0;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,5557463631211861;0,5726682006985054;0,5552317244782947;0,5534273533576228;0,5758056210532021;0,5625758525417622;0,009603701851513;3
0,4034179210662841;0,6227146447661359;0,0299271583557128;0,0075315482908598;GaussianNB();;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': GaussianNB()};0,5674489256351439;0,5600822910733896;0,5580690224441194;0,5509185453562894;0,5649043218803756;0,5602846212778636;0,0057505144892091;4
205,5300969600677;0,5873891853841301;0,9850247383117676;0,0572495170929934;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42)";;entropy;;;;42,0;;;;;;;;;;;;;;0.75;1000,0;-1,0;;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,5481207849259646;0,5479975043316931;0,5543856873810328;0,5508028338781712;0,5488619235557887;0,55003374681453;0,0023962369662273;1
0,6759759902954101;0,032714715186365;0,0246911525726318;0,0026002114981046;LinearSVC();;;;;;42,0;;0.001;False;10000,0;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,5542225780551103;0,5498642074965403;0,545580246257227;0,5463296758815104;0,549287343652614;0,5490568102686004;0,0030631340825827;5
6891,841455984116;6667,051973591795;5,056247138977051;1,721635361073723;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20,0;1,0;0.001;sparsemax;64,0;5,0;5,0;10,0;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42,0;1,0;;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5588640823807187;0,4853823572747631;0,5238184936144109;0,6285769980506823;0,5386378580281663;0,5470559578697483;0,0473277697698903;5
1163,3028626918792;292,3166958046428;3,911709117889404;0,3204371689909411;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20,0;1,0;0.001;sparsemax;64,0;5,0;5,0;10,0;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42,0;1,0;;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5035748500690054;0,5473011471752072;0,5506930577845657;0,5165348642094247;0,5697796945116693;0,5375767227499745;0,0240936556880833;4
5,714581441879273;1,6027026915495477;0,0548211097717285;0,0088875964336657;MLPClassifier();;;;;;42,0;;;;1000,0;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,5182857119535631;0,5130284973871903;0,5292882284840218;0,5153891024993574;0,4968078025340355;0,5145598685716336;0,0104783115990142;5
1062,7727746009828;478,56260338072383;3,581934595108032;0,1060227328941316;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20,0;1,0;0.001;sparsemax;64,0;5,0;5,0;10,0;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42,0;1,0;;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,5028948468595958;0,4941848922680975;0,5043570810780488;0,5388611275338964;0,507262117727234;0,5095120130933746;0,0153082552463836;5
0,1293383598327636;0,0201402585644584;0,0209070682525634;0,000659613420397;LinearSVC();;;;;;42,0;;0.001;False;10000,0;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,5066811850795381;0,5100704359265713;0,5073598500993536;0,5059317578321584;0,508342918495264;0,5076772294865771;0,0014359724477387;6
75,8168912410736;17,846310234220198;0,0207319736480712;0,0009262836346675;DecisionTreeClassifier();;gini;;10,0;100,0;42,0;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,5049561424716977;0,5030908492772127;0,5180178726410775;0,5018185092667958;0,4983396361318625;0,5052446019577292;0,0067423284941813;2
1,365023708343506;0,0998340078997044;0,0250988483428955;0,0074911567700597;LinearSVC();;;;;;42,0;;0.001;False;10000,0;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,5017376534550053;0,5046580854458556;0,5013335248404178;0,5026172550338973;0,503262092657095;0,5027217222864542;0,0011788044319242;6
1,0294639110565185;0,7778050209258683;0,0558704853057861;0,0167957058251391;GaussianNB();;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': GaussianNB()};0,4958218549819561;0,4968052429435579;0,5004404778385246;0,4969225579943901;0,4822539728618835;0,4944488213240625;0,0062955793091893;6
68,14464869499207;0,8226997729562014;0,1254627704620361;0,0104565686123627;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42,0;;;;;;;;;;0.01;;;;;1000,0;-1,0;0.75;0.05;1.0;binary:logistic;0,0;0.01;0.75;hist;;;;;;;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,4871535915439806;0,501872339211751;0,4818367887745722;0,4892697222469004;0,4937026455117639;0,4907670174577936;0,0067378603049927;3
190,15247530937197;19,1612005608209;0,051636266708374;0,0027614389059277;MLPClassifier();;;;;;42,0;;;;1000,0;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,4671450593436798;0,4805410155748851;0,4877003125561458;0,4882857716462108;0,4639588118712051;0,4775261941984253;0,0102001192466474;4
5898,792095279694;3840,5341003928106;4,180784702301025;0,1075165235225699;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20,0;1,0;0.001;sparsemax;64,0;5,0;5,0;10,0;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42,0;1,0;;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,4126825577668206;0,3839577436159961;0,513396761791178;0,5433468820344761;0,5313903949503935;0,4769548680317729;0,0655416398199076;5
0,3783237934112549;0,6203434835419792;0,0216777324676513;0,0005575586565814;GaussianNB();;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': GaussianNB()};0,4590469450266257;0,4623955791225294;0,4617577090515029;0,4561312998331082;0,4500353062175959;0,4578733678502724;0,0045030166751062;7
7,920618820190429;0,796844685335982;0,0582220554351806;0,0042853930956433;MLPClassifier();;;;;;42,0;;;;1000,0;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,4535390616037628;0,4535390616037628;0,4535390616037628;0,4535077152526817;0,4535077152526817;0,4535265230633303;1,5356513089337957e-05;6
0,2091753482818603;0,0236168820840639;0,0262773513793945;0,0044406137266696;LinearSVC();;;;;;42,0;;0.001;False;10000,0;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,4535390616037628;0,4535390616037628;0,4535390616037628;0,4535077152526817;0,4535077152526817;0,4535265230633303;1,5356513089337957e-05;6
1,4481533527374268;0,636802428789806;0,0220823764801025;0,0027266414446127;GaussianNB();;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': GaussianNB()};0,4420381936731521;0,4452214682664125;0,4456926488908764;0,4513415011497804;0,4393563433138394;0,4447300310588121;0,0040249767421612;7
62,90308947563172;1,7544249219848882;0,0209750652313232;0,0014164204981452;GaussianNB();;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': GaussianNB()};0,3857180777843242;0,3852456248859236;0,3849331807813503;0,385697205015493;0,3780280937754848;0,3839244364485151;0,0029627628513789;6
401,26125292778016;19,703161040338607;2,0371848583221435;0,3099404171080892;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42)";;entropy;;;;42,0;;;;;;;;;;;;;;0.75;1000,0;-1,0;;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,3533177004852293;0,3618428102113753;0,3639972610400588;0,3662371589315836;0,3553630841126642;0,3601516029561822;0,0049862891072433;1
128,15895557403564;0,778812863016098;1,5631748199462892;0,0678226902881582;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42)";;entropy;;;;42,0;;;;;;;;;;;;;;0.75;1000,0;-1,0;;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,3527340127552409;0,3489140559537764;0,3592950811681842;0,3552656876925515;0,360828308913721;0,3554074292966948;0,0043319953128592;1
75,53629579544068;16,106131164866504;0,6406619071960449;0,0267202984881739;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42,0;;;;;;;;;;0.01;;;;;1000,0;-1,0;0.75;0.05;1.0;multi:softmax;0,0;0.01;0.75;hist;;;;;;;;;;;;;;;6,0;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__num_class': 6, 'classifier__estimator__objective': 'multi:softmax', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,3420697786649944;0,3415057143269675;0,3371161616096831;0,3399389371488721;0,3366234003370597;0,3394507984175153;0,0022255212999432;2
27,45521731376648;1,982059242366948;0,6371254920959473;0,0731397271147519;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42,0;;;;;;;;;;0.01;;;;;1000,0;-1,0;0.75;0.05;1.0;multi:softmax;0,0;0.01;0.75;hist;;;;;;;;;;;;;;;6,0;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__num_class': 6, 'classifier__estimator__objective': 'multi:softmax', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,3248026032216378;0,3211935284399341;0,3333365339850777;0,3267355075140802;0,3141205084846465;0,3240377363290753;0,0063367429364338;2
31,21516809463501;0,6578730942152609;0,936722993850708;0,0201767135206615;"RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42)";;entropy;;;;42,0;;;;;;;;;;;;;;0.75;1000,0;-1,0;;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,316493676960696;0,3281921281123385;0,3198286329822411;0,3210140981923822;0,3244770821581101;0,3220011236811536;0,0040121019622534;1
0,3984157085418701;0,0280346840610813;0,0247351646423339;0,0052633731478657;DecisionTreeClassifier();;gini;;10,0;100,0;42,0;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,3211123889669524;0,3151475798709741;0,327647791300258;0,319523981961941;0,3150051088934591;0,3196873701987169;0,0046466965786498;3
11,738680601119995;0,3097508424140717;0,6011342525482177;0,0071921493639765;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42,0;;;;;;;;;;0.01;;;;;1000,0;-1,0;0.75;0.05;1.0;multi:softmax;0,0;0.01;0.75;hist;;;;;;;;;;;;;;;6,0;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__num_class': 6, 'classifier__estimator__objective': 'multi:softmax', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,3067439239710874;0,3179912287494931;0,3126510244155767;0,3168912892933215;0,3137428400787856;0,3136040613016528;0,0039507500334498;2
2,7349693775177;0,140870641502328;0,0217746257781982;0,002607322461152;DecisionTreeClassifier();;gini;;10,0;100,0;42,0;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,3158148759076103;0,3138761172230487;0,3084266208709888;0,3095666756735359;0,3088489493146331;0,3113066477979634;0,0029761933318891;3
224,36662340164185;27,299825804162094;0,0602126121520996;0,0110281318084939;MLPClassifier();;;;;;42,0;;;;1000,0;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,2895424505145689;0,2931594693183816;0,302512327822233;0,3014443014573763;0,3151890855549784;0,3003695269335076;0,0088834291605895;4
0,1325514793395996;0,0041526377784852;0,0214861392974853;0,0020565930115913;DecisionTreeClassifier();;gini;;10,0;100,0;42,0;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,2900896851986576;0,2913226089617053;0,2861328859342935;0,2983059016637823;0,2973637023171001;0,2926429568151077;0,0045825302994806;3
62,29760074615479;0,6743916497736042;0,0213120937347412;0,0017332425467669;LinearSVC();;;;;;42,0;;0.001;False;10000,0;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,282955846519166;0,2976180190632531;0,2926846464945302;0,2809761742888624;0,2914447356290624;0,2891358843989748;0,0062393084897834;7
6175,853392267227;7315,736454552596;4,320427703857422;0,2742204574605227;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20,0;1,0;0.001;sparsemax;64,0;5,0;5,0;10,0;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42,0;1,0;;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,2825660666518432;0,2853779015901778;0,3400389519960913;0,2882589786499105;0,2272301590462117;0,2846944115868469;0,0357291523052492;5
165,57101063728334;2,9162460521920948;0,0193120002746582;0,0011925139503748;"DecisionTreeClassifier(min_samples_leaf=10, min_samples_split=100,
                       random_state=42)";;gini;;10,0;100,0;42,0;best;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"{'classifier__estimator': DecisionTreeClassifier(min_samples_leaf=10, min_samples_split=100,
                       random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}";0,2682287343815407;0,2713980658832952;0,2701288864828445;0,2719852203424964;0,2761344249751922;0,2715750664130738;0,0026182696724053;1
257,18614082336427;1,8491177868275053;1,0321521282196044;0,0144941477383567;RandomForestClassifier();;entropy;;;;42,0;;;;;;;;;;;;;;0.75;1000,0;-1,0;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': RandomForestClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42};0,274209123985481;0,2655019710771392;0,2694430393391513;0,2736964874076694;0,2730121788161914;0,2711725601251264;0,0032900440189871;2
186,78214554786683;3,288980553922676;0,5719166755676269;0,0092962591183156;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;;;;42,0;;;;;;;;;;0.01;;;;;1000,0;-1,0;0.75;0.05;1.0;multi:softmax;0,0;0.01;0.75;hist;;;;;;;;;;;;;;;6,0;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__colsample_bytree': 0.75, 'classifier__estimator__gamma': 0.05, 'classifier__estimator__learning_rate': 0.01, 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__max_depth': None, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__num_class': 6, 'classifier__estimator__objective': 'multi:softmax', 'classifier__estimator__random_state': 42, 'classifier__estimator__reg_alpha': 0, 'classifier__estimator__reg_lambda': 0.01, 'classifier__estimator__subsample': 0.75, 'classifier__estimator__tree_method': 'hist'}";0,2502743946197667;0,2479747341517559;0,2476046071532641;0,2514676010700806;0,2544736637868555;0,2503590001563446;0,0025075093647307;3
170,65272765159608;5,549780404922368;0,0310490608215332;0,0047263205148803;GaussianNB();;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': GaussianNB()};0,2357296801823074;0,2352488823535302;0,2333935277859031;0,2348574647705565;0,2301574102990689;0,2338773930782732;0,002017170710112;4
6,306405878067016;3,756115683646761;0,0689813137054443;0,0126233437796388;MLPClassifier();;;;;;42,0;;;;1000,0;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,2336608310927591;0,2309942986831411;0,2279731842190135;0,2374042277379587;0,2311300925785752;0,2322325268622895;0,0031520505404752;4
242,8523669719696;25,46266730714849;0,0577104568481445;0,007515244786012;MLPClassifier();;;;;;42,0;;;;1000,0;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,2377634697831586;0,2404019635108372;0,218284695618307;0,2270962404902163;0,2319227725238327;0,2310938283852704;0,0078976861864405;5
0,3626391887664795;0,5857269347855066;0,03936767578125;0,0114344378820115;GaussianNB();;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': GaussianNB()};0,23197225581411;0,2307151830691655;0,2249604446089496;0,2313873842490859;0,228452807158712;0,2294976149800046;0,0025633995224834;4
1602,6320994377136;203,8311243430689;3,952643537521362;0,038295102468083;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20,0;1,0;0.001;sparsemax;64,0;5,0;5,0;10,0;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42,0;1,0;;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,2220771868165927;0,249885743215608;0,1994501370172716;0,2356624194725206;0,2212612647428036;0,2256673502529593;0,0167694788187661;5
4967,653970623016;3105,6865634382884;4,700963401794434;0,1259311595883094;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20,0;1,0;0.001;sparsemax;64,0;5,0;5,0;10,0;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42,0;1,0;;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,2633096237217125;0,207312875286731;0,26956243010604;0,2206593727291172;0,1674572042644198;0,2256603012216041;0,037667243660594;6
15,504145240783693;2,955223635409931;0,060504150390625;0,0046915189029482;MLPClassifier();;;;;;42,0;;;;1000,0;;relu;0.0001;True;(50, 100, 50);adaptive;0.0001;0.0;adam;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__alpha': 0.0001, 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__learning_rate': 'adaptive', 'classifier__estimator__learning_rate_init': 0.0001, 'classifier__estimator__max_iter': 1000, 'classifier__estimator__momentum': 0.0, 'classifier__estimator__random_state': 42, 'classifier__estimator__solver': 'adam'};0,2231578897122368;0,2286260811544118;0,2273342104956029;0,2153914168950777;0,2221377513621657;0,223329469923899;0,0046594925981621;6
2,024633598327637;0,64753061885324;0,0372339725494384;0,005794491236875;GaussianNB();;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': GaussianNB()};0,2186162886488009;0,2176591561336902;0,2135017047626488;0,211667498745906;0,2128067057979291;0,214850270817795;0,0027639664787553;6
4,077618408203125;0,1080940898410272;0,0250812053680419;0,0031502722603991;LinearSVC();;;;;;42,0;;0.001;False;10000,0;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,2153596559501888;0,2112893728886451;0,2113361908897499;0,2113673240784463;0,213645544061523;0,2125996175737106;0,0016458012903444;7
0,3918765544891357;0,611892222450034;0,0387193202972412;0,0105799944153148;GaussianNB();;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': GaussianNB()};0,2158744003657446;0,2137161988737134;0,2069174949192778;0,2137523456177649;0,209035412462942;0,2118591704478885;0,0033331217883246;5
0,20341157913208;0,005563007104867;0,0269533157348632;0,0027622828661655;LinearSVC();;;;;;42,0;;0.001;False;10000,0;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,2126774837111713;0,210283742880545;0,2057841650398853;0,208853429013497;0,2115614771854848;0,2098320595661167;0,0023930946298877;6
1,323451280593872;0,0254285218666349;0,0251381397247314;0,0015198360383378;LinearSVC();;;;;;42,0;;0.001;False;10000,0;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,1440011091023842;0,1419704247183237;0,1407590761196514;0,1472792120852616;0,1438844913876395;0,1435788626826521;0,0022137098089701;7
166,3184675216675;3,4594253460808524;0,0238852024078369;0,0025079035551796;LinearSVC();;;;;;42,0;;0.001;False;10000,0;l2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__class_weight': None, 'classifier__estimator__dual': False, 'classifier__estimator__max_iter': 10000, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,1348723822609495;0,129391735789854;0,1293442108600297;0,1290150430729005;0,132853519427525;0,1310953782822517;0,0023517482436529;7
485,46732263565065;420,8904468132544;2,5707122325897216;2,0995800527677204;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20,0;1,0;0.001;sparsemax;64,0;5,0;5,0;10,0;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42,0;1,0;;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,3799579279350594;0,5280774270824544;0,4735789413204238;;;;;7
770,5884553432464;442,2598357351467;3,0399354457855225;1,520546811431601;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128);;;;;;;;;;;;;;;;;;0.4;;;;;;2.0;;;;;;;20,0;1,0;0.001;sparsemax;64,0;5,0;5,0;10,0;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42,0;1,0;;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), 'classifier__estimator__cat_emb_dim': 20, 'classifier__estimator__clip_value': 1, 'classifier__estimator__gamma': 2.0, 'classifier__estimator__lambda_sparse': 0.001, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__n_a': 64, 'classifier__estimator__n_independent': 5, 'classifier__estimator__n_shared': 5, 'classifier__estimator__n_steps': 10, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,2591044118446499;0,2509367439692553;0,2122530284822325;0,2570197552878583;;;;7
