
*****INICIO LOAD DATA******

*****INICIO PRINT INFOS******
Número total de linhas do DataFrame: 63072
Número de colunas: 112
Informações do DataFrame:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 63072 entries, 0 to 63071
Data columns (total 112 columns):
 #    Column                            Dtype         
---   ------                            -----         
 0    ID_ANIMAL                         uint32        
 1    EstabelecimentoMunicipio          category      
 2    DataAbate                         datetime64[ns]
 3    Frigorifico_ID                    uint8         
 4    Frigorifico_CNPJ                  uint64        
 5    Frigorifico_RazaoSocial           category      
 6    Municipio_Frigorifico             category      
 7    Tipificacao                       category      
 8    Maturidade                        category      
 9    Acabamento                        category      
 10   Peso                              float32       
 11   EstabelecimentoIdentificador      uint16        
 12   Data_homol                        datetime64[ns]
 13   Questionario_ID                   uint16        
 14   QuestionarioClassificacaoEstabel  uint8         
 15   FERTIIRRIGACAO                    uint8         
 16   ILP                               uint8         
 17   IFP                               uint8         
 18   ILPF                              uint8         
 19   CONCEN_VOLUM                      UInt8         
 20   CREEPFEEDING                      UInt8         
 21   FORN_ESTRAT_SILAGEM               UInt8         
 22   PROTEICO                          UInt8         
 23   PROTEICO_ENERGETICO               UInt8         
 24   RACAO_BAL_CONS_INFERIOR           UInt8         
 25   SAL_MINERAL                       UInt8         
 26   SALMINERAL_UREIA                  UInt8         
 27   RACAOO_BAL_CONSUMO_IG             UInt8         
 28   GRAO_INTEIRO                      UInt8         
 29   ALTO_CONCENTR_VOLUM               UInt8         
 30   ALTO_CONCENTRADO                  UInt8         
 31   QuestionarioPossuiOutrosIncentiv  uint8         
 32   QuestionarioFabricaRacao          uint8         
 33   area so confinamento              UInt8         
 34   regua de manejo                   UInt8         
 35   boa cobertura vegetal, com baixa  UInt8         
 36   erosaoo laminar ou em sulco igua  UInt8         
 37   identificacao individual          UInt8         
 38   rastreamento SISBOV               UInt8         
 39   Lista Trace                       UInt8         
 40   BPA                               UInt8         
 41   participa de aliancas mercadolog  UInt8         
 42   QuestionarioPraticaRecuperacaoPa  uint8         
 43   Confinamento                      UInt8         
 44   Suplementacao_a_campo             UInt8         
 45   SemiConfinamento                  UInt8         
 46   dif_datas                         uint16        
 47   DataAbate_6m_ANT                  datetime64[ns]
 48   data_homol_select                 datetime64[ns]
 49   data12m                           datetime64[ns]
 50   data6m                            datetime64[ns]
 51   data3m                            datetime64[ns]
 52   data1m                            datetime64[ns]
 53   data7d                            datetime64[ns]
 54   tot7d_Chuva                       float32       
 55   med7d_TempInst                    float32       
 56   med7d_TempMin                     float32       
 57   med7d_UmidInst                    float32       
 58   med7d_formITUinst                 float32       
 59   med7d_formITUmax                  float32       
 60   med7d_NDVI                        float32       
 61   med7d_EVI                         float32       
 62   med7d_preR_soja                   float32       
 63   med7d_preR_milho                  float32       
 64   med7d_preR_boi                    float32       
 65   tot1m_Chuva                       float32       
 66   med1m_TempInst                    float32       
 67   med1m_UmidInst                    float32       
 68   med1m_formITUinst                 float32       
 69   med1m_NDVI                        float32       
 70   med1m_EVI                         float32       
 71   med1m_preR_soja                   float32       
 72   med1m_preR_milho                  float32       
 73   med1m_preR_boi                    float32       
 74   tot3m_Chuva                       float32       
 75   med3m_TempInst                    float32       
 76   med3m_UmidInst                    float32       
 77   med3m_formITUinst                 float32       
 78   med3m_formITUmax                  float32       
 79   med3m_NDVI                        float32       
 80   med3m_EVI                         float32       
 81   med3m_preR_soja                   float32       
 82   med3m_preR_milho                  float32       
 83   med3m_preR_boi                    float32       
 84   tot6m_Chuva                       float32       
 85   med6m_TempInst                    float32       
 86   med6m_UmidInst                    float32       
 87   med6m_formITUinst                 float32       
 88   med6m_NDVI                        float32       
 89   med6m_EVI                         float32       
 90   med6m_preR_soja                   float32       
 91   med6m_preR_milho                  float32       
 92   med6m_preR_boi                    float32       
 93   tot12m_Chuva                      float32       
 94   med12m_TempInst                   float32       
 95   med12m_TempMin                    float32       
 96   med12m_UmidInst                   float32       
 97   med12m_formITUinst                float32       
 98   med12m_NDVI                       float32       
 99   med12m_EVI                        float32       
 100  med12m_preR_soja                  float32       
 101  med12m_preR_milho                 float32       
 102  med12m_preR_boi                   float32       
 103  cnt7d_CL_ITUinst                  float32       
 104  cnt1m_CL_ITUinst                  float32       
 105  cnt3m_CL_ITUinst                  float32       
 106  cnt6m_CL_ITUinst                  float32       
 107  cnt12m_CL_ITUinst                 float32       
 108  ANO                               uint16        
 109  CATEGORIA                         category      
 110  classificacao                     category      
 111  Motivo                            category      
dtypes: UInt8(24), category(9), datetime64[ns](9), float32(55), uint16(4), uint32(1), uint64(1), uint8(9)
memory usage: 22.7 MB
*****FIM PRINT INFOS*********
Function informations Took 0:00:00.016253

*****INICIO DELETE COLUNAS******
Coluna EstabelecimentoMunicipio excluída.
Coluna Frigorifico_ID excluída.
Coluna Frigorifico_CNPJ excluída.
Coluna Frigorifico_RazaoSocial excluída.
Coluna Municipio_Frigorifico excluída.
Coluna Maturidade excluída.
Coluna Acabamento excluída.
Coluna EstabelecimentoIdentificador excluída.
Coluna Questionario_ID excluída.
Coluna FERTIIRRIGACAO excluída.
Coluna CONCEN_VOLUM excluída.
Coluna CREEPFEEDING excluída.
Coluna FORN_ESTRAT_SILAGEM excluída.
Coluna PROTEICO excluída.
Coluna PROTEICO_ENERGETICO excluída.
Coluna RACAO_BAL_CONS_INFERIOR excluída.
Coluna SAL_MINERAL excluída.
Coluna SALMINERAL_UREIA excluída.
Coluna RACAOO_BAL_CONSUMO_IG excluída.
Coluna GRAO_INTEIRO excluída.
Coluna ALTO_CONCENTR_VOLUM excluída.
Coluna ALTO_CONCENTRADO excluída.
Coluna area so confinamento excluída.
Coluna boa cobertura vegetal, com baixa excluída.
Coluna erosaoo laminar ou em sulco igua excluída.
Coluna Lista Trace excluída.
Coluna BPA excluída.
Coluna dif_datas excluída.
Coluna tot7d_Chuva excluída.
Coluna med7d_TempInst excluída.
Coluna med7d_TempMin excluída.
Coluna med7d_UmidInst excluída.
Coluna med7d_formITUinst excluída.
Coluna med7d_formITUmax excluída.
Coluna med7d_NDVI excluída.
Coluna med7d_EVI excluída.
Coluna med7d_preR_soja excluída.
Coluna med7d_preR_milho excluída.
Coluna med7d_preR_boi excluída.
Coluna tot1m_Chuva excluída.
Coluna med1m_TempInst excluída.
Coluna med1m_UmidInst excluída.
Coluna med1m_formITUinst excluída.
Coluna med1m_NDVI excluída.
Coluna med1m_EVI excluída.
Coluna med1m_preR_soja excluída.
Coluna med1m_preR_milho excluída.
Coluna med1m_preR_boi excluída.
Coluna med3m_TempInst excluída.
Coluna med3m_UmidInst excluída.
Coluna med3m_formITUmax excluída.
Coluna med3m_EVI excluída.
Coluna med3m_preR_soja excluída.
Coluna tot6m_Chuva excluída.
Coluna med6m_TempInst excluída.
Coluna med6m_UmidInst excluída.
Coluna med6m_formITUinst excluída.
Coluna med6m_NDVI excluída.
Coluna med6m_EVI excluída.
Coluna med6m_preR_soja excluída.
Coluna med6m_preR_milho excluída.
Coluna med6m_preR_boi excluída.
Coluna tot12m_Chuva excluída.
Coluna med12m_TempInst excluída.
Coluna med12m_TempMin excluída.
Coluna med12m_UmidInst excluída.
Coluna med12m_formITUinst excluída.
Coluna med12m_NDVI excluída.
Coluna med12m_EVI excluída.
Coluna med12m_preR_soja excluída.
Coluna med12m_preR_milho excluída.
Coluna med12m_preR_boi excluída.
Coluna cnt7d_CL_ITUinst excluída.
Coluna cnt1m_CL_ITUinst excluída.
Coluna cnt3m_CL_ITUinst excluída.
Coluna cnt6m_CL_ITUinst excluída.
Coluna cnt12m_CL_ITUinst excluída.
Coluna ANO excluída.
Coluna Motivo excluída.
Coluna DataAbate excluída.
Coluna Data_homol excluída.
Coluna DataAbate_6m_ANT excluída.
Coluna data_homol_select excluída.
Coluna data12m excluída.
Coluna data6m excluída.
Coluna data3m excluída.
Coluna data1m excluída.
Coluna data7d excluída.
Coluna classificacao excluída.
*****FIM DELETE COLUNAS*********

*****INICIO PRINT INFOS******
Número total de linhas do DataFrame: 63072
Número de colunas: 23
Informações do DataFrame:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 63072 entries, 0 to 63071
Data columns (total 23 columns):
 #   Column                            Non-Null Count  Dtype   
---  ------                            --------------  -----   
 0   ID_ANIMAL                         63072 non-null  uint32  
 1   Tipificacao                       63072 non-null  category
 2   Peso                              63072 non-null  float32 
 3   QuestionarioClassificacaoEstabel  63072 non-null  uint8   
 4   ILP                               63072 non-null  uint8   
 5   IFP                               63072 non-null  uint8   
 6   ILPF                              63072 non-null  uint8   
 7   QuestionarioPossuiOutrosIncentiv  63072 non-null  uint8   
 8   QuestionarioFabricaRacao          63072 non-null  uint8   
 9   regua de manejo                   63062 non-null  UInt8   
 10  identificacao individual          63062 non-null  UInt8   
 11  rastreamento SISBOV               63050 non-null  UInt8   
 12  participa de aliancas mercadolog  63062 non-null  UInt8   
 13  QuestionarioPraticaRecuperacaoPa  63072 non-null  uint8   
 14  Confinamento                      63062 non-null  UInt8   
 15  Suplementacao_a_campo             63062 non-null  UInt8   
 16  SemiConfinamento                  63062 non-null  UInt8   
 17  tot3m_Chuva                       61719 non-null  float32 
 18  med3m_formITUinst                 63063 non-null  float32 
 19  med3m_NDVI                        60906 non-null  float32 
 20  med3m_preR_milho                  63063 non-null  float32 
 21  med3m_preR_boi                    63063 non-null  float32 
 22  CATEGORIA                         63072 non-null  category
dtypes: UInt8(7), category(2), float32(6), uint32(1), uint8(7)
memory usage: 3.1 MB
*****FIM PRINT INFOS*********
Function informations Took 0:00:00.011697

*****FIM LOAD DATA******
Function load_data Took 0:00:39.111329

*****INICIO SHOW SETTINGS******
os = <module 'os' from '/usr/lib/python3.8/os.py'>
pd = <module 'pandas' from '/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pandas/__init__.py'>
torch = <module 'torch' from '/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/torch/__init__.py'>
PANDAS_MAX_ROWS = 5000
random_seed = 42
n_jobs = 1
dataset_folder_path = /mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/base_dados/
csv_path = /mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/base_dados/TAB_MODELAGEM_RAFAEL_2020_1-2.0-percentage-sampling.csv
number_csv_lines = None
dtype_dict = {'ID_ANIMAL': 'uint32', 'EstabelecimentoMunicipio': 'category', 'Frigorifico_ID': 'uint8', 'Frigorifico_CNPJ': 'uint64', 'Frigorifico_RazaoSocial': 'category', 'Municipio_Frigorifico': 'category', 'Tipificacao': 'category', 'Maturidade': 'category', 'Acabamento': 'category', 'Peso': 'float32', 'EstabelecimentoIdentificador': 'uint16', 'Questionario_ID': 'uint16', 'QuestionarioClassificacaoEstabel': 'uint8', 'FERTIIRRIGACAO': 'uint8', 'ILP': 'uint8', 'IFP': 'uint8', 'ILPF': 'uint8', 'CONCEN_VOLUM': 'UInt8', 'CREEPFEEDING': 'UInt8', 'FORN_ESTRAT_SILAGEM': 'UInt8', 'PROTEICO': 'UInt8', 'PROTEICO_ENERGETICO': 'UInt8', 'RACAO_BAL_CONS_INFERIOR': 'UInt8', 'SAL_MINERAL': 'UInt8', 'SALMINERAL_UREIA': 'UInt8', 'RACAOO_BAL_CONSUMO_IG': 'UInt8', 'GRAO_INTEIRO': 'UInt8', 'ALTO_CONCENTR_VOLUM': 'UInt8', 'ALTO_CONCENTRADO': 'UInt8', 'QuestionarioPossuiOutrosIncentiv': 'uint8', 'QuestionarioFabricaRacao': 'uint8', 'area so confinamento': 'UInt8', 'regua de manejo': 'UInt8', 'boa cobertura vegetal, com baixa': 'UInt8', 'erosaoo laminar ou em sulco igua': 'UInt8', 'identificacao individual': 'UInt8', 'rastreamento SISBOV': 'UInt8', 'Lista Trace': 'UInt8', 'BPA': 'UInt8', 'participa de aliancas mercadolog': 'UInt8', 'QuestionarioPraticaRecuperacaoPa': 'uint8', 'Confinamento': 'UInt8', 'Suplementacao_a_campo': 'UInt8', 'SemiConfinamento': 'UInt8', 'dif_datas': 'uint16', 'tot7d_Chuva': 'float32', 'med7d_TempInst': 'float32', 'med7d_TempMin': 'float32', 'med7d_UmidInst': 'float32', 'med7d_formITUinst': 'float32', 'med7d_formITUmax': 'float32', 'med7d_NDVI': 'float32', 'med7d_EVI': 'float32', 'med7d_preR_soja': 'float32', 'med7d_preR_milho': 'float32', 'med7d_preR_boi': 'float32', 'tot1m_Chuva': 'float32', 'med1m_TempInst': 'float32', 'med1m_UmidInst': 'float32', 'med1m_formITUinst': 'float32', 'med1m_NDVI': 'float32', 'med1m_EVI': 'float32', 'med1m_preR_soja': 'float32', 'med1m_preR_milho': 'float32', 'med1m_preR_boi': 'float32', 'tot3m_Chuva': 'float32', 'med3m_TempInst': 'float32', 'med3m_UmidInst': 'float32', 'med3m_formITUinst': 'float32', 'med3m_formITUmax': 'float32', 'med3m_NDVI': 'float32', 'med3m_EVI': 'float32', 'med3m_preR_soja': 'float32', 'med3m_preR_milho': 'float32', 'med3m_preR_boi': 'float32', 'tot6m_Chuva': 'float32', 'med6m_TempInst': 'float32', 'med6m_UmidInst': 'float32', 'med6m_formITUinst': 'float32', 'med6m_NDVI': 'float32', 'med6m_EVI': 'float32', 'med6m_preR_soja': 'float32', 'med6m_preR_milho': 'float32', 'med6m_preR_boi': 'float32', 'tot12m_Chuva': 'float32', 'med12m_TempInst': 'float32', 'med12m_TempMin': 'float32', 'med12m_UmidInst': 'float32', 'med12m_formITUinst': 'float32', 'med12m_NDVI': 'float32', 'med12m_EVI': 'float32', 'med12m_preR_soja': 'float32', 'med12m_preR_milho': 'float32', 'med12m_preR_boi': 'float32', 'cnt7d_CL_ITUinst': 'float32', 'cnt1m_CL_ITUinst': 'float32', 'cnt3m_CL_ITUinst': 'float32', 'cnt6m_CL_ITUinst': 'float32', 'cnt12m_CL_ITUinst': 'float32', 'ANO': 'uint16', 'CATEGORIA': 'category', 'classificacao': 'category', 'Motivo': 'category', 'QTD_ANIMAIS_LOTE': 'uint16', 'PESO_MEDIO_LOTE': 'float32', 'CATEGORIA_BINARIA': 'category'}
parse_dates = ['DataAbate', 'Data_homol', 'DataAbate_6m_ANT', 'data_homol_select', 'data12m', 'data6m', 'data3m', 'data1m', 'data7d']
delete_columns_names_on_load_data = ['EstabelecimentoMunicipio', 'Frigorifico_ID', 'Frigorifico_CNPJ', 'Frigorifico_RazaoSocial', 'Municipio_Frigorifico', 'Maturidade', 'Acabamento', 'EstabelecimentoIdentificador', 'Questionario_ID', 'FERTIIRRIGACAO', 'CONCEN_VOLUM', 'CREEPFEEDING', 'FORN_ESTRAT_SILAGEM', 'PROTEICO', 'PROTEICO_ENERGETICO', 'RACAO_BAL_CONS_INFERIOR', 'SAL_MINERAL', 'SALMINERAL_UREIA', 'RACAOO_BAL_CONSUMO_IG', 'GRAO_INTEIRO', 'ALTO_CONCENTR_VOLUM', 'ALTO_CONCENTRADO', 'area so confinamento', 'boa cobertura vegetal, com baixa', 'erosaoo laminar ou em sulco igua', 'Lista Trace', 'BPA', 'dif_datas', 'tot7d_Chuva', 'med7d_TempInst', 'med7d_TempMin', 'med7d_UmidInst', 'med7d_formITUinst', 'med7d_formITUmax', 'med7d_NDVI', 'med7d_EVI', 'med7d_preR_soja', 'med7d_preR_milho', 'med7d_preR_boi', 'tot1m_Chuva', 'med1m_TempInst', 'med1m_UmidInst', 'med1m_formITUinst', 'med1m_NDVI', 'med1m_EVI', 'med1m_preR_soja', 'med1m_preR_milho', 'med1m_preR_boi', 'med3m_TempInst', 'med3m_UmidInst', 'med3m_formITUmax', 'med3m_EVI', 'med3m_preR_soja', 'tot6m_Chuva', 'med6m_TempInst', 'med6m_UmidInst', 'med6m_formITUinst', 'med6m_NDVI', 'med6m_EVI', 'med6m_preR_soja', 'med6m_preR_milho', 'med6m_preR_boi', 'tot12m_Chuva', 'med12m_TempInst', 'med12m_TempMin', 'med12m_UmidInst', 'med12m_formITUinst', 'med12m_NDVI', 'med12m_EVI', 'med12m_preR_soja', 'med12m_preR_milho', 'med12m_preR_boi', 'cnt7d_CL_ITUinst', 'cnt1m_CL_ITUinst', 'cnt3m_CL_ITUinst', 'cnt6m_CL_ITUinst', 'cnt12m_CL_ITUinst', 'ANO', 'Motivo', 'DataAbate', 'Data_homol', 'DataAbate_6m_ANT', 'data_homol_select', 'data12m', 'data6m', 'data3m', 'data1m', 'data7d', 'classificacao']
PATH_SAVE_PLOTS = ./plots
PATH_SAVE_ESTIMATORS_REPR = ./runs/estimators_repr
PATH_SAVE_BEST_ESTIMATORS = ./runs/best_estimators
PATH_SAVE_RESULTS = ./runs/results
PATH_SAVE_LOGS = ./logs
PATH_SAVE_ENCODERS_SCALERS = ./runs/encoders_scalers
ordinal_encoder_columns_names = {'QuestionarioClassificacaoEstabel': ['0', '21', '26', '30']}
columns_ordinal_encoded = {}
label_encoder_columns_names = ['CATEGORIA']
columns_label_encoded = {}
one_hot_encoder_columns_names = ['Tipificacao']
columns_one_hot_encoded = {}
min_max_scaler_columns_names = ['Peso', 'tot3m_Chuva', 'med3m_formITUinst', 'med3m_NDVI', 'med3m_preR_milho', 'med3m_preR_boi']
columns_min_max_scaled = {}
columns_label_binarized = {}
simple_imputer_columns_names = []
columns_names_drop_feature_by_correlation = ['med3m_formITUinst', 'med3m_preR_boi', 'CATEGORIA']
class_column = CATEGORIA
classifiers = {}
models_results = {}
device_name = cpu
use_embeddings = True
use_cat_emb_dim = True
threshold_categorical_features = 150
num_workers = 4
eval_metric = ['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>]
augmentations = None
weights = 0
batch_size = 1024
virtual_batch_size = 128
run_grid_search_cv_tuner = True
save_results_during_run = True
new_run = True
PATH_OBJECTS_PERSISTED_RESULTS_RUNS = ./runs/objects_persisted_results_runs
PARAMETERS_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/parameters_persist
RESULTS_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/results_persist
SPLIT_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/split_persist
tree_method = hist
objective = multi:softmax
*****FIM SHOW SETTINGS******


*****INICIO DELETE DUPLICATE ROWS BY ATTRIBUTE******
Nenhuma linha duplicada encontrada para o atributo ID_ANIMAL.
*****FIM DELETE DUPLICATE ROWS BY ATTRIBUTE*********
Function delete_duplicate_rows_by_attribute Took 0:00:00.010589

*****INICIO DELETE COLUNAS******
Coluna ID_ANIMAL excluída.
*****FIM DELETE COLUNAS*********

*****INICIO DELETE NAN ROWS******
Linhas com valores NaN encontradas.
*****FIM DELETE NAN ROWS*********
Function delete_nan_rows Took 0:00:00.018752


*****INICIO DELETE COLUMNS WITH SINGLE VALUE******
>>> Nenhuma coluna com valor único encontrada.
*****FIM DELETE COLUMNS WITH SINGLE VALUE*********
Function delete_columns_with_single_value Took 0:00:00.017702


*****INICIO LABEL ENCODER******
*****FIM LABEL ENCODER*********
Function label_encoder_columns Took 0:00:00.012760

Object saved in file: ./runs/encoders_scalers/target_encoded-16-04-2023_07:11:43.joblib

*****INICIO RELATÓRIO DISTRIBUIÇÃO DE CLASSES******
Distribuição da classe 0: 35%
Distribuição da classe 1: 21%
Distribuição da classe 2: 16%
Distribuição da classe 3: 8%
Distribuição da classe 4: 4%
Distribuição da classe 5: 17%
*****FIM RELATÓRIO DISTRIBUIÇÃO DE CLASSES******
Function class_distribution Took 0:00:00.002008

/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
Number of folds for cross validation: 5
Scoring strategy for grid search: f1_macro
Test Size: 0.2

x_train shape: (47635, 21)
y_train shape: (47635,)
x_test shape: (11909, 21)
y_test shape: (11909,)
Removing all files in directory: ./runs/objects_persisted_results_runs
Do you want to continue? (y/n): 
All files in directory ./runs/objects_persisted_results_runs were removed.
Fitting 5 folds for each of 7 candidates, totalling 35 fits
[CV 1/5; 1/7] START classifier__estimator=GaussianNB()..........................
[CV 1/5; 1/7] END classifier__estimator=GaussianNB();, score=0.236 total time= 2.7min
[CV 2/5; 1/7] START classifier__estimator=GaussianNB()..........................
[CV 2/5; 1/7] END classifier__estimator=GaussianNB();, score=0.235 total time= 3.0min
[CV 3/5; 1/7] START classifier__estimator=GaussianNB()..........................
[CV 3/5; 1/7] END classifier__estimator=GaussianNB();, score=0.233 total time= 2.8min
[CV 4/5; 1/7] START classifier__estimator=GaussianNB()..........................
[CV 4/5; 1/7] END classifier__estimator=GaussianNB();, score=0.235 total time= 2.9min
[CV 5/5; 1/7] START classifier__estimator=GaussianNB()..........................
[CV 5/5; 1/7] END classifier__estimator=GaussianNB();, score=0.230 total time= 2.8min
[CV 1/5; 2/7] START classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best
[CV 1/5; 2/7] END classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best;, score=0.268 total time= 2.7min
[CV 2/5; 2/7] START classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best
[CV 2/5; 2/7] END classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best;, score=0.271 total time= 2.7min
[CV 3/5; 2/7] START classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best
[CV 3/5; 2/7] END classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best;, score=0.270 total time= 2.8min
[CV 4/5; 2/7] START classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best
[CV 4/5; 2/7] END classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best;, score=0.272 total time= 2.8min
[CV 5/5; 2/7] START classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best
[CV 5/5; 2/7] END classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best;, score=0.276 total time= 2.8min
[CV 1/5; 3/7] START classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42
[CV 1/5; 3/7] END classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42;, score=0.135 total time= 2.7min
[CV 2/5; 3/7] START classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42
[CV 2/5; 3/7] END classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42;, score=0.129 total time= 2.7min
[CV 3/5; 3/7] START classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42
[CV 3/5; 3/7] END classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42;, score=0.129 total time= 2.8min
[CV 4/5; 3/7] START classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42
[CV 4/5; 3/7] END classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42;, score=0.129 total time= 2.8min
[CV 5/5; 3/7] START classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42
[CV 5/5; 3/7] END classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42;, score=0.133 total time= 2.8min
[CV 1/5; 4/7] START classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam
[CV 1/5; 4/7] END classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam;, score=0.238 total time= 4.5min
[CV 2/5; 4/7] START classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam
[CV 2/5; 4/7] END classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam;, score=0.240 total time= 4.4min
[CV 3/5; 4/7] START classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam
[CV 3/5; 4/7] END classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam;, score=0.218 total time= 3.6min
[CV 4/5; 4/7] START classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam
[CV 4/5; 4/7] END classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam;, score=0.227 total time= 4.3min
[CV 5/5; 4/7] START classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam
[CV 5/5; 4/7] END classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam;, score=0.232 total time= 3.5min
[CV 1/5; 5/7] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42
[CV 1/5; 5/7] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42;, score=0.274 total time= 4.3min
[CV 2/5; 5/7] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42
[CV 2/5; 5/7] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42;, score=0.266 total time= 4.2min
[CV 3/5; 5/7] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42
[CV 3/5; 5/7] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42;, score=0.269 total time= 4.3min
[CV 4/5; 5/7] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42
[CV 4/5; 5/7] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42;, score=0.274 total time= 4.3min
[CV 5/5; 5/7] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42
[CV 5/5; 5/7] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42;, score=0.273 total time= 4.3min
[CV 1/5; 6/7] START classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__num_class=6, classifier__estimator__objective=multi:softmax, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist
[CV 1/5; 6/7] END classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__num_class=6, classifier__estimator__objective=multi:softmax, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist;, score=0.250 total time= 3.1min
[CV 2/5; 6/7] START classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__num_class=6, classifier__estimator__objective=multi:softmax, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist
[CV 2/5; 6/7] END classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__num_class=6, classifier__estimator__objective=multi:softmax, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist;, score=0.248 total time= 3.1min
[CV 3/5; 6/7] START classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__num_class=6, classifier__estimator__objective=multi:softmax, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist
[CV 3/5; 6/7] END classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__num_class=6, classifier__estimator__objective=multi:softmax, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist;, score=0.248 total time= 3.1min
[CV 4/5; 6/7] START classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__num_class=6, classifier__estimator__objective=multi:softmax, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist
[CV 4/5; 6/7] END classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__num_class=6, classifier__estimator__objective=multi:softmax, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist;, score=0.251 total time= 3.2min
[CV 5/5; 6/7] START classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__num_class=6, classifier__estimator__objective=multi:softmax, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist
[CV 5/5; 6/7] END classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__num_class=6, classifier__estimator__objective=multi:softmax, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist;, score=0.254 total time= 3.1min
[CV 1/5; 7/7] START classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: n_d changed from 8 to 64
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_dims changed from [] to [109, 17, 16, 5, 90, 38, 48, 42, 128, 82, 149, 109, 89]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_emb_dim changed from 20 to [20, 8, 8, 2, 20, 19, 20, 20, 20, 20, 20, 20, 20]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_idxs changed from [] to [0, 1, 2, 3, 10, 11, 12, 13, 15, 16, 17, 18, 19]
  warnings.warn(wrn_msg)
epoch 0  | loss: 5.14858 | train_balanced_accuracy: 0.17716 | train_logloss: 3.87871 | train_f1_macro: 0.17416 | valid_balanced_accuracy: 0.17427 | valid_logloss: 3.88051 | valid_f1_macro: 0.17103 |  0:00:29s
epoch 1  | loss: 3.1995  | train_balanced_accuracy: 0.17423 | train_logloss: 3.74631 | train_f1_macro: 0.14977 | valid_balanced_accuracy: 0.17264 | valid_logloss: 3.79579 | valid_f1_macro: 0.14902 |  0:00:59s
epoch 2  | loss: 2.8972  | train_balanced_accuracy: 0.20224 | train_logloss: 2.36618 | train_f1_macro: 0.14016 | valid_balanced_accuracy: 0.20308 | valid_logloss: 2.34855 | valid_f1_macro: 0.14117 |  0:01:29s
epoch 3  | loss: 3.63105 | train_balanced_accuracy: 0.20675 | train_logloss: 3.17315 | train_f1_macro: 0.17722 | valid_balanced_accuracy: 0.20571 | valid_logloss: 3.21381 | valid_f1_macro: 0.17639 |  0:01:58s
epoch 4  | loss: 1.8423  | train_balanced_accuracy: 0.23954 | train_logloss: 1.68087 | train_f1_macro: 0.22113 | valid_balanced_accuracy: 0.23939 | valid_logloss: 1.67575 | valid_f1_macro: 0.22161 |  0:02:28s
epoch 5  | loss: 1.46315 | train_balanced_accuracy: 0.22692 | train_logloss: 1.46515 | train_f1_macro: 0.20128 | valid_balanced_accuracy: 0.22915 | valid_logloss: 1.47268 | valid_f1_macro: 0.20425 |  0:02:57s
epoch 6  | loss: 1.3553  | train_balanced_accuracy: 0.2373  | train_logloss: 1.37338 | train_f1_macro: 0.19103 | valid_balanced_accuracy: 0.23968 | valid_logloss: 1.3754  | valid_f1_macro: 0.19257 |  0:03:26s
epoch 7  | loss: 1.34675 | train_balanced_accuracy: 0.18192 | train_logloss: 1.4832  | train_f1_macro: 0.13969 | valid_balanced_accuracy: 0.18537 | valid_logloss: 1.4845  | valid_f1_macro: 0.14464 |  0:03:56s
epoch 8  | loss: 1.33397 | train_balanced_accuracy: 0.25772 | train_logloss: 1.35525 | train_f1_macro: 0.20708 | valid_balanced_accuracy: 0.2571  | valid_logloss: 1.36251 | valid_f1_macro: 0.2064  |  0:04:26s
epoch 9  | loss: 1.28616 | train_balanced_accuracy: 0.2634  | train_logloss: 1.29272 | train_f1_macro: 0.1962  | valid_balanced_accuracy: 0.26122 | valid_logloss: 1.30101 | valid_f1_macro: 0.1943  |  0:04:56s
epoch 10 | loss: 1.26515 | train_balanced_accuracy: 0.23185 | train_logloss: 1.35934 | train_f1_macro: 0.19396 | valid_balanced_accuracy: 0.23119 | valid_logloss: 1.3656  | valid_f1_macro: 0.19447 |  0:05:25s
epoch 11 | loss: 1.27967 | train_balanced_accuracy: 0.28893 | train_logloss: 1.27495 | train_f1_macro: 0.24535 | valid_balanced_accuracy: 0.28552 | valid_logloss: 1.28662 | valid_f1_macro: 0.24199 |  0:05:54s
epoch 12 | loss: 1.26523 | train_balanced_accuracy: 0.27193 | train_logloss: 1.26031 | train_f1_macro: 0.2174  | valid_balanced_accuracy: 0.27076 | valid_logloss: 1.27387 | valid_f1_macro: 0.21765 |  0:06:24s
epoch 13 | loss: 1.23458 | train_balanced_accuracy: 0.27747 | train_logloss: 1.22934 | train_f1_macro: 0.21608 | valid_balanced_accuracy: 0.27703 | valid_logloss: 1.24073 | valid_f1_macro: 0.21409 |  0:06:53s
epoch 14 | loss: 1.21018 | train_balanced_accuracy: 0.27979 | train_logloss: 1.19081 | train_f1_macro: 0.21646 | valid_balanced_accuracy: 0.27965 | valid_logloss: 1.20009 | valid_f1_macro: 0.21616 |  0:07:22s
epoch 15 | loss: 1.20206 | train_balanced_accuracy: 0.3104  | train_logloss: 1.20205 | train_f1_macro: 0.26778 | valid_balanced_accuracy: 0.30744 | valid_logloss: 1.20889 | valid_f1_macro: 0.26387 |  0:07:51s
epoch 16 | loss: 1.2067  | train_balanced_accuracy: 0.26825 | train_logloss: 1.25518 | train_f1_macro: 0.24196 | valid_balanced_accuracy: 0.27071 | valid_logloss: 1.26834 | valid_f1_macro: 0.24607 |  0:08:21s
epoch 17 | loss: 1.23787 | train_balanced_accuracy: 0.27774 | train_logloss: 1.26424 | train_f1_macro: 0.24131 | valid_balanced_accuracy: 0.27634 | valid_logloss: 1.27721 | valid_f1_macro: 0.24005 |  0:08:50s
epoch 18 | loss: 1.23577 | train_balanced_accuracy: 0.27914 | train_logloss: 1.24283 | train_f1_macro: 0.24254 | valid_balanced_accuracy: 0.2787  | valid_logloss: 1.26179 | valid_f1_macro: 0.24154 |  0:09:19s
epoch 19 | loss: 1.22347 | train_balanced_accuracy: 0.30016 | train_logloss: 1.2065  | train_f1_macro: 0.26312 | valid_balanced_accuracy: 0.29593 | valid_logloss: 1.22438 | valid_f1_macro: 0.25761 |  0:09:48s
epoch 20 | loss: 1.21351 | train_balanced_accuracy: 0.30343 | train_logloss: 1.20999 | train_f1_macro: 0.26172 | valid_balanced_accuracy: 0.30144 | valid_logloss: 1.22535 | valid_f1_macro: 0.25891 |  0:10:17s
epoch 21 | loss: 1.20694 | train_balanced_accuracy: 0.30229 | train_logloss: 1.19376 | train_f1_macro: 0.26152 | valid_balanced_accuracy: 0.2989  | valid_logloss: 1.21086 | valid_f1_macro: 0.2581  |  0:10:46s
epoch 22 | loss: 1.20298 | train_balanced_accuracy: 0.2805  | train_logloss: 1.18899 | train_f1_macro: 0.2343  | valid_balanced_accuracy: 0.27812 | valid_logloss: 1.20835 | valid_f1_macro: 0.23198 |  0:11:15s
epoch 23 | loss: 1.2158  | train_balanced_accuracy: 0.30163 | train_logloss: 1.19389 | train_f1_macro: 0.27082 | valid_balanced_accuracy: 0.29959 | valid_logloss: 1.21278 | valid_f1_macro: 0.26863 |  0:11:44s
epoch 24 | loss: 1.22116 | train_balanced_accuracy: 0.29655 | train_logloss: 1.18908 | train_f1_macro: 0.25641 | valid_balanced_accuracy: 0.29518 | valid_logloss: 1.2091  | valid_f1_macro: 0.25469 |  0:12:13s
epoch 25 | loss: 1.20279 | train_balanced_accuracy: 0.29775 | train_logloss: 1.18874 | train_f1_macro: 0.26618 | valid_balanced_accuracy: 0.29242 | valid_logloss: 1.20844 | valid_f1_macro: 0.25959 |  0:12:42s
epoch 26 | loss: 1.21083 | train_balanced_accuracy: 0.29145 | train_logloss: 1.20628 | train_f1_macro: 0.24907 | valid_balanced_accuracy: 0.28873 | valid_logloss: 1.22429 | valid_f1_macro: 0.24601 |  0:13:12s
epoch 27 | loss: 1.23929 | train_balanced_accuracy: 0.28647 | train_logloss: 1.20925 | train_f1_macro: 0.24673 | valid_balanced_accuracy: 0.28194 | valid_logloss: 1.22986 | valid_f1_macro: 0.24143 |  0:13:41s
epoch 28 | loss: 1.21948 | train_balanced_accuracy: 0.29186 | train_logloss: 1.20319 | train_f1_macro: 0.25628 | valid_balanced_accuracy: 0.29013 | valid_logloss: 1.22468 | valid_f1_macro: 0.25452 |  0:14:10s
epoch 29 | loss: 1.21939 | train_balanced_accuracy: 0.27829 | train_logloss: 1.21687 | train_f1_macro: 0.2262  | valid_balanced_accuracy: 0.28092 | valid_logloss: 1.22717 | valid_f1_macro: 0.23194 |  0:14:39s
epoch 30 | loss: 1.23424 | train_balanced_accuracy: 0.28532 | train_logloss: 1.22974 | train_f1_macro: 0.23577 | valid_balanced_accuracy: 0.28416 | valid_logloss: 1.23831 | valid_f1_macro: 0.23535 |  0:15:09s
epoch 31 | loss: 1.21783 | train_balanced_accuracy: 0.28515 | train_logloss: 1.20778 | train_f1_macro: 0.24841 | valid_balanced_accuracy: 0.28117 | valid_logloss: 1.21837 | valid_f1_macro: 0.24383 |  0:15:38s
epoch 32 | loss: 1.20766 | train_balanced_accuracy: 0.28891 | train_logloss: 1.1904  | train_f1_macro: 0.25417 | valid_balanced_accuracy: 0.28623 | valid_logloss: 1.2032  | valid_f1_macro: 0.24885 |  0:16:07s
epoch 33 | loss: 1.19285 | train_balanced_accuracy: 0.28857 | train_logloss: 1.18985 | train_f1_macro: 0.24867 | valid_balanced_accuracy: 0.28772 | valid_logloss: 1.19889 | valid_f1_macro: 0.24853 |  0:16:36s
epoch 34 | loss: 1.18488 | train_balanced_accuracy: 0.31939 | train_logloss: 1.18349 | train_f1_macro: 0.29744 | valid_balanced_accuracy: 0.31433 | valid_logloss: 1.19772 | valid_f1_macro: 0.29142 |  0:17:05s
epoch 35 | loss: 1.18415 | train_balanced_accuracy: 0.28582 | train_logloss: 1.17422 | train_f1_macro: 0.25166 | valid_balanced_accuracy: 0.28024 | valid_logloss: 1.18958 | valid_f1_macro: 0.24263 |  0:17:34s
epoch 36 | loss: 1.17999 | train_balanced_accuracy: 0.29226 | train_logloss: 1.18187 | train_f1_macro: 0.26863 | valid_balanced_accuracy: 0.28831 | valid_logloss: 1.19645 | valid_f1_macro: 0.26261 |  0:18:03s
epoch 37 | loss: 1.17637 | train_balanced_accuracy: 0.33147 | train_logloss: 1.17412 | train_f1_macro: 0.3149  | valid_balanced_accuracy: 0.32461 | valid_logloss: 1.19115 | valid_f1_macro: 0.30504 |  0:18:32s
epoch 38 | loss: 1.17392 | train_balanced_accuracy: 0.30478 | train_logloss: 1.1633  | train_f1_macro: 0.28149 | valid_balanced_accuracy: 0.29868 | valid_logloss: 1.17986 | valid_f1_macro: 0.2721  |  0:19:01s
epoch 39 | loss: 1.17332 | train_balanced_accuracy: 0.29257 | train_logloss: 1.18285 | train_f1_macro: 0.27046 | valid_balanced_accuracy: 0.29018 | valid_logloss: 1.19344 | valid_f1_macro: 0.26752 |  0:19:30s
epoch 40 | loss: 1.16985 | train_balanced_accuracy: 0.31035 | train_logloss: 1.15486 | train_f1_macro: 0.28038 | valid_balanced_accuracy: 0.30836 | valid_logloss: 1.17235 | valid_f1_macro: 0.27886 |  0:19:59s
epoch 41 | loss: 1.17762 | train_balanced_accuracy: 0.30539 | train_logloss: 1.177   | train_f1_macro: 0.28489 | valid_balanced_accuracy: 0.30094 | valid_logloss: 1.19449 | valid_f1_macro: 0.27971 |  0:20:28s
epoch 42 | loss: 1.18338 | train_balanced_accuracy: 0.301   | train_logloss: 1.17133 | train_f1_macro: 0.27359 | valid_balanced_accuracy: 0.29774 | valid_logloss: 1.18771 | valid_f1_macro: 0.26888 |  0:20:57s
epoch 43 | loss: 1.17312 | train_balanced_accuracy: 0.3198  | train_logloss: 1.16135 | train_f1_macro: 0.29202 | valid_balanced_accuracy: 0.3138  | valid_logloss: 1.17298 | valid_f1_macro: 0.28226 |  0:21:26s
epoch 44 | loss: 1.16633 | train_balanced_accuracy: 0.28882 | train_logloss: 1.15527 | train_f1_macro: 0.25454 | valid_balanced_accuracy: 0.28594 | valid_logloss: 1.17334 | valid_f1_macro: 0.25143 |  0:21:55s
epoch 45 | loss: 1.15992 | train_balanced_accuracy: 0.32641 | train_logloss: 1.15386 | train_f1_macro: 0.30027 | valid_balanced_accuracy: 0.32381 | valid_logloss: 1.17092 | valid_f1_macro: 0.29311 |  0:22:24s
epoch 46 | loss: 1.15733 | train_balanced_accuracy: 0.31726 | train_logloss: 1.15041 | train_f1_macro: 0.29039 | valid_balanced_accuracy: 0.31274 | valid_logloss: 1.16642 | valid_f1_macro: 0.28441 |  0:22:53s
epoch 47 | loss: 1.1539  | train_balanced_accuracy: 0.32429 | train_logloss: 1.15134 | train_f1_macro: 0.30269 | valid_balanced_accuracy: 0.31764 | valid_logloss: 1.17286 | valid_f1_macro: 0.29493 |  0:23:22s
epoch 48 | loss: 1.15188 | train_balanced_accuracy: 0.32305 | train_logloss: 1.14044 | train_f1_macro: 0.29934 | valid_balanced_accuracy: 0.31707 | valid_logloss: 1.15797 | valid_f1_macro: 0.29041 |  0:23:51s
epoch 49 | loss: 1.14934 | train_balanced_accuracy: 0.32189 | train_logloss: 1.14679 | train_f1_macro: 0.29439 | valid_balanced_accuracy: 0.31638 | valid_logloss: 1.16637 | valid_f1_macro: 0.28625 |  0:24:22s
epoch 50 | loss: 1.15837 | train_balanced_accuracy: 0.33654 | train_logloss: 1.16603 | train_f1_macro: 0.30606 | valid_balanced_accuracy: 0.33004 | valid_logloss: 1.17922 | valid_f1_macro: 0.29699 |  0:24:51s
epoch 51 | loss: 1.16139 | train_balanced_accuracy: 0.31038 | train_logloss: 1.16117 | train_f1_macro: 0.29262 | valid_balanced_accuracy: 0.3121  | valid_logloss: 1.17537 | valid_f1_macro: 0.29467 |  0:25:21s
epoch 52 | loss: 1.15409 | train_balanced_accuracy: 0.32367 | train_logloss: 1.13997 | train_f1_macro: 0.29228 | valid_balanced_accuracy: 0.32057 | valid_logloss: 1.15673 | valid_f1_macro: 0.28906 |  0:25:50s
epoch 53 | loss: 1.14268 | train_balanced_accuracy: 0.31861 | train_logloss: 1.13076 | train_f1_macro: 0.29595 | valid_balanced_accuracy: 0.31626 | valid_logloss: 1.14823 | valid_f1_macro: 0.29365 |  0:26:19s
epoch 54 | loss: 1.13916 | train_balanced_accuracy: 0.32471 | train_logloss: 1.13917 | train_f1_macro: 0.30385 | valid_balanced_accuracy: 0.31813 | valid_logloss: 1.15794 | valid_f1_macro: 0.29607 |  0:26:48s
epoch 55 | loss: 1.13945 | train_balanced_accuracy: 0.31506 | train_logloss: 1.1488  | train_f1_macro: 0.30008 | valid_balanced_accuracy: 0.30903 | valid_logloss: 1.16158 | valid_f1_macro: 0.29299 |  0:27:17s
epoch 56 | loss: 1.13398 | train_balanced_accuracy: 0.3159  | train_logloss: 1.13389 | train_f1_macro: 0.29055 | valid_balanced_accuracy: 0.3119  | valid_logloss: 1.15357 | valid_f1_macro: 0.28518 |  0:27:46s
epoch 57 | loss: 1.13983 | train_balanced_accuracy: 0.33656 | train_logloss: 1.14242 | train_f1_macro: 0.3171  | valid_balanced_accuracy: 0.33287 | valid_logloss: 1.16386 | valid_f1_macro: 0.31343 |  0:28:15s
epoch 58 | loss: 1.13979 | train_balanced_accuracy: 0.32083 | train_logloss: 1.16863 | train_f1_macro: 0.30131 | valid_balanced_accuracy: 0.31481 | valid_logloss: 1.1899  | valid_f1_macro: 0.29445 |  0:28:44s
epoch 59 | loss: 1.13943 | train_balanced_accuracy: 0.31706 | train_logloss: 1.19428 | train_f1_macro: 0.29005 | valid_balanced_accuracy: 0.30814 | valid_logloss: 1.22131 | valid_f1_macro: 0.28082 |  0:29:13s
epoch 60 | loss: 1.1307  | train_balanced_accuracy: 0.31195 | train_logloss: 1.17417 | train_f1_macro: 0.28389 | valid_balanced_accuracy: 0.3047  | valid_logloss: 1.19274 | valid_f1_macro: 0.27597 |  0:29:42s
epoch 61 | loss: 1.12024 | train_balanced_accuracy: 0.30519 | train_logloss: 1.13655 | train_f1_macro: 0.27185 | valid_balanced_accuracy: 0.29681 | valid_logloss: 1.15847 | valid_f1_macro: 0.26038 |  0:30:11s
epoch 62 | loss: 1.11367 | train_balanced_accuracy: 0.32607 | train_logloss: 1.14878 | train_f1_macro: 0.30724 | valid_balanced_accuracy: 0.31039 | valid_logloss: 1.17172 | valid_f1_macro: 0.29161 |  0:30:41s
epoch 63 | loss: 1.11704 | train_balanced_accuracy: 0.31377 | train_logloss: 1.17526 | train_f1_macro: 0.29107 | valid_balanced_accuracy: 0.29771 | valid_logloss: 1.20419 | valid_f1_macro: 0.27639 |  0:31:10s
epoch 64 | loss: 1.10824 | train_balanced_accuracy: 0.31421 | train_logloss: 1.21035 | train_f1_macro: 0.2914  | valid_balanced_accuracy: 0.29752 | valid_logloss: 1.23736 | valid_f1_macro: 0.2769  |  0:31:39s
epoch 65 | loss: 1.09138 | train_balanced_accuracy: 0.31131 | train_logloss: 1.19787 | train_f1_macro: 0.28289 | valid_balanced_accuracy: 0.29535 | valid_logloss: 1.22521 | valid_f1_macro: 0.26853 |  0:32:08s
epoch 66 | loss: 1.08566 | train_balanced_accuracy: 0.37281 | train_logloss: 1.15618 | train_f1_macro: 0.33484 | valid_balanced_accuracy: 0.36833 | valid_logloss: 1.18432 | valid_f1_macro: 0.32691 |  0:32:37s
epoch 67 | loss: 1.07584 | train_balanced_accuracy: 0.39379 | train_logloss: 1.15355 | train_f1_macro: 0.35416 | valid_balanced_accuracy: 0.38844 | valid_logloss: 1.18663 | valid_f1_macro: 0.34622 |  0:33:07s
epoch 68 | loss: 1.06721 | train_balanced_accuracy: 0.40305 | train_logloss: 1.0692  | train_f1_macro: 0.38615 | valid_balanced_accuracy: 0.39637 | valid_logloss: 1.10309 | valid_f1_macro: 0.37702 |  0:33:36s
epoch 69 | loss: 1.06159 | train_balanced_accuracy: 0.35089 | train_logloss: 1.05833 | train_f1_macro: 0.34802 | valid_balanced_accuracy: 0.33411 | valid_logloss: 1.09533 | valid_f1_macro: 0.32685 |  0:34:06s
epoch 70 | loss: 1.06044 | train_balanced_accuracy: 0.38838 | train_logloss: 1.03998 | train_f1_macro: 0.39539 | valid_balanced_accuracy: 0.3731  | valid_logloss: 1.07993 | valid_f1_macro: 0.37638 |  0:34:35s
epoch 71 | loss: 1.05007 | train_balanced_accuracy: 0.40772 | train_logloss: 1.032   | train_f1_macro: 0.42317 | valid_balanced_accuracy: 0.39098 | valid_logloss: 1.06592 | valid_f1_macro: 0.40175 |  0:35:04s
epoch 72 | loss: 1.04547 | train_balanced_accuracy: 0.37927 | train_logloss: 1.16134 | train_f1_macro: 0.40007 | valid_balanced_accuracy: 0.35937 | valid_logloss: 1.18333 | valid_f1_macro: 0.37643 |  0:35:34s
epoch 73 | loss: 1.05585 | train_balanced_accuracy: 0.30267 | train_logloss: 1.33801 | train_f1_macro: 0.27528 | valid_balanced_accuracy: 0.28854 | valid_logloss: 1.35613 | valid_f1_macro: 0.26016 |  0:36:03s
epoch 74 | loss: 1.09448 | train_balanced_accuracy: 0.26728 | train_logloss: 1.25556 | train_f1_macro: 0.25069 | valid_balanced_accuracy: 0.26386 | valid_logloss: 1.26148 | valid_f1_macro: 0.24828 |  0:36:32s
epoch 75 | loss: 1.12018 | train_balanced_accuracy: 0.27504 | train_logloss: 1.18961 | train_f1_macro: 0.27327 | valid_balanced_accuracy: 0.27172 | valid_logloss: 1.20589 | valid_f1_macro: 0.26868 |  0:37:02s
epoch 76 | loss: 1.11558 | train_balanced_accuracy: 0.34508 | train_logloss: 1.09775 | train_f1_macro: 0.34096 | valid_balanced_accuracy: 0.33323 | valid_logloss: 1.1276  | valid_f1_macro: 0.3284  |  0:37:34s
epoch 77 | loss: 1.08458 | train_balanced_accuracy: 0.36989 | train_logloss: 1.08701 | train_f1_macro: 0.37156 | valid_balanced_accuracy: 0.35667 | valid_logloss: 1.12095 | valid_f1_macro: 0.35172 |  0:38:05s
epoch 78 | loss: 1.07695 | train_balanced_accuracy: 0.34626 | train_logloss: 1.08441 | train_f1_macro: 0.35727 | valid_balanced_accuracy: 0.3319  | valid_logloss: 1.12306 | valid_f1_macro: 0.33985 |  0:38:36s
epoch 79 | loss: 1.06028 | train_balanced_accuracy: 0.34415 | train_logloss: 1.10312 | train_f1_macro: 0.35533 | valid_balanced_accuracy: 0.33256 | valid_logloss: 1.1362  | valid_f1_macro: 0.34015 |  0:39:05s
epoch 80 | loss: 1.0482  | train_balanced_accuracy: 0.38318 | train_logloss: 1.05654 | train_f1_macro: 0.39706 | valid_balanced_accuracy: 0.36783 | valid_logloss: 1.09528 | valid_f1_macro: 0.3794  |  0:39:34s
epoch 81 | loss: 1.03889 | train_balanced_accuracy: 0.37421 | train_logloss: 1.0432  | train_f1_macro: 0.37772 | valid_balanced_accuracy: 0.36863 | valid_logloss: 1.07992 | valid_f1_macro: 0.37186 |  0:40:04s
epoch 82 | loss: 1.03035 | train_balanced_accuracy: 0.43106 | train_logloss: 1.01429 | train_f1_macro: 0.43361 | valid_balanced_accuracy: 0.41942 | valid_logloss: 1.06483 | valid_f1_macro: 0.41838 |  0:40:33s
epoch 83 | loss: 1.02392 | train_balanced_accuracy: 0.35742 | train_logloss: 1.12762 | train_f1_macro: 0.38742 | valid_balanced_accuracy: 0.33868 | valid_logloss: 1.16093 | valid_f1_macro: 0.36259 |  0:41:03s
epoch 84 | loss: 1.02273 | train_balanced_accuracy: 0.41563 | train_logloss: 1.1215  | train_f1_macro: 0.41351 | valid_balanced_accuracy: 0.40191 | valid_logloss: 1.1773  | valid_f1_macro: 0.3946  |  0:41:32s
epoch 85 | loss: 1.05439 | train_balanced_accuracy: 0.37273 | train_logloss: 1.5381  | train_f1_macro: 0.35748 | valid_balanced_accuracy: 0.35407 | valid_logloss: 1.61916 | valid_f1_macro: 0.33467 |  0:42:01s
epoch 86 | loss: 1.02651 | train_balanced_accuracy: 0.40247 | train_logloss: 1.2988  | train_f1_macro: 0.366   | valid_balanced_accuracy: 0.391   | valid_logloss: 1.36961 | valid_f1_macro: 0.35205 |  0:42:31s
epoch 87 | loss: 1.021   | train_balanced_accuracy: 0.40373 | train_logloss: 1.22271 | train_f1_macro: 0.37546 | valid_balanced_accuracy: 0.39413 | valid_logloss: 1.29177 | valid_f1_macro: 0.36524 |  0:43:00s
epoch 88 | loss: 1.01046 | train_balanced_accuracy: 0.41838 | train_logloss: 1.04077 | train_f1_macro: 0.4063  | valid_balanced_accuracy: 0.40945 | valid_logloss: 1.09408 | valid_f1_macro: 0.39442 |  0:43:29s
epoch 89 | loss: 1.00487 | train_balanced_accuracy: 0.4279  | train_logloss: 1.00043 | train_f1_macro: 0.43124 | valid_balanced_accuracy: 0.40786 | valid_logloss: 1.0583  | valid_f1_macro: 0.40304 |  0:43:58s
epoch 90 | loss: 0.99007 | train_balanced_accuracy: 0.45849 | train_logloss: 0.98838 | train_f1_macro: 0.46637 | valid_balanced_accuracy: 0.43323 | valid_logloss: 1.05488 | valid_f1_macro: 0.43829 |  0:44:29s
epoch 91 | loss: 0.97945 | train_balanced_accuracy: 0.46134 | train_logloss: 0.9354  | train_f1_macro: 0.48194 | valid_balanced_accuracy: 0.4402  | valid_logloss: 1.00065 | valid_f1_macro: 0.45398 |  0:44:58s
epoch 92 | loss: 0.97178 | train_balanced_accuracy: 0.47769 | train_logloss: 0.95302 | train_f1_macro: 0.50938 | valid_balanced_accuracy: 0.44768 | valid_logloss: 1.00229 | valid_f1_macro: 0.47304 |  0:45:28s
epoch 93 | loss: 0.9932  | train_balanced_accuracy: 0.38334 | train_logloss: 1.09507 | train_f1_macro: 0.39308 | valid_balanced_accuracy: 0.36205 | valid_logloss: 1.13992 | valid_f1_macro: 0.3677  |  0:45:57s
epoch 94 | loss: 1.0984  | train_balanced_accuracy: 0.4212  | train_logloss: 1.04225 | train_f1_macro: 0.43658 | valid_balanced_accuracy: 0.40165 | valid_logloss: 1.07641 | valid_f1_macro: 0.40777 |  0:46:26s
epoch 95 | loss: 1.03924 | train_balanced_accuracy: 0.44224 | train_logloss: 0.99481 | train_f1_macro: 0.47055 | valid_balanced_accuracy: 0.42983 | valid_logloss: 1.03267 | valid_f1_macro: 0.45333 |  0:46:56s
epoch 96 | loss: 1.00289 | train_balanced_accuracy: 0.47144 | train_logloss: 0.97675 | train_f1_macro: 0.49103 | valid_balanced_accuracy: 0.45219 | valid_logloss: 1.01813 | valid_f1_macro: 0.46543 |  0:47:25s
epoch 97 | loss: 1.00704 | train_balanced_accuracy: 0.45098 | train_logloss: 0.97534 | train_f1_macro: 0.48855 | valid_balanced_accuracy: 0.42963 | valid_logloss: 1.01243 | valid_f1_macro: 0.46129 |  0:47:54s
epoch 98 | loss: 0.98103 | train_balanced_accuracy: 0.48631 | train_logloss: 0.94286 | train_f1_macro: 0.52186 | valid_balanced_accuracy: 0.44793 | valid_logloss: 0.99433 | valid_f1_macro: 0.47517 |  0:48:24s
epoch 99 | loss: 0.96834 | train_balanced_accuracy: 0.50157 | train_logloss: 0.96134 | train_f1_macro: 0.5316  | valid_balanced_accuracy: 0.47172 | valid_logloss: 1.00982 | valid_f1_macro: 0.49711 |  0:48:53s
epoch 100| loss: 0.95635 | train_balanced_accuracy: 0.49529 | train_logloss: 0.95114 | train_f1_macro: 0.5259  | valid_balanced_accuracy: 0.46404 | valid_logloss: 1.00287 | valid_f1_macro: 0.48879 |  0:49:22s
epoch 101| loss: 0.95785 | train_balanced_accuracy: 0.45021 | train_logloss: 1.00304 | train_f1_macro: 0.49052 | valid_balanced_accuracy: 0.42251 | valid_logloss: 1.05338 | valid_f1_macro: 0.45441 |  0:49:51s
epoch 102| loss: 0.94831 | train_balanced_accuracy: 0.47689 | train_logloss: 0.91789 | train_f1_macro: 0.50584 | valid_balanced_accuracy: 0.44364 | valid_logloss: 0.99283 | valid_f1_macro: 0.4625  |  0:50:21s
epoch 103| loss: 0.93406 | train_balanced_accuracy: 0.48454 | train_logloss: 0.98393 | train_f1_macro: 0.50153 | valid_balanced_accuracy: 0.4573  | valid_logloss: 1.07034 | valid_f1_macro: 0.46823 |  0:50:51s
epoch 104| loss: 0.93329 | train_balanced_accuracy: 0.43645 | train_logloss: 1.18508 | train_f1_macro: 0.4309  | valid_balanced_accuracy: 0.41166 | valid_logloss: 1.28438 | valid_f1_macro: 0.4001  |  0:51:20s
epoch 105| loss: 0.91385 | train_balanced_accuracy: 0.46494 | train_logloss: 1.07247 | train_f1_macro: 0.46203 | valid_balanced_accuracy: 0.4392  | valid_logloss: 1.17367 | valid_f1_macro: 0.43059 |  0:51:49s
epoch 106| loss: 0.94297 | train_balanced_accuracy: 0.47746 | train_logloss: 0.95002 | train_f1_macro: 0.48562 | valid_balanced_accuracy: 0.45201 | valid_logloss: 1.01936 | valid_f1_macro: 0.45295 |  0:52:19s
epoch 107| loss: 0.92065 | train_balanced_accuracy: 0.49646 | train_logloss: 0.87802 | train_f1_macro: 0.53429 | valid_balanced_accuracy: 0.45987 | valid_logloss: 0.95914 | valid_f1_macro: 0.48828 |  0:52:48s
epoch 108| loss: 0.90045 | train_balanced_accuracy: 0.53943 | train_logloss: 0.85173 | train_f1_macro: 0.57533 | valid_balanced_accuracy: 0.49911 | valid_logloss: 0.93684 | valid_f1_macro: 0.528   |  0:53:18s
epoch 109| loss: 0.89362 | train_balanced_accuracy: 0.50428 | train_logloss: 0.86984 | train_f1_macro: 0.55051 | valid_balanced_accuracy: 0.46335 | valid_logloss: 0.94294 | valid_f1_macro: 0.50372 |  0:53:47s
epoch 110| loss: 0.89735 | train_balanced_accuracy: 0.52336 | train_logloss: 0.87381 | train_f1_macro: 0.5649  | valid_balanced_accuracy: 0.48365 | valid_logloss: 0.93773 | valid_f1_macro: 0.51909 |  0:54:18s
epoch 111| loss: 0.88291 | train_balanced_accuracy: 0.50118 | train_logloss: 0.91599 | train_f1_macro: 0.54581 | valid_balanced_accuracy: 0.46246 | valid_logloss: 0.98673 | valid_f1_macro: 0.49938 |  0:54:48s
epoch 112| loss: 0.87426 | train_balanced_accuracy: 0.53626 | train_logloss: 0.85113 | train_f1_macro: 0.57779 | valid_balanced_accuracy: 0.49154 | valid_logloss: 0.92564 | valid_f1_macro: 0.52716 |  0:55:17s
epoch 113| loss: 0.85575 | train_balanced_accuracy: 0.51974 | train_logloss: 0.87576 | train_f1_macro: 0.56127 | valid_balanced_accuracy: 0.4791  | valid_logloss: 0.94706 | valid_f1_macro: 0.51596 |  0:55:47s
epoch 114| loss: 0.8355  | train_balanced_accuracy: 0.53738 | train_logloss: 0.85369 | train_f1_macro: 0.57827 | valid_balanced_accuracy: 0.49872 | valid_logloss: 0.93355 | valid_f1_macro: 0.53552 |  0:56:16s
epoch 115| loss: 0.84073 | train_balanced_accuracy: 0.53273 | train_logloss: 0.88806 | train_f1_macro: 0.5706  | valid_balanced_accuracy: 0.49061 | valid_logloss: 0.96078 | valid_f1_macro: 0.52284 |  0:56:45s
epoch 116| loss: 0.89269 | train_balanced_accuracy: 0.48737 | train_logloss: 0.9656  | train_f1_macro: 0.52541 | valid_balanced_accuracy: 0.45043 | valid_logloss: 1.02471 | valid_f1_macro: 0.48732 |  0:57:15s
epoch 117| loss: 0.86356 | train_balanced_accuracy: 0.4474  | train_logloss: 1.13187 | train_f1_macro: 0.45622 | valid_balanced_accuracy: 0.41286 | valid_logloss: 1.1832  | valid_f1_macro: 0.42389 |  0:57:44s
epoch 118| loss: 0.8409  | train_balanced_accuracy: 0.44976 | train_logloss: 1.07956 | train_f1_macro: 0.46571 | valid_balanced_accuracy: 0.41618 | valid_logloss: 1.13461 | valid_f1_macro: 0.43038 |  0:58:13s
epoch 119| loss: 0.81966 | train_balanced_accuracy: 0.4436  | train_logloss: 1.2073  | train_f1_macro: 0.44247 | valid_balanced_accuracy: 0.40429 | valid_logloss: 1.2595  | valid_f1_macro: 0.40344 |  0:58:43s
epoch 120| loss: 0.79869 | train_balanced_accuracy: 0.466   | train_logloss: 1.11559 | train_f1_macro: 0.4692  | valid_balanced_accuracy: 0.4303  | valid_logloss: 1.1746  | valid_f1_macro: 0.43382 |  0:59:12s
epoch 121| loss: 0.78991 | train_balanced_accuracy: 0.39078 | train_logloss: 1.43197 | train_f1_macro: 0.36565 | valid_balanced_accuracy: 0.3682  | valid_logloss: 1.47251 | valid_f1_macro: 0.34526 |  0:59:41s
epoch 122| loss: 0.7722  | train_balanced_accuracy: 0.44073 | train_logloss: 1.21168 | train_f1_macro: 0.43332 | valid_balanced_accuracy: 0.40849 | valid_logloss: 1.27007 | valid_f1_macro: 0.40574 |  1:00:10s
epoch 123| loss: 0.75419 | train_balanced_accuracy: 0.45117 | train_logloss: 1.24328 | train_f1_macro: 0.43509 | valid_balanced_accuracy: 0.42241 | valid_logloss: 1.29586 | valid_f1_macro: 0.41232 |  1:00:40s
epoch 124| loss: 0.80117 | train_balanced_accuracy: 0.52753 | train_logloss: 1.13976 | train_f1_macro: 0.51728 | valid_balanced_accuracy: 0.49356 | valid_logloss: 1.3151  | valid_f1_macro: 0.48224 |  1:01:09s
epoch 125| loss: 0.78302 | train_balanced_accuracy: 0.56561 | train_logloss: 0.84865 | train_f1_macro: 0.57034 | valid_balanced_accuracy: 0.53368 | valid_logloss: 0.98715 | valid_f1_macro: 0.53838 |  1:01:39s
epoch 126| loss: 0.76687 | train_balanced_accuracy: 0.62634 | train_logloss: 0.73701 | train_f1_macro: 0.63802 | valid_balanced_accuracy: 0.57811 | valid_logloss: 0.89044 | valid_f1_macro: 0.58651 |  1:02:08s
epoch 127| loss: 0.74298 | train_balanced_accuracy: 0.62217 | train_logloss: 0.73551 | train_f1_macro: 0.64088 | valid_balanced_accuracy: 0.56774 | valid_logloss: 0.88656 | valid_f1_macro: 0.58249 |  1:02:37s
epoch 128| loss: 0.71573 | train_balanced_accuracy: 0.66013 | train_logloss: 0.69018 | train_f1_macro: 0.67685 | valid_balanced_accuracy: 0.6055  | valid_logloss: 0.86186 | valid_f1_macro: 0.61848 |  1:03:07s
epoch 129| loss: 0.71184 | train_balanced_accuracy: 0.65258 | train_logloss: 0.64155 | train_f1_macro: 0.6798  | valid_balanced_accuracy: 0.59965 | valid_logloss: 0.7863  | valid_f1_macro: 0.62312 |  1:03:36s
epoch 130| loss: 0.6994  | train_balanced_accuracy: 0.67888 | train_logloss: 0.62866 | train_f1_macro: 0.71145 | valid_balanced_accuracy: 0.62814 | valid_logloss: 0.75677 | valid_f1_macro: 0.65579 |  1:04:07s
epoch 131| loss: 0.68159 | train_balanced_accuracy: 0.68681 | train_logloss: 0.59792 | train_f1_macro: 0.71607 | valid_balanced_accuracy: 0.63944 | valid_logloss: 0.73638 | valid_f1_macro: 0.66524 |  1:04:36s
epoch 132| loss: 0.67848 | train_balanced_accuracy: 0.67479 | train_logloss: 0.65996 | train_f1_macro: 0.69807 | valid_balanced_accuracy: 0.61599 | valid_logloss: 0.7932  | valid_f1_macro: 0.63713 |  1:05:06s
epoch 133| loss: 0.70627 | train_balanced_accuracy: 0.6625  | train_logloss: 0.69742 | train_f1_macro: 0.69024 | valid_balanced_accuracy: 0.61039 | valid_logloss: 0.81593 | valid_f1_macro: 0.6354  |  1:05:35s
epoch 134| loss: 0.70016 | train_balanced_accuracy: 0.62129 | train_logloss: 0.75173 | train_f1_macro: 0.64285 | valid_balanced_accuracy: 0.57533 | valid_logloss: 0.8541  | valid_f1_macro: 0.59651 |  1:06:05s
epoch 135| loss: 0.66909 | train_balanced_accuracy: 0.68523 | train_logloss: 0.63345 | train_f1_macro: 0.71681 | valid_balanced_accuracy: 0.6285  | valid_logloss: 0.76183 | valid_f1_macro: 0.65893 |  1:06:34s
epoch 136| loss: 0.64969 | train_balanced_accuracy: 0.64067 | train_logloss: 0.739   | train_f1_macro: 0.65792 | valid_balanced_accuracy: 0.59819 | valid_logloss: 0.8511  | valid_f1_macro: 0.61483 |  1:07:03s
epoch 137| loss: 0.64879 | train_balanced_accuracy: 0.69926 | train_logloss: 0.60416 | train_f1_macro: 0.72402 | valid_balanced_accuracy: 0.65062 | valid_logloss: 0.74186 | valid_f1_macro: 0.6705  |  1:07:33s
epoch 138| loss: 0.6358  | train_balanced_accuracy: 0.66412 | train_logloss: 0.67429 | train_f1_macro: 0.69119 | valid_balanced_accuracy: 0.60673 | valid_logloss: 0.80403 | valid_f1_macro: 0.63381 |  1:08:02s
epoch 139| loss: 0.63809 | train_balanced_accuracy: 0.6772  | train_logloss: 0.66864 | train_f1_macro: 0.69402 | valid_balanced_accuracy: 0.61768 | valid_logloss: 0.80463 | valid_f1_macro: 0.63123 |  1:08:31s
epoch 140| loss: 0.61506 | train_balanced_accuracy: 0.56758 | train_logloss: 0.89353 | train_f1_macro: 0.57077 | valid_balanced_accuracy: 0.52136 | valid_logloss: 1.0157  | valid_f1_macro: 0.52702 |  1:09:01s
epoch 141| loss: 0.6024  | train_balanced_accuracy: 0.72755 | train_logloss: 0.52912 | train_f1_macro: 0.75824 | valid_balanced_accuracy: 0.66233 | valid_logloss: 0.69712 | valid_f1_macro: 0.6892  |  1:09:30s
epoch 142| loss: 0.59499 | train_balanced_accuracy: 0.67857 | train_logloss: 0.66966 | train_f1_macro: 0.70186 | valid_balanced_accuracy: 0.62829 | valid_logloss: 0.80613 | valid_f1_macro: 0.65058 |  1:09:59s
epoch 143| loss: 0.6422  | train_balanced_accuracy: 0.5844  | train_logloss: 0.8895  | train_f1_macro: 0.59728 | valid_balanced_accuracy: 0.54077 | valid_logloss: 1.07977 | valid_f1_macro: 0.5471  |  1:10:29s
epoch 144| loss: 0.62415 | train_balanced_accuracy: 0.69379 | train_logloss: 0.63004 | train_f1_macro: 0.70894 | valid_balanced_accuracy: 0.63832 | valid_logloss: 0.85201 | valid_f1_macro: 0.64827 |  1:10:59s
epoch 145| loss: 0.58768 | train_balanced_accuracy: 0.77478 | train_logloss: 0.51814 | train_f1_macro: 0.78053 | valid_balanced_accuracy: 0.70793 | valid_logloss: 0.68863 | valid_f1_macro: 0.71262 |  1:11:28s
epoch 146| loss: 0.56964 | train_balanced_accuracy: 0.64628 | train_logloss: 0.74433 | train_f1_macro: 0.65871 | valid_balanced_accuracy: 0.59882 | valid_logloss: 0.87063 | valid_f1_macro: 0.61234 |  1:11:57s
epoch 147| loss: 0.56085 | train_balanced_accuracy: 0.53475 | train_logloss: 1.12606 | train_f1_macro: 0.52022 | valid_balanced_accuracy: 0.48785 | valid_logloss: 1.22748 | valid_f1_macro: 0.47604 |  1:12:27s
epoch 148| loss: 0.54657 | train_balanced_accuracy: 0.54369 | train_logloss: 1.08906 | train_f1_macro: 0.53176 | valid_balanced_accuracy: 0.49776 | valid_logloss: 1.19233 | valid_f1_macro: 0.48589 |  1:12:56s
epoch 149| loss: 0.54744 | train_balanced_accuracy: 0.76103 | train_logloss: 0.49001 | train_f1_macro: 0.78293 | valid_balanced_accuracy: 0.6971  | valid_logloss: 0.6661  | valid_f1_macro: 0.71279 |  1:13:25s
epoch 150| loss: 0.53339 | train_balanced_accuracy: 0.62696 | train_logloss: 0.82545 | train_f1_macro: 0.63895 | valid_balanced_accuracy: 0.57326 | valid_logloss: 0.96761 | valid_f1_macro: 0.58465 |  1:13:55s
epoch 151| loss: 0.53171 | train_balanced_accuracy: 0.46529 | train_logloss: 1.65833 | train_f1_macro: 0.42176 | valid_balanced_accuracy: 0.43414 | valid_logloss: 1.72136 | valid_f1_macro: 0.39612 |  1:14:25s
epoch 152| loss: 0.51561 | train_balanced_accuracy: 0.65186 | train_logloss: 0.83727 | train_f1_macro: 0.65425 | valid_balanced_accuracy: 0.5984  | valid_logloss: 1.10442 | valid_f1_macro: 0.59606 |  1:14:54s
epoch 153| loss: 0.50693 | train_balanced_accuracy: 0.64951 | train_logloss: 0.83332 | train_f1_macro: 0.65312 | valid_balanced_accuracy: 0.59614 | valid_logloss: 1.08837 | valid_f1_macro: 0.59529 |  1:15:24s
epoch 154| loss: 0.51833 | train_balanced_accuracy: 0.70986 | train_logloss: 0.6155  | train_f1_macro: 0.72659 | valid_balanced_accuracy: 0.64726 | valid_logloss: 0.84709 | valid_f1_macro: 0.65815 |  1:15:54s
epoch 155| loss: 0.52723 | train_balanced_accuracy: 0.73072 | train_logloss: 0.54746 | train_f1_macro: 0.75261 | valid_balanced_accuracy: 0.66928 | valid_logloss: 0.79056 | valid_f1_macro: 0.6808  |  1:16:23s
epoch 156| loss: 0.51406 | train_balanced_accuracy: 0.7719  | train_logloss: 0.45405 | train_f1_macro: 0.80151 | valid_balanced_accuracy: 0.70327 | valid_logloss: 0.63157 | valid_f1_macro: 0.7304  |  1:16:53s
epoch 157| loss: 0.51123 | train_balanced_accuracy: 0.71413 | train_logloss: 0.54313 | train_f1_macro: 0.74642 | valid_balanced_accuracy: 0.65633 | valid_logloss: 0.70669 | valid_f1_macro: 0.68574 |  1:17:22s
epoch 158| loss: 0.4925  | train_balanced_accuracy: 0.56088 | train_logloss: 1.12414 | train_f1_macro: 0.54206 | valid_balanced_accuracy: 0.51544 | valid_logloss: 1.23453 | valid_f1_macro: 0.49927 |  1:17:51s
epoch 159| loss: 0.51036 | train_balanced_accuracy: 0.75653 | train_logloss: 0.47765 | train_f1_macro: 0.78935 | valid_balanced_accuracy: 0.67485 | valid_logloss: 0.6734  | valid_f1_macro: 0.70715 |  1:18:20s
epoch 160| loss: 0.50729 | train_balanced_accuracy: 0.61934 | train_logloss: 0.89441 | train_f1_macro: 0.63188 | valid_balanced_accuracy: 0.56884 | valid_logloss: 1.14232 | valid_f1_macro: 0.57768 |  1:18:50s
epoch 161| loss: 0.51118 | train_balanced_accuracy: 0.77765 | train_logloss: 0.51501 | train_f1_macro: 0.77556 | valid_balanced_accuracy: 0.71038 | valid_logloss: 0.77708 | valid_f1_macro: 0.70346 |  1:19:19s
epoch 162| loss: 0.50649 | train_balanced_accuracy: 0.8073  | train_logloss: 0.4113  | train_f1_macro: 0.81765 | valid_balanced_accuracy: 0.73335 | valid_logloss: 0.65116 | valid_f1_macro: 0.7353  |  1:19:49s
epoch 163| loss: 0.46788 | train_balanced_accuracy: 0.7922  | train_logloss: 0.39239 | train_f1_macro: 0.81971 | valid_balanced_accuracy: 0.71726 | valid_logloss: 0.61359 | valid_f1_macro: 0.73752 |  1:20:18s
epoch 164| loss: 0.46809 | train_balanced_accuracy: 0.81705 | train_logloss: 0.397   | train_f1_macro: 0.82802 | valid_balanced_accuracy: 0.74127 | valid_logloss: 0.63054 | valid_f1_macro: 0.74949 |  1:20:48s
epoch 165| loss: 0.4624  | train_balanced_accuracy: 0.81199 | train_logloss: 0.37451 | train_f1_macro: 0.83063 | valid_balanced_accuracy: 0.73357 | valid_logloss: 0.58958 | valid_f1_macro: 0.74606 |  1:21:17s
epoch 166| loss: 0.44669 | train_balanced_accuracy: 0.82122 | train_logloss: 0.35562 | train_f1_macro: 0.83748 | valid_balanced_accuracy: 0.74728 | valid_logloss: 0.57486 | valid_f1_macro: 0.76067 |  1:21:47s
epoch 167| loss: 0.44499 | train_balanced_accuracy: 0.81007 | train_logloss: 0.42787 | train_f1_macro: 0.81358 | valid_balanced_accuracy: 0.73626 | valid_logloss: 0.63631 | valid_f1_macro: 0.73464 |  1:22:16s
epoch 168| loss: 0.48782 | train_balanced_accuracy: 0.65359 | train_logloss: 0.74533 | train_f1_macro: 0.65543 | valid_balanced_accuracy: 0.60124 | valid_logloss: 0.9178  | valid_f1_macro: 0.59996 |  1:22:46s
epoch 169| loss: 0.47388 | train_balanced_accuracy: 0.614   | train_logloss: 0.87562 | train_f1_macro: 0.6184  | valid_balanced_accuracy: 0.55754 | valid_logloss: 1.02893 | valid_f1_macro: 0.55711 |  1:23:15s
epoch 170| loss: 0.43452 | train_balanced_accuracy: 0.73175 | train_logloss: 0.52529 | train_f1_macro: 0.75452 | valid_balanced_accuracy: 0.67278 | valid_logloss: 0.71742 | valid_f1_macro: 0.68812 |  1:23:45s
epoch 171| loss: 0.42397 | train_balanced_accuracy: 0.79544 | train_logloss: 0.42069 | train_f1_macro: 0.80402 | valid_balanced_accuracy: 0.732   | valid_logloss: 0.63757 | valid_f1_macro: 0.73487 |  1:24:16s
epoch 172| loss: 0.41627 | train_balanced_accuracy: 0.72207 | train_logloss: 0.56646 | train_f1_macro: 0.736   | valid_balanced_accuracy: 0.65826 | valid_logloss: 0.76737 | valid_f1_macro: 0.66685 |  1:24:46s
epoch 173| loss: 0.4469  | train_balanced_accuracy: 0.66344 | train_logloss: 0.74297 | train_f1_macro: 0.65662 | valid_balanced_accuracy: 0.61103 | valid_logloss: 0.91178 | valid_f1_macro: 0.60046 |  1:25:15s
epoch 174| loss: 0.44181 | train_balanced_accuracy: 0.77204 | train_logloss: 0.48483 | train_f1_macro: 0.77601 | valid_balanced_accuracy: 0.70074 | valid_logloss: 0.69017 | valid_f1_macro: 0.70048 |  1:25:45s
epoch 175| loss: 0.4209  | train_balanced_accuracy: 0.83634 | train_logloss: 0.34983 | train_f1_macro: 0.84534 | valid_balanced_accuracy: 0.75134 | valid_logloss: 0.57601 | valid_f1_macro: 0.75965 |  1:26:14s
epoch 176| loss: 0.4018  | train_balanced_accuracy: 0.69944 | train_logloss: 0.62682 | train_f1_macro: 0.69922 | valid_balanced_accuracy: 0.64445 | valid_logloss: 0.82163 | valid_f1_macro: 0.64019 |  1:26:44s
epoch 177| loss: 0.40208 | train_balanced_accuracy: 0.42525 | train_logloss: 2.56658 | train_f1_macro: 0.34888 | valid_balanced_accuracy: 0.39441 | valid_logloss: 2.61781 | valid_f1_macro: 0.32386 |  1:27:13s
epoch 178| loss: 0.38447 | train_balanced_accuracy: 0.59528 | train_logloss: 1.43268 | train_f1_macro: 0.52482 | valid_balanced_accuracy: 0.56183 | valid_logloss: 1.78434 | valid_f1_macro: 0.49175 |  1:27:42s
epoch 179| loss: 0.3981  | train_balanced_accuracy: 0.56236 | train_logloss: 1.91465 | train_f1_macro: 0.49637 | valid_balanced_accuracy: 0.52642 | valid_logloss: 2.32574 | valid_f1_macro: 0.46346 |  1:28:12s
epoch 180| loss: 0.4021  | train_balanced_accuracy: 0.59133 | train_logloss: 1.3783  | train_f1_macro: 0.54922 | valid_balanced_accuracy: 0.55172 | valid_logloss: 1.74248 | valid_f1_macro: 0.50471 |  1:28:41s
epoch 181| loss: 0.37182 | train_balanced_accuracy: 0.70047 | train_logloss: 0.80217 | train_f1_macro: 0.67116 | valid_balanced_accuracy: 0.64053 | valid_logloss: 1.19433 | valid_f1_macro: 0.60724 |  1:29:11s
epoch 182| loss: 0.36702 | train_balanced_accuracy: 0.69432 | train_logloss: 0.75734 | train_f1_macro: 0.68585 | valid_balanced_accuracy: 0.63665 | valid_logloss: 1.10485 | valid_f1_macro: 0.62474 |  1:29:40s
epoch 183| loss: 0.38468 | train_balanced_accuracy: 0.84252 | train_logloss: 0.32433 | train_f1_macro: 0.85546 | valid_balanced_accuracy: 0.76073 | valid_logloss: 0.63232 | valid_f1_macro: 0.7653  |  1:30:10s
epoch 184| loss: 0.39513 | train_balanced_accuracy: 0.82992 | train_logloss: 0.31354 | train_f1_macro: 0.85097 | valid_balanced_accuracy: 0.74508 | valid_logloss: 0.60031 | valid_f1_macro: 0.7595  |  1:30:40s
epoch 185| loss: 0.37203 | train_balanced_accuracy: 0.88264 | train_logloss: 0.25924 | train_f1_macro: 0.88978 | valid_balanced_accuracy: 0.79938 | valid_logloss: 0.53542 | valid_f1_macro: 0.80087 |  1:31:09s
epoch 186| loss: 0.3808  | train_balanced_accuracy: 0.86956 | train_logloss: 0.27163 | train_f1_macro: 0.88249 | valid_balanced_accuracy: 0.78591 | valid_logloss: 0.53587 | valid_f1_macro: 0.79282 |  1:31:39s
epoch 187| loss: 0.35332 | train_balanced_accuracy: 0.85908 | train_logloss: 0.31543 | train_f1_macro: 0.86354 | valid_balanced_accuracy: 0.77307 | valid_logloss: 0.58163 | valid_f1_macro: 0.77358 |  1:32:08s
epoch 188| loss: 0.34289 | train_balanced_accuracy: 0.85227 | train_logloss: 0.31625 | train_f1_macro: 0.8652  | valid_balanced_accuracy: 0.76693 | valid_logloss: 0.58761 | valid_f1_macro: 0.77711 |  1:32:37s
epoch 189| loss: 0.34552 | train_balanced_accuracy: 0.88309 | train_logloss: 0.26358 | train_f1_macro: 0.88666 | valid_balanced_accuracy: 0.79353 | valid_logloss: 0.5464  | valid_f1_macro: 0.79571 |  1:33:07s
epoch 190| loss: 0.3248  | train_balanced_accuracy: 0.78258 | train_logloss: 0.45085 | train_f1_macro: 0.78258 | valid_balanced_accuracy: 0.70753 | valid_logloss: 0.7211  | valid_f1_macro: 0.70362 |  1:33:37s
epoch 191| loss: 0.31863 | train_balanced_accuracy: 0.82463 | train_logloss: 0.35488 | train_f1_macro: 0.83369 | valid_balanced_accuracy: 0.74316 | valid_logloss: 0.61717 | valid_f1_macro: 0.74985 |  1:34:07s
epoch 192| loss: 0.31577 | train_balanced_accuracy: 0.83788 | train_logloss: 0.3563  | train_f1_macro: 0.83539 | valid_balanced_accuracy: 0.75296 | valid_logloss: 0.6479  | valid_f1_macro: 0.74394 |  1:34:36s
epoch 193| loss: 0.30489 | train_balanced_accuracy: 0.8059  | train_logloss: 0.37943 | train_f1_macro: 0.81799 | valid_balanced_accuracy: 0.72468 | valid_logloss: 0.65819 | valid_f1_macro: 0.73177 |  1:35:06s
epoch 194| loss: 0.31268 | train_balanced_accuracy: 0.81607 | train_logloss: 0.38277 | train_f1_macro: 0.82151 | valid_balanced_accuracy: 0.74043 | valid_logloss: 0.65682 | valid_f1_macro: 0.74019 |  1:35:36s
epoch 195| loss: 0.2973  | train_balanced_accuracy: 0.7705  | train_logloss: 0.46756 | train_f1_macro: 0.76669 | valid_balanced_accuracy: 0.69886 | valid_logloss: 0.74455 | valid_f1_macro: 0.68877 |  1:36:05s
epoch 196| loss: 0.30036 | train_balanced_accuracy: 0.70252 | train_logloss: 0.71193 | train_f1_macro: 0.69062 | valid_balanced_accuracy: 0.6402  | valid_logloss: 0.96847 | valid_f1_macro: 0.62366 |  1:36:34s
epoch 197| loss: 0.2949  | train_balanced_accuracy: 0.57915 | train_logloss: 1.33217 | train_f1_macro: 0.53075 | valid_balanced_accuracy: 0.5399  | valid_logloss: 1.5021  | valid_f1_macro: 0.49311 |  1:37:04s
epoch 198| loss: 0.29177 | train_balanced_accuracy: 0.63514 | train_logloss: 0.97266 | train_f1_macro: 0.60183 | valid_balanced_accuracy: 0.5889  | valid_logloss: 1.18435 | valid_f1_macro: 0.55302 |  1:37:33s
epoch 199| loss: 0.29255 | train_balanced_accuracy: 0.72524 | train_logloss: 0.68522 | train_f1_macro: 0.69147 | valid_balanced_accuracy: 0.66    | valid_logloss: 0.9483  | valid_f1_macro: 0.62891 |  1:38:03s
epoch 200| loss: 0.29193 | train_balanced_accuracy: 0.63851 | train_logloss: 1.03381 | train_f1_macro: 0.59111 | valid_balanced_accuracy: 0.58675 | valid_logloss: 1.25502 | valid_f1_macro: 0.54222 |  1:38:32s
epoch 201| loss: 0.29296 | train_balanced_accuracy: 0.89978 | train_logloss: 0.21698 | train_f1_macro: 0.91046 | valid_balanced_accuracy: 0.80509 | valid_logloss: 0.53851 | valid_f1_macro: 0.81214 |  1:39:01s
epoch 202| loss: 0.27125 | train_balanced_accuracy: 0.91758 | train_logloss: 0.20088 | train_f1_macro: 0.92175 | valid_balanced_accuracy: 0.82206 | valid_logloss: 0.53466 | valid_f1_macro: 0.82123 |  1:39:31s
epoch 203| loss: 0.2732  | train_balanced_accuracy: 0.87996 | train_logloss: 0.24158 | train_f1_macro: 0.89146 | valid_balanced_accuracy: 0.78393 | valid_logloss: 0.5465  | valid_f1_macro: 0.79414 |  1:40:00s
epoch 204| loss: 0.27666 | train_balanced_accuracy: 0.85776 | train_logloss: 0.30299 | train_f1_macro: 0.86418 | valid_balanced_accuracy: 0.77005 | valid_logloss: 0.5937  | valid_f1_macro: 0.77459 |  1:40:30s
epoch 205| loss: 0.26679 | train_balanced_accuracy: 0.91458 | train_logloss: 0.2145  | train_f1_macro: 0.91108 | valid_balanced_accuracy: 0.8259  | valid_logloss: 0.55539 | valid_f1_macro: 0.817   |  1:41:00s
epoch 206| loss: 0.25898 | train_balanced_accuracy: 0.93342 | train_logloss: 0.17634 | train_f1_macro: 0.93342 | valid_balanced_accuracy: 0.83696 | valid_logloss: 0.4908  | valid_f1_macro: 0.83244 |  1:41:29s
epoch 207| loss: 0.25377 | train_balanced_accuracy: 0.9351  | train_logloss: 0.16061 | train_f1_macro: 0.93693 | valid_balanced_accuracy: 0.84082 | valid_logloss: 0.48746 | valid_f1_macro: 0.83868 |  1:41:59s
epoch 208| loss: 0.2478  | train_balanced_accuracy: 0.85613 | train_logloss: 0.29776 | train_f1_macro: 0.86139 | valid_balanced_accuracy: 0.76695 | valid_logloss: 0.6075  | valid_f1_macro: 0.76816 |  1:42:28s
epoch 209| loss: 0.2578  | train_balanced_accuracy: 0.81586 | train_logloss: 0.38592 | train_f1_macro: 0.81749 | valid_balanced_accuracy: 0.7373  | valid_logloss: 0.68008 | valid_f1_macro: 0.7347  |  1:42:57s
epoch 210| loss: 0.26947 | train_balanced_accuracy: 0.90886 | train_logloss: 0.22201 | train_f1_macro: 0.90951 | valid_balanced_accuracy: 0.81709 | valid_logloss: 0.59149 | valid_f1_macro: 0.81532 |  1:43:27s
epoch 211| loss: 0.26195 | train_balanced_accuracy: 0.90949 | train_logloss: 0.23112 | train_f1_macro: 0.90702 | valid_balanced_accuracy: 0.81712 | valid_logloss: 0.61846 | valid_f1_macro: 0.8088  |  1:43:57s
epoch 212| loss: 0.24875 | train_balanced_accuracy: 0.8744  | train_logloss: 0.23852 | train_f1_macro: 0.88635 | valid_balanced_accuracy: 0.77712 | valid_logloss: 0.61552 | valid_f1_macro: 0.78583 |  1:44:27s
epoch 213| loss: 0.24534 | train_balanced_accuracy: 0.87009 | train_logloss: 0.2821  | train_f1_macro: 0.88244 | valid_balanced_accuracy: 0.77479 | valid_logloss: 0.67961 | valid_f1_macro: 0.78317 |  1:44:56s
epoch 214| loss: 0.23095 | train_balanced_accuracy: 0.93583 | train_logloss: 0.16794 | train_f1_macro: 0.9356  | valid_balanced_accuracy: 0.84012 | valid_logloss: 0.50122 | valid_f1_macro: 0.83549 |  1:45:26s
epoch 215| loss: 0.22296 | train_balanced_accuracy: 0.93954 | train_logloss: 0.14706 | train_f1_macro: 0.94303 | valid_balanced_accuracy: 0.85062 | valid_logloss: 0.51038 | valid_f1_macro: 0.84715 |  1:45:56s
epoch 216| loss: 0.22178 | train_balanced_accuracy: 0.89616 | train_logloss: 0.23393 | train_f1_macro: 0.90119 | valid_balanced_accuracy: 0.80546 | valid_logloss: 0.57301 | valid_f1_macro: 0.80048 |  1:46:25s
epoch 217| loss: 0.22709 | train_balanced_accuracy: 0.9231  | train_logloss: 0.16341 | train_f1_macro: 0.93246 | valid_balanced_accuracy: 0.82787 | valid_logloss: 0.53757 | valid_f1_macro: 0.83399 |  1:46:55s
epoch 218| loss: 0.22356 | train_balanced_accuracy: 0.91477 | train_logloss: 0.20229 | train_f1_macro: 0.91372 | valid_balanced_accuracy: 0.8233  | valid_logloss: 0.52791 | valid_f1_macro: 0.81883 |  1:47:24s
epoch 219| loss: 0.22637 | train_balanced_accuracy: 0.86483 | train_logloss: 0.2956  | train_f1_macro: 0.86607 | valid_balanced_accuracy: 0.78305 | valid_logloss: 0.62919 | valid_f1_macro: 0.77651 |  1:47:54s
epoch 220| loss: 0.23444 | train_balanced_accuracy: 0.93997 | train_logloss: 0.14253 | train_f1_macro: 0.94526 | valid_balanced_accuracy: 0.84439 | valid_logloss: 0.48637 | valid_f1_macro: 0.8467  |  1:48:23s
epoch 221| loss: 0.22545 | train_balanced_accuracy: 0.93946 | train_logloss: 0.14257 | train_f1_macro: 0.94455 | valid_balanced_accuracy: 0.84388 | valid_logloss: 0.48425 | valid_f1_macro: 0.84621 |  1:48:53s
epoch 222| loss: 0.2119  | train_balanced_accuracy: 0.93032 | train_logloss: 0.17744 | train_f1_macro: 0.92503 | valid_balanced_accuracy: 0.84616 | valid_logloss: 0.51762 | valid_f1_macro: 0.83335 |  1:49:22s
epoch 223| loss: 0.21748 | train_balanced_accuracy: 0.81087 | train_logloss: 0.43708 | train_f1_macro: 0.79739 | valid_balanced_accuracy: 0.73279 | valid_logloss: 0.76377 | valid_f1_macro: 0.71597 |  1:49:52s
epoch 224| loss: 0.22991 | train_balanced_accuracy: 0.94278 | train_logloss: 0.14419 | train_f1_macro: 0.94428 | valid_balanced_accuracy: 0.85072 | valid_logloss: 0.47421 | valid_f1_macro: 0.84642 |  1:50:21s
epoch 225| loss: 0.20962 | train_balanced_accuracy: 0.94717 | train_logloss: 0.14758 | train_f1_macro: 0.94513 | valid_balanced_accuracy: 0.84911 | valid_logloss: 0.54225 | valid_f1_macro: 0.84007 |  1:50:51s
epoch 226| loss: 0.22079 | train_balanced_accuracy: 0.88677 | train_logloss: 0.28143 | train_f1_macro: 0.88712 | valid_balanced_accuracy: 0.79303 | valid_logloss: 0.73922 | valid_f1_macro: 0.79087 |  1:51:21s
epoch 227| loss: 0.21559 | train_balanced_accuracy: 0.94491 | train_logloss: 0.13322 | train_f1_macro: 0.94863 | valid_balanced_accuracy: 0.85213 | valid_logloss: 0.4819  | valid_f1_macro: 0.8567  |  1:51:50s
epoch 228| loss: 0.20712 | train_balanced_accuracy: 0.92351 | train_logloss: 0.16746 | train_f1_macro: 0.92999 | valid_balanced_accuracy: 0.82639 | valid_logloss: 0.57079 | valid_f1_macro: 0.82993 |  1:52:19s
epoch 229| loss: 0.20271 | train_balanced_accuracy: 0.94671 | train_logloss: 0.12626 | train_f1_macro: 0.9522  | valid_balanced_accuracy: 0.85136 | valid_logloss: 0.46069 | valid_f1_macro: 0.85618 |  1:52:49s
epoch 230| loss: 0.20499 | train_balanced_accuracy: 0.94582 | train_logloss: 0.13884 | train_f1_macro: 0.94447 | valid_balanced_accuracy: 0.85851 | valid_logloss: 0.49404 | valid_f1_macro: 0.85117 |  1:53:18s
epoch 231| loss: 0.20142 | train_balanced_accuracy: 0.85363 | train_logloss: 0.31087 | train_f1_macro: 0.85966 | valid_balanced_accuracy: 0.76713 | valid_logloss: 0.64225 | valid_f1_macro: 0.7661  |  1:53:48s
epoch 232| loss: 0.20302 | train_balanced_accuracy: 0.94935 | train_logloss: 0.12715 | train_f1_macro: 0.95095 | valid_balanced_accuracy: 0.85928 | valid_logloss: 0.4576  | valid_f1_macro: 0.85535 |  1:54:19s
epoch 233| loss: 0.1966  | train_balanced_accuracy: 0.84063 | train_logloss: 0.34569 | train_f1_macro: 0.84286 | valid_balanced_accuracy: 0.76381 | valid_logloss: 0.66071 | valid_f1_macro: 0.76122 |  1:54:48s
epoch 234| loss: 0.18735 | train_balanced_accuracy: 0.94139 | train_logloss: 0.13573 | train_f1_macro: 0.94215 | valid_balanced_accuracy: 0.85373 | valid_logloss: 0.54564 | valid_f1_macro: 0.84995 |  1:55:18s
epoch 235| loss: 0.19124 | train_balanced_accuracy: 0.95247 | train_logloss: 0.12013 | train_f1_macro: 0.95343 | valid_balanced_accuracy: 0.86248 | valid_logloss: 0.46864 | valid_f1_macro: 0.8594  |  1:55:47s
epoch 236| loss: 0.19172 | train_balanced_accuracy: 0.92854 | train_logloss: 0.1608  | train_f1_macro: 0.93314 | valid_balanced_accuracy: 0.83101 | valid_logloss: 0.57768 | valid_f1_macro: 0.83012 |  1:56:17s
epoch 237| loss: 0.18472 | train_balanced_accuracy: 0.95658 | train_logloss: 0.11563 | train_f1_macro: 0.95424 | valid_balanced_accuracy: 0.86575 | valid_logloss: 0.51254 | valid_f1_macro: 0.85728 |  1:56:47s
epoch 238| loss: 0.19058 | train_balanced_accuracy: 0.77553 | train_logloss: 0.51762 | train_f1_macro: 0.76198 | valid_balanced_accuracy: 0.70502 | valid_logloss: 0.84502 | valid_f1_macro: 0.68588 |  1:57:16s
epoch 239| loss: 0.18997 | train_balanced_accuracy: 0.96085 | train_logloss: 0.1091  | train_f1_macro: 0.95876 | valid_balanced_accuracy: 0.86874 | valid_logloss: 0.50793 | valid_f1_macro: 0.85878 |  1:57:46s
epoch 240| loss: 0.18482 | train_balanced_accuracy: 0.9475  | train_logloss: 0.12584 | train_f1_macro: 0.95009 | valid_balanced_accuracy: 0.84923 | valid_logloss: 0.55173 | valid_f1_macro: 0.85201 |  1:58:15s
epoch 241| loss: 0.17799 | train_balanced_accuracy: 0.95621 | train_logloss: 0.10937 | train_f1_macro: 0.95624 | valid_balanced_accuracy: 0.86632 | valid_logloss: 0.48107 | valid_f1_macro: 0.85961 |  1:58:45s
epoch 242| loss: 0.16714 | train_balanced_accuracy: 0.95722 | train_logloss: 0.10803 | train_f1_macro: 0.95778 | valid_balanced_accuracy: 0.86323 | valid_logloss: 0.48492 | valid_f1_macro: 0.86002 |  1:59:14s
epoch 243| loss: 0.19774 | train_balanced_accuracy: 0.92982 | train_logloss: 0.16796 | train_f1_macro: 0.93571 | valid_balanced_accuracy: 0.83598 | valid_logloss: 0.55426 | valid_f1_macro: 0.83652 |  1:59:44s
epoch 244| loss: 0.22064 | train_balanced_accuracy: 0.89167 | train_logloss: 0.2739  | train_f1_macro: 0.88419 | valid_balanced_accuracy: 0.8029  | valid_logloss: 0.74299 | valid_f1_macro: 0.79212 |  2:00:13s
epoch 245| loss: 0.18539 | train_balanced_accuracy: 0.89832 | train_logloss: 0.19569 | train_f1_macro: 0.90848 | valid_balanced_accuracy: 0.80512 | valid_logloss: 0.64485 | valid_f1_macro: 0.80952 |  2:00:43s
epoch 246| loss: 0.1841  | train_balanced_accuracy: 0.95499 | train_logloss: 0.11484 | train_f1_macro: 0.95534 | valid_balanced_accuracy: 0.86045 | valid_logloss: 0.52772 | valid_f1_macro: 0.85744 |  2:01:14s
epoch 247| loss: 0.17694 | train_balanced_accuracy: 0.95363 | train_logloss: 0.12555 | train_f1_macro: 0.9494  | valid_balanced_accuracy: 0.86015 | valid_logloss: 0.55426 | valid_f1_macro: 0.85053 |  2:01:43s
epoch 248| loss: 0.16676 | train_balanced_accuracy: 0.95571 | train_logloss: 0.10545 | train_f1_macro: 0.95637 | valid_balanced_accuracy: 0.86376 | valid_logloss: 0.51854 | valid_f1_macro: 0.86024 |  2:02:12s
epoch 249| loss: 0.16262 | train_balanced_accuracy: 0.9633  | train_logloss: 0.09183 | train_f1_macro: 0.9625  | valid_balanced_accuracy: 0.87597 | valid_logloss: 0.46464 | valid_f1_macro: 0.8708  |  2:02:42s
epoch 250| loss: 0.15979 | train_balanced_accuracy: 0.88912 | train_logloss: 0.24572 | train_f1_macro: 0.88692 | valid_balanced_accuracy: 0.80632 | valid_logloss: 0.60929 | valid_f1_macro: 0.7966  |  2:03:11s
epoch 251| loss: 0.16124 | train_balanced_accuracy: 0.83759 | train_logloss: 0.35609 | train_f1_macro: 0.83201 | valid_balanced_accuracy: 0.76269 | valid_logloss: 0.72628 | valid_f1_macro: 0.74595 |  2:03:41s
epoch 252| loss: 0.1667  | train_balanced_accuracy: 0.95252 | train_logloss: 0.10626 | train_f1_macro: 0.95691 | valid_balanced_accuracy: 0.85956 | valid_logloss: 0.49498 | valid_f1_macro: 0.86048 |  2:04:11s
epoch 253| loss: 0.16696 | train_balanced_accuracy: 0.8485  | train_logloss: 0.31257 | train_f1_macro: 0.85162 | valid_balanced_accuracy: 0.76005 | valid_logloss: 0.68326 | valid_f1_macro: 0.75596 |  2:04:40s
epoch 254| loss: 0.15924 | train_balanced_accuracy: 0.77399 | train_logloss: 0.53602 | train_f1_macro: 0.75909 | valid_balanced_accuracy: 0.71276 | valid_logloss: 0.90009 | valid_f1_macro: 0.69293 |  2:05:10s
epoch 255| loss: 0.18346 | train_balanced_accuracy: 0.80501 | train_logloss: 0.43695 | train_f1_macro: 0.7975  | valid_balanced_accuracy: 0.72545 | valid_logloss: 0.81763 | valid_f1_macro: 0.71265 |  2:05:40s
epoch 256| loss: 0.16493 | train_balanced_accuracy: 0.90051 | train_logloss: 0.26575 | train_f1_macro: 0.89501 | valid_balanced_accuracy: 0.80383 | valid_logloss: 0.77707 | valid_f1_macro: 0.7964  |  2:06:10s
epoch 257| loss: 0.16443 | train_balanced_accuracy: 0.96142 | train_logloss: 0.0972  | train_f1_macro: 0.96224 | valid_balanced_accuracy: 0.86546 | valid_logloss: 0.48535 | valid_f1_macro: 0.86204 |  2:06:39s
epoch 258| loss: 0.15926 | train_balanced_accuracy: 0.94475 | train_logloss: 0.12224 | train_f1_macro: 0.94685 | valid_balanced_accuracy: 0.85357 | valid_logloss: 0.51871 | valid_f1_macro: 0.84872 |  2:07:09s
epoch 259| loss: 0.1638  | train_balanced_accuracy: 0.87193 | train_logloss: 0.30636 | train_f1_macro: 0.87281 | valid_balanced_accuracy: 0.78091 | valid_logloss: 0.83868 | valid_f1_macro: 0.77859 |  2:07:38s
epoch 260| loss: 0.15749 | train_balanced_accuracy: 0.96301 | train_logloss: 0.09079 | train_f1_macro: 0.96408 | valid_balanced_accuracy: 0.86986 | valid_logloss: 0.50546 | valid_f1_macro: 0.86803 |  2:08:08s
epoch 261| loss: 0.16304 | train_balanced_accuracy: 0.96672 | train_logloss: 0.09196 | train_f1_macro: 0.96307 | valid_balanced_accuracy: 0.87516 | valid_logloss: 0.49879 | valid_f1_macro: 0.86479 |  2:08:37s
epoch 262| loss: 0.1577  | train_balanced_accuracy: 0.92655 | train_logloss: 0.14973 | train_f1_macro: 0.93692 | valid_balanced_accuracy: 0.83011 | valid_logloss: 0.5004  | valid_f1_macro: 0.8412  |  2:09:07s
epoch 263| loss: 0.15788 | train_balanced_accuracy: 0.90616 | train_logloss: 0.1989  | train_f1_macro: 0.90835 | valid_balanced_accuracy: 0.81028 | valid_logloss: 0.58412 | valid_f1_macro: 0.80998 |  2:09:36s
epoch 264| loss: 0.15734 | train_balanced_accuracy: 0.86836 | train_logloss: 0.26926 | train_f1_macro: 0.87641 | valid_balanced_accuracy: 0.77895 | valid_logloss: 0.64975 | valid_f1_macro: 0.78082 |  2:10:05s
epoch 265| loss: 0.15966 | train_balanced_accuracy: 0.93025 | train_logloss: 0.13752 | train_f1_macro: 0.93859 | valid_balanced_accuracy: 0.83663 | valid_logloss: 0.50733 | valid_f1_macro: 0.84077 |  2:10:35s
epoch 266| loss: 0.14484 | train_balanced_accuracy: 0.94261 | train_logloss: 0.13162 | train_f1_macro: 0.94286 | valid_balanced_accuracy: 0.85541 | valid_logloss: 0.50888 | valid_f1_macro: 0.84378 |  2:11:05s
epoch 267| loss: 0.15082 | train_balanced_accuracy: 0.96105 | train_logloss: 0.09444 | train_f1_macro: 0.96098 | valid_balanced_accuracy: 0.87208 | valid_logloss: 0.4778  | valid_f1_macro: 0.86493 |  2:11:34s
epoch 268| loss: 0.14369 | train_balanced_accuracy: 0.8711  | train_logloss: 0.26108 | train_f1_macro: 0.87851 | valid_balanced_accuracy: 0.78173 | valid_logloss: 0.64808 | valid_f1_macro: 0.78095 |  2:12:03s
epoch 269| loss: 0.14249 | train_balanced_accuracy: 0.92229 | train_logloss: 0.20083 | train_f1_macro: 0.91719 | valid_balanced_accuracy: 0.82442 | valid_logloss: 0.71282 | valid_f1_macro: 0.81398 |  2:12:33s

Early stopping occurred at epoch 269 with best_epoch = 249 and best_valid_f1_macro = 0.8708
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/callbacks.py:172: UserWarning: Best weights from best epoch are automatically used!
  warnings.warn(wrn_msg)
[CV 1/5; 7/7] END classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1;, score=0.263 total time=135.4min
[CV 2/5; 7/7] START classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: n_d changed from 8 to 64
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_dims changed from [] to [108, 15, 13, 8, 100, 25, 62, 62, 125, 77, 148, 97, 80]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_emb_dim changed from 20 to [20, 7, 6, 4, 20, 12, 20, 20, 20, 20, 20, 20, 20]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_idxs changed from [] to [0, 1, 2, 3, 10, 11, 12, 13, 15, 16, 17, 18, 19]
  warnings.warn(wrn_msg)
epoch 0  | loss: 4.36561 | train_balanced_accuracy: 0.18449 | train_logloss: 4.66165 | train_f1_macro: 0.15108 | valid_balanced_accuracy: 0.18328 | valid_logloss: 4.65024 | valid_f1_macro: 0.14949 |  0:00:30s
epoch 1  | loss: 3.51285 | train_balanced_accuracy: 0.15259 | train_logloss: 5.27684 | train_f1_macro: 0.07389 | valid_balanced_accuracy: 0.15217 | valid_logloss: 5.21542 | valid_f1_macro: 0.07112 |  0:01:00s
epoch 2  | loss: 4.17589 | train_balanced_accuracy: 0.19101 | train_logloss: 2.39691 | train_f1_macro: 0.12615 | valid_balanced_accuracy: 0.18795 | valid_logloss: 2.42355 | valid_f1_macro: 0.12238 |  0:01:29s
epoch 3  | loss: 2.2052  | train_balanced_accuracy: 0.16582 | train_logloss: 3.70249 | train_f1_macro: 0.10167 | valid_balanced_accuracy: 0.16658 | valid_logloss: 3.67322 | valid_f1_macro: 0.10243 |  0:01:58s
epoch 4  | loss: 3.75274 | train_balanced_accuracy: 0.20281 | train_logloss: 1.66082 | train_f1_macro: 0.14779 | valid_balanced_accuracy: 0.2052  | valid_logloss: 1.65632 | valid_f1_macro: 0.15272 |  0:02:28s
epoch 5  | loss: 1.64846 | train_balanced_accuracy: 0.2055  | train_logloss: 1.69701 | train_f1_macro: 0.15089 | valid_balanced_accuracy: 0.20107 | valid_logloss: 1.70927 | valid_f1_macro: 0.1481  |  0:02:57s
epoch 6  | loss: 1.43122 | train_balanced_accuracy: 0.20983 | train_logloss: 1.50357 | train_f1_macro: 0.17064 | valid_balanced_accuracy: 0.21214 | valid_logloss: 1.5001  | valid_f1_macro: 0.17256 |  0:03:26s
epoch 7  | loss: 1.38035 | train_balanced_accuracy: 0.25175 | train_logloss: 1.40842 | train_f1_macro: 0.21597 | valid_balanced_accuracy: 0.25028 | valid_logloss: 1.41251 | valid_f1_macro: 0.21504 |  0:03:56s
epoch 8  | loss: 1.32032 | train_balanced_accuracy: 0.24271 | train_logloss: 1.41461 | train_f1_macro: 0.19711 | valid_balanced_accuracy: 0.24144 | valid_logloss: 1.4156  | valid_f1_macro: 0.19532 |  0:04:25s
epoch 9  | loss: 1.34169 | train_balanced_accuracy: 0.23223 | train_logloss: 1.35381 | train_f1_macro: 0.18996 | valid_balanced_accuracy: 0.2284  | valid_logloss: 1.35438 | valid_f1_macro: 0.18712 |  0:04:55s
epoch 10 | loss: 1.28151 | train_balanced_accuracy: 0.25834 | train_logloss: 1.4738  | train_f1_macro: 0.20435 | valid_balanced_accuracy: 0.25627 | valid_logloss: 1.49551 | valid_f1_macro: 0.20322 |  0:05:24s
epoch 11 | loss: 1.25278 | train_balanced_accuracy: 0.26451 | train_logloss: 1.3051  | train_f1_macro: 0.21351 | valid_balanced_accuracy: 0.263   | valid_logloss: 1.31043 | valid_f1_macro: 0.21299 |  0:05:54s
epoch 12 | loss: 1.2589  | train_balanced_accuracy: 0.26856 | train_logloss: 1.2695  | train_f1_macro: 0.22185 | valid_balanced_accuracy: 0.26912 | valid_logloss: 1.26686 | valid_f1_macro: 0.22231 |  0:06:23s
epoch 13 | loss: 1.2289  | train_balanced_accuracy: 0.27998 | train_logloss: 1.2178  | train_f1_macro: 0.24239 | valid_balanced_accuracy: 0.28223 | valid_logloss: 1.21463 | valid_f1_macro: 0.24326 |  0:06:52s
epoch 14 | loss: 1.21162 | train_balanced_accuracy: 0.30358 | train_logloss: 1.19904 | train_f1_macro: 0.26407 | valid_balanced_accuracy: 0.30417 | valid_logloss: 1.19497 | valid_f1_macro: 0.26187 |  0:07:22s
epoch 15 | loss: 1.19466 | train_balanced_accuracy: 0.29982 | train_logloss: 1.20823 | train_f1_macro: 0.26106 | valid_balanced_accuracy: 0.30474 | valid_logloss: 1.20497 | valid_f1_macro: 0.26547 |  0:07:51s
epoch 16 | loss: 1.19787 | train_balanced_accuracy: 0.30196 | train_logloss: 1.19457 | train_f1_macro: 0.2612  | valid_balanced_accuracy: 0.30434 | valid_logloss: 1.19593 | valid_f1_macro: 0.26128 |  0:08:21s
epoch 17 | loss: 1.18864 | train_balanced_accuracy: 0.29744 | train_logloss: 1.17772 | train_f1_macro: 0.25811 | valid_balanced_accuracy: 0.30105 | valid_logloss: 1.18003 | valid_f1_macro: 0.26043 |  0:08:52s
epoch 18 | loss: 1.17733 | train_balanced_accuracy: 0.3037  | train_logloss: 1.17521 | train_f1_macro: 0.26396 | valid_balanced_accuracy: 0.3071  | valid_logloss: 1.17989 | valid_f1_macro: 0.26814 |  0:09:21s
epoch 19 | loss: 1.17631 | train_balanced_accuracy: 0.29017 | train_logloss: 1.17943 | train_f1_macro: 0.24661 | valid_balanced_accuracy: 0.29455 | valid_logloss: 1.18273 | valid_f1_macro: 0.25031 |  0:09:50s
epoch 20 | loss: 1.17927 | train_balanced_accuracy: 0.31124 | train_logloss: 1.17888 | train_f1_macro: 0.27483 | valid_balanced_accuracy: 0.31346 | valid_logloss: 1.18367 | valid_f1_macro: 0.27583 |  0:10:19s
epoch 21 | loss: 1.17036 | train_balanced_accuracy: 0.31724 | train_logloss: 1.18144 | train_f1_macro: 0.27905 | valid_balanced_accuracy: 0.31838 | valid_logloss: 1.18026 | valid_f1_macro: 0.27776 |  0:10:49s
epoch 22 | loss: 1.17655 | train_balanced_accuracy: 0.31162 | train_logloss: 1.18485 | train_f1_macro: 0.28107 | valid_balanced_accuracy: 0.3136  | valid_logloss: 1.18355 | valid_f1_macro: 0.28278 |  0:11:18s
epoch 23 | loss: 1.18644 | train_balanced_accuracy: 0.2984  | train_logloss: 1.25297 | train_f1_macro: 0.25764 | valid_balanced_accuracy: 0.30203 | valid_logloss: 1.24314 | valid_f1_macro: 0.26176 |  0:11:47s
epoch 24 | loss: 1.19476 | train_balanced_accuracy: 0.29576 | train_logloss: 1.20879 | train_f1_macro: 0.25503 | valid_balanced_accuracy: 0.29901 | valid_logloss: 1.20758 | valid_f1_macro: 0.25622 |  0:12:17s
epoch 25 | loss: 1.20925 | train_balanced_accuracy: 0.29994 | train_logloss: 1.20098 | train_f1_macro: 0.26401 | valid_balanced_accuracy: 0.30291 | valid_logloss: 1.2023  | valid_f1_macro: 0.26546 |  0:12:46s
epoch 26 | loss: 1.19697 | train_balanced_accuracy: 0.30397 | train_logloss: 1.18772 | train_f1_macro: 0.26652 | valid_balanced_accuracy: 0.30757 | valid_logloss: 1.18553 | valid_f1_macro: 0.26931 |  0:13:15s
epoch 27 | loss: 1.19064 | train_balanced_accuracy: 0.30787 | train_logloss: 1.17959 | train_f1_macro: 0.28137 | valid_balanced_accuracy: 0.31103 | valid_logloss: 1.17364 | valid_f1_macro: 0.28296 |  0:13:45s
epoch 28 | loss: 1.17771 | train_balanced_accuracy: 0.30266 | train_logloss: 1.1823  | train_f1_macro: 0.27112 | valid_balanced_accuracy: 0.30762 | valid_logloss: 1.18    | valid_f1_macro: 0.27576 |  0:14:14s
epoch 29 | loss: 1.17384 | train_balanced_accuracy: 0.3197  | train_logloss: 1.18085 | train_f1_macro: 0.29046 | valid_balanced_accuracy: 0.31885 | valid_logloss: 1.17552 | valid_f1_macro: 0.28762 |  0:14:43s
epoch 30 | loss: 1.172   | train_balanced_accuracy: 0.3185  | train_logloss: 1.16368 | train_f1_macro: 0.29307 | valid_balanced_accuracy: 0.32077 | valid_logloss: 1.16216 | valid_f1_macro: 0.29399 |  0:15:12s
epoch 31 | loss: 1.1664  | train_balanced_accuracy: 0.3486  | train_logloss: 1.16691 | train_f1_macro: 0.33604 | valid_balanced_accuracy: 0.3456  | valid_logloss: 1.16663 | valid_f1_macro: 0.33256 |  0:15:42s
epoch 32 | loss: 1.1752  | train_balanced_accuracy: 0.3246  | train_logloss: 1.15829 | train_f1_macro: 0.30622 | valid_balanced_accuracy: 0.32804 | valid_logloss: 1.15617 | valid_f1_macro: 0.30789 |  0:16:11s
epoch 33 | loss: 1.15825 | train_balanced_accuracy: 0.31163 | train_logloss: 1.16811 | train_f1_macro: 0.28505 | valid_balanced_accuracy: 0.3137  | valid_logloss: 1.17172 | valid_f1_macro: 0.28722 |  0:16:41s
epoch 34 | loss: 1.15881 | train_balanced_accuracy: 0.35178 | train_logloss: 1.16564 | train_f1_macro: 0.33955 | valid_balanced_accuracy: 0.34593 | valid_logloss: 1.18318 | valid_f1_macro: 0.33143 |  0:17:10s
epoch 35 | loss: 1.15762 | train_balanced_accuracy: 0.32105 | train_logloss: 1.146   | train_f1_macro: 0.29872 | valid_balanced_accuracy: 0.32486 | valid_logloss: 1.14901 | valid_f1_macro: 0.30291 |  0:17:39s
epoch 36 | loss: 1.15169 | train_balanced_accuracy: 0.32213 | train_logloss: 1.1415  | train_f1_macro: 0.29519 | valid_balanced_accuracy: 0.32371 | valid_logloss: 1.14512 | valid_f1_macro: 0.29579 |  0:18:08s
epoch 37 | loss: 1.15594 | train_balanced_accuracy: 0.32081 | train_logloss: 1.1469  | train_f1_macro: 0.29688 | valid_balanced_accuracy: 0.32185 | valid_logloss: 1.15246 | valid_f1_macro: 0.29618 |  0:18:37s
epoch 38 | loss: 1.15326 | train_balanced_accuracy: 0.31819 | train_logloss: 1.16833 | train_f1_macro: 0.2978  | valid_balanced_accuracy: 0.32317 | valid_logloss: 1.17012 | valid_f1_macro: 0.30216 |  0:19:08s
epoch 39 | loss: 1.15301 | train_balanced_accuracy: 0.32702 | train_logloss: 1.14288 | train_f1_macro: 0.30839 | valid_balanced_accuracy: 0.32764 | valid_logloss: 1.14539 | valid_f1_macro: 0.30782 |  0:19:37s
epoch 40 | loss: 1.17244 | train_balanced_accuracy: 0.31066 | train_logloss: 1.24123 | train_f1_macro: 0.28508 | valid_balanced_accuracy: 0.31316 | valid_logloss: 1.24073 | valid_f1_macro: 0.28699 |  0:20:06s
epoch 41 | loss: 1.15636 | train_balanced_accuracy: 0.31615 | train_logloss: 1.15353 | train_f1_macro: 0.2916  | valid_balanced_accuracy: 0.31935 | valid_logloss: 1.15698 | valid_f1_macro: 0.29547 |  0:20:35s
epoch 42 | loss: 1.1482  | train_balanced_accuracy: 0.32005 | train_logloss: 1.13758 | train_f1_macro: 0.29969 | valid_balanced_accuracy: 0.32192 | valid_logloss: 1.14116 | valid_f1_macro: 0.30067 |  0:21:05s
epoch 43 | loss: 1.14055 | train_balanced_accuracy: 0.31491 | train_logloss: 1.13119 | train_f1_macro: 0.28674 | valid_balanced_accuracy: 0.31571 | valid_logloss: 1.13628 | valid_f1_macro: 0.28494 |  0:21:34s
epoch 44 | loss: 1.14199 | train_balanced_accuracy: 0.32475 | train_logloss: 1.13555 | train_f1_macro: 0.30929 | valid_balanced_accuracy: 0.32889 | valid_logloss: 1.14334 | valid_f1_macro: 0.31249 |  0:22:03s
epoch 45 | loss: 1.15266 | train_balanced_accuracy: 0.3193  | train_logloss: 1.14974 | train_f1_macro: 0.29553 | valid_balanced_accuracy: 0.31634 | valid_logloss: 1.15402 | valid_f1_macro: 0.2908  |  0:22:32s
epoch 46 | loss: 1.17122 | train_balanced_accuracy: 0.31759 | train_logloss: 1.17379 | train_f1_macro: 0.29796 | valid_balanced_accuracy: 0.32154 | valid_logloss: 1.17625 | valid_f1_macro: 0.30429 |  0:23:02s
epoch 47 | loss: 1.16942 | train_balanced_accuracy: 0.31817 | train_logloss: 1.14586 | train_f1_macro: 0.29766 | valid_balanced_accuracy: 0.32417 | valid_logloss: 1.14293 | valid_f1_macro: 0.30699 |  0:23:31s
epoch 48 | loss: 1.14953 | train_balanced_accuracy: 0.33269 | train_logloss: 1.15116 | train_f1_macro: 0.31254 | valid_balanced_accuracy: 0.33332 | valid_logloss: 1.15276 | valid_f1_macro: 0.31274 |  0:24:00s
epoch 49 | loss: 1.16105 | train_balanced_accuracy: 0.32906 | train_logloss: 1.13873 | train_f1_macro: 0.30696 | valid_balanced_accuracy: 0.32577 | valid_logloss: 1.1356  | valid_f1_macro: 0.30057 |  0:24:29s
epoch 50 | loss: 1.16111 | train_balanced_accuracy: 0.31613 | train_logloss: 1.1363  | train_f1_macro: 0.30024 | valid_balanced_accuracy: 0.31523 | valid_logloss: 1.13541 | valid_f1_macro: 0.29799 |  0:24:59s
epoch 51 | loss: 1.14264 | train_balanced_accuracy: 0.33455 | train_logloss: 1.12836 | train_f1_macro: 0.31492 | valid_balanced_accuracy: 0.33687 | valid_logloss: 1.12455 | valid_f1_macro: 0.31769 |  0:25:28s

Early stopping occurred at epoch 51 with best_epoch = 31 and best_valid_f1_macro = 0.33256
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/callbacks.py:172: UserWarning: Best weights from best epoch are automatically used!
  warnings.warn(wrn_msg)
[CV 2/5; 7/7] END classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1;, score=0.207 total time=28.3min
[CV 3/5; 7/7] START classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: n_d changed from 8 to 64
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_dims changed from [] to [122, 12, 10, 4, 110, 35, 52, 53, 61, 108, 129, 77, 101, 147]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_emb_dim changed from 20 to [20, 6, 5, 2, 20, 17, 20, 20, 20, 20, 20, 20, 20, 20]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_idxs changed from [] to [0, 1, 2, 3, 10, 11, 12, 13, 15, 16, 17, 18, 19, 22]
  warnings.warn(wrn_msg)
epoch 0  | loss: 3.6805  | train_balanced_accuracy: 0.17279 | train_logloss: 3.02456 | train_f1_macro: 0.15046 | valid_balanced_accuracy: 0.1722  | valid_logloss: 3.00824 | valid_f1_macro: 0.14905 |  0:00:31s
epoch 1  | loss: 3.2012  | train_balanced_accuracy: 0.17754 | train_logloss: 2.63391 | train_f1_macro: 0.13577 | valid_balanced_accuracy: 0.17915 | valid_logloss: 2.62705 | valid_f1_macro: 0.13872 |  0:01:02s
epoch 2  | loss: 2.6277  | train_balanced_accuracy: 0.18611 | train_logloss: 1.67016 | train_f1_macro: 0.16391 | valid_balanced_accuracy: 0.18824 | valid_logloss: 1.6604  | valid_f1_macro: 0.16624 |  0:01:32s
epoch 3  | loss: 2.11918 | train_balanced_accuracy: 0.16838 | train_logloss: 1.85861 | train_f1_macro: 0.11691 | valid_balanced_accuracy: 0.16948 | valid_logloss: 1.86798 | valid_f1_macro: 0.11842 |  0:02:02s
epoch 4  | loss: 1.60771 | train_balanced_accuracy: 0.16781 | train_logloss: 1.51587 | train_f1_macro: 0.10702 | valid_balanced_accuracy: 0.16821 | valid_logloss: 1.50868 | valid_f1_macro: 0.10756 |  0:02:32s
epoch 5  | loss: 1.52107 | train_balanced_accuracy: 0.16662 | train_logloss: 1.53213 | train_f1_macro: 0.10864 | valid_balanced_accuracy: 0.16609 | valid_logloss: 1.53852 | valid_f1_macro: 0.10719 |  0:03:02s
epoch 6  | loss: 1.46292 | train_balanced_accuracy: 0.18541 | train_logloss: 1.6456  | train_f1_macro: 0.15755 | valid_balanced_accuracy: 0.1863  | valid_logloss: 1.6561  | valid_f1_macro: 0.15856 |  0:03:32s
epoch 7  | loss: 1.4141  | train_balanced_accuracy: 0.21559 | train_logloss: 1.45676 | train_f1_macro: 0.19883 | valid_balanced_accuracy: 0.21456 | valid_logloss: 1.44973 | valid_f1_macro: 0.19676 |  0:04:02s
epoch 8  | loss: 1.31339 | train_balanced_accuracy: 0.27872 | train_logloss: 1.28723 | train_f1_macro: 0.24992 | valid_balanced_accuracy: 0.27828 | valid_logloss: 1.28774 | valid_f1_macro: 0.24893 |  0:04:32s
epoch 9  | loss: 1.2531  | train_balanced_accuracy: 0.26167 | train_logloss: 1.26286 | train_f1_macro: 0.22156 | valid_balanced_accuracy: 0.26443 | valid_logloss: 1.25967 | valid_f1_macro: 0.2247  |  0:05:02s
epoch 10 | loss: 1.2276  | train_balanced_accuracy: 0.2797  | train_logloss: 1.25963 | train_f1_macro: 0.24019 | valid_balanced_accuracy: 0.2829  | valid_logloss: 1.25652 | valid_f1_macro: 0.24392 |  0:05:32s
epoch 11 | loss: 1.22435 | train_balanced_accuracy: 0.26543 | train_logloss: 1.36189 | train_f1_macro: 0.23139 | valid_balanced_accuracy: 0.26719 | valid_logloss: 1.3574  | valid_f1_macro: 0.23176 |  0:06:02s
epoch 12 | loss: 1.30553 | train_balanced_accuracy: 0.2625  | train_logloss: 1.379   | train_f1_macro: 0.22613 | valid_balanced_accuracy: 0.25981 | valid_logloss: 1.38518 | valid_f1_macro: 0.22311 |  0:06:32s
epoch 13 | loss: 1.28513 | train_balanced_accuracy: 0.24519 | train_logloss: 1.31396 | train_f1_macro: 0.20546 | valid_balanced_accuracy: 0.24665 | valid_logloss: 1.31435 | valid_f1_macro: 0.20693 |  0:07:02s
epoch 14 | loss: 1.29081 | train_balanced_accuracy: 0.25161 | train_logloss: 1.33342 | train_f1_macro: 0.20599 | valid_balanced_accuracy: 0.25182 | valid_logloss: 1.33576 | valid_f1_macro: 0.20682 |  0:07:32s
epoch 15 | loss: 1.28069 | train_balanced_accuracy: 0.27357 | train_logloss: 1.2911  | train_f1_macro: 0.24825 | valid_balanced_accuracy: 0.27237 | valid_logloss: 1.28394 | valid_f1_macro: 0.2444  |  0:08:05s
epoch 16 | loss: 1.27929 | train_balanced_accuracy: 0.26961 | train_logloss: 1.27943 | train_f1_macro: 0.24897 | valid_balanced_accuracy: 0.27027 | valid_logloss: 1.27174 | valid_f1_macro: 0.24853 |  0:08:37s
epoch 17 | loss: 1.27165 | train_balanced_accuracy: 0.26892 | train_logloss: 1.28649 | train_f1_macro: 0.2493  | valid_balanced_accuracy: 0.2673  | valid_logloss: 1.28387 | valid_f1_macro: 0.24558 |  0:09:08s
epoch 18 | loss: 1.26394 | train_balanced_accuracy: 0.25267 | train_logloss: 1.29212 | train_f1_macro: 0.23567 | valid_balanced_accuracy: 0.25336 | valid_logloss: 1.28851 | valid_f1_macro: 0.23495 |  0:09:39s
epoch 19 | loss: 1.25083 | train_balanced_accuracy: 0.26056 | train_logloss: 1.31716 | train_f1_macro: 0.21881 | valid_balanced_accuracy: 0.26314 | valid_logloss: 1.29547 | valid_f1_macro: 0.22114 |  0:10:10s
epoch 20 | loss: 1.27763 | train_balanced_accuracy: 0.29061 | train_logloss: 1.28544 | train_f1_macro: 0.26825 | valid_balanced_accuracy: 0.28767 | valid_logloss: 1.28033 | valid_f1_macro: 0.26243 |  0:10:44s
epoch 21 | loss: 1.26323 | train_balanced_accuracy: 0.29016 | train_logloss: 1.27674 | train_f1_macro: 0.27754 | valid_balanced_accuracy: 0.28591 | valid_logloss: 1.2753  | valid_f1_macro: 0.27109 |  0:11:15s
epoch 22 | loss: 1.26214 | train_balanced_accuracy: 0.29912 | train_logloss: 1.27222 | train_f1_macro: 0.28669 | valid_balanced_accuracy: 0.29899 | valid_logloss: 1.26721 | valid_f1_macro: 0.28552 |  0:11:48s
epoch 23 | loss: 1.25872 | train_balanced_accuracy: 0.2671  | train_logloss: 1.29246 | train_f1_macro: 0.24422 | valid_balanced_accuracy: 0.27145 | valid_logloss: 1.27871 | valid_f1_macro: 0.2469  |  0:12:19s
epoch 24 | loss: 1.24996 | train_balanced_accuracy: 0.24007 | train_logloss: 1.29939 | train_f1_macro: 0.22717 | valid_balanced_accuracy: 0.23596 | valid_logloss: 1.2967  | valid_f1_macro: 0.22103 |  0:12:51s
epoch 25 | loss: 1.24253 | train_balanced_accuracy: 0.29616 | train_logloss: 1.23799 | train_f1_macro: 0.27903 | valid_balanced_accuracy: 0.29095 | valid_logloss: 1.22711 | valid_f1_macro: 0.27112 |  0:13:26s
epoch 26 | loss: 1.24517 | train_balanced_accuracy: 0.28772 | train_logloss: 1.23747 | train_f1_macro: 0.26996 | valid_balanced_accuracy: 0.28774 | valid_logloss: 1.23412 | valid_f1_macro: 0.26716 |  0:13:58s
epoch 27 | loss: 1.23903 | train_balanced_accuracy: 0.27444 | train_logloss: 1.25085 | train_f1_macro: 0.2513  | valid_balanced_accuracy: 0.27917 | valid_logloss: 1.24823 | valid_f1_macro: 0.25489 |  0:14:36s
epoch 28 | loss: 1.24048 | train_balanced_accuracy: 0.29014 | train_logloss: 1.22921 | train_f1_macro: 0.26766 | valid_balanced_accuracy: 0.28387 | valid_logloss: 1.22194 | valid_f1_macro: 0.25765 |  0:15:07s
epoch 29 | loss: 1.22347 | train_balanced_accuracy: 0.29599 | train_logloss: 1.21324 | train_f1_macro: 0.26219 | valid_balanced_accuracy: 0.29525 | valid_logloss: 1.21183 | valid_f1_macro: 0.25924 |  0:15:37s
epoch 30 | loss: 1.21257 | train_balanced_accuracy: 0.30631 | train_logloss: 1.1902  | train_f1_macro: 0.27839 | valid_balanced_accuracy: 0.30843 | valid_logloss: 1.18639 | valid_f1_macro: 0.27886 |  0:16:07s
epoch 31 | loss: 1.1964  | train_balanced_accuracy: 0.31497 | train_logloss: 1.17863 | train_f1_macro: 0.28894 | valid_balanced_accuracy: 0.31552 | valid_logloss: 1.17517 | valid_f1_macro: 0.28663 |  0:16:38s
epoch 32 | loss: 1.1819  | train_balanced_accuracy: 0.32336 | train_logloss: 1.1736  | train_f1_macro: 0.29531 | valid_balanced_accuracy: 0.3246  | valid_logloss: 1.16804 | valid_f1_macro: 0.29409 |  0:17:08s
epoch 33 | loss: 1.17486 | train_balanced_accuracy: 0.30758 | train_logloss: 1.16485 | train_f1_macro: 0.2804  | valid_balanced_accuracy: 0.3092  | valid_logloss: 1.15614 | valid_f1_macro: 0.27998 |  0:17:39s
epoch 34 | loss: 1.17226 | train_balanced_accuracy: 0.30112 | train_logloss: 1.15774 | train_f1_macro: 0.27223 | valid_balanced_accuracy: 0.30199 | valid_logloss: 1.14899 | valid_f1_macro: 0.27147 |  0:18:10s
epoch 35 | loss: 1.1599  | train_balanced_accuracy: 0.30707 | train_logloss: 1.14712 | train_f1_macro: 0.27706 | valid_balanced_accuracy: 0.30737 | valid_logloss: 1.1365  | valid_f1_macro: 0.27596 |  0:18:40s
epoch 36 | loss: 1.16264 | train_balanced_accuracy: 0.3211  | train_logloss: 1.14424 | train_f1_macro: 0.30114 | valid_balanced_accuracy: 0.32153 | valid_logloss: 1.13486 | valid_f1_macro: 0.29915 |  0:19:10s
epoch 37 | loss: 1.16262 | train_balanced_accuracy: 0.31753 | train_logloss: 1.14755 | train_f1_macro: 0.28419 | valid_balanced_accuracy: 0.32041 | valid_logloss: 1.13958 | valid_f1_macro: 0.28565 |  0:19:41s
epoch 38 | loss: 1.15275 | train_balanced_accuracy: 0.31258 | train_logloss: 1.1617  | train_f1_macro: 0.28684 | valid_balanced_accuracy: 0.31372 | valid_logloss: 1.15336 | valid_f1_macro: 0.28715 |  0:20:12s
epoch 39 | loss: 1.17185 | train_balanced_accuracy: 0.27874 | train_logloss: 1.1858  | train_f1_macro: 0.24425 | valid_balanced_accuracy: 0.27916 | valid_logloss: 1.17788 | valid_f1_macro: 0.24318 |  0:20:43s
epoch 40 | loss: 1.18202 | train_balanced_accuracy: 0.2734  | train_logloss: 1.24396 | train_f1_macro: 0.24505 | valid_balanced_accuracy: 0.27101 | valid_logloss: 1.24213 | valid_f1_macro: 0.24262 |  0:21:14s
epoch 41 | loss: 1.19596 | train_balanced_accuracy: 0.30474 | train_logloss: 1.16678 | train_f1_macro: 0.26974 | valid_balanced_accuracy: 0.30341 | valid_logloss: 1.16095 | valid_f1_macro: 0.26632 |  0:21:45s
epoch 42 | loss: 1.176   | train_balanced_accuracy: 0.31618 | train_logloss: 1.17512 | train_f1_macro: 0.2831  | valid_balanced_accuracy: 0.31934 | valid_logloss: 1.16709 | valid_f1_macro: 0.28436 |  0:22:15s
epoch 43 | loss: 1.16141 | train_balanced_accuracy: 0.31633 | train_logloss: 1.15369 | train_f1_macro: 0.28356 | valid_balanced_accuracy: 0.31962 | valid_logloss: 1.14395 | valid_f1_macro: 0.2862  |  0:22:46s
epoch 44 | loss: 1.14904 | train_balanced_accuracy: 0.32192 | train_logloss: 1.14275 | train_f1_macro: 0.28996 | valid_balanced_accuracy: 0.32933 | valid_logloss: 1.13152 | valid_f1_macro: 0.29756 |  0:23:17s
epoch 45 | loss: 1.14418 | train_balanced_accuracy: 0.3125  | train_logloss: 1.15485 | train_f1_macro: 0.2832  | valid_balanced_accuracy: 0.31685 | valid_logloss: 1.14325 | valid_f1_macro: 0.28757 |  0:23:47s
epoch 46 | loss: 1.19628 | train_balanced_accuracy: 0.29878 | train_logloss: 1.16877 | train_f1_macro: 0.25755 | valid_balanced_accuracy: 0.3023  | valid_logloss: 1.16089 | valid_f1_macro: 0.26236 |  0:24:19s
epoch 47 | loss: 1.17147 | train_balanced_accuracy: 0.32309 | train_logloss: 1.15164 | train_f1_macro: 0.306   | valid_balanced_accuracy: 0.3194  | valid_logloss: 1.14983 | valid_f1_macro: 0.29894 |  0:24:49s
epoch 48 | loss: 1.16228 | train_balanced_accuracy: 0.31466 | train_logloss: 1.16593 | train_f1_macro: 0.29232 | valid_balanced_accuracy: 0.31715 | valid_logloss: 1.15977 | valid_f1_macro: 0.29388 |  0:25:20s
epoch 49 | loss: 1.15408 | train_balanced_accuracy: 0.31857 | train_logloss: 1.13645 | train_f1_macro: 0.29431 | valid_balanced_accuracy: 0.3205  | valid_logloss: 1.12862 | valid_f1_macro: 0.29478 |  0:25:51s
epoch 50 | loss: 1.14633 | train_balanced_accuracy: 0.31075 | train_logloss: 1.1325  | train_f1_macro: 0.28194 | valid_balanced_accuracy: 0.31196 | valid_logloss: 1.1305  | valid_f1_macro: 0.28134 |  0:26:22s
epoch 51 | loss: 1.14316 | train_balanced_accuracy: 0.31655 | train_logloss: 1.12433 | train_f1_macro: 0.28856 | valid_balanced_accuracy: 0.31798 | valid_logloss: 1.12482 | valid_f1_macro: 0.2889  |  0:26:53s
epoch 52 | loss: 1.13076 | train_balanced_accuracy: 0.32863 | train_logloss: 1.11378 | train_f1_macro: 0.30967 | valid_balanced_accuracy: 0.32865 | valid_logloss: 1.11084 | valid_f1_macro: 0.30789 |  0:27:23s
epoch 53 | loss: 1.16177 | train_balanced_accuracy: 0.31102 | train_logloss: 1.17167 | train_f1_macro: 0.28058 | valid_balanced_accuracy: 0.31125 | valid_logloss: 1.16479 | valid_f1_macro: 0.28055 |  0:27:53s
epoch 54 | loss: 1.19675 | train_balanced_accuracy: 0.30572 | train_logloss: 1.17942 | train_f1_macro: 0.28529 | valid_balanced_accuracy: 0.30606 | valid_logloss: 1.16997 | valid_f1_macro: 0.28312 |  0:28:24s
epoch 55 | loss: 1.16356 | train_balanced_accuracy: 0.3041  | train_logloss: 1.15491 | train_f1_macro: 0.28541 | valid_balanced_accuracy: 0.30415 | valid_logloss: 1.1536  | valid_f1_macro: 0.28235 |  0:28:55s
epoch 56 | loss: 1.14926 | train_balanced_accuracy: 0.31776 | train_logloss: 1.14673 | train_f1_macro: 0.29901 | valid_balanced_accuracy: 0.31413 | valid_logloss: 1.14127 | valid_f1_macro: 0.29184 |  0:29:26s
epoch 57 | loss: 1.14957 | train_balanced_accuracy: 0.3285  | train_logloss: 1.12488 | train_f1_macro: 0.30752 | valid_balanced_accuracy: 0.33174 | valid_logloss: 1.12305 | valid_f1_macro: 0.31177 |  0:29:57s
epoch 58 | loss: 1.13194 | train_balanced_accuracy: 0.3209  | train_logloss: 1.11788 | train_f1_macro: 0.3007  | valid_balanced_accuracy: 0.3212  | valid_logloss: 1.11839 | valid_f1_macro: 0.30024 |  0:30:28s
epoch 59 | loss: 1.1294  | train_balanced_accuracy: 0.34716 | train_logloss: 1.12547 | train_f1_macro: 0.33268 | valid_balanced_accuracy: 0.34797 | valid_logloss: 1.12509 | valid_f1_macro: 0.33336 |  0:30:59s
epoch 60 | loss: 1.13173 | train_balanced_accuracy: 0.30675 | train_logloss: 1.11968 | train_f1_macro: 0.28271 | valid_balanced_accuracy: 0.30629 | valid_logloss: 1.12346 | valid_f1_macro: 0.28127 |  0:31:29s
epoch 61 | loss: 1.12068 | train_balanced_accuracy: 0.3199  | train_logloss: 1.10211 | train_f1_macro: 0.2936  | valid_balanced_accuracy: 0.31843 | valid_logloss: 1.11014 | valid_f1_macro: 0.29059 |  0:32:00s
epoch 62 | loss: 1.10912 | train_balanced_accuracy: 0.3206  | train_logloss: 1.09738 | train_f1_macro: 0.29439 | valid_balanced_accuracy: 0.31784 | valid_logloss: 1.10103 | valid_f1_macro: 0.2905  |  0:32:31s
epoch 63 | loss: 1.10705 | train_balanced_accuracy: 0.33591 | train_logloss: 1.097   | train_f1_macro: 0.32118 | valid_balanced_accuracy: 0.3394  | valid_logloss: 1.10228 | valid_f1_macro: 0.32355 |  0:33:03s
epoch 64 | loss: 1.11024 | train_balanced_accuracy: 0.3348  | train_logloss: 1.10516 | train_f1_macro: 0.32592 | valid_balanced_accuracy: 0.3361  | valid_logloss: 1.10358 | valid_f1_macro: 0.32526 |  0:33:33s
epoch 65 | loss: 1.10427 | train_balanced_accuracy: 0.32956 | train_logloss: 1.0923  | train_f1_macro: 0.30562 | valid_balanced_accuracy: 0.32855 | valid_logloss: 1.10281 | valid_f1_macro: 0.30438 |  0:34:04s
epoch 66 | loss: 1.1037  | train_balanced_accuracy: 0.32647 | train_logloss: 1.09531 | train_f1_macro: 0.31436 | valid_balanced_accuracy: 0.325   | valid_logloss: 1.1063  | valid_f1_macro: 0.31039 |  0:34:34s
epoch 67 | loss: 1.10065 | train_balanced_accuracy: 0.33305 | train_logloss: 1.07761 | train_f1_macro: 0.31814 | valid_balanced_accuracy: 0.33008 | valid_logloss: 1.08623 | valid_f1_macro: 0.31312 |  0:35:06s
epoch 68 | loss: 1.08679 | train_balanced_accuracy: 0.33411 | train_logloss: 1.07336 | train_f1_macro: 0.31414 | valid_balanced_accuracy: 0.33003 | valid_logloss: 1.08199 | valid_f1_macro: 0.30914 |  0:35:36s
epoch 69 | loss: 1.08533 | train_balanced_accuracy: 0.33359 | train_logloss: 1.07031 | train_f1_macro: 0.31616 | valid_balanced_accuracy: 0.3292  | valid_logloss: 1.09061 | valid_f1_macro: 0.30833 |  0:36:07s
epoch 70 | loss: 1.08482 | train_balanced_accuracy: 0.33126 | train_logloss: 1.06671 | train_f1_macro: 0.31112 | valid_balanced_accuracy: 0.32666 | valid_logloss: 1.0815  | valid_f1_macro: 0.30515 |  0:36:37s
epoch 71 | loss: 1.08577 | train_balanced_accuracy: 0.33788 | train_logloss: 1.06848 | train_f1_macro: 0.31964 | valid_balanced_accuracy: 0.33817 | valid_logloss: 1.08279 | valid_f1_macro: 0.32177 |  0:37:08s
epoch 72 | loss: 1.08027 | train_balanced_accuracy: 0.34423 | train_logloss: 1.08639 | train_f1_macro: 0.32997 | valid_balanced_accuracy: 0.33643 | valid_logloss: 1.10245 | valid_f1_macro: 0.31966 |  0:37:38s
epoch 73 | loss: 1.08732 | train_balanced_accuracy: 0.32798 | train_logloss: 1.0661  | train_f1_macro: 0.30674 | valid_balanced_accuracy: 0.32553 | valid_logloss: 1.07979 | valid_f1_macro: 0.30237 |  0:38:10s
epoch 74 | loss: 1.08026 | train_balanced_accuracy: 0.34947 | train_logloss: 1.05412 | train_f1_macro: 0.33765 | valid_balanced_accuracy: 0.34525 | valid_logloss: 1.07265 | valid_f1_macro: 0.33298 |  0:38:40s
epoch 75 | loss: 1.06751 | train_balanced_accuracy: 0.35582 | train_logloss: 1.04382 | train_f1_macro: 0.34661 | valid_balanced_accuracy: 0.34619 | valid_logloss: 1.06651 | valid_f1_macro: 0.33324 |  0:39:11s
epoch 76 | loss: 1.05496 | train_balanced_accuracy: 0.36009 | train_logloss: 1.0334  | train_f1_macro: 0.34973 | valid_balanced_accuracy: 0.34964 | valid_logloss: 1.05451 | valid_f1_macro: 0.33603 |  0:39:41s
epoch 77 | loss: 1.05671 | train_balanced_accuracy: 0.37072 | train_logloss: 1.03131 | train_f1_macro: 0.36458 | valid_balanced_accuracy: 0.36197 | valid_logloss: 1.05469 | valid_f1_macro: 0.35358 |  0:40:12s
epoch 78 | loss: 1.05261 | train_balanced_accuracy: 0.36578 | train_logloss: 1.02934 | train_f1_macro: 0.36239 | valid_balanced_accuracy: 0.35981 | valid_logloss: 1.04952 | valid_f1_macro: 0.35551 |  0:40:44s
epoch 79 | loss: 1.04299 | train_balanced_accuracy: 0.37341 | train_logloss: 1.01808 | train_f1_macro: 0.37178 | valid_balanced_accuracy: 0.37002 | valid_logloss: 1.0376  | valid_f1_macro: 0.36692 |  0:41:15s
epoch 80 | loss: 1.03197 | train_balanced_accuracy: 0.38312 | train_logloss: 1.01696 | train_f1_macro: 0.38216 | valid_balanced_accuracy: 0.37983 | valid_logloss: 1.03687 | valid_f1_macro: 0.37702 |  0:41:46s
epoch 81 | loss: 1.03279 | train_balanced_accuracy: 0.38235 | train_logloss: 1.02028 | train_f1_macro: 0.38488 | valid_balanced_accuracy: 0.37845 | valid_logloss: 1.05086 | valid_f1_macro: 0.37901 |  0:42:17s
epoch 82 | loss: 1.0339  | train_balanced_accuracy: 0.39605 | train_logloss: 1.01508 | train_f1_macro: 0.39868 | valid_balanced_accuracy: 0.38936 | valid_logloss: 1.03695 | valid_f1_macro: 0.39028 |  0:42:48s
epoch 83 | loss: 1.02897 | train_balanced_accuracy: 0.37504 | train_logloss: 1.00125 | train_f1_macro: 0.37353 | valid_balanced_accuracy: 0.3685  | valid_logloss: 1.02338 | valid_f1_macro: 0.36413 |  0:43:19s
epoch 84 | loss: 1.02291 | train_balanced_accuracy: 0.37852 | train_logloss: 0.99295 | train_f1_macro: 0.37627 | valid_balanced_accuracy: 0.37359 | valid_logloss: 1.02029 | valid_f1_macro: 0.36714 |  0:43:49s
epoch 85 | loss: 1.01469 | train_balanced_accuracy: 0.3885  | train_logloss: 1.00124 | train_f1_macro: 0.38836 | valid_balanced_accuracy: 0.38047 | valid_logloss: 1.0255  | valid_f1_macro: 0.37916 |  0:44:20s
epoch 86 | loss: 1.02838 | train_balanced_accuracy: 0.37961 | train_logloss: 1.01206 | train_f1_macro: 0.37992 | valid_balanced_accuracy: 0.37445 | valid_logloss: 1.03018 | valid_f1_macro: 0.3715  |  0:44:50s
epoch 87 | loss: 1.0183  | train_balanced_accuracy: 0.39012 | train_logloss: 0.99541 | train_f1_macro: 0.40248 | valid_balanced_accuracy: 0.37921 | valid_logloss: 1.01997 | valid_f1_macro: 0.38726 |  0:45:21s
epoch 88 | loss: 1.02305 | train_balanced_accuracy: 0.40293 | train_logloss: 1.04228 | train_f1_macro: 0.41465 | valid_balanced_accuracy: 0.38562 | valid_logloss: 1.05911 | valid_f1_macro: 0.39447 |  0:45:51s
epoch 89 | loss: 1.04249 | train_balanced_accuracy: 0.37954 | train_logloss: 1.01763 | train_f1_macro: 0.38594 | valid_balanced_accuracy: 0.36709 | valid_logloss: 1.04303 | valid_f1_macro: 0.37007 |  0:46:22s
epoch 90 | loss: 1.0341  | train_balanced_accuracy: 0.3816  | train_logloss: 1.03934 | train_f1_macro: 0.37852 | valid_balanced_accuracy: 0.37157 | valid_logloss: 1.06257 | valid_f1_macro: 0.36629 |  0:46:53s
epoch 91 | loss: 1.04666 | train_balanced_accuracy: 0.37221 | train_logloss: 1.04365 | train_f1_macro: 0.36765 | valid_balanced_accuracy: 0.36237 | valid_logloss: 1.05681 | valid_f1_macro: 0.35532 |  0:47:23s
epoch 92 | loss: 1.03872 | train_balanced_accuracy: 0.36892 | train_logloss: 1.01334 | train_f1_macro: 0.36444 | valid_balanced_accuracy: 0.36315 | valid_logloss: 1.03363 | valid_f1_macro: 0.35685 |  0:47:54s
epoch 93 | loss: 1.0153  | train_balanced_accuracy: 0.38206 | train_logloss: 0.99297 | train_f1_macro: 0.3871  | valid_balanced_accuracy: 0.37313 | valid_logloss: 1.0162  | valid_f1_macro: 0.37363 |  0:48:25s
epoch 94 | loss: 1.00689 | train_balanced_accuracy: 0.40122 | train_logloss: 0.96948 | train_f1_macro: 0.40887 | valid_balanced_accuracy: 0.38651 | valid_logloss: 1.00202 | valid_f1_macro: 0.38838 |  0:48:55s
epoch 95 | loss: 0.99142 | train_balanced_accuracy: 0.41016 | train_logloss: 0.96031 | train_f1_macro: 0.41803 | valid_balanced_accuracy: 0.3964  | valid_logloss: 0.9959  | valid_f1_macro: 0.39755 |  0:49:26s
epoch 96 | loss: 0.98692 | train_balanced_accuracy: 0.40536 | train_logloss: 0.95614 | train_f1_macro: 0.42041 | valid_balanced_accuracy: 0.38987 | valid_logloss: 0.99365 | valid_f1_macro: 0.39888 |  0:49:57s
epoch 97 | loss: 0.98914 | train_balanced_accuracy: 0.40377 | train_logloss: 0.97307 | train_f1_macro: 0.42275 | valid_balanced_accuracy: 0.39405 | valid_logloss: 1.00439 | valid_f1_macro: 0.40853 |  0:50:29s
epoch 98 | loss: 0.97722 | train_balanced_accuracy: 0.41367 | train_logloss: 0.93682 | train_f1_macro: 0.42664 | valid_balanced_accuracy: 0.40816 | valid_logloss: 0.97182 | valid_f1_macro: 0.41773 |  0:50:59s
epoch 99 | loss: 0.97007 | train_balanced_accuracy: 0.42158 | train_logloss: 0.9448  | train_f1_macro: 0.42924 | valid_balanced_accuracy: 0.41013 | valid_logloss: 0.98297 | valid_f1_macro: 0.41463 |  0:51:30s
epoch 100| loss: 0.96914 | train_balanced_accuracy: 0.4398  | train_logloss: 0.94073 | train_f1_macro: 0.45269 | valid_balanced_accuracy: 0.42599 | valid_logloss: 0.98071 | valid_f1_macro: 0.43575 |  0:52:01s
epoch 101| loss: 0.96443 | train_balanced_accuracy: 0.45365 | train_logloss: 0.92908 | train_f1_macro: 0.46701 | valid_balanced_accuracy: 0.44469 | valid_logloss: 0.96884 | valid_f1_macro: 0.45453 |  0:52:31s
epoch 102| loss: 0.95462 | train_balanced_accuracy: 0.41948 | train_logloss: 0.9282  | train_f1_macro: 0.43972 | valid_balanced_accuracy: 0.40409 | valid_logloss: 0.96731 | valid_f1_macro: 0.41976 |  0:53:02s
epoch 103| loss: 0.94965 | train_balanced_accuracy: 0.45722 | train_logloss: 0.91831 | train_f1_macro: 0.47773 | valid_balanced_accuracy: 0.42963 | valid_logloss: 0.96947 | valid_f1_macro: 0.44496 |  0:53:33s
epoch 104| loss: 0.94419 | train_balanced_accuracy: 0.45031 | train_logloss: 0.89573 | train_f1_macro: 0.46847 | valid_balanced_accuracy: 0.43015 | valid_logloss: 0.94751 | valid_f1_macro: 0.44428 |  0:54:04s
epoch 105| loss: 0.92694 | train_balanced_accuracy: 0.45806 | train_logloss: 0.88235 | train_f1_macro: 0.47851 | valid_balanced_accuracy: 0.43665 | valid_logloss: 0.93588 | valid_f1_macro: 0.45009 |  0:54:34s
epoch 106| loss: 0.92714 | train_balanced_accuracy: 0.46089 | train_logloss: 0.89089 | train_f1_macro: 0.49266 | valid_balanced_accuracy: 0.44368 | valid_logloss: 0.92439 | valid_f1_macro: 0.46633 |  0:55:05s
epoch 107| loss: 0.92522 | train_balanced_accuracy: 0.44166 | train_logloss: 0.90188 | train_f1_macro: 0.47098 | valid_balanced_accuracy: 0.42444 | valid_logloss: 0.94613 | valid_f1_macro: 0.44814 |  0:55:36s
epoch 108| loss: 0.91698 | train_balanced_accuracy: 0.47284 | train_logloss: 0.86137 | train_f1_macro: 0.49765 | valid_balanced_accuracy: 0.45891 | valid_logloss: 0.91099 | valid_f1_macro: 0.47896 |  0:56:06s
epoch 109| loss: 0.90121 | train_balanced_accuracy: 0.47902 | train_logloss: 0.88937 | train_f1_macro: 0.49794 | valid_balanced_accuracy: 0.46404 | valid_logloss: 0.92607 | valid_f1_macro: 0.47969 |  0:56:37s
epoch 110| loss: 0.89561 | train_balanced_accuracy: 0.47924 | train_logloss: 0.84967 | train_f1_macro: 0.51244 | valid_balanced_accuracy: 0.46201 | valid_logloss: 0.89713 | valid_f1_macro: 0.49121 |  0:57:07s
epoch 111| loss: 0.87796 | train_balanced_accuracy: 0.49593 | train_logloss: 0.84508 | train_f1_macro: 0.53716 | valid_balanced_accuracy: 0.47213 | valid_logloss: 0.89998 | valid_f1_macro: 0.50682 |  0:57:39s
epoch 112| loss: 0.89482 | train_balanced_accuracy: 0.49668 | train_logloss: 0.86798 | train_f1_macro: 0.52449 | valid_balanced_accuracy: 0.47188 | valid_logloss: 0.91695 | valid_f1_macro: 0.49391 |  0:58:09s
epoch 113| loss: 0.87681 | train_balanced_accuracy: 0.53143 | train_logloss: 0.83009 | train_f1_macro: 0.56979 | valid_balanced_accuracy: 0.51401 | valid_logloss: 0.87563 | valid_f1_macro: 0.54565 |  0:58:40s
epoch 114| loss: 0.85766 | train_balanced_accuracy: 0.52911 | train_logloss: 0.83197 | train_f1_macro: 0.56592 | valid_balanced_accuracy: 0.50926 | valid_logloss: 0.8825  | valid_f1_macro: 0.53645 |  0:59:10s
epoch 115| loss: 0.86238 | train_balanced_accuracy: 0.52396 | train_logloss: 0.83154 | train_f1_macro: 0.56377 | valid_balanced_accuracy: 0.50586 | valid_logloss: 0.87711 | valid_f1_macro: 0.53733 |  0:59:40s
epoch 116| loss: 0.85245 | train_balanced_accuracy: 0.52569 | train_logloss: 0.80835 | train_f1_macro: 0.56013 | valid_balanced_accuracy: 0.5031  | valid_logloss: 0.87292 | valid_f1_macro: 0.52838 |  1:00:11s
epoch 117| loss: 0.82895 | train_balanced_accuracy: 0.55018 | train_logloss: 0.77639 | train_f1_macro: 0.59202 | valid_balanced_accuracy: 0.51741 | valid_logloss: 0.84544 | valid_f1_macro: 0.55055 |  1:00:43s
epoch 118| loss: 0.80677 | train_balanced_accuracy: 0.55808 | train_logloss: 0.77151 | train_f1_macro: 0.6038  | valid_balanced_accuracy: 0.54091 | valid_logloss: 0.82563 | valid_f1_macro: 0.5788  |  1:01:13s
epoch 119| loss: 0.80272 | train_balanced_accuracy: 0.58139 | train_logloss: 0.77874 | train_f1_macro: 0.61208 | valid_balanced_accuracy: 0.55794 | valid_logloss: 0.85373 | valid_f1_macro: 0.57997 |  1:01:44s
epoch 120| loss: 0.79628 | train_balanced_accuracy: 0.59759 | train_logloss: 0.74692 | train_f1_macro: 0.63012 | valid_balanced_accuracy: 0.56403 | valid_logloss: 0.81234 | valid_f1_macro: 0.59173 |  1:02:15s
epoch 121| loss: 0.78242 | train_balanced_accuracy: 0.59122 | train_logloss: 0.73174 | train_f1_macro: 0.63139 | valid_balanced_accuracy: 0.56345 | valid_logloss: 0.81569 | valid_f1_macro: 0.59564 |  1:02:45s
epoch 122| loss: 0.76358 | train_balanced_accuracy: 0.60436 | train_logloss: 0.70873 | train_f1_macro: 0.64563 | valid_balanced_accuracy: 0.56831 | valid_logloss: 0.78979 | valid_f1_macro: 0.60207 |  1:03:17s
epoch 123| loss: 0.75124 | train_balanced_accuracy: 0.62115 | train_logloss: 0.69236 | train_f1_macro: 0.66232 | valid_balanced_accuracy: 0.58592 | valid_logloss: 0.7838  | valid_f1_macro: 0.62069 |  1:03:48s
epoch 124| loss: 0.75746 | train_balanced_accuracy: 0.62264 | train_logloss: 0.69832 | train_f1_macro: 0.65999 | valid_balanced_accuracy: 0.5745  | valid_logloss: 0.78325 | valid_f1_macro: 0.6061  |  1:04:19s
epoch 125| loss: 0.73711 | train_balanced_accuracy: 0.63511 | train_logloss: 0.67548 | train_f1_macro: 0.67382 | valid_balanced_accuracy: 0.58654 | valid_logloss: 0.76307 | valid_f1_macro: 0.61965 |  1:04:49s
epoch 126| loss: 0.72705 | train_balanced_accuracy: 0.65037 | train_logloss: 0.70121 | train_f1_macro: 0.67164 | valid_balanced_accuracy: 0.6121  | valid_logloss: 0.78719 | valid_f1_macro: 0.62793 |  1:05:20s
epoch 127| loss: 0.72994 | train_balanced_accuracy: 0.61646 | train_logloss: 0.68756 | train_f1_macro: 0.6577  | valid_balanced_accuracy: 0.57604 | valid_logloss: 0.77748 | valid_f1_macro: 0.60958 |  1:05:50s
epoch 128| loss: 0.7214  | train_balanced_accuracy: 0.62339 | train_logloss: 0.67013 | train_f1_macro: 0.66951 | valid_balanced_accuracy: 0.58701 | valid_logloss: 0.76246 | valid_f1_macro: 0.62632 |  1:06:21s
epoch 129| loss: 0.69945 | train_balanced_accuracy: 0.66786 | train_logloss: 0.63968 | train_f1_macro: 0.69925 | valid_balanced_accuracy: 0.61994 | valid_logloss: 0.7433  | valid_f1_macro: 0.64567 |  1:06:52s
epoch 130| loss: 0.69625 | train_balanced_accuracy: 0.67455 | train_logloss: 0.62026 | train_f1_macro: 0.70553 | valid_balanced_accuracy: 0.63231 | valid_logloss: 0.73323 | valid_f1_macro: 0.65752 |  1:07:22s
epoch 131| loss: 0.68615 | train_balanced_accuracy: 0.64752 | train_logloss: 0.6165  | train_f1_macro: 0.69572 | valid_balanced_accuracy: 0.60399 | valid_logloss: 0.72238 | valid_f1_macro: 0.64666 |  1:07:53s
epoch 132| loss: 0.67105 | train_balanced_accuracy: 0.66268 | train_logloss: 0.63361 | train_f1_macro: 0.69042 | valid_balanced_accuracy: 0.62121 | valid_logloss: 0.75428 | valid_f1_macro: 0.64647 |  1:08:24s
epoch 133| loss: 0.67094 | train_balanced_accuracy: 0.70517 | train_logloss: 0.60008 | train_f1_macro: 0.72187 | valid_balanced_accuracy: 0.6505  | valid_logloss: 0.71606 | valid_f1_macro: 0.66245 |  1:08:54s
epoch 134| loss: 0.6598  | train_balanced_accuracy: 0.68837 | train_logloss: 0.6276  | train_f1_macro: 0.71011 | valid_balanced_accuracy: 0.64183 | valid_logloss: 0.74033 | valid_f1_macro: 0.6576  |  1:09:25s
epoch 135| loss: 0.65153 | train_balanced_accuracy: 0.73209 | train_logloss: 0.58242 | train_f1_macro: 0.74647 | valid_balanced_accuracy: 0.67689 | valid_logloss: 0.71977 | valid_f1_macro: 0.6867  |  1:09:56s
epoch 136| loss: 0.64868 | train_balanced_accuracy: 0.69389 | train_logloss: 0.59448 | train_f1_macro: 0.72805 | valid_balanced_accuracy: 0.6384  | valid_logloss: 0.71684 | valid_f1_macro: 0.66839 |  1:10:28s
epoch 137| loss: 0.64783 | train_balanced_accuracy: 0.68214 | train_logloss: 0.59624 | train_f1_macro: 0.72143 | valid_balanced_accuracy: 0.63249 | valid_logloss: 0.72616 | valid_f1_macro: 0.66216 |  1:10:58s
epoch 138| loss: 0.63011 | train_balanced_accuracy: 0.72564 | train_logloss: 0.55432 | train_f1_macro: 0.74738 | valid_balanced_accuracy: 0.67232 | valid_logloss: 0.6939  | valid_f1_macro: 0.6876  |  1:11:29s
epoch 139| loss: 0.61345 | train_balanced_accuracy: 0.73021 | train_logloss: 0.55502 | train_f1_macro: 0.75624 | valid_balanced_accuracy: 0.66868 | valid_logloss: 0.6888  | valid_f1_macro: 0.68996 |  1:12:00s
epoch 140| loss: 0.60424 | train_balanced_accuracy: 0.72904 | train_logloss: 0.57011 | train_f1_macro: 0.73955 | valid_balanced_accuracy: 0.67797 | valid_logloss: 0.70941 | valid_f1_macro: 0.67981 |  1:12:31s
epoch 141| loss: 0.61903 | train_balanced_accuracy: 0.73968 | train_logloss: 0.51956 | train_f1_macro: 0.76717 | valid_balanced_accuracy: 0.68267 | valid_logloss: 0.64971 | valid_f1_macro: 0.70816 |  1:13:02s
epoch 142| loss: 0.5845  | train_balanced_accuracy: 0.76379 | train_logloss: 0.49445 | train_f1_macro: 0.78304 | valid_balanced_accuracy: 0.69924 | valid_logloss: 0.63927 | valid_f1_macro: 0.71563 |  1:13:33s
epoch 143| loss: 0.57319 | train_balanced_accuracy: 0.78146 | train_logloss: 0.48096 | train_f1_macro: 0.79647 | valid_balanced_accuracy: 0.71394 | valid_logloss: 0.63249 | valid_f1_macro: 0.72315 |  1:14:03s
epoch 144| loss: 0.57306 | train_balanced_accuracy: 0.75783 | train_logloss: 0.49871 | train_f1_macro: 0.77873 | valid_balanced_accuracy: 0.70186 | valid_logloss: 0.64243 | valid_f1_macro: 0.71724 |  1:14:34s
epoch 145| loss: 0.56691 | train_balanced_accuracy: 0.74037 | train_logloss: 0.50199 | train_f1_macro: 0.76751 | valid_balanced_accuracy: 0.67927 | valid_logloss: 0.65743 | valid_f1_macro: 0.70131 |  1:15:05s
epoch 146| loss: 0.57181 | train_balanced_accuracy: 0.76496 | train_logloss: 0.48236 | train_f1_macro: 0.78549 | valid_balanced_accuracy: 0.70079 | valid_logloss: 0.64156 | valid_f1_macro: 0.71557 |  1:15:36s
epoch 147| loss: 0.55375 | train_balanced_accuracy: 0.80037 | train_logloss: 0.44946 | train_f1_macro: 0.80959 | valid_balanced_accuracy: 0.74095 | valid_logloss: 0.61361 | valid_f1_macro: 0.74558 |  1:16:07s
epoch 148| loss: 0.52654 | train_balanced_accuracy: 0.80691 | train_logloss: 0.46344 | train_f1_macro: 0.80621 | valid_balanced_accuracy: 0.74697 | valid_logloss: 0.62627 | valid_f1_macro: 0.7399  |  1:16:37s
epoch 149| loss: 0.533   | train_balanced_accuracy: 0.79643 | train_logloss: 0.44805 | train_f1_macro: 0.81335 | valid_balanced_accuracy: 0.72638 | valid_logloss: 0.62449 | valid_f1_macro: 0.74174 |  1:17:08s
epoch 150| loss: 0.51315 | train_balanced_accuracy: 0.80024 | train_logloss: 0.435   | train_f1_macro: 0.81124 | valid_balanced_accuracy: 0.72822 | valid_logloss: 0.61622 | valid_f1_macro: 0.73996 |  1:17:39s
epoch 151| loss: 0.51422 | train_balanced_accuracy: 0.81256 | train_logloss: 0.43388 | train_f1_macro: 0.81855 | valid_balanced_accuracy: 0.7557  | valid_logloss: 0.60377 | valid_f1_macro: 0.76016 |  1:18:09s
epoch 152| loss: 0.50863 | train_balanced_accuracy: 0.81995 | train_logloss: 0.42157 | train_f1_macro: 0.82765 | valid_balanced_accuracy: 0.74773 | valid_logloss: 0.59456 | valid_f1_macro: 0.75548 |  1:18:40s
epoch 153| loss: 0.49756 | train_balanced_accuracy: 0.80199 | train_logloss: 0.47931 | train_f1_macro: 0.7992  | valid_balanced_accuracy: 0.73411 | valid_logloss: 0.66477 | valid_f1_macro: 0.73059 |  1:19:11s
epoch 154| loss: 0.5305  | train_balanced_accuracy: 0.73518 | train_logloss: 0.49674 | train_f1_macro: 0.76885 | valid_balanced_accuracy: 0.6683  | valid_logloss: 0.65643 | valid_f1_macro: 0.6963  |  1:19:41s
epoch 155| loss: 0.51301 | train_balanced_accuracy: 0.80909 | train_logloss: 0.41866 | train_f1_macro: 0.82565 | valid_balanced_accuracy: 0.73232 | valid_logloss: 0.60846 | valid_f1_macro: 0.74815 |  1:20:12s
epoch 156| loss: 0.50212 | train_balanced_accuracy: 0.85172 | train_logloss: 0.41619 | train_f1_macro: 0.83341 | valid_balanced_accuracy: 0.78692 | valid_logloss: 0.5925  | valid_f1_macro: 0.76462 |  1:20:44s
epoch 157| loss: 0.48676 | train_balanced_accuracy: 0.82815 | train_logloss: 0.40712 | train_f1_macro: 0.82941 | valid_balanced_accuracy: 0.764   | valid_logloss: 0.59767 | valid_f1_macro: 0.76308 |  1:21:14s
epoch 158| loss: 0.47208 | train_balanced_accuracy: 0.83285 | train_logloss: 0.41649 | train_f1_macro: 0.8286  | valid_balanced_accuracy: 0.76018 | valid_logloss: 0.61033 | valid_f1_macro: 0.75455 |  1:21:45s
epoch 159| loss: 0.49616 | train_balanced_accuracy: 0.82415 | train_logloss: 0.4108  | train_f1_macro: 0.83001 | valid_balanced_accuracy: 0.75555 | valid_logloss: 0.59011 | valid_f1_macro: 0.75822 |  1:22:15s
epoch 160| loss: 0.47168 | train_balanced_accuracy: 0.83884 | train_logloss: 0.37787 | train_f1_macro: 0.84174 | valid_balanced_accuracy: 0.77224 | valid_logloss: 0.5832  | valid_f1_macro: 0.76903 |  1:22:46s
epoch 161| loss: 0.44842 | train_balanced_accuracy: 0.85764 | train_logloss: 0.37395 | train_f1_macro: 0.84375 | valid_balanced_accuracy: 0.79498 | valid_logloss: 0.5756  | valid_f1_macro: 0.77868 |  1:23:17s
epoch 162| loss: 0.44879 | train_balanced_accuracy: 0.83072 | train_logloss: 0.38465 | train_f1_macro: 0.83795 | valid_balanced_accuracy: 0.76545 | valid_logloss: 0.59179 | valid_f1_macro: 0.76618 |  1:23:47s
epoch 163| loss: 0.45886 | train_balanced_accuracy: 0.83589 | train_logloss: 0.37141 | train_f1_macro: 0.83922 | valid_balanced_accuracy: 0.77006 | valid_logloss: 0.57968 | valid_f1_macro: 0.76431 |  1:24:18s
epoch 164| loss: 0.4315  | train_balanced_accuracy: 0.85047 | train_logloss: 0.35459 | train_f1_macro: 0.85301 | valid_balanced_accuracy: 0.78598 | valid_logloss: 0.54252 | valid_f1_macro: 0.78697 |  1:24:49s
epoch 165| loss: 0.41715 | train_balanced_accuracy: 0.86032 | train_logloss: 0.32615 | train_f1_macro: 0.86777 | valid_balanced_accuracy: 0.7904  | valid_logloss: 0.54218 | valid_f1_macro: 0.79196 |  1:25:20s
epoch 166| loss: 0.41185 | train_balanced_accuracy: 0.87631 | train_logloss: 0.33089 | train_f1_macro: 0.86878 | valid_balanced_accuracy: 0.81203 | valid_logloss: 0.54072 | valid_f1_macro: 0.79668 |  1:25:50s
epoch 167| loss: 0.40152 | train_balanced_accuracy: 0.86449 | train_logloss: 0.33391 | train_f1_macro: 0.86084 | valid_balanced_accuracy: 0.80219 | valid_logloss: 0.55561 | valid_f1_macro: 0.79156 |  1:26:21s
epoch 168| loss: 0.41382 | train_balanced_accuracy: 0.87397 | train_logloss: 0.32379 | train_f1_macro: 0.86877 | valid_balanced_accuracy: 0.79349 | valid_logloss: 0.54175 | valid_f1_macro: 0.78582 |  1:26:52s
epoch 169| loss: 0.41318 | train_balanced_accuracy: 0.86549 | train_logloss: 0.3183  | train_f1_macro: 0.87282 | valid_balanced_accuracy: 0.78715 | valid_logloss: 0.5403  | valid_f1_macro: 0.79094 |  1:27:23s
epoch 170| loss: 0.40028 | train_balanced_accuracy: 0.87567 | train_logloss: 0.32258 | train_f1_macro: 0.87115 | valid_balanced_accuracy: 0.80258 | valid_logloss: 0.54529 | valid_f1_macro: 0.79546 |  1:27:53s
epoch 171| loss: 0.40732 | train_balanced_accuracy: 0.87271 | train_logloss: 0.31623 | train_f1_macro: 0.87438 | valid_balanced_accuracy: 0.79886 | valid_logloss: 0.52398 | valid_f1_macro: 0.79721 |  1:28:25s
epoch 172| loss: 0.39458 | train_balanced_accuracy: 0.89698 | train_logloss: 0.30602 | train_f1_macro: 0.88079 | valid_balanced_accuracy: 0.83395 | valid_logloss: 0.51237 | valid_f1_macro: 0.81231 |  1:28:56s
epoch 173| loss: 0.38446 | train_balanced_accuracy: 0.87235 | train_logloss: 0.30288 | train_f1_macro: 0.87569 | valid_balanced_accuracy: 0.7904  | valid_logloss: 0.52442 | valid_f1_macro: 0.79646 |  1:29:26s
epoch 174| loss: 0.3777  | train_balanced_accuracy: 0.89226 | train_logloss: 0.29371 | train_f1_macro: 0.88263 | valid_balanced_accuracy: 0.82292 | valid_logloss: 0.51926 | valid_f1_macro: 0.80628 |  1:29:57s
epoch 175| loss: 0.36084 | train_balanced_accuracy: 0.89716 | train_logloss: 0.27257 | train_f1_macro: 0.89531 | valid_balanced_accuracy: 0.82266 | valid_logloss: 0.51686 | valid_f1_macro: 0.8146  |  1:30:29s
epoch 176| loss: 0.35331 | train_balanced_accuracy: 0.91488 | train_logloss: 0.25718 | train_f1_macro: 0.90032 | valid_balanced_accuracy: 0.84319 | valid_logloss: 0.5128  | valid_f1_macro: 0.81845 |  1:31:00s
epoch 177| loss: 0.34722 | train_balanced_accuracy: 0.88518 | train_logloss: 0.25989 | train_f1_macro: 0.89533 | valid_balanced_accuracy: 0.81621 | valid_logloss: 0.49333 | valid_f1_macro: 0.82027 |  1:31:31s
epoch 178| loss: 0.3447  | train_balanced_accuracy: 0.90072 | train_logloss: 0.24092 | train_f1_macro: 0.90679 | valid_balanced_accuracy: 0.82849 | valid_logloss: 0.50016 | valid_f1_macro: 0.82512 |  1:32:01s
epoch 179| loss: 0.33246 | train_balanced_accuracy: 0.91193 | train_logloss: 0.2491  | train_f1_macro: 0.90309 | valid_balanced_accuracy: 0.83825 | valid_logloss: 0.50887 | valid_f1_macro: 0.82249 |  1:32:32s
epoch 180| loss: 0.32336 | train_balanced_accuracy: 0.91214 | train_logloss: 0.24956 | train_f1_macro: 0.89927 | valid_balanced_accuracy: 0.84313 | valid_logloss: 0.5261  | valid_f1_macro: 0.81892 |  1:33:02s
epoch 181| loss: 0.33022 | train_balanced_accuracy: 0.90242 | train_logloss: 0.2427  | train_f1_macro: 0.90147 | valid_balanced_accuracy: 0.83689 | valid_logloss: 0.48658 | valid_f1_macro: 0.82624 |  1:33:33s
epoch 182| loss: 0.31733 | train_balanced_accuracy: 0.90002 | train_logloss: 0.24063 | train_f1_macro: 0.90549 | valid_balanced_accuracy: 0.82741 | valid_logloss: 0.49698 | valid_f1_macro: 0.82566 |  1:34:04s
epoch 183| loss: 0.32207 | train_balanced_accuracy: 0.90338 | train_logloss: 0.22767 | train_f1_macro: 0.90846 | valid_balanced_accuracy: 0.82888 | valid_logloss: 0.48238 | valid_f1_macro: 0.82858 |  1:34:35s
epoch 184| loss: 0.31479 | train_balanced_accuracy: 0.91742 | train_logloss: 0.23722 | train_f1_macro: 0.90505 | valid_balanced_accuracy: 0.84804 | valid_logloss: 0.49864 | valid_f1_macro: 0.82535 |  1:35:06s
epoch 185| loss: 0.31282 | train_balanced_accuracy: 0.91574 | train_logloss: 0.22488 | train_f1_macro: 0.91205 | valid_balanced_accuracy: 0.84232 | valid_logloss: 0.48985 | valid_f1_macro: 0.82955 |  1:35:36s
epoch 186| loss: 0.29877 | train_balanced_accuracy: 0.91839 | train_logloss: 0.21083 | train_f1_macro: 0.91672 | valid_balanced_accuracy: 0.83637 | valid_logloss: 0.48402 | valid_f1_macro: 0.82767 |  1:36:07s
epoch 187| loss: 0.29037 | train_balanced_accuracy: 0.91826 | train_logloss: 0.19752 | train_f1_macro: 0.92163 | valid_balanced_accuracy: 0.83763 | valid_logloss: 0.48294 | valid_f1_macro: 0.83861 |  1:36:38s
epoch 188| loss: 0.29075 | train_balanced_accuracy: 0.92637 | train_logloss: 0.21417 | train_f1_macro: 0.9182  | valid_balanced_accuracy: 0.85344 | valid_logloss: 0.50622 | valid_f1_macro: 0.83118 |  1:37:09s
epoch 189| loss: 0.29592 | train_balanced_accuracy: 0.91683 | train_logloss: 0.20803 | train_f1_macro: 0.92194 | valid_balanced_accuracy: 0.83909 | valid_logloss: 0.4825  | valid_f1_macro: 0.83477 |  1:37:40s
epoch 190| loss: 0.2877  | train_balanced_accuracy: 0.92849 | train_logloss: 0.21016 | train_f1_macro: 0.91545 | valid_balanced_accuracy: 0.84267 | valid_logloss: 0.50328 | valid_f1_macro: 0.823   |  1:38:10s
epoch 191| loss: 0.30129 | train_balanced_accuracy: 0.92737 | train_logloss: 0.22939 | train_f1_macro: 0.91096 | valid_balanced_accuracy: 0.84944 | valid_logloss: 0.52567 | valid_f1_macro: 0.82104 |  1:38:41s
epoch 192| loss: 0.30417 | train_balanced_accuracy: 0.92346 | train_logloss: 0.22088 | train_f1_macro: 0.91328 | valid_balanced_accuracy: 0.85218 | valid_logloss: 0.49531 | valid_f1_macro: 0.82935 |  1:39:12s
epoch 193| loss: 0.27378 | train_balanced_accuracy: 0.92075 | train_logloss: 0.212   | train_f1_macro: 0.91401 | valid_balanced_accuracy: 0.8521  | valid_logloss: 0.5     | valid_f1_macro: 0.83868 |  1:39:43s
epoch 194| loss: 0.28258 | train_balanced_accuracy: 0.93985 | train_logloss: 0.19956 | train_f1_macro: 0.9217  | valid_balanced_accuracy: 0.86499 | valid_logloss: 0.49853 | valid_f1_macro: 0.8355  |  1:40:13s
epoch 195| loss: 0.27933 | train_balanced_accuracy: 0.92922 | train_logloss: 0.18718 | train_f1_macro: 0.92525 | valid_balanced_accuracy: 0.85437 | valid_logloss: 0.4753  | valid_f1_macro: 0.83864 |  1:40:46s
epoch 196| loss: 0.27475 | train_balanced_accuracy: 0.9477  | train_logloss: 0.18145 | train_f1_macro: 0.93124 | valid_balanced_accuracy: 0.87798 | valid_logloss: 0.46576 | valid_f1_macro: 0.85064 |  1:41:19s
epoch 197| loss: 0.26679 | train_balanced_accuracy: 0.94243 | train_logloss: 0.17494 | train_f1_macro: 0.93481 | valid_balanced_accuracy: 0.86215 | valid_logloss: 0.46312 | valid_f1_macro: 0.84748 |  1:41:50s
epoch 198| loss: 0.26462 | train_balanced_accuracy: 0.93391 | train_logloss: 0.17114 | train_f1_macro: 0.93313 | valid_balanced_accuracy: 0.8558  | valid_logloss: 0.46709 | valid_f1_macro: 0.84736 |  1:42:22s
epoch 199| loss: 0.27116 | train_balanced_accuracy: 0.9347  | train_logloss: 0.19068 | train_f1_macro: 0.92673 | valid_balanced_accuracy: 0.85865 | valid_logloss: 0.48607 | valid_f1_macro: 0.84199 |  1:42:54s
epoch 200| loss: 0.27358 | train_balanced_accuracy: 0.93306 | train_logloss: 0.19708 | train_f1_macro: 0.92145 | valid_balanced_accuracy: 0.86484 | valid_logloss: 0.49442 | valid_f1_macro: 0.84344 |  1:43:26s
epoch 201| loss: 0.26822 | train_balanced_accuracy: 0.94373 | train_logloss: 0.18163 | train_f1_macro: 0.92894 | valid_balanced_accuracy: 0.86736 | valid_logloss: 0.49367 | valid_f1_macro: 0.84499 |  1:43:59s
epoch 202| loss: 0.25693 | train_balanced_accuracy: 0.94191 | train_logloss: 0.1632  | train_f1_macro: 0.93413 | valid_balanced_accuracy: 0.86244 | valid_logloss: 0.46864 | valid_f1_macro: 0.84574 |  1:44:33s
epoch 203| loss: 0.24483 | train_balanced_accuracy: 0.94589 | train_logloss: 0.16746 | train_f1_macro: 0.93668 | valid_balanced_accuracy: 0.8638  | valid_logloss: 0.47216 | valid_f1_macro: 0.84664 |  1:45:04s
epoch 204| loss: 0.24228 | train_balanced_accuracy: 0.92703 | train_logloss: 0.18059 | train_f1_macro: 0.92875 | valid_balanced_accuracy: 0.85097 | valid_logloss: 0.49642 | valid_f1_macro: 0.84646 |  1:45:36s
epoch 205| loss: 0.24656 | train_balanced_accuracy: 0.95072 | train_logloss: 0.15394 | train_f1_macro: 0.94125 | valid_balanced_accuracy: 0.87713 | valid_logloss: 0.47086 | valid_f1_macro: 0.85833 |  1:46:07s
epoch 206| loss: 0.24596 | train_balanced_accuracy: 0.94342 | train_logloss: 0.17633 | train_f1_macro: 0.93148 | valid_balanced_accuracy: 0.86713 | valid_logloss: 0.50052 | valid_f1_macro: 0.84009 |  1:46:39s
epoch 207| loss: 0.23853 | train_balanced_accuracy: 0.93696 | train_logloss: 0.18026 | train_f1_macro: 0.92779 | valid_balanced_accuracy: 0.86079 | valid_logloss: 0.4872  | valid_f1_macro: 0.84639 |  1:47:12s
epoch 208| loss: 0.23334 | train_balanced_accuracy: 0.9479  | train_logloss: 0.16989 | train_f1_macro: 0.93339 | valid_balanced_accuracy: 0.87955 | valid_logloss: 0.49487 | valid_f1_macro: 0.85044 |  1:47:43s
epoch 209| loss: 0.2299  | train_balanced_accuracy: 0.94539 | train_logloss: 0.14454 | train_f1_macro: 0.9438  | valid_balanced_accuracy: 0.86446 | valid_logloss: 0.46196 | valid_f1_macro: 0.85291 |  1:48:15s
epoch 210| loss: 0.24173 | train_balanced_accuracy: 0.94971 | train_logloss: 0.15015 | train_f1_macro: 0.94348 | valid_balanced_accuracy: 0.866   | valid_logloss: 0.47138 | valid_f1_macro: 0.84886 |  1:48:47s
epoch 211| loss: 0.23454 | train_balanced_accuracy: 0.94939 | train_logloss: 0.15905 | train_f1_macro: 0.94061 | valid_balanced_accuracy: 0.87126 | valid_logloss: 0.48137 | valid_f1_macro: 0.85365 |  1:49:19s
epoch 212| loss: 0.23995 | train_balanced_accuracy: 0.94534 | train_logloss: 0.14788 | train_f1_macro: 0.94167 | valid_balanced_accuracy: 0.87217 | valid_logloss: 0.4651  | valid_f1_macro: 0.85845 |  1:49:51s
epoch 213| loss: 0.23213 | train_balanced_accuracy: 0.95541 | train_logloss: 0.13513 | train_f1_macro: 0.94913 | valid_balanced_accuracy: 0.87156 | valid_logloss: 0.45946 | valid_f1_macro: 0.85897 |  1:50:24s
epoch 214| loss: 0.23274 | train_balanced_accuracy: 0.94751 | train_logloss: 0.15515 | train_f1_macro: 0.94098 | valid_balanced_accuracy: 0.87207 | valid_logloss: 0.47554 | valid_f1_macro: 0.85362 |  1:50:56s
epoch 215| loss: 0.22777 | train_balanced_accuracy: 0.9504  | train_logloss: 0.13898 | train_f1_macro: 0.94801 | valid_balanced_accuracy: 0.86324 | valid_logloss: 0.45319 | valid_f1_macro: 0.85542 |  1:51:27s
epoch 216| loss: 0.26408 | train_balanced_accuracy: 0.91155 | train_logloss: 0.20625 | train_f1_macro: 0.9143  | valid_balanced_accuracy: 0.83899 | valid_logloss: 0.49542 | valid_f1_macro: 0.83545 |  1:51:59s
epoch 217| loss: 0.2965  | train_balanced_accuracy: 0.93017 | train_logloss: 0.18142 | train_f1_macro: 0.92777 | valid_balanced_accuracy: 0.84464 | valid_logloss: 0.48038 | valid_f1_macro: 0.8364  |  1:52:31s
epoch 218| loss: 0.25594 | train_balanced_accuracy: 0.95003 | train_logloss: 0.16245 | train_f1_macro: 0.93722 | valid_balanced_accuracy: 0.86889 | valid_logloss: 0.47072 | valid_f1_macro: 0.84775 |  1:53:03s
epoch 219| loss: 0.23013 | train_balanced_accuracy: 0.9535  | train_logloss: 0.14847 | train_f1_macro: 0.94366 | valid_balanced_accuracy: 0.87339 | valid_logloss: 0.45628 | valid_f1_macro: 0.85584 |  1:53:35s
epoch 220| loss: 0.21808 | train_balanced_accuracy: 0.94864 | train_logloss: 0.15015 | train_f1_macro: 0.94252 | valid_balanced_accuracy: 0.86586 | valid_logloss: 0.47257 | valid_f1_macro: 0.85109 |  1:54:07s
epoch 221| loss: 0.24168 | train_balanced_accuracy: 0.94123 | train_logloss: 0.17571 | train_f1_macro: 0.9318  | valid_balanced_accuracy: 0.85968 | valid_logloss: 0.47932 | valid_f1_macro: 0.84472 |  1:54:38s
epoch 222| loss: 0.23569 | train_balanced_accuracy: 0.94332 | train_logloss: 0.14582 | train_f1_macro: 0.94374 | valid_balanced_accuracy: 0.86086 | valid_logloss: 0.44877 | valid_f1_macro: 0.85814 |  1:55:10s
epoch 223| loss: 0.22209 | train_balanced_accuracy: 0.95337 | train_logloss: 0.13605 | train_f1_macro: 0.94706 | valid_balanced_accuracy: 0.8738  | valid_logloss: 0.44913 | valid_f1_macro: 0.86006 |  1:55:42s
epoch 224| loss: 0.20285 | train_balanced_accuracy: 0.95752 | train_logloss: 0.12901 | train_f1_macro: 0.95041 | valid_balanced_accuracy: 0.87196 | valid_logloss: 0.47172 | valid_f1_macro: 0.86001 |  1:56:13s
epoch 225| loss: 0.21674 | train_balanced_accuracy: 0.9589  | train_logloss: 0.13415 | train_f1_macro: 0.94844 | valid_balanced_accuracy: 0.87948 | valid_logloss: 0.4571  | valid_f1_macro: 0.85898 |  1:56:46s
epoch 226| loss: 0.20887 | train_balanced_accuracy: 0.9624  | train_logloss: 0.12322 | train_f1_macro: 0.95204 | valid_balanced_accuracy: 0.87975 | valid_logloss: 0.45765 | valid_f1_macro: 0.86045 |  1:57:18s
epoch 227| loss: 0.21006 | train_balanced_accuracy: 0.95242 | train_logloss: 0.13326 | train_f1_macro: 0.9466  | valid_balanced_accuracy: 0.86695 | valid_logloss: 0.46866 | valid_f1_macro: 0.85385 |  1:57:49s
epoch 228| loss: 0.21361 | train_balanced_accuracy: 0.95961 | train_logloss: 0.13154 | train_f1_macro: 0.94702 | valid_balanced_accuracy: 0.87712 | valid_logloss: 0.461   | valid_f1_macro: 0.85857 |  1:58:21s
epoch 229| loss: 0.20945 | train_balanced_accuracy: 0.95295 | train_logloss: 0.13408 | train_f1_macro: 0.94849 | valid_balanced_accuracy: 0.87174 | valid_logloss: 0.46391 | valid_f1_macro: 0.85811 |  1:58:53s
epoch 230| loss: 0.2099  | train_balanced_accuracy: 0.95676 | train_logloss: 0.1201  | train_f1_macro: 0.95334 | valid_balanced_accuracy: 0.86949 | valid_logloss: 0.44844 | valid_f1_macro: 0.86143 |  1:59:25s
epoch 231| loss: 0.1964  | train_balanced_accuracy: 0.96451 | train_logloss: 0.11599 | train_f1_macro: 0.95517 | valid_balanced_accuracy: 0.87799 | valid_logloss: 0.45099 | valid_f1_macro: 0.86282 |  1:59:57s
epoch 232| loss: 0.19062 | train_balanced_accuracy: 0.96533 | train_logloss: 0.11385 | train_f1_macro: 0.95509 | valid_balanced_accuracy: 0.89027 | valid_logloss: 0.45705 | valid_f1_macro: 0.86804 |  2:00:30s
epoch 233| loss: 0.18665 | train_balanced_accuracy: 0.96665 | train_logloss: 0.10325 | train_f1_macro: 0.95884 | valid_balanced_accuracy: 0.88639 | valid_logloss: 0.45355 | valid_f1_macro: 0.87148 |  2:01:01s
epoch 234| loss: 0.18553 | train_balanced_accuracy: 0.96707 | train_logloss: 0.10602 | train_f1_macro: 0.95826 | valid_balanced_accuracy: 0.88529 | valid_logloss: 0.4591  | valid_f1_macro: 0.86958 |  2:01:33s
epoch 235| loss: 0.19809 | train_balanced_accuracy: 0.96238 | train_logloss: 0.11065 | train_f1_macro: 0.95664 | valid_balanced_accuracy: 0.87936 | valid_logloss: 0.45954 | valid_f1_macro: 0.86587 |  2:02:05s
epoch 236| loss: 0.20198 | train_balanced_accuracy: 0.96371 | train_logloss: 0.11256 | train_f1_macro: 0.95804 | valid_balanced_accuracy: 0.88334 | valid_logloss: 0.46603 | valid_f1_macro: 0.86961 |  2:02:37s
epoch 237| loss: 0.19947 | train_balanced_accuracy: 0.9629  | train_logloss: 0.11276 | train_f1_macro: 0.95712 | valid_balanced_accuracy: 0.88112 | valid_logloss: 0.45697 | valid_f1_macro: 0.86913 |  2:03:09s
epoch 238| loss: 0.18982 | train_balanced_accuracy: 0.95858 | train_logloss: 0.1053  | train_f1_macro: 0.95688 | valid_balanced_accuracy: 0.87966 | valid_logloss: 0.45083 | valid_f1_macro: 0.87072 |  2:03:41s
epoch 239| loss: 0.18619 | train_balanced_accuracy: 0.96475 | train_logloss: 0.10082 | train_f1_macro: 0.9605  | valid_balanced_accuracy: 0.87695 | valid_logloss: 0.46192 | valid_f1_macro: 0.86711 |  2:04:12s
epoch 240| loss: 0.17472 | train_balanced_accuracy: 0.97156 | train_logloss: 0.10665 | train_f1_macro: 0.95703 | valid_balanced_accuracy: 0.89692 | valid_logloss: 0.47541 | valid_f1_macro: 0.86964 |  2:04:43s
epoch 241| loss: 0.17718 | train_balanced_accuracy: 0.94436 | train_logloss: 0.13701 | train_f1_macro: 0.94513 | valid_balanced_accuracy: 0.86045 | valid_logloss: 0.48097 | valid_f1_macro: 0.84977 |  2:05:15s
epoch 242| loss: 0.18343 | train_balanced_accuracy: 0.9569  | train_logloss: 0.09983 | train_f1_macro: 0.95984 | valid_balanced_accuracy: 0.88163 | valid_logloss: 0.44123 | valid_f1_macro: 0.87663 |  2:05:47s
epoch 243| loss: 0.17078 | train_balanced_accuracy: 0.97204 | train_logloss: 0.09634 | train_f1_macro: 0.96447 | valid_balanced_accuracy: 0.8932  | valid_logloss: 0.43495 | valid_f1_macro: 0.87738 |  2:06:19s
epoch 244| loss: 0.16886 | train_balanced_accuracy: 0.96573 | train_logloss: 0.094   | train_f1_macro: 0.96166 | valid_balanced_accuracy: 0.88544 | valid_logloss: 0.43923 | valid_f1_macro: 0.87377 |  2:06:50s
epoch 245| loss: 0.17513 | train_balanced_accuracy: 0.97128 | train_logloss: 0.09667 | train_f1_macro: 0.96327 | valid_balanced_accuracy: 0.88992 | valid_logloss: 0.45232 | valid_f1_macro: 0.87516 |  2:07:22s
epoch 246| loss: 0.16736 | train_balanced_accuracy: 0.97172 | train_logloss: 0.0907  | train_f1_macro: 0.96526 | valid_balanced_accuracy: 0.89178 | valid_logloss: 0.4464  | valid_f1_macro: 0.87713 |  2:07:54s
epoch 247| loss: 0.16452 | train_balanced_accuracy: 0.96596 | train_logloss: 0.09461 | train_f1_macro: 0.96277 | valid_balanced_accuracy: 0.88846 | valid_logloss: 0.45517 | valid_f1_macro: 0.87208 |  2:08:26s
epoch 248| loss: 0.16027 | train_balanced_accuracy: 0.97235 | train_logloss: 0.08639 | train_f1_macro: 0.96711 | valid_balanced_accuracy: 0.88303 | valid_logloss: 0.4602  | valid_f1_macro: 0.86994 |  2:08:58s
epoch 249| loss: 0.1627  | train_balanced_accuracy: 0.97125 | train_logloss: 0.0909  | train_f1_macro: 0.96638 | valid_balanced_accuracy: 0.88931 | valid_logloss: 0.44511 | valid_f1_macro: 0.8756  |  2:09:29s
epoch 250| loss: 0.1701  | train_balanced_accuracy: 0.97032 | train_logloss: 0.10129 | train_f1_macro: 0.95933 | valid_balanced_accuracy: 0.89448 | valid_logloss: 0.46855 | valid_f1_macro: 0.86981 |  2:10:01s
epoch 251| loss: 0.17299 | train_balanced_accuracy: 0.9646  | train_logloss: 0.09995 | train_f1_macro: 0.96003 | valid_balanced_accuracy: 0.88884 | valid_logloss: 0.45263 | valid_f1_macro: 0.87226 |  2:10:34s
epoch 252| loss: 0.16963 | train_balanced_accuracy: 0.96903 | train_logloss: 0.08575 | train_f1_macro: 0.96627 | valid_balanced_accuracy: 0.88361 | valid_logloss: 0.45895 | valid_f1_macro: 0.86914 |  2:11:06s
epoch 253| loss: 0.15751 | train_balanced_accuracy: 0.9724  | train_logloss: 0.08297 | train_f1_macro: 0.96765 | valid_balanced_accuracy: 0.89406 | valid_logloss: 0.45545 | valid_f1_macro: 0.88093 |  2:11:38s
epoch 254| loss: 0.15861 | train_balanced_accuracy: 0.96272 | train_logloss: 0.09107 | train_f1_macro: 0.96311 | valid_balanced_accuracy: 0.87788 | valid_logloss: 0.47808 | valid_f1_macro: 0.87286 |  2:12:10s
epoch 255| loss: 0.1759  | train_balanced_accuracy: 0.96827 | train_logloss: 0.09638 | train_f1_macro: 0.96221 | valid_balanced_accuracy: 0.88056 | valid_logloss: 0.47996 | valid_f1_macro: 0.86576 |  2:12:42s
epoch 256| loss: 0.16824 | train_balanced_accuracy: 0.9681  | train_logloss: 0.08801 | train_f1_macro: 0.96548 | valid_balanced_accuracy: 0.88793 | valid_logloss: 0.44745 | valid_f1_macro: 0.87316 |  2:13:13s
epoch 257| loss: 0.16656 | train_balanced_accuracy: 0.9745  | train_logloss: 0.09214 | train_f1_macro: 0.96338 | valid_balanced_accuracy: 0.89307 | valid_logloss: 0.4585  | valid_f1_macro: 0.87214 |  2:13:45s
epoch 258| loss: 0.15953 | train_balanced_accuracy: 0.97348 | train_logloss: 0.09369 | train_f1_macro: 0.96421 | valid_balanced_accuracy: 0.88696 | valid_logloss: 0.46446 | valid_f1_macro: 0.86887 |  2:14:17s
epoch 259| loss: 0.15701 | train_balanced_accuracy: 0.96694 | train_logloss: 0.08964 | train_f1_macro: 0.96391 | valid_balanced_accuracy: 0.88968 | valid_logloss: 0.44481 | valid_f1_macro: 0.87766 |  2:14:49s
epoch 260| loss: 0.15698 | train_balanced_accuracy: 0.98059 | train_logloss: 0.08136 | train_f1_macro: 0.96869 | valid_balanced_accuracy: 0.90083 | valid_logloss: 0.46167 | valid_f1_macro: 0.87659 |  2:15:21s
epoch 261| loss: 0.15544 | train_balanced_accuracy: 0.97609 | train_logloss: 0.08071 | train_f1_macro: 0.96736 | valid_balanced_accuracy: 0.8973  | valid_logloss: 0.46391 | valid_f1_macro: 0.87677 |  2:15:52s
epoch 262| loss: 0.14873 | train_balanced_accuracy: 0.97256 | train_logloss: 0.08826 | train_f1_macro: 0.96438 | valid_balanced_accuracy: 0.89437 | valid_logloss: 0.46715 | valid_f1_macro: 0.87676 |  2:16:23s
epoch 263| loss: 0.15955 | train_balanced_accuracy: 0.9638  | train_logloss: 0.09473 | train_f1_macro: 0.96322 | valid_balanced_accuracy: 0.87747 | valid_logloss: 0.45879 | valid_f1_macro: 0.87069 |  2:16:55s
epoch 264| loss: 0.17444 | train_balanced_accuracy: 0.97024 | train_logloss: 0.09693 | train_f1_macro: 0.96311 | valid_balanced_accuracy: 0.88211 | valid_logloss: 0.46692 | valid_f1_macro: 0.86721 |  2:17:27s
epoch 265| loss: 0.16547 | train_balanced_accuracy: 0.97356 | train_logloss: 0.09655 | train_f1_macro: 0.96265 | valid_balanced_accuracy: 0.89742 | valid_logloss: 0.46546 | valid_f1_macro: 0.87061 |  2:17:59s
epoch 266| loss: 0.15946 | train_balanced_accuracy: 0.97725 | train_logloss: 0.08899 | train_f1_macro: 0.96672 | valid_balanced_accuracy: 0.89871 | valid_logloss: 0.46387 | valid_f1_macro: 0.87614 |  2:18:31s
epoch 267| loss: 0.15621 | train_balanced_accuracy: 0.97489 | train_logloss: 0.08419 | train_f1_macro: 0.96691 | valid_balanced_accuracy: 0.88787 | valid_logloss: 0.46236 | valid_f1_macro: 0.87099 |  2:19:03s
epoch 268| loss: 0.14837 | train_balanced_accuracy: 0.97987 | train_logloss: 0.08107 | train_f1_macro: 0.96867 | valid_balanced_accuracy: 0.89353 | valid_logloss: 0.48266 | valid_f1_macro: 0.87082 |  2:19:34s
epoch 269| loss: 0.14264 | train_balanced_accuracy: 0.97329 | train_logloss: 0.08124 | train_f1_macro: 0.96991 | valid_balanced_accuracy: 0.88969 | valid_logloss: 0.44511 | valid_f1_macro: 0.87965 |  2:20:06s
epoch 270| loss: 0.15047 | train_balanced_accuracy: 0.97942 | train_logloss: 0.07588 | train_f1_macro: 0.97072 | valid_balanced_accuracy: 0.89158 | valid_logloss: 0.46287 | valid_f1_macro: 0.87583 |  2:20:39s
epoch 271| loss: 0.14454 | train_balanced_accuracy: 0.9788  | train_logloss: 0.07676 | train_f1_macro: 0.96977 | valid_balanced_accuracy: 0.90656 | valid_logloss: 0.46018 | valid_f1_macro: 0.88354 |  2:21:11s
epoch 272| loss: 0.14713 | train_balanced_accuracy: 0.97726 | train_logloss: 0.08118 | train_f1_macro: 0.96919 | valid_balanced_accuracy: 0.89417 | valid_logloss: 0.47582 | valid_f1_macro: 0.87275 |  2:21:43s
epoch 273| loss: 0.1485  | train_balanced_accuracy: 0.97833 | train_logloss: 0.08137 | train_f1_macro: 0.96811 | valid_balanced_accuracy: 0.8969  | valid_logloss: 0.4865  | valid_f1_macro: 0.86955 |  2:22:15s
epoch 274| loss: 0.14376 | train_balanced_accuracy: 0.97643 | train_logloss: 0.0792  | train_f1_macro: 0.97114 | valid_balanced_accuracy: 0.89732 | valid_logloss: 0.44966 | valid_f1_macro: 0.88264 |  2:22:46s
epoch 275| loss: 0.14645 | train_balanced_accuracy: 0.9773  | train_logloss: 0.08498 | train_f1_macro: 0.96795 | valid_balanced_accuracy: 0.89485 | valid_logloss: 0.49153 | valid_f1_macro: 0.8762  |  2:23:18s
epoch 276| loss: 0.15033 | train_balanced_accuracy: 0.98021 | train_logloss: 0.0718  | train_f1_macro: 0.97118 | valid_balanced_accuracy: 0.89837 | valid_logloss: 0.45585 | valid_f1_macro: 0.87665 |  2:23:50s
epoch 277| loss: 0.13877 | train_balanced_accuracy: 0.97564 | train_logloss: 0.06932 | train_f1_macro: 0.97224 | valid_balanced_accuracy: 0.89492 | valid_logloss: 0.45323 | valid_f1_macro: 0.8817  |  2:24:22s
epoch 278| loss: 0.15071 | train_balanced_accuracy: 0.97533 | train_logloss: 0.07582 | train_f1_macro: 0.97157 | valid_balanced_accuracy: 0.88685 | valid_logloss: 0.46066 | valid_f1_macro: 0.87671 |  2:24:54s
epoch 279| loss: 0.14596 | train_balanced_accuracy: 0.97791 | train_logloss: 0.07613 | train_f1_macro: 0.97181 | valid_balanced_accuracy: 0.89021 | valid_logloss: 0.46941 | valid_f1_macro: 0.8726  |  2:25:25s
epoch 280| loss: 0.136   | train_balanced_accuracy: 0.98062 | train_logloss: 0.07321 | train_f1_macro: 0.97081 | valid_balanced_accuracy: 0.90189 | valid_logloss: 0.48111 | valid_f1_macro: 0.87396 |  2:25:57s
epoch 281| loss: 0.14153 | train_balanced_accuracy: 0.97579 | train_logloss: 0.08196 | train_f1_macro: 0.96839 | valid_balanced_accuracy: 0.8983  | valid_logloss: 0.46278 | valid_f1_macro: 0.88003 |  2:26:28s
epoch 282| loss: 0.14658 | train_balanced_accuracy: 0.97988 | train_logloss: 0.07198 | train_f1_macro: 0.97293 | valid_balanced_accuracy: 0.90051 | valid_logloss: 0.4501  | valid_f1_macro: 0.88046 |  2:27:00s
epoch 283| loss: 0.14768 | train_balanced_accuracy: 0.97688 | train_logloss: 0.07298 | train_f1_macro: 0.97187 | valid_balanced_accuracy: 0.89606 | valid_logloss: 0.44988 | valid_f1_macro: 0.88122 |  2:27:32s
epoch 284| loss: 0.14194 | train_balanced_accuracy: 0.97326 | train_logloss: 0.07602 | train_f1_macro: 0.9683  | valid_balanced_accuracy: 0.88663 | valid_logloss: 0.46499 | valid_f1_macro: 0.8735  |  2:28:03s
epoch 285| loss: 0.12616 | train_balanced_accuracy: 0.9795  | train_logloss: 0.07638 | train_f1_macro: 0.97084 | valid_balanced_accuracy: 0.8989  | valid_logloss: 0.48328 | valid_f1_macro: 0.87567 |  2:28:35s
epoch 286| loss: 0.13482 | train_balanced_accuracy: 0.98027 | train_logloss: 0.06509 | train_f1_macro: 0.9747  | valid_balanced_accuracy: 0.8942  | valid_logloss: 0.4671  | valid_f1_macro: 0.87985 |  2:29:07s
epoch 287| loss: 0.13315 | train_balanced_accuracy: 0.97492 | train_logloss: 0.07343 | train_f1_macro: 0.97175 | valid_balanced_accuracy: 0.8898  | valid_logloss: 0.47502 | valid_f1_macro: 0.87907 |  2:29:39s
epoch 288| loss: 0.13785 | train_balanced_accuracy: 0.98165 | train_logloss: 0.07072 | train_f1_macro: 0.97204 | valid_balanced_accuracy: 0.90408 | valid_logloss: 0.46197 | valid_f1_macro: 0.88177 |  2:30:11s
epoch 289| loss: 0.12787 | train_balanced_accuracy: 0.98103 | train_logloss: 0.06921 | train_f1_macro: 0.97216 | valid_balanced_accuracy: 0.90289 | valid_logloss: 0.47331 | valid_f1_macro: 0.87942 |  2:30:43s
epoch 290| loss: 0.13179 | train_balanced_accuracy: 0.97777 | train_logloss: 0.07996 | train_f1_macro: 0.96764 | valid_balanced_accuracy: 0.89683 | valid_logloss: 0.48368 | valid_f1_macro: 0.874   |  2:31:15s
epoch 291| loss: 0.14648 | train_balanced_accuracy: 0.97246 | train_logloss: 0.07765 | train_f1_macro: 0.96839 | valid_balanced_accuracy: 0.88887 | valid_logloss: 0.47937 | valid_f1_macro: 0.8758  |  2:31:47s

Early stopping occurred at epoch 291 with best_epoch = 271 and best_valid_f1_macro = 0.88354
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/callbacks.py:172: UserWarning: Best weights from best epoch are automatically used!
  warnings.warn(wrn_msg)
[CV 3/5; 7/7] END classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1;, score=0.270 total time=154.7min
[CV 4/5; 7/7] START classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: n_d changed from 8 to 64
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_dims changed from [] to [90, 14, 14, 6, 95, 45, 57, 53, 97, 97, 118, 89, 109]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_emb_dim changed from 20 to [20, 7, 7, 3, 20, 20, 20, 20, 20, 20, 20, 20, 20]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_idxs changed from [] to [0, 1, 2, 3, 10, 11, 12, 13, 15, 16, 17, 18, 19]
  warnings.warn(wrn_msg)
epoch 0  | loss: 5.87402 | train_balanced_accuracy: 0.16106 | train_logloss: 4.6183  | train_f1_macro: 0.11899 | valid_balanced_accuracy: 0.16019 | valid_logloss: 4.61126 | valid_f1_macro: 0.11803 |  0:00:31s
epoch 1  | loss: 3.22197 | train_balanced_accuracy: 0.15719 | train_logloss: 3.89688 | train_f1_macro: 0.09711 | valid_balanced_accuracy: 0.14901 | valid_logloss: 3.88067 | valid_f1_macro: 0.09299 |  0:01:02s
epoch 2  | loss: 5.79177 | train_balanced_accuracy: 0.21188 | train_logloss: 2.22986 | train_f1_macro: 0.1788  | valid_balanced_accuracy: 0.21307 | valid_logloss: 2.19714 | valid_f1_macro: 0.18056 |  0:01:34s
epoch 3  | loss: 2.75887 | train_balanced_accuracy: 0.17862 | train_logloss: 2.42756 | train_f1_macro: 0.17042 | valid_balanced_accuracy: 0.17802 | valid_logloss: 2.39438 | valid_f1_macro: 0.16994 |  0:02:05s
epoch 4  | loss: 1.63978 | train_balanced_accuracy: 0.18835 | train_logloss: 1.5194  | train_f1_macro: 0.15309 | valid_balanced_accuracy: 0.1896  | valid_logloss: 1.52526 | valid_f1_macro: 0.15607 |  0:02:36s
epoch 5  | loss: 1.78212 | train_balanced_accuracy: 0.23243 | train_logloss: 1.53363 | train_f1_macro: 0.19382 | valid_balanced_accuracy: 0.23395 | valid_logloss: 1.53563 | valid_f1_macro: 0.19617 |  0:03:07s
epoch 6  | loss: 1.37513 | train_balanced_accuracy: 0.23437 | train_logloss: 1.41212 | train_f1_macro: 0.20935 | valid_balanced_accuracy: 0.24089 | valid_logloss: 1.40284 | valid_f1_macro: 0.21487 |  0:03:38s
epoch 7  | loss: 1.28112 | train_balanced_accuracy: 0.25052 | train_logloss: 1.26483 | train_f1_macro: 0.20032 | valid_balanced_accuracy: 0.2533  | valid_logloss: 1.26829 | valid_f1_macro: 0.20494 |  0:04:10s
epoch 8  | loss: 1.25487 | train_balanced_accuracy: 0.28178 | train_logloss: 1.23551 | train_f1_macro: 0.23385 | valid_balanced_accuracy: 0.29086 | valid_logloss: 1.22936 | valid_f1_macro: 0.24614 |  0:04:41s
epoch 9  | loss: 1.24543 | train_balanced_accuracy: 0.26887 | train_logloss: 1.25612 | train_f1_macro: 0.21417 | valid_balanced_accuracy: 0.26964 | valid_logloss: 1.26017 | valid_f1_macro: 0.21475 |  0:05:13s
epoch 10 | loss: 1.25821 | train_balanced_accuracy: 0.27926 | train_logloss: 1.39531 | train_f1_macro: 0.23107 | valid_balanced_accuracy: 0.28177 | valid_logloss: 1.38005 | valid_f1_macro: 0.2326  |  0:05:45s
epoch 11 | loss: 1.25247 | train_balanced_accuracy: 0.26642 | train_logloss: 1.26399 | train_f1_macro: 0.2159  | valid_balanced_accuracy: 0.2719  | valid_logloss: 1.26474 | valid_f1_macro: 0.22121 |  0:06:16s
epoch 12 | loss: 1.23683 | train_balanced_accuracy: 0.27032 | train_logloss: 1.23422 | train_f1_macro: 0.2334  | valid_balanced_accuracy: 0.27221 | valid_logloss: 1.24115 | valid_f1_macro: 0.23692 |  0:06:47s
epoch 13 | loss: 1.23906 | train_balanced_accuracy: 0.27597 | train_logloss: 1.22253 | train_f1_macro: 0.22325 | valid_balanced_accuracy: 0.27962 | valid_logloss: 1.22186 | valid_f1_macro: 0.22495 |  0:07:19s
epoch 14 | loss: 1.21554 | train_balanced_accuracy: 0.2804  | train_logloss: 1.19788 | train_f1_macro: 0.2328  | valid_balanced_accuracy: 0.28498 | valid_logloss: 1.19403 | valid_f1_macro: 0.23989 |  0:07:50s
epoch 15 | loss: 1.18479 | train_balanced_accuracy: 0.29318 | train_logloss: 1.17885 | train_f1_macro: 0.25052 | valid_balanced_accuracy: 0.29547 | valid_logloss: 1.17558 | valid_f1_macro: 0.25174 |  0:08:21s
epoch 16 | loss: 1.17679 | train_balanced_accuracy: 0.29236 | train_logloss: 1.19419 | train_f1_macro: 0.24781 | valid_balanced_accuracy: 0.29211 | valid_logloss: 1.19683 | valid_f1_macro: 0.2452  |  0:08:53s
epoch 17 | loss: 1.17489 | train_balanced_accuracy: 0.29872 | train_logloss: 1.17932 | train_f1_macro: 0.26187 | valid_balanced_accuracy: 0.30297 | valid_logloss: 1.17958 | valid_f1_macro: 0.26699 |  0:09:23s
epoch 18 | loss: 1.16914 | train_balanced_accuracy: 0.29174 | train_logloss: 1.16702 | train_f1_macro: 0.24825 | valid_balanced_accuracy: 0.29303 | valid_logloss: 1.16921 | valid_f1_macro: 0.24881 |  0:09:55s
epoch 19 | loss: 1.16623 | train_balanced_accuracy: 0.2854  | train_logloss: 1.1714  | train_f1_macro: 0.23196 | valid_balanced_accuracy: 0.28861 | valid_logloss: 1.17105 | valid_f1_macro: 0.23495 |  0:10:25s
epoch 20 | loss: 1.16304 | train_balanced_accuracy: 0.28975 | train_logloss: 1.16673 | train_f1_macro: 0.25217 | valid_balanced_accuracy: 0.29116 | valid_logloss: 1.17001 | valid_f1_macro: 0.25188 |  0:10:56s
epoch 21 | loss: 1.1692  | train_balanced_accuracy: 0.28551 | train_logloss: 1.18406 | train_f1_macro: 0.24987 | valid_balanced_accuracy: 0.28586 | valid_logloss: 1.19263 | valid_f1_macro: 0.24911 |  0:11:27s
epoch 22 | loss: 1.17385 | train_balanced_accuracy: 0.3039  | train_logloss: 1.16994 | train_f1_macro: 0.26792 | valid_balanced_accuracy: 0.3037  | valid_logloss: 1.17281 | valid_f1_macro: 0.26522 |  0:11:58s
epoch 23 | loss: 1.16732 | train_balanced_accuracy: 0.29483 | train_logloss: 1.1725  | train_f1_macro: 0.25827 | valid_balanced_accuracy: 0.29799 | valid_logloss: 1.17519 | valid_f1_macro: 0.26323 |  0:12:29s
epoch 24 | loss: 1.17425 | train_balanced_accuracy: 0.3114  | train_logloss: 1.17376 | train_f1_macro: 0.28337 | valid_balanced_accuracy: 0.31632 | valid_logloss: 1.17705 | valid_f1_macro: 0.28905 |  0:13:00s
epoch 25 | loss: 1.17212 | train_balanced_accuracy: 0.30008 | train_logloss: 1.16849 | train_f1_macro: 0.26558 | valid_balanced_accuracy: 0.30362 | valid_logloss: 1.17052 | valid_f1_macro: 0.26932 |  0:13:31s
epoch 26 | loss: 1.16676 | train_balanced_accuracy: 0.31044 | train_logloss: 1.15508 | train_f1_macro: 0.27943 | valid_balanced_accuracy: 0.31143 | valid_logloss: 1.1557  | valid_f1_macro: 0.27963 |  0:14:02s
epoch 27 | loss: 1.16468 | train_balanced_accuracy: 0.30636 | train_logloss: 1.16083 | train_f1_macro: 0.28085 | valid_balanced_accuracy: 0.30928 | valid_logloss: 1.15813 | valid_f1_macro: 0.28316 |  0:14:33s
epoch 28 | loss: 1.17069 | train_balanced_accuracy: 0.3124  | train_logloss: 1.17904 | train_f1_macro: 0.28036 | valid_balanced_accuracy: 0.31391 | valid_logloss: 1.17565 | valid_f1_macro: 0.28075 |  0:15:04s
epoch 29 | loss: 1.16284 | train_balanced_accuracy: 0.31468 | train_logloss: 1.15163 | train_f1_macro: 0.29172 | valid_balanced_accuracy: 0.31789 | valid_logloss: 1.14979 | valid_f1_macro: 0.2949  |  0:15:36s
epoch 30 | loss: 1.1576  | train_balanced_accuracy: 0.28097 | train_logloss: 1.23731 | train_f1_macro: 0.23015 | valid_balanced_accuracy: 0.28517 | valid_logloss: 1.23456 | valid_f1_macro: 0.2361  |  0:16:08s
epoch 31 | loss: 1.15274 | train_balanced_accuracy: 0.30709 | train_logloss: 1.16533 | train_f1_macro: 0.28151 | valid_balanced_accuracy: 0.30947 | valid_logloss: 1.16273 | valid_f1_macro: 0.28399 |  0:16:39s
epoch 32 | loss: 1.15874 | train_balanced_accuracy: 0.31119 | train_logloss: 1.15006 | train_f1_macro: 0.28141 | valid_balanced_accuracy: 0.31322 | valid_logloss: 1.14924 | valid_f1_macro: 0.2836  |  0:17:10s
epoch 33 | loss: 1.15501 | train_balanced_accuracy: 0.29807 | train_logloss: 1.16508 | train_f1_macro: 0.25849 | valid_balanced_accuracy: 0.30216 | valid_logloss: 1.16148 | valid_f1_macro: 0.26392 |  0:17:41s
epoch 34 | loss: 1.15638 | train_balanced_accuracy: 0.32074 | train_logloss: 1.149   | train_f1_macro: 0.29966 | valid_balanced_accuracy: 0.32167 | valid_logloss: 1.14819 | valid_f1_macro: 0.30123 |  0:18:12s
epoch 35 | loss: 1.15161 | train_balanced_accuracy: 0.31798 | train_logloss: 1.14936 | train_f1_macro: 0.29133 | valid_balanced_accuracy: 0.32146 | valid_logloss: 1.1501  | valid_f1_macro: 0.29597 |  0:18:43s
epoch 36 | loss: 1.14844 | train_balanced_accuracy: 0.30956 | train_logloss: 1.14358 | train_f1_macro: 0.28112 | valid_balanced_accuracy: 0.31307 | valid_logloss: 1.14543 | valid_f1_macro: 0.28581 |  0:19:14s
epoch 37 | loss: 1.14713 | train_balanced_accuracy: 0.32328 | train_logloss: 1.1424  | train_f1_macro: 0.29961 | valid_balanced_accuracy: 0.32361 | valid_logloss: 1.14432 | valid_f1_macro: 0.29953 |  0:19:46s
epoch 38 | loss: 1.15038 | train_balanced_accuracy: 0.31924 | train_logloss: 1.14252 | train_f1_macro: 0.29472 | valid_balanced_accuracy: 0.3199  | valid_logloss: 1.1402  | valid_f1_macro: 0.29439 |  0:20:17s
epoch 39 | loss: 1.14907 | train_balanced_accuracy: 0.31826 | train_logloss: 1.14588 | train_f1_macro: 0.29175 | valid_balanced_accuracy: 0.31952 | valid_logloss: 1.14897 | valid_f1_macro: 0.29321 |  0:20:47s
epoch 40 | loss: 1.14728 | train_balanced_accuracy: 0.31337 | train_logloss: 1.14679 | train_f1_macro: 0.289   | valid_balanced_accuracy: 0.31287 | valid_logloss: 1.15064 | valid_f1_macro: 0.28624 |  0:21:18s
epoch 41 | loss: 1.14434 | train_balanced_accuracy: 0.31986 | train_logloss: 1.14062 | train_f1_macro: 0.29885 | valid_balanced_accuracy: 0.3252  | valid_logloss: 1.14436 | valid_f1_macro: 0.3069  |  0:21:50s
epoch 42 | loss: 1.13696 | train_balanced_accuracy: 0.31562 | train_logloss: 1.14312 | train_f1_macro: 0.29316 | valid_balanced_accuracy: 0.31719 | valid_logloss: 1.14607 | valid_f1_macro: 0.29427 |  0:22:21s
epoch 43 | loss: 1.1449  | train_balanced_accuracy: 0.30233 | train_logloss: 1.16161 | train_f1_macro: 0.27313 | valid_balanced_accuracy: 0.3041  | valid_logloss: 1.16277 | valid_f1_macro: 0.27366 |  0:22:53s
epoch 44 | loss: 1.16163 | train_balanced_accuracy: 0.3125  | train_logloss: 1.17087 | train_f1_macro: 0.29182 | valid_balanced_accuracy: 0.31743 | valid_logloss: 1.16792 | valid_f1_macro: 0.29718 |  0:23:24s
epoch 45 | loss: 1.16683 | train_balanced_accuracy: 0.30051 | train_logloss: 1.17028 | train_f1_macro: 0.27608 | valid_balanced_accuracy: 0.30723 | valid_logloss: 1.1638  | valid_f1_macro: 0.28633 |  0:23:55s
epoch 46 | loss: 1.16046 | train_balanced_accuracy: 0.32673 | train_logloss: 1.16349 | train_f1_macro: 0.3099  | valid_balanced_accuracy: 0.3338  | valid_logloss: 1.15389 | valid_f1_macro: 0.31922 |  0:24:26s
epoch 47 | loss: 1.15414 | train_balanced_accuracy: 0.32256 | train_logloss: 1.15074 | train_f1_macro: 0.30735 | valid_balanced_accuracy: 0.33087 | valid_logloss: 1.15682 | valid_f1_macro: 0.31808 |  0:24:57s
epoch 48 | loss: 1.15503 | train_balanced_accuracy: 0.32354 | train_logloss: 1.14818 | train_f1_macro: 0.3065  | valid_balanced_accuracy: 0.33089 | valid_logloss: 1.14938 | valid_f1_macro: 0.31545 |  0:25:30s
epoch 49 | loss: 1.14005 | train_balanced_accuracy: 0.32907 | train_logloss: 1.12871 | train_f1_macro: 0.32266 | valid_balanced_accuracy: 0.33374 | valid_logloss: 1.13843 | valid_f1_macro: 0.3289  |  0:26:01s
epoch 50 | loss: 1.13934 | train_balanced_accuracy: 0.3344  | train_logloss: 1.2001  | train_f1_macro: 0.32809 | valid_balanced_accuracy: 0.34227 | valid_logloss: 1.18869 | valid_f1_macro: 0.33769 |  0:26:32s
epoch 51 | loss: 1.14321 | train_balanced_accuracy: 0.32271 | train_logloss: 1.14561 | train_f1_macro: 0.30869 | valid_balanced_accuracy: 0.3316  | valid_logloss: 1.14834 | valid_f1_macro: 0.32027 |  0:27:03s
epoch 52 | loss: 1.13828 | train_balanced_accuracy: 0.31343 | train_logloss: 1.15587 | train_f1_macro: 0.31447 | valid_balanced_accuracy: 0.32073 | valid_logloss: 1.1567  | valid_f1_macro: 0.32255 |  0:27:35s
epoch 53 | loss: 1.14035 | train_balanced_accuracy: 0.32498 | train_logloss: 1.13429 | train_f1_macro: 0.30952 | valid_balanced_accuracy: 0.32906 | valid_logloss: 1.13863 | valid_f1_macro: 0.3147  |  0:28:06s
epoch 54 | loss: 1.12609 | train_balanced_accuracy: 0.35654 | train_logloss: 1.12144 | train_f1_macro: 0.35176 | valid_balanced_accuracy: 0.3622  | valid_logloss: 1.11565 | valid_f1_macro: 0.3599  |  0:28:37s
epoch 55 | loss: 1.12114 | train_balanced_accuracy: 0.31779 | train_logloss: 1.11378 | train_f1_macro: 0.30027 | valid_balanced_accuracy: 0.32559 | valid_logloss: 1.11804 | valid_f1_macro: 0.30999 |  0:29:09s
epoch 56 | loss: 1.12011 | train_balanced_accuracy: 0.33055 | train_logloss: 1.11098 | train_f1_macro: 0.31458 | valid_balanced_accuracy: 0.33549 | valid_logloss: 1.10327 | valid_f1_macro: 0.32172 |  0:29:40s
epoch 57 | loss: 1.11498 | train_balanced_accuracy: 0.36442 | train_logloss: 1.12524 | train_f1_macro: 0.36071 | valid_balanced_accuracy: 0.3726  | valid_logloss: 1.12378 | valid_f1_macro: 0.3729  |  0:30:11s
epoch 58 | loss: 1.10943 | train_balanced_accuracy: 0.34502 | train_logloss: 1.14635 | train_f1_macro: 0.34095 | valid_balanced_accuracy: 0.34942 | valid_logloss: 1.14341 | valid_f1_macro: 0.34665 |  0:30:42s
epoch 59 | loss: 1.11013 | train_balanced_accuracy: 0.34133 | train_logloss: 1.0987  | train_f1_macro: 0.3324  | valid_balanced_accuracy: 0.34751 | valid_logloss: 1.09384 | valid_f1_macro: 0.34041 |  0:31:14s
epoch 60 | loss: 1.10851 | train_balanced_accuracy: 0.36757 | train_logloss: 1.31642 | train_f1_macro: 0.35409 | valid_balanced_accuracy: 0.3658  | valid_logloss: 1.30811 | valid_f1_macro: 0.35277 |  0:31:45s
epoch 61 | loss: 1.10366 | train_balanced_accuracy: 0.36821 | train_logloss: 1.10536 | train_f1_macro: 0.35526 | valid_balanced_accuracy: 0.37594 | valid_logloss: 1.10221 | valid_f1_macro: 0.36732 |  0:32:16s
epoch 62 | loss: 1.10748 | train_balanced_accuracy: 0.35391 | train_logloss: 1.10254 | train_f1_macro: 0.34329 | valid_balanced_accuracy: 0.358   | valid_logloss: 1.10173 | valid_f1_macro: 0.34897 |  0:32:47s
epoch 63 | loss: 1.10662 | train_balanced_accuracy: 0.34661 | train_logloss: 1.09407 | train_f1_macro: 0.3436  | valid_balanced_accuracy: 0.35334 | valid_logloss: 1.08673 | valid_f1_macro: 0.35244 |  0:33:18s
epoch 64 | loss: 1.11055 | train_balanced_accuracy: 0.33746 | train_logloss: 1.11844 | train_f1_macro: 0.33277 | valid_balanced_accuracy: 0.34274 | valid_logloss: 1.11691 | valid_f1_macro: 0.33985 |  0:33:49s
epoch 65 | loss: 1.12669 | train_balanced_accuracy: 0.32867 | train_logloss: 1.11634 | train_f1_macro: 0.31691 | valid_balanced_accuracy: 0.3367  | valid_logloss: 1.11138 | valid_f1_macro: 0.32692 |  0:34:21s
epoch 66 | loss: 1.12304 | train_balanced_accuracy: 0.33465 | train_logloss: 1.13174 | train_f1_macro: 0.33097 | valid_balanced_accuracy: 0.34417 | valid_logloss: 1.12269 | valid_f1_macro: 0.34245 |  0:34:51s
epoch 67 | loss: 1.12765 | train_balanced_accuracy: 0.32788 | train_logloss: 1.11587 | train_f1_macro: 0.30983 | valid_balanced_accuracy: 0.33661 | valid_logloss: 1.10387 | valid_f1_macro: 0.32191 |  0:35:23s
epoch 68 | loss: 1.12327 | train_balanced_accuracy: 0.3364  | train_logloss: 1.12492 | train_f1_macro: 0.32651 | valid_balanced_accuracy: 0.34518 | valid_logloss: 1.11829 | valid_f1_macro: 0.3384  |  0:35:55s
epoch 69 | loss: 1.12056 | train_balanced_accuracy: 0.36174 | train_logloss: 1.10944 | train_f1_macro: 0.35952 | valid_balanced_accuracy: 0.37493 | valid_logloss: 1.10309 | valid_f1_macro: 0.37746 |  0:36:26s
epoch 70 | loss: 1.11681 | train_balanced_accuracy: 0.34267 | train_logloss: 1.10512 | train_f1_macro: 0.335   | valid_balanced_accuracy: 0.35083 | valid_logloss: 1.10447 | valid_f1_macro: 0.34452 |  0:36:57s
epoch 71 | loss: 1.11611 | train_balanced_accuracy: 0.34535 | train_logloss: 1.11351 | train_f1_macro: 0.33731 | valid_balanced_accuracy: 0.35882 | valid_logloss: 1.10783 | valid_f1_macro: 0.35523 |  0:37:29s
epoch 72 | loss: 1.11525 | train_balanced_accuracy: 0.34879 | train_logloss: 1.12126 | train_f1_macro: 0.35081 | valid_balanced_accuracy: 0.35985 | valid_logloss: 1.11574 | valid_f1_macro: 0.36772 |  0:38:00s
epoch 73 | loss: 1.11246 | train_balanced_accuracy: 0.33831 | train_logloss: 1.10957 | train_f1_macro: 0.33573 | valid_balanced_accuracy: 0.34915 | valid_logloss: 1.10867 | valid_f1_macro: 0.35042 |  0:38:31s
epoch 74 | loss: 1.10849 | train_balanced_accuracy: 0.33142 | train_logloss: 1.09668 | train_f1_macro: 0.32207 | valid_balanced_accuracy: 0.34065 | valid_logloss: 1.09221 | valid_f1_macro: 0.33482 |  0:39:02s
epoch 75 | loss: 1.10461 | train_balanced_accuracy: 0.33754 | train_logloss: 1.09519 | train_f1_macro: 0.32903 | valid_balanced_accuracy: 0.3482  | valid_logloss: 1.08782 | valid_f1_macro: 0.34329 |  0:39:33s
epoch 76 | loss: 1.1002  | train_balanced_accuracy: 0.34791 | train_logloss: 1.09295 | train_f1_macro: 0.34679 | valid_balanced_accuracy: 0.35425 | valid_logloss: 1.09679 | valid_f1_macro: 0.35437 |  0:40:04s
epoch 77 | loss: 1.09781 | train_balanced_accuracy: 0.36256 | train_logloss: 1.08254 | train_f1_macro: 0.37133 | valid_balanced_accuracy: 0.37241 | valid_logloss: 1.08282 | valid_f1_macro: 0.3835  |  0:40:36s
epoch 78 | loss: 1.09756 | train_balanced_accuracy: 0.35965 | train_logloss: 1.09526 | train_f1_macro: 0.36467 | valid_balanced_accuracy: 0.37253 | valid_logloss: 1.08312 | valid_f1_macro: 0.38135 |  0:41:06s
epoch 79 | loss: 1.09635 | train_balanced_accuracy: 0.35887 | train_logloss: 1.08151 | train_f1_macro: 0.35599 | valid_balanced_accuracy: 0.36434 | valid_logloss: 1.07734 | valid_f1_macro: 0.36219 |  0:41:37s
epoch 80 | loss: 1.09325 | train_balanced_accuracy: 0.35363 | train_logloss: 1.0816  | train_f1_macro: 0.34822 | valid_balanced_accuracy: 0.35882 | valid_logloss: 1.08333 | valid_f1_macro: 0.35654 |  0:42:08s
epoch 81 | loss: 1.08773 | train_balanced_accuracy: 0.35179 | train_logloss: 1.08042 | train_f1_macro: 0.34956 | valid_balanced_accuracy: 0.35799 | valid_logloss: 1.07775 | valid_f1_macro: 0.3576  |  0:42:39s
epoch 82 | loss: 1.08516 | train_balanced_accuracy: 0.35408 | train_logloss: 1.07122 | train_f1_macro: 0.35222 | valid_balanced_accuracy: 0.36311 | valid_logloss: 1.06955 | valid_f1_macro: 0.36434 |  0:43:10s
epoch 83 | loss: 1.08454 | train_balanced_accuracy: 0.40558 | train_logloss: 2.0753  | train_f1_macro: 0.35535 | valid_balanced_accuracy: 0.41789 | valid_logloss: 2.12499 | valid_f1_macro: 0.36583 |  0:43:40s
epoch 84 | loss: 1.09517 | train_balanced_accuracy: 0.35577 | train_logloss: 1.09073 | train_f1_macro: 0.35737 | valid_balanced_accuracy: 0.36408 | valid_logloss: 1.08801 | valid_f1_macro: 0.36755 |  0:44:11s
epoch 85 | loss: 1.09386 | train_balanced_accuracy: 0.35211 | train_logloss: 1.13429 | train_f1_macro: 0.34306 | valid_balanced_accuracy: 0.36229 | valid_logloss: 1.11954 | valid_f1_macro: 0.35318 |  0:44:42s
epoch 86 | loss: 1.09077 | train_balanced_accuracy: 0.29263 | train_logloss: 1.18697 | train_f1_macro: 0.30385 | valid_balanced_accuracy: 0.29931 | valid_logloss: 1.19355 | valid_f1_macro: 0.31283 |  0:45:13s
epoch 87 | loss: 1.101   | train_balanced_accuracy: 0.33426 | train_logloss: 1.08771 | train_f1_macro: 0.3228  | valid_balanced_accuracy: 0.34358 | valid_logloss: 1.08076 | valid_f1_macro: 0.33581 |  0:45:45s
epoch 88 | loss: 1.09365 | train_balanced_accuracy: 0.34402 | train_logloss: 1.07715 | train_f1_macro: 0.34109 | valid_balanced_accuracy: 0.34764 | valid_logloss: 1.07561 | valid_f1_macro: 0.34429 |  0:46:16s
epoch 89 | loss: 1.08793 | train_balanced_accuracy: 0.35205 | train_logloss: 1.07585 | train_f1_macro: 0.35207 | valid_balanced_accuracy: 0.35688 | valid_logloss: 1.07408 | valid_f1_macro: 0.35792 |  0:46:47s
epoch 90 | loss: 1.08943 | train_balanced_accuracy: 0.36291 | train_logloss: 1.06921 | train_f1_macro: 0.36556 | valid_balanced_accuracy: 0.36767 | valid_logloss: 1.06966 | valid_f1_macro: 0.37072 |  0:47:18s
epoch 91 | loss: 1.08312 | train_balanced_accuracy: 0.35445 | train_logloss: 1.07021 | train_f1_macro: 0.3493  | valid_balanced_accuracy: 0.35062 | valid_logloss: 1.07456 | valid_f1_macro: 0.34257 |  0:47:50s
epoch 92 | loss: 1.07841 | train_balanced_accuracy: 0.37182 | train_logloss: 1.06158 | train_f1_macro: 0.37343 | valid_balanced_accuracy: 0.37554 | valid_logloss: 1.06834 | valid_f1_macro: 0.37593 |  0:48:20s
epoch 93 | loss: 1.07895 | train_balanced_accuracy: 0.35506 | train_logloss: 1.06561 | train_f1_macro: 0.3543  | valid_balanced_accuracy: 0.35778 | valid_logloss: 1.06997 | valid_f1_macro: 0.35663 |  0:48:51s
epoch 94 | loss: 1.07644 | train_balanced_accuracy: 0.35112 | train_logloss: 1.05787 | train_f1_macro: 0.35058 | valid_balanced_accuracy: 0.35606 | valid_logloss: 1.05844 | valid_f1_macro: 0.35651 |  0:49:22s
epoch 95 | loss: 1.07262 | train_balanced_accuracy: 0.35746 | train_logloss: 1.06204 | train_f1_macro: 0.35415 | valid_balanced_accuracy: 0.36026 | valid_logloss: 1.0658  | valid_f1_macro: 0.35874 |  0:49:53s
epoch 96 | loss: 1.08213 | train_balanced_accuracy: 0.34566 | train_logloss: 1.08904 | train_f1_macro: 0.3481  | valid_balanced_accuracy: 0.34746 | valid_logloss: 1.09117 | valid_f1_macro: 0.34912 |  0:50:24s
epoch 97 | loss: 1.0914  | train_balanced_accuracy: 0.34545 | train_logloss: 1.06942 | train_f1_macro: 0.34086 | valid_balanced_accuracy: 0.34986 | valid_logloss: 1.07385 | valid_f1_macro: 0.3464  |  0:50:55s

Early stopping occurred at epoch 97 with best_epoch = 77 and best_valid_f1_macro = 0.3835
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/callbacks.py:172: UserWarning: Best weights from best epoch are automatically used!
  warnings.warn(wrn_msg)
[CV 4/5; 7/7] END classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1;, score=0.221 total time=53.9min
[CV 5/5; 7/7] START classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: n_d changed from 8 to 64
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_dims changed from [] to [121, 12, 14, 4, 70, 30, 46, 62, 90, 100, 115, 79, 77, 143]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_emb_dim changed from 20 to [20, 6, 7, 2, 20, 15, 20, 20, 20, 20, 20, 20, 20, 20]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_idxs changed from [] to [0, 1, 2, 3, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21]
  warnings.warn(wrn_msg)
epoch 0  | loss: 6.76609 | train_balanced_accuracy: 0.16094 | train_logloss: 4.29504 | train_f1_macro: 0.10622 | valid_balanced_accuracy: 0.1624  | valid_logloss: 4.34253 | valid_f1_macro: 0.10745 |  0:00:31s
epoch 1  | loss: 3.75323 | train_balanced_accuracy: 0.22917 | train_logloss: 2.32692 | train_f1_macro: 0.18986 | valid_balanced_accuracy: 0.2245  | valid_logloss: 2.34911 | valid_f1_macro: 0.18607 |  0:01:27s
epoch 2  | loss: 3.82514 | train_balanced_accuracy: 0.16713 | train_logloss: 2.89588 | train_f1_macro: 0.14058 | valid_balanced_accuracy: 0.16522 | valid_logloss: 2.8845  | valid_f1_macro: 0.14061 |  0:02:05s
epoch 3  | loss: 3.18243 | train_balanced_accuracy: 0.19341 | train_logloss: 2.02382 | train_f1_macro: 0.14428 | valid_balanced_accuracy: 0.19574 | valid_logloss: 2.01825 | valid_f1_macro: 0.14812 |  0:02:37s
epoch 4  | loss: 2.11841 | train_balanced_accuracy: 0.19967 | train_logloss: 1.85007 | train_f1_macro: 0.16357 | valid_balanced_accuracy: 0.19658 | valid_logloss: 1.84069 | valid_f1_macro: 0.15842 |  0:03:09s
epoch 5  | loss: 1.65636 | train_balanced_accuracy: 0.21443 | train_logloss: 1.53141 | train_f1_macro: 0.19987 | valid_balanced_accuracy: 0.21771 | valid_logloss: 1.53511 | valid_f1_macro: 0.20457 |  0:03:41s
epoch 6  | loss: 1.4227  | train_balanced_accuracy: 0.22017 | train_logloss: 1.45263 | train_f1_macro: 0.18141 | valid_balanced_accuracy: 0.21886 | valid_logloss: 1.45232 | valid_f1_macro: 0.18015 |  0:04:14s
epoch 7  | loss: 1.3863  | train_balanced_accuracy: 0.23218 | train_logloss: 1.50189 | train_f1_macro: 0.19367 | valid_balanced_accuracy: 0.23082 | valid_logloss: 1.48546 | valid_f1_macro: 0.19315 |  0:04:46s
epoch 8  | loss: 1.35697 | train_balanced_accuracy: 0.25778 | train_logloss: 1.52333 | train_f1_macro: 0.22981 | valid_balanced_accuracy: 0.26134 | valid_logloss: 1.49162 | valid_f1_macro: 0.23461 |  0:05:18s
epoch 9  | loss: 1.31377 | train_balanced_accuracy: 0.25889 | train_logloss: 1.35387 | train_f1_macro: 0.20938 | valid_balanced_accuracy: 0.2581  | valid_logloss: 1.35974 | valid_f1_macro: 0.20927 |  0:05:50s
epoch 10 | loss: 1.32718 | train_balanced_accuracy: 0.22597 | train_logloss: 1.39826 | train_f1_macro: 0.19032 | valid_balanced_accuracy: 0.22594 | valid_logloss: 1.39329 | valid_f1_macro: 0.19154 |  0:06:22s
epoch 11 | loss: 1.32029 | train_balanced_accuracy: 0.26679 | train_logloss: 1.35087 | train_f1_macro: 0.21599 | valid_balanced_accuracy: 0.2643  | valid_logloss: 1.35497 | valid_f1_macro: 0.21546 |  0:06:53s
epoch 12 | loss: 1.29605 | train_balanced_accuracy: 0.25457 | train_logloss: 1.32909 | train_f1_macro: 0.20084 | valid_balanced_accuracy: 0.25446 | valid_logloss: 1.32754 | valid_f1_macro: 0.20037 |  0:07:25s
epoch 13 | loss: 1.32519 | train_balanced_accuracy: 0.2769  | train_logloss: 1.32319 | train_f1_macro: 0.22923 | valid_balanced_accuracy: 0.27589 | valid_logloss: 1.32097 | valid_f1_macro: 0.22856 |  0:07:57s
epoch 14 | loss: 1.29894 | train_balanced_accuracy: 0.26753 | train_logloss: 1.30299 | train_f1_macro: 0.20514 | valid_balanced_accuracy: 0.2652  | valid_logloss: 1.30342 | valid_f1_macro: 0.2036  |  0:08:29s
epoch 15 | loss: 1.27271 | train_balanced_accuracy: 0.28931 | train_logloss: 1.30737 | train_f1_macro: 0.24272 | valid_balanced_accuracy: 0.29231 | valid_logloss: 1.30334 | valid_f1_macro: 0.24645 |  0:09:02s
epoch 16 | loss: 1.24979 | train_balanced_accuracy: 0.29781 | train_logloss: 1.26434 | train_f1_macro: 0.25628 | valid_balanced_accuracy: 0.29609 | valid_logloss: 1.27473 | valid_f1_macro: 0.25582 |  0:09:35s
epoch 17 | loss: 1.27297 | train_balanced_accuracy: 0.28393 | train_logloss: 1.30563 | train_f1_macro: 0.24256 | valid_balanced_accuracy: 0.28376 | valid_logloss: 1.30934 | valid_f1_macro: 0.24253 |  0:10:15s
epoch 18 | loss: 1.26464 | train_balanced_accuracy: 0.27335 | train_logloss: 1.27054 | train_f1_macro: 0.22605 | valid_balanced_accuracy: 0.27029 | valid_logloss: 1.27664 | valid_f1_macro: 0.22269 |  0:10:52s
epoch 19 | loss: 1.25146 | train_balanced_accuracy: 0.28531 | train_logloss: 1.43279 | train_f1_macro: 0.24664 | valid_balanced_accuracy: 0.28594 | valid_logloss: 1.43423 | valid_f1_macro: 0.24606 |  0:11:24s
epoch 20 | loss: 1.26381 | train_balanced_accuracy: 0.30329 | train_logloss: 1.28163 | train_f1_macro: 0.2704  | valid_balanced_accuracy: 0.29781 | valid_logloss: 1.28694 | valid_f1_macro: 0.26118 |  0:11:58s
epoch 21 | loss: 1.25344 | train_balanced_accuracy: 0.28951 | train_logloss: 1.24536 | train_f1_macro: 0.24653 | valid_balanced_accuracy: 0.28665 | valid_logloss: 1.25206 | valid_f1_macro: 0.24065 |  0:12:31s
epoch 22 | loss: 1.2527  | train_balanced_accuracy: 0.28963 | train_logloss: 1.24222 | train_f1_macro: 0.24489 | valid_balanced_accuracy: 0.29055 | valid_logloss: 1.2392  | valid_f1_macro: 0.24723 |  0:13:04s
epoch 23 | loss: 1.24969 | train_balanced_accuracy: 0.30261 | train_logloss: 1.2424  | train_f1_macro: 0.2693  | valid_balanced_accuracy: 0.30548 | valid_logloss: 1.24553 | valid_f1_macro: 0.27203 |  0:13:39s
epoch 24 | loss: 1.24073 | train_balanced_accuracy: 0.28655 | train_logloss: 1.22939 | train_f1_macro: 0.23263 | valid_balanced_accuracy: 0.28463 | valid_logloss: 1.22819 | valid_f1_macro: 0.23067 |  0:14:10s
epoch 25 | loss: 1.23811 | train_balanced_accuracy: 0.28145 | train_logloss: 1.23732 | train_f1_macro: 0.22336 | valid_balanced_accuracy: 0.28102 | valid_logloss: 1.24134 | valid_f1_macro: 0.22417 |  0:14:42s
epoch 26 | loss: 1.23725 | train_balanced_accuracy: 0.28282 | train_logloss: 1.24294 | train_f1_macro: 0.2256  | valid_balanced_accuracy: 0.28303 | valid_logloss: 1.24172 | valid_f1_macro: 0.22707 |  0:15:22s
epoch 27 | loss: 1.23369 | train_balanced_accuracy: 0.29198 | train_logloss: 1.23069 | train_f1_macro: 0.24519 | valid_balanced_accuracy: 0.29192 | valid_logloss: 1.23405 | valid_f1_macro: 0.24562 |  0:16:10s
epoch 28 | loss: 1.23293 | train_balanced_accuracy: 0.29238 | train_logloss: 1.23472 | train_f1_macro: 0.24503 | valid_balanced_accuracy: 0.29168 | valid_logloss: 1.23673 | valid_f1_macro: 0.2458  |  0:16:57s
epoch 29 | loss: 1.25018 | train_balanced_accuracy: 0.28809 | train_logloss: 1.26281 | train_f1_macro: 0.24672 | valid_balanced_accuracy: 0.28687 | valid_logloss: 1.26781 | valid_f1_macro: 0.24294 |  0:17:42s
epoch 30 | loss: 1.24827 | train_balanced_accuracy: 0.29181 | train_logloss: 1.22927 | train_f1_macro: 0.24931 | valid_balanced_accuracy: 0.28904 | valid_logloss: 1.23141 | valid_f1_macro: 0.24481 |  0:18:22s
epoch 31 | loss: 1.22516 | train_balanced_accuracy: 0.31514 | train_logloss: 1.22108 | train_f1_macro: 0.2785  | valid_balanced_accuracy: 0.31093 | valid_logloss: 1.22714 | valid_f1_macro: 0.27221 |  0:19:03s
epoch 32 | loss: 1.22308 | train_balanced_accuracy: 0.30773 | train_logloss: 1.22221 | train_f1_macro: 0.27441 | valid_balanced_accuracy: 0.30494 | valid_logloss: 1.22547 | valid_f1_macro: 0.27089 |  0:19:38s
epoch 33 | loss: 1.22225 | train_balanced_accuracy: 0.30706 | train_logloss: 1.21583 | train_f1_macro: 0.27305 | valid_balanced_accuracy: 0.30271 | valid_logloss: 1.22179 | valid_f1_macro: 0.26644 |  0:20:13s
epoch 34 | loss: 1.21577 | train_balanced_accuracy: 0.29285 | train_logloss: 1.22473 | train_f1_macro: 0.24494 | valid_balanced_accuracy: 0.2908  | valid_logloss: 1.23095 | valid_f1_macro: 0.24127 |  0:20:49s
epoch 35 | loss: 1.21463 | train_balanced_accuracy: 0.29086 | train_logloss: 1.21997 | train_f1_macro: 0.24321 | valid_balanced_accuracy: 0.28949 | valid_logloss: 1.22956 | valid_f1_macro: 0.24114 |  0:21:30s
epoch 36 | loss: 1.21986 | train_balanced_accuracy: 0.28136 | train_logloss: 1.22864 | train_f1_macro: 0.223   | valid_balanced_accuracy: 0.28122 | valid_logloss: 1.23848 | valid_f1_macro: 0.22425 |  0:22:14s
epoch 37 | loss: 1.21595 | train_balanced_accuracy: 0.29238 | train_logloss: 1.21455 | train_f1_macro: 0.24489 | valid_balanced_accuracy: 0.29157 | valid_logloss: 1.22756 | valid_f1_macro: 0.24419 |  0:22:52s
epoch 38 | loss: 1.21407 | train_balanced_accuracy: 0.29361 | train_logloss: 1.21352 | train_f1_macro: 0.24258 | valid_balanced_accuracy: 0.29275 | valid_logloss: 1.21878 | valid_f1_macro: 0.24129 |  0:23:29s
epoch 39 | loss: 1.21424 | train_balanced_accuracy: 0.2971  | train_logloss: 1.20995 | train_f1_macro: 0.25074 | valid_balanced_accuracy: 0.29431 | valid_logloss: 1.22106 | valid_f1_macro: 0.24582 |  0:24:06s
epoch 40 | loss: 1.21051 | train_balanced_accuracy: 0.30042 | train_logloss: 1.20735 | train_f1_macro: 0.25586 | valid_balanced_accuracy: 0.29897 | valid_logloss: 1.21589 | valid_f1_macro: 0.25324 |  0:24:42s
epoch 41 | loss: 1.21148 | train_balanced_accuracy: 0.29266 | train_logloss: 1.21328 | train_f1_macro: 0.24361 | valid_balanced_accuracy: 0.29091 | valid_logloss: 1.22434 | valid_f1_macro: 0.24154 |  0:25:21s
epoch 42 | loss: 1.21436 | train_balanced_accuracy: 0.29598 | train_logloss: 1.21464 | train_f1_macro: 0.24881 | valid_balanced_accuracy: 0.29405 | valid_logloss: 1.22345 | valid_f1_macro: 0.24472 |  0:25:58s
epoch 43 | loss: 1.2098  | train_balanced_accuracy: 0.31587 | train_logloss: 1.21584 | train_f1_macro: 0.2744  | valid_balanced_accuracy: 0.31326 | valid_logloss: 1.23014 | valid_f1_macro: 0.27114 |  0:26:33s
epoch 44 | loss: 1.21093 | train_balanced_accuracy: 0.32012 | train_logloss: 1.21037 | train_f1_macro: 0.28729 | valid_balanced_accuracy: 0.31478 | valid_logloss: 1.22401 | valid_f1_macro: 0.27911 |  0:27:04s
epoch 45 | loss: 1.20571 | train_balanced_accuracy: 0.30457 | train_logloss: 1.20865 | train_f1_macro: 0.26952 | valid_balanced_accuracy: 0.30354 | valid_logloss: 1.21809 | valid_f1_macro: 0.26723 |  0:27:36s
epoch 46 | loss: 1.20992 | train_balanced_accuracy: 0.30226 | train_logloss: 1.20948 | train_f1_macro: 0.26402 | valid_balanced_accuracy: 0.30019 | valid_logloss: 1.21929 | valid_f1_macro: 0.26129 |  0:28:07s
epoch 47 | loss: 1.21048 | train_balanced_accuracy: 0.31661 | train_logloss: 1.21484 | train_f1_macro: 0.28273 | valid_balanced_accuracy: 0.31021 | valid_logloss: 1.22649 | valid_f1_macro: 0.27354 |  0:28:38s
epoch 48 | loss: 1.20871 | train_balanced_accuracy: 0.31691 | train_logloss: 1.20537 | train_f1_macro: 0.28335 | valid_balanced_accuracy: 0.31087 | valid_logloss: 1.2135  | valid_f1_macro: 0.27409 |  0:29:10s
epoch 49 | loss: 1.21009 | train_balanced_accuracy: 0.30515 | train_logloss: 1.20962 | train_f1_macro: 0.27055 | valid_balanced_accuracy: 0.30144 | valid_logloss: 1.21633 | valid_f1_macro: 0.26427 |  0:29:49s
epoch 50 | loss: 1.21426 | train_balanced_accuracy: 0.29135 | train_logloss: 1.22606 | train_f1_macro: 0.24499 | valid_balanced_accuracy: 0.29017 | valid_logloss: 1.23236 | valid_f1_macro: 0.24282 |  0:30:31s
epoch 51 | loss: 1.2119  | train_balanced_accuracy: 0.28758 | train_logloss: 1.21451 | train_f1_macro: 0.242   | valid_balanced_accuracy: 0.28776 | valid_logloss: 1.21914 | valid_f1_macro: 0.24182 |  0:31:13s
epoch 52 | loss: 1.21244 | train_balanced_accuracy: 0.29848 | train_logloss: 1.20995 | train_f1_macro: 0.25939 | valid_balanced_accuracy: 0.29856 | valid_logloss: 1.21619 | valid_f1_macro: 0.25936 |  0:31:59s
epoch 53 | loss: 1.21008 | train_balanced_accuracy: 0.31573 | train_logloss: 1.20927 | train_f1_macro: 0.2808  | valid_balanced_accuracy: 0.31368 | valid_logloss: 1.21435 | valid_f1_macro: 0.27841 |  0:32:35s
epoch 54 | loss: 1.21036 | train_balanced_accuracy: 0.2955  | train_logloss: 1.21034 | train_f1_macro: 0.24895 | valid_balanced_accuracy: 0.29379 | valid_logloss: 1.21305 | valid_f1_macro: 0.24722 |  0:33:10s
epoch 55 | loss: 1.21033 | train_balanced_accuracy: 0.30279 | train_logloss: 1.20764 | train_f1_macro: 0.26248 | valid_balanced_accuracy: 0.2996  | valid_logloss: 1.21361 | valid_f1_macro: 0.25881 |  0:34:03s
epoch 56 | loss: 1.20898 | train_balanced_accuracy: 0.28958 | train_logloss: 1.21289 | train_f1_macro: 0.24647 | valid_balanced_accuracy: 0.28888 | valid_logloss: 1.21624 | valid_f1_macro: 0.24526 |  0:34:40s
epoch 57 | loss: 1.20863 | train_balanced_accuracy: 0.30796 | train_logloss: 1.2019  | train_f1_macro: 0.26789 | valid_balanced_accuracy: 0.30278 | valid_logloss: 1.20598 | valid_f1_macro: 0.26099 |  0:35:19s
epoch 58 | loss: 1.20671 | train_balanced_accuracy: 0.31043 | train_logloss: 1.2011  | train_f1_macro: 0.2778  | valid_balanced_accuracy: 0.30553 | valid_logloss: 1.20602 | valid_f1_macro: 0.27129 |  0:35:52s
epoch 59 | loss: 1.20829 | train_balanced_accuracy: 0.30644 | train_logloss: 1.213   | train_f1_macro: 0.26966 | valid_balanced_accuracy: 0.30251 | valid_logloss: 1.21844 | valid_f1_macro: 0.26363 |  0:36:25s
epoch 60 | loss: 1.20921 | train_balanced_accuracy: 0.31139 | train_logloss: 1.20757 | train_f1_macro: 0.27966 | valid_balanced_accuracy: 0.30514 | valid_logloss: 1.21271 | valid_f1_macro: 0.2705  |  0:36:56s
epoch 61 | loss: 1.2156  | train_balanced_accuracy: 0.30881 | train_logloss: 1.25528 | train_f1_macro: 0.27287 | valid_balanced_accuracy: 0.30533 | valid_logloss: 1.25841 | valid_f1_macro: 0.26617 |  0:37:27s
epoch 62 | loss: 1.23461 | train_balanced_accuracy: 0.29165 | train_logloss: 1.22828 | train_f1_macro: 0.24819 | valid_balanced_accuracy: 0.29133 | valid_logloss: 1.22947 | valid_f1_macro: 0.24808 |  0:37:59s
epoch 63 | loss: 1.22876 | train_balanced_accuracy: 0.2883  | train_logloss: 1.23052 | train_f1_macro: 0.23689 | valid_balanced_accuracy: 0.28734 | valid_logloss: 1.2306  | valid_f1_macro: 0.23534 |  0:38:31s
epoch 64 | loss: 1.23005 | train_balanced_accuracy: 0.28329 | train_logloss: 1.22952 | train_f1_macro: 0.23015 | valid_balanced_accuracy: 0.28066 | valid_logloss: 1.23274 | valid_f1_macro: 0.22664 |  0:39:02s

Early stopping occurred at epoch 64 with best_epoch = 44 and best_valid_f1_macro = 0.27911
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/callbacks.py:172: UserWarning: Best weights from best epoch are automatically used!
  warnings.warn(wrn_msg)
[CV 5/5; 7/7] END classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1;, score=0.167 total time=42.0min
--------------------- RESULTS GS1 ---------------------

CSV gerado com sucesso em: ./runs/results/GS1-cv_results-16-04-2023_15:50:05.csv.
Function generate_new_csv Took 0:00:00.009583

Cross validation results:
   mean_fit_time  std_fit_time  mean_score_time  std_score_time  ... split4_test_score mean_test_score std_test_score rank_test_score
1     165.571011      2.916246         0.019312        0.001193  ...          0.276134        0.271575       0.002618               1
4     257.186141      1.849118         1.032152        0.014494  ...          0.273012        0.271173       0.003290               2
5     186.782146      3.288981         0.571917        0.009296  ...          0.254474        0.250359       0.002508               3
0     170.652728      5.549780         0.031049        0.004726  ...          0.230157        0.233877       0.002017               4
3     242.852367     25.462667         0.057710        0.007515  ...          0.231923        0.231094       0.007898               5
6    4967.653971   3105.686563         4.700963        0.125931  ...          0.167457        0.225660       0.037667               6
2     166.318468      3.459425         0.023885        0.002508  ...          0.132854        0.131095       0.002352               7

[7 rows x 59 columns]
Object saved in file: ./runs/best_estimators/GS1-best_pipe-16-04-2023_15:50:05.joblib
Object saved in file: ./runs/best_estimators/best_estimator-DecisionTreeClassifier-16-04-2023_15:50:05.joblib
Best estimator: DecisionTreeClassifier(min_samples_leaf=10, min_samples_split=100,
                       random_state=42)
Object saved in file: ./runs/encoders_scalers/GS1-column_transformer-16-04-2023_15:50:05.joblib
Internal CV score obtained by the best set of parameters: 0.27157506641307383
Best params: {'classifier__estimator': DecisionTreeClassifier(min_samples_leaf=10, min_samples_split=100,
                       random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'gini', 'classifier__estimator__max_depth': None, 'classifier__estimator__min_samples_leaf': 10, 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'}
Scorer function: make_scorer(f1_score, pos_label=None, average=macro)
The number of CV splits: 5
Seconds used for refitting the best model on the whole dataset: 278.7477536201477
Whether the scorers compute several metrics: False
The number of features when fit is performed: 21
Names of features seen during fit: ['Tipificacao' 'Peso' 'QuestionarioClassificacaoEstabel' 'ILP' 'IFP'
 'ILPF' 'QuestionarioPossuiOutrosIncentiv' 'QuestionarioFabricaRacao'
 'regua de manejo' 'identificacao individual' 'rastreamento SISBOV'
 'participa de aliancas mercadolog' 'QuestionarioPraticaRecuperacaoPa'
 'Confinamento' 'Suplementacao_a_campo' 'SemiConfinamento' 'tot3m_Chuva'
 'med3m_formITUinst' 'med3m_NDVI' 'med3m_preR_milho' 'med3m_preR_boi']

!!!>> When you observe high training accuracy, but low test accuracy, it is likely that you encountered overfitting problem.
Training set score: 0.33148667388191794
Test set score: 0.2788223291149763

CSV gerado com sucesso em: ./runs/results/GS1-grid_search_results-16-04-2023_15:50:05.csv.
Function generate_new_csv Took 0:00:00.003907

*****INICIO CONFUSION MATRIX DISPLAY******
Figure confusion_matrix_display-16-04-2023_15:50:06.png saved in ./plots/ directory.
*****FIM CONFUSION MATRIX DISPLAY******

Function confusion_matrix_display Took 0:00:00.819173


--- Test data performance ---
Test Acurácia: 0.3774456293559493
Test Acurácia Balanceada: 0.3052726744710545
Test Revocação Ponderada: 0.3774456293559493
Test Micro Revocação: 0.3774456293559493
Test Macro Revocação: 0.3052726744710545
Test Precisão Ponderada: 0.43234649270399284
Test Micro Precisão: 0.3774456293559493
Test Macro Precisão: 0.38181769046325287
Test F1 Ponderado: 0.3319887416645485
Test Micro F1: 0.3774456293559492
Test Macro F1: 0.2788223291149763
Test Coeficiente Kappa: 0.14787422267322348
Test Coeficiente de Correlação de Matthews: 0.16759287171798767
Test Log Loss: 7.382844744025753
Test ROC AUC Score Ponderado: 0.6489554909416106

CSV gerado com sucesso em: ./runs/results/GS1-performance_results-16-04-2023_15:50:06.csv.
Function generate_new_csv Took 0:00:00.001295

              precision    recall  f1-score   support

           0       0.40      0.75      0.52      4142
           1       0.55      0.17      0.26      2452
           2       0.35      0.09      0.14      1886
           3       0.21      0.24      0.22       935
           4       0.17      0.39      0.24       494
           5       0.62      0.19      0.30      2000

    accuracy                           0.38     11909
   macro avg       0.38      0.31      0.28     11909
weighted avg       0.43      0.38      0.33     11909


CSV gerado com sucesso em: ./runs/results/GS1-classification_report-16-04-2023_15:50:06.csv.
Function generate_new_csv Took 0:00:00.001038

Function run_grid_search Took 8:38:23.206692

