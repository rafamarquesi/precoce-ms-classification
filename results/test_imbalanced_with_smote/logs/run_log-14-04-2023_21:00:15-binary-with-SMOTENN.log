
*****INICIO LOAD DATA******

*****INICIO PRINT INFOS******
Número total de linhas do DataFrame: 63072
Número de colunas: 112
Informações do DataFrame:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 63072 entries, 0 to 63071
Data columns (total 112 columns):
 #    Column                            Dtype         
---   ------                            -----         
 0    ID_ANIMAL                         uint32        
 1    EstabelecimentoMunicipio          category      
 2    DataAbate                         datetime64[ns]
 3    Frigorifico_ID                    uint8         
 4    Frigorifico_CNPJ                  uint64        
 5    Frigorifico_RazaoSocial           category      
 6    Municipio_Frigorifico             category      
 7    Tipificacao                       category      
 8    Maturidade                        category      
 9    Acabamento                        category      
 10   Peso                              float32       
 11   EstabelecimentoIdentificador      uint16        
 12   Data_homol                        datetime64[ns]
 13   Questionario_ID                   uint16        
 14   QuestionarioClassificacaoEstabel  uint8         
 15   FERTIIRRIGACAO                    uint8         
 16   ILP                               uint8         
 17   IFP                               uint8         
 18   ILPF                              uint8         
 19   CONCEN_VOLUM                      UInt8         
 20   CREEPFEEDING                      UInt8         
 21   FORN_ESTRAT_SILAGEM               UInt8         
 22   PROTEICO                          UInt8         
 23   PROTEICO_ENERGETICO               UInt8         
 24   RACAO_BAL_CONS_INFERIOR           UInt8         
 25   SAL_MINERAL                       UInt8         
 26   SALMINERAL_UREIA                  UInt8         
 27   RACAOO_BAL_CONSUMO_IG             UInt8         
 28   GRAO_INTEIRO                      UInt8         
 29   ALTO_CONCENTR_VOLUM               UInt8         
 30   ALTO_CONCENTRADO                  UInt8         
 31   QuestionarioPossuiOutrosIncentiv  uint8         
 32   QuestionarioFabricaRacao          uint8         
 33   area so confinamento              UInt8         
 34   regua de manejo                   UInt8         
 35   boa cobertura vegetal, com baixa  UInt8         
 36   erosaoo laminar ou em sulco igua  UInt8         
 37   identificacao individual          UInt8         
 38   rastreamento SISBOV               UInt8         
 39   Lista Trace                       UInt8         
 40   BPA                               UInt8         
 41   participa de aliancas mercadolog  UInt8         
 42   QuestionarioPraticaRecuperacaoPa  uint8         
 43   Confinamento                      UInt8         
 44   Suplementacao_a_campo             UInt8         
 45   SemiConfinamento                  UInt8         
 46   dif_datas                         uint16        
 47   DataAbate_6m_ANT                  datetime64[ns]
 48   data_homol_select                 datetime64[ns]
 49   data12m                           datetime64[ns]
 50   data6m                            datetime64[ns]
 51   data3m                            datetime64[ns]
 52   data1m                            datetime64[ns]
 53   data7d                            datetime64[ns]
 54   tot7d_Chuva                       float32       
 55   med7d_TempInst                    float32       
 56   med7d_TempMin                     float32       
 57   med7d_UmidInst                    float32       
 58   med7d_formITUinst                 float32       
 59   med7d_formITUmax                  float32       
 60   med7d_NDVI                        float32       
 61   med7d_EVI                         float32       
 62   med7d_preR_soja                   float32       
 63   med7d_preR_milho                  float32       
 64   med7d_preR_boi                    float32       
 65   tot1m_Chuva                       float32       
 66   med1m_TempInst                    float32       
 67   med1m_UmidInst                    float32       
 68   med1m_formITUinst                 float32       
 69   med1m_NDVI                        float32       
 70   med1m_EVI                         float32       
 71   med1m_preR_soja                   float32       
 72   med1m_preR_milho                  float32       
 73   med1m_preR_boi                    float32       
 74   tot3m_Chuva                       float32       
 75   med3m_TempInst                    float32       
 76   med3m_UmidInst                    float32       
 77   med3m_formITUinst                 float32       
 78   med3m_formITUmax                  float32       
 79   med3m_NDVI                        float32       
 80   med3m_EVI                         float32       
 81   med3m_preR_soja                   float32       
 82   med3m_preR_milho                  float32       
 83   med3m_preR_boi                    float32       
 84   tot6m_Chuva                       float32       
 85   med6m_TempInst                    float32       
 86   med6m_UmidInst                    float32       
 87   med6m_formITUinst                 float32       
 88   med6m_NDVI                        float32       
 89   med6m_EVI                         float32       
 90   med6m_preR_soja                   float32       
 91   med6m_preR_milho                  float32       
 92   med6m_preR_boi                    float32       
 93   tot12m_Chuva                      float32       
 94   med12m_TempInst                   float32       
 95   med12m_TempMin                    float32       
 96   med12m_UmidInst                   float32       
 97   med12m_formITUinst                float32       
 98   med12m_NDVI                       float32       
 99   med12m_EVI                        float32       
 100  med12m_preR_soja                  float32       
 101  med12m_preR_milho                 float32       
 102  med12m_preR_boi                   float32       
 103  cnt7d_CL_ITUinst                  float32       
 104  cnt1m_CL_ITUinst                  float32       
 105  cnt3m_CL_ITUinst                  float32       
 106  cnt6m_CL_ITUinst                  float32       
 107  cnt12m_CL_ITUinst                 float32       
 108  ANO                               uint16        
 109  CATEGORIA                         category      
 110  classificacao                     category      
 111  Motivo                            category      
dtypes: UInt8(24), category(9), datetime64[ns](9), float32(55), uint16(4), uint32(1), uint64(1), uint8(9)
memory usage: 22.7 MB
*****FIM PRINT INFOS*********
Function informations Took 0:00:00.017392

*****INICIO DELETE COLUNAS******
Coluna EstabelecimentoMunicipio excluída.
Coluna Frigorifico_ID excluída.
Coluna Frigorifico_CNPJ excluída.
Coluna Frigorifico_RazaoSocial excluída.
Coluna Municipio_Frigorifico excluída.
Coluna Maturidade excluída.
Coluna Acabamento excluída.
Coluna EstabelecimentoIdentificador excluída.
Coluna Questionario_ID excluída.
Coluna FERTIIRRIGACAO excluída.
Coluna CONCEN_VOLUM excluída.
Coluna CREEPFEEDING excluída.
Coluna FORN_ESTRAT_SILAGEM excluída.
Coluna PROTEICO excluída.
Coluna PROTEICO_ENERGETICO excluída.
Coluna RACAO_BAL_CONS_INFERIOR excluída.
Coluna SAL_MINERAL excluída.
Coluna SALMINERAL_UREIA excluída.
Coluna RACAOO_BAL_CONSUMO_IG excluída.
Coluna GRAO_INTEIRO excluída.
Coluna ALTO_CONCENTR_VOLUM excluída.
Coluna ALTO_CONCENTRADO excluída.
Coluna area so confinamento excluída.
Coluna boa cobertura vegetal, com baixa excluída.
Coluna erosaoo laminar ou em sulco igua excluída.
Coluna Lista Trace excluída.
Coluna BPA excluída.
Coluna dif_datas excluída.
Coluna tot7d_Chuva excluída.
Coluna med7d_TempInst excluída.
Coluna med7d_TempMin excluída.
Coluna med7d_UmidInst excluída.
Coluna med7d_formITUinst excluída.
Coluna med7d_formITUmax excluída.
Coluna med7d_NDVI excluída.
Coluna med7d_EVI excluída.
Coluna med7d_preR_soja excluída.
Coluna med7d_preR_milho excluída.
Coluna med7d_preR_boi excluída.
Coluna tot1m_Chuva excluída.
Coluna med1m_TempInst excluída.
Coluna med1m_UmidInst excluída.
Coluna med1m_formITUinst excluída.
Coluna med1m_NDVI excluída.
Coluna med1m_EVI excluída.
Coluna med1m_preR_soja excluída.
Coluna med1m_preR_milho excluída.
Coluna med1m_preR_boi excluída.
Coluna med3m_TempInst excluída.
Coluna med3m_UmidInst excluída.
Coluna med3m_formITUmax excluída.
Coluna med3m_EVI excluída.
Coluna med3m_preR_soja excluída.
Coluna tot6m_Chuva excluída.
Coluna med6m_TempInst excluída.
Coluna med6m_UmidInst excluída.
Coluna med6m_formITUinst excluída.
Coluna med6m_NDVI excluída.
Coluna med6m_EVI excluída.
Coluna med6m_preR_soja excluída.
Coluna med6m_preR_milho excluída.
Coluna med6m_preR_boi excluída.
Coluna tot12m_Chuva excluída.
Coluna med12m_TempInst excluída.
Coluna med12m_TempMin excluída.
Coluna med12m_UmidInst excluída.
Coluna med12m_formITUinst excluída.
Coluna med12m_NDVI excluída.
Coluna med12m_EVI excluída.
Coluna med12m_preR_soja excluída.
Coluna med12m_preR_milho excluída.
Coluna med12m_preR_boi excluída.
Coluna cnt7d_CL_ITUinst excluída.
Coluna cnt1m_CL_ITUinst excluída.
Coluna cnt3m_CL_ITUinst excluída.
Coluna cnt6m_CL_ITUinst excluída.
Coluna cnt12m_CL_ITUinst excluída.
Coluna ANO excluída.
Coluna Motivo excluída.
Coluna DataAbate excluída.
Coluna Data_homol excluída.
Coluna DataAbate_6m_ANT excluída.
Coluna data_homol_select excluída.
Coluna data12m excluída.
Coluna data6m excluída.
Coluna data3m excluída.
Coluna data1m excluída.
Coluna data7d excluída.
Coluna CATEGORIA excluída.
*****FIM DELETE COLUNAS*********

*****INICIO PRINT INFOS******
Número total de linhas do DataFrame: 63072
Número de colunas: 23
Informações do DataFrame:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 63072 entries, 0 to 63071
Data columns (total 23 columns):
 #   Column                            Non-Null Count  Dtype   
---  ------                            --------------  -----   
 0   ID_ANIMAL                         63072 non-null  uint32  
 1   Tipificacao                       63072 non-null  category
 2   Peso                              63072 non-null  float32 
 3   QuestionarioClassificacaoEstabel  63072 non-null  uint8   
 4   ILP                               63072 non-null  uint8   
 5   IFP                               63072 non-null  uint8   
 6   ILPF                              63072 non-null  uint8   
 7   QuestionarioPossuiOutrosIncentiv  63072 non-null  uint8   
 8   QuestionarioFabricaRacao          63072 non-null  uint8   
 9   regua de manejo                   63062 non-null  UInt8   
 10  identificacao individual          63062 non-null  UInt8   
 11  rastreamento SISBOV               63050 non-null  UInt8   
 12  participa de aliancas mercadolog  63062 non-null  UInt8   
 13  QuestionarioPraticaRecuperacaoPa  63072 non-null  uint8   
 14  Confinamento                      63062 non-null  UInt8   
 15  Suplementacao_a_campo             63062 non-null  UInt8   
 16  SemiConfinamento                  63062 non-null  UInt8   
 17  tot3m_Chuva                       61719 non-null  float32 
 18  med3m_formITUinst                 63063 non-null  float32 
 19  med3m_NDVI                        60906 non-null  float32 
 20  med3m_preR_milho                  63063 non-null  float32 
 21  med3m_preR_boi                    63063 non-null  float32 
 22  classificacao                     63072 non-null  category
dtypes: UInt8(7), category(2), float32(6), uint32(1), uint8(7)
memory usage: 3.1 MB
*****FIM PRINT INFOS*********
Function informations Took 0:00:00.010022

*****FIM LOAD DATA******
Function load_data Took 0:00:39.372958

*****INICIO SHOW SETTINGS******
os = <module 'os' from '/usr/lib/python3.8/os.py'>
pd = <module 'pandas' from '/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pandas/__init__.py'>
torch = <module 'torch' from '/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/torch/__init__.py'>
PANDAS_MAX_ROWS = 5000
random_seed = 42
n_jobs = 1
dataset_folder_path = /mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/base_dados/
csv_path = /mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/base_dados/TAB_MODELAGEM_RAFAEL_2020_1-2.0-percentage-sampling.csv
number_csv_lines = None
dtype_dict = {'ID_ANIMAL': 'uint32', 'EstabelecimentoMunicipio': 'category', 'Frigorifico_ID': 'uint8', 'Frigorifico_CNPJ': 'uint64', 'Frigorifico_RazaoSocial': 'category', 'Municipio_Frigorifico': 'category', 'Tipificacao': 'category', 'Maturidade': 'category', 'Acabamento': 'category', 'Peso': 'float32', 'EstabelecimentoIdentificador': 'uint16', 'Questionario_ID': 'uint16', 'QuestionarioClassificacaoEstabel': 'uint8', 'FERTIIRRIGACAO': 'uint8', 'ILP': 'uint8', 'IFP': 'uint8', 'ILPF': 'uint8', 'CONCEN_VOLUM': 'UInt8', 'CREEPFEEDING': 'UInt8', 'FORN_ESTRAT_SILAGEM': 'UInt8', 'PROTEICO': 'UInt8', 'PROTEICO_ENERGETICO': 'UInt8', 'RACAO_BAL_CONS_INFERIOR': 'UInt8', 'SAL_MINERAL': 'UInt8', 'SALMINERAL_UREIA': 'UInt8', 'RACAOO_BAL_CONSUMO_IG': 'UInt8', 'GRAO_INTEIRO': 'UInt8', 'ALTO_CONCENTR_VOLUM': 'UInt8', 'ALTO_CONCENTRADO': 'UInt8', 'QuestionarioPossuiOutrosIncentiv': 'uint8', 'QuestionarioFabricaRacao': 'uint8', 'area so confinamento': 'UInt8', 'regua de manejo': 'UInt8', 'boa cobertura vegetal, com baixa': 'UInt8', 'erosaoo laminar ou em sulco igua': 'UInt8', 'identificacao individual': 'UInt8', 'rastreamento SISBOV': 'UInt8', 'Lista Trace': 'UInt8', 'BPA': 'UInt8', 'participa de aliancas mercadolog': 'UInt8', 'QuestionarioPraticaRecuperacaoPa': 'uint8', 'Confinamento': 'UInt8', 'Suplementacao_a_campo': 'UInt8', 'SemiConfinamento': 'UInt8', 'dif_datas': 'uint16', 'tot7d_Chuva': 'float32', 'med7d_TempInst': 'float32', 'med7d_TempMin': 'float32', 'med7d_UmidInst': 'float32', 'med7d_formITUinst': 'float32', 'med7d_formITUmax': 'float32', 'med7d_NDVI': 'float32', 'med7d_EVI': 'float32', 'med7d_preR_soja': 'float32', 'med7d_preR_milho': 'float32', 'med7d_preR_boi': 'float32', 'tot1m_Chuva': 'float32', 'med1m_TempInst': 'float32', 'med1m_UmidInst': 'float32', 'med1m_formITUinst': 'float32', 'med1m_NDVI': 'float32', 'med1m_EVI': 'float32', 'med1m_preR_soja': 'float32', 'med1m_preR_milho': 'float32', 'med1m_preR_boi': 'float32', 'tot3m_Chuva': 'float32', 'med3m_TempInst': 'float32', 'med3m_UmidInst': 'float32', 'med3m_formITUinst': 'float32', 'med3m_formITUmax': 'float32', 'med3m_NDVI': 'float32', 'med3m_EVI': 'float32', 'med3m_preR_soja': 'float32', 'med3m_preR_milho': 'float32', 'med3m_preR_boi': 'float32', 'tot6m_Chuva': 'float32', 'med6m_TempInst': 'float32', 'med6m_UmidInst': 'float32', 'med6m_formITUinst': 'float32', 'med6m_NDVI': 'float32', 'med6m_EVI': 'float32', 'med6m_preR_soja': 'float32', 'med6m_preR_milho': 'float32', 'med6m_preR_boi': 'float32', 'tot12m_Chuva': 'float32', 'med12m_TempInst': 'float32', 'med12m_TempMin': 'float32', 'med12m_UmidInst': 'float32', 'med12m_formITUinst': 'float32', 'med12m_NDVI': 'float32', 'med12m_EVI': 'float32', 'med12m_preR_soja': 'float32', 'med12m_preR_milho': 'float32', 'med12m_preR_boi': 'float32', 'cnt7d_CL_ITUinst': 'float32', 'cnt1m_CL_ITUinst': 'float32', 'cnt3m_CL_ITUinst': 'float32', 'cnt6m_CL_ITUinst': 'float32', 'cnt12m_CL_ITUinst': 'float32', 'ANO': 'uint16', 'CATEGORIA': 'category', 'classificacao': 'category', 'Motivo': 'category', 'QTD_ANIMAIS_LOTE': 'uint16', 'PESO_MEDIO_LOTE': 'float32', 'CATEGORIA_BINARIA': 'category'}
parse_dates = ['DataAbate', 'Data_homol', 'DataAbate_6m_ANT', 'data_homol_select', 'data12m', 'data6m', 'data3m', 'data1m', 'data7d']
delete_columns_names_on_load_data = ['EstabelecimentoMunicipio', 'Frigorifico_ID', 'Frigorifico_CNPJ', 'Frigorifico_RazaoSocial', 'Municipio_Frigorifico', 'Maturidade', 'Acabamento', 'EstabelecimentoIdentificador', 'Questionario_ID', 'FERTIIRRIGACAO', 'CONCEN_VOLUM', 'CREEPFEEDING', 'FORN_ESTRAT_SILAGEM', 'PROTEICO', 'PROTEICO_ENERGETICO', 'RACAO_BAL_CONS_INFERIOR', 'SAL_MINERAL', 'SALMINERAL_UREIA', 'RACAOO_BAL_CONSUMO_IG', 'GRAO_INTEIRO', 'ALTO_CONCENTR_VOLUM', 'ALTO_CONCENTRADO', 'area so confinamento', 'boa cobertura vegetal, com baixa', 'erosaoo laminar ou em sulco igua', 'Lista Trace', 'BPA', 'dif_datas', 'tot7d_Chuva', 'med7d_TempInst', 'med7d_TempMin', 'med7d_UmidInst', 'med7d_formITUinst', 'med7d_formITUmax', 'med7d_NDVI', 'med7d_EVI', 'med7d_preR_soja', 'med7d_preR_milho', 'med7d_preR_boi', 'tot1m_Chuva', 'med1m_TempInst', 'med1m_UmidInst', 'med1m_formITUinst', 'med1m_NDVI', 'med1m_EVI', 'med1m_preR_soja', 'med1m_preR_milho', 'med1m_preR_boi', 'med3m_TempInst', 'med3m_UmidInst', 'med3m_formITUmax', 'med3m_EVI', 'med3m_preR_soja', 'tot6m_Chuva', 'med6m_TempInst', 'med6m_UmidInst', 'med6m_formITUinst', 'med6m_NDVI', 'med6m_EVI', 'med6m_preR_soja', 'med6m_preR_milho', 'med6m_preR_boi', 'tot12m_Chuva', 'med12m_TempInst', 'med12m_TempMin', 'med12m_UmidInst', 'med12m_formITUinst', 'med12m_NDVI', 'med12m_EVI', 'med12m_preR_soja', 'med12m_preR_milho', 'med12m_preR_boi', 'cnt7d_CL_ITUinst', 'cnt1m_CL_ITUinst', 'cnt3m_CL_ITUinst', 'cnt6m_CL_ITUinst', 'cnt12m_CL_ITUinst', 'ANO', 'Motivo', 'DataAbate', 'Data_homol', 'DataAbate_6m_ANT', 'data_homol_select', 'data12m', 'data6m', 'data3m', 'data1m', 'data7d', 'CATEGORIA']
PATH_SAVE_PLOTS = ./plots
PATH_SAVE_ESTIMATORS_REPR = ./runs/estimators_repr
PATH_SAVE_BEST_ESTIMATORS = ./runs/best_estimators
PATH_SAVE_RESULTS = ./runs/results
PATH_SAVE_LOGS = ./logs
PATH_SAVE_ENCODERS_SCALERS = ./runs/encoders_scalers
ordinal_encoder_columns_names = {'QuestionarioClassificacaoEstabel': ['0', '21', '26', '30']}
columns_ordinal_encoded = {}
label_encoder_columns_names = ['classificacao']
columns_label_encoded = {}
one_hot_encoder_columns_names = ['Tipificacao']
columns_one_hot_encoded = {}
min_max_scaler_columns_names = ['Peso', 'tot3m_Chuva', 'med3m_formITUinst', 'med3m_NDVI', 'med3m_preR_milho', 'med3m_preR_boi']
columns_min_max_scaled = {}
columns_label_binarized = {}
simple_imputer_columns_names = []
columns_names_drop_feature_by_correlation = ['med3m_formITUinst', 'med3m_preR_boi', 'classificacao']
class_column = classificacao
classifiers = {}
models_results = {}
device_name = cpu
use_embeddings = True
use_cat_emb_dim = True
threshold_categorical_features = 150
num_workers = 4
eval_metric = ['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>]
augmentations = None
weights = 0
batch_size = 1024
virtual_batch_size = 128
run_grid_search_cv_tuner = True
save_results_during_run = True
new_run = True
PATH_OBJECTS_PERSISTED_RESULTS_RUNS = ./runs/objects_persisted_results_runs
PARAMETERS_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/parameters_persist
RESULTS_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/results_persist
SPLIT_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/split_persist
tree_method = hist
objective = binary:logistic
*****FIM SHOW SETTINGS******


*****INICIO DELETE DUPLICATE ROWS BY ATTRIBUTE******
Nenhuma linha duplicada encontrada para o atributo ID_ANIMAL.
*****FIM DELETE DUPLICATE ROWS BY ATTRIBUTE*********
Function delete_duplicate_rows_by_attribute Took 0:00:00.011649

*****INICIO DELETE COLUNAS******
Coluna ID_ANIMAL excluída.
*****FIM DELETE COLUNAS*********

*****INICIO DELETE NAN ROWS******
Linhas com valores NaN encontradas.
*****FIM DELETE NAN ROWS*********
Function delete_nan_rows Took 0:00:00.018207


*****INICIO DELETE COLUMNS WITH SINGLE VALUE******
>>> Nenhuma coluna com valor único encontrada.
*****FIM DELETE COLUMNS WITH SINGLE VALUE*********
Function delete_columns_with_single_value Took 0:00:00.016595


*****INICIO LABEL ENCODER******
*****FIM LABEL ENCODER*********
Function label_encoder_columns Took 0:00:00.012985

Object saved in file: ./runs/encoders_scalers/target_encoded-14-04-2023_21:00:54.joblib

*****INICIO RELATÓRIO DISTRIBUIÇÃO DE CLASSES******
Distribuição da classe 1: 83%
Distribuição da classe 0: 17%
Erro majoritário: 17%
*****FIM RELATÓRIO DISTRIBUIÇÃO DE CLASSES******
Function class_distribution Took 0:00:00.002278

/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
Number of folds for cross validation: 5
Scoring strategy for grid search: f1_macro
Test Size: 0.2

x_train shape: (47635, 21)
y_train shape: (47635,)
x_test shape: (11909, 21)
y_test shape: (11909,)
Removing all files in directory: ./runs/objects_persisted_results_runs
Do you want to continue? (y/n): 
All files in directory ./runs/objects_persisted_results_runs were removed.
Fitting 5 folds for each of 7 candidates, totalling 35 fits
[CV 1/5; 1/7] START classifier__estimator=GaussianNB()..........................
[CV 1/5; 1/7] END classifier__estimator=GaussianNB();, score=0.386 total time= 1.1min
[CV 2/5; 1/7] START classifier__estimator=GaussianNB()..........................
[CV 2/5; 1/7] END classifier__estimator=GaussianNB();, score=0.385 total time= 1.0min
[CV 3/5; 1/7] START classifier__estimator=GaussianNB()..........................
[CV 3/5; 1/7] END classifier__estimator=GaussianNB();, score=0.385 total time= 1.0min
[CV 4/5; 1/7] START classifier__estimator=GaussianNB()..........................
[CV 4/5; 1/7] END classifier__estimator=GaussianNB();, score=0.386 total time= 1.0min
[CV 5/5; 1/7] START classifier__estimator=GaussianNB()..........................
[CV 5/5; 1/7] END classifier__estimator=GaussianNB();, score=0.378 total time= 1.1min
[CV 1/5; 2/7] START classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best
[CV 1/5; 2/7] END classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best;, score=0.505 total time= 1.9min
[CV 2/5; 2/7] START classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best
[CV 2/5; 2/7] END classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best;, score=0.503 total time= 1.2min
[CV 3/5; 2/7] START classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best
[CV 3/5; 2/7] END classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best;, score=0.518 total time= 1.1min
[CV 4/5; 2/7] START classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best
[CV 4/5; 2/7] END classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best;, score=0.502 total time= 1.1min
[CV 5/5; 2/7] START classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best
[CV 5/5; 2/7] END classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best;, score=0.498 total time= 1.1min
[CV 1/5; 3/7] START classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42
[CV 1/5; 3/7] END classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42;, score=0.283 total time= 1.1min
[CV 2/5; 3/7] START classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42
[CV 2/5; 3/7] END classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42;, score=0.298 total time= 1.0min
[CV 3/5; 3/7] START classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42
[CV 3/5; 3/7] END classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42;, score=0.293 total time= 1.0min
[CV 4/5; 3/7] START classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42
[CV 4/5; 3/7] END classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42;, score=0.281 total time= 1.0min
[CV 5/5; 3/7] START classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42
[CV 5/5; 3/7] END classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42;, score=0.291 total time= 1.0min
[CV 1/5; 4/7] START classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam
[CV 1/5; 4/7] END classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam;, score=0.467 total time= 3.0min
[CV 2/5; 4/7] START classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam
[CV 2/5; 4/7] END classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam;, score=0.481 total time= 3.4min
[CV 3/5; 4/7] START classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam
[CV 3/5; 4/7] END classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam;, score=0.488 total time= 3.3min
[CV 4/5; 4/7] START classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam
[CV 4/5; 4/7] END classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam;, score=0.488 total time= 3.5min
[CV 5/5; 4/7] START classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam
[CV 5/5; 4/7] END classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam;, score=0.464 total time= 2.6min
[CV 1/5; 5/7] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42
[CV 1/5; 5/7] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42;, score=0.548 total time= 3.4min
[CV 2/5; 5/7] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42
[CV 2/5; 5/7] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42;, score=0.548 total time= 3.5min
[CV 3/5; 5/7] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42
[CV 3/5; 5/7] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42;, score=0.554 total time= 3.4min
[CV 4/5; 5/7] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42
[CV 4/5; 5/7] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42;, score=0.551 total time= 3.4min
[CV 5/5; 5/7] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42
[CV 5/5; 5/7] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42;, score=0.549 total time= 3.4min
[CV 1/5; 6/7] START classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist
[CV 1/5; 6/7] END classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist;, score=0.487 total time= 1.2min
[CV 2/5; 6/7] START classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist
[CV 2/5; 6/7] END classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist;, score=0.502 total time= 1.1min
[CV 3/5; 6/7] START classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist
[CV 3/5; 6/7] END classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist;, score=0.482 total time= 1.1min
[CV 4/5; 6/7] START classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist
[CV 4/5; 6/7] END classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist;, score=0.489 total time= 1.1min
[CV 5/5; 6/7] START classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist
[CV 5/5; 6/7] END classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist;, score=0.494 total time= 1.1min
[CV 1/5; 7/7] START classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: n_d changed from 8 to 64
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_dims changed from [] to [16, 26, 26, 148, 120, 76, 119, 141]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_emb_dim changed from 20 to [8, 13, 13, 20, 20, 20, 20, 20]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_idxs changed from [] to [1, 2, 3, 10, 11, 12, 18, 19]
  warnings.warn(wrn_msg)
epoch 0  | loss: 2.01467 | train_balanced_accuracy: 0.4997  | train_logloss: 1.64917 | train_f1_macro: 0.40312 | valid_balanced_accuracy: 0.50004 | valid_logloss: 1.64813 | valid_f1_macro: 0.40481 |  0:00:40s
epoch 1  | loss: 6.24988 | train_balanced_accuracy: 0.44353 | train_logloss: 1.74018 | train_f1_macro: 0.36268 | valid_balanced_accuracy: 0.43545 | valid_logloss: 1.79039 | valid_f1_macro: 0.35567 |  0:01:21s
epoch 2  | loss: 2.14488 | train_balanced_accuracy: 0.56064 | train_logloss: 0.76654 | train_f1_macro: 0.55575 | valid_balanced_accuracy: 0.56121 | valid_logloss: 0.76696 | valid_f1_macro: 0.55558 |  0:02:03s
epoch 3  | loss: 0.62877 | train_balanced_accuracy: 0.49795 | train_logloss: 0.64287 | train_f1_macro: 0.40139 | valid_balanced_accuracy: 0.49875 | valid_logloss: 0.64714 | valid_f1_macro: 0.4023  |  0:02:44s
epoch 4  | loss: 0.61108 | train_balanced_accuracy: 0.52068 | train_logloss: 0.61458 | train_f1_macro: 0.46734 | valid_balanced_accuracy: 0.51842 | valid_logloss: 0.61747 | valid_f1_macro: 0.46272 |  0:03:25s
epoch 5  | loss: 0.60214 | train_balanced_accuracy: 0.52061 | train_logloss: 0.62248 | train_f1_macro: 0.46928 | valid_balanced_accuracy: 0.51565 | valid_logloss: 0.62588 | valid_f1_macro: 0.46055 |  0:04:07s
epoch 6  | loss: 0.61213 | train_balanced_accuracy: 0.55524 | train_logloss: 0.61276 | train_f1_macro: 0.54234 | valid_balanced_accuracy: 0.55944 | valid_logloss: 0.61035 | valid_f1_macro: 0.54686 |  0:04:48s
epoch 7  | loss: 0.60522 | train_balanced_accuracy: 0.54746 | train_logloss: 0.68527 | train_f1_macro: 0.54705 | valid_balanced_accuracy: 0.55247 | valid_logloss: 0.68328 | valid_f1_macro: 0.55217 |  0:05:29s
epoch 8  | loss: 0.60409 | train_balanced_accuracy: 0.53109 | train_logloss: 0.65033 | train_f1_macro: 0.51657 | valid_balanced_accuracy: 0.52806 | valid_logloss: 0.65161 | valid_f1_macro: 0.51232 |  0:06:10s
epoch 9  | loss: 0.6114  | train_balanced_accuracy: 0.54532 | train_logloss: 0.60942 | train_f1_macro: 0.52109 | valid_balanced_accuracy: 0.54154 | valid_logloss: 0.60881 | valid_f1_macro: 0.51553 |  0:06:52s
epoch 10 | loss: 0.60695 | train_balanced_accuracy: 0.56279 | train_logloss: 0.60533 | train_f1_macro: 0.5552  | valid_balanced_accuracy: 0.56321 | valid_logloss: 0.60271 | valid_f1_macro: 0.55478 |  0:07:32s
epoch 11 | loss: 0.60896 | train_balanced_accuracy: 0.51064 | train_logloss: 0.60641 | train_f1_macro: 0.43342 | valid_balanced_accuracy: 0.51128 | valid_logloss: 0.60766 | valid_f1_macro: 0.43469 |  0:08:13s
epoch 12 | loss: 0.60773 | train_balanced_accuracy: 0.51401 | train_logloss: 0.60531 | train_f1_macro: 0.44431 | valid_balanced_accuracy: 0.51484 | valid_logloss: 0.60649 | valid_f1_macro: 0.44509 |  0:08:56s
epoch 13 | loss: 0.6044  | train_balanced_accuracy: 0.53191 | train_logloss: 0.60352 | train_f1_macro: 0.49358 | valid_balanced_accuracy: 0.53103 | valid_logloss: 0.60394 | valid_f1_macro: 0.49099 |  0:09:39s
epoch 14 | loss: 0.60267 | train_balanced_accuracy: 0.52934 | train_logloss: 0.60253 | train_f1_macro: 0.4839  | valid_balanced_accuracy: 0.52857 | valid_logloss: 0.60276 | valid_f1_macro: 0.48071 |  0:10:20s
epoch 15 | loss: 0.60262 | train_balanced_accuracy: 0.53488 | train_logloss: 0.60024 | train_f1_macro: 0.49752 | valid_balanced_accuracy: 0.53277 | valid_logloss: 0.60086 | valid_f1_macro: 0.49269 |  0:11:01s
epoch 16 | loss: 0.60088 | train_balanced_accuracy: 0.5372  | train_logloss: 0.60518 | train_f1_macro: 0.50696 | valid_balanced_accuracy: 0.53794 | valid_logloss: 0.60566 | valid_f1_macro: 0.5073  |  0:11:42s
epoch 17 | loss: 0.60459 | train_balanced_accuracy: 0.52192 | train_logloss: 0.60345 | train_f1_macro: 0.46719 | valid_balanced_accuracy: 0.52349 | valid_logloss: 0.60314 | valid_f1_macro: 0.46987 |  0:12:23s
epoch 18 | loss: 0.60416 | train_balanced_accuracy: 0.52258 | train_logloss: 0.6027  | train_f1_macro: 0.46577 | valid_balanced_accuracy: 0.52181 | valid_logloss: 0.60349 | valid_f1_macro: 0.46484 |  0:13:04s
epoch 19 | loss: 0.60549 | train_balanced_accuracy: 0.57308 | train_logloss: 0.65573 | train_f1_macro: 0.57134 | valid_balanced_accuracy: 0.58043 | valid_logloss: 0.65387 | valid_f1_macro: 0.57839 |  0:13:46s
epoch 20 | loss: 0.60575 | train_balanced_accuracy: 0.54341 | train_logloss: 0.60574 | train_f1_macro: 0.51773 | valid_balanced_accuracy: 0.54104 | valid_logloss: 0.60681 | valid_f1_macro: 0.51447 |  0:14:27s
epoch 21 | loss: 0.60262 | train_balanced_accuracy: 0.55294 | train_logloss: 0.60159 | train_f1_macro: 0.53184 | valid_balanced_accuracy: 0.54865 | valid_logloss: 0.60344 | valid_f1_macro: 0.5254  |  0:15:09s
epoch 22 | loss: 0.60159 | train_balanced_accuracy: 0.51443 | train_logloss: 0.59983 | train_f1_macro: 0.44848 | valid_balanced_accuracy: 0.51074 | valid_logloss: 0.60101 | valid_f1_macro: 0.44282 |  0:15:50s
epoch 23 | loss: 0.60114 | train_balanced_accuracy: 0.54354 | train_logloss: 0.60037 | train_f1_macro: 0.5141  | valid_balanced_accuracy: 0.53836 | valid_logloss: 0.60424 | valid_f1_macro: 0.50604 |  0:16:31s
epoch 24 | loss: 0.5997  | train_balanced_accuracy: 0.53981 | train_logloss: 0.59826 | train_f1_macro: 0.50659 | valid_balanced_accuracy: 0.53908 | valid_logloss: 0.59919 | valid_f1_macro: 0.50473 |  0:17:12s
epoch 25 | loss: 0.59942 | train_balanced_accuracy: 0.55375 | train_logloss: 0.60199 | train_f1_macro: 0.53486 | valid_balanced_accuracy: 0.54889 | valid_logloss: 0.60553 | valid_f1_macro: 0.52758 |  0:17:53s
epoch 26 | loss: 0.59664 | train_balanced_accuracy: 0.53979 | train_logloss: 0.5943  | train_f1_macro: 0.50673 | valid_balanced_accuracy: 0.53588 | valid_logloss: 0.59692 | valid_f1_macro: 0.50077 |  0:18:33s
epoch 27 | loss: 0.5962  | train_balanced_accuracy: 0.53745 | train_logloss: 0.59439 | train_f1_macro: 0.50111 | valid_balanced_accuracy: 0.53717 | valid_logloss: 0.59516 | valid_f1_macro: 0.5002  |  0:19:15s
epoch 28 | loss: 0.59554 | train_balanced_accuracy: 0.55304 | train_logloss: 0.59124 | train_f1_macro: 0.53306 | valid_balanced_accuracy: 0.54853 | valid_logloss: 0.59366 | valid_f1_macro: 0.52624 |  0:19:58s
epoch 29 | loss: 0.59291 | train_balanced_accuracy: 0.52961 | train_logloss: 0.59033 | train_f1_macro: 0.47961 | valid_balanced_accuracy: 0.52778 | valid_logloss: 0.59269 | valid_f1_macro: 0.47709 |  0:20:39s
epoch 30 | loss: 0.5918  | train_balanced_accuracy: 0.57662 | train_logloss: 0.59426 | train_f1_macro: 0.57297 | valid_balanced_accuracy: 0.57575 | valid_logloss: 0.59639 | valid_f1_macro: 0.57145 |  0:21:20s
epoch 31 | loss: 0.59184 | train_balanced_accuracy: 0.52134 | train_logloss: 0.60991 | train_f1_macro: 0.47628 | valid_balanced_accuracy: 0.51994 | valid_logloss: 0.61029 | valid_f1_macro: 0.47357 |  0:22:01s
epoch 32 | loss: 0.59389 | train_balanced_accuracy: 0.5397  | train_logloss: 0.61531 | train_f1_macro: 0.50018 | valid_balanced_accuracy: 0.53897 | valid_logloss: 0.61816 | valid_f1_macro: 0.49863 |  0:22:43s
epoch 33 | loss: 0.60398 | train_balanced_accuracy: 0.53014 | train_logloss: 0.59857 | train_f1_macro: 0.48939 | valid_balanced_accuracy: 0.52579 | valid_logloss: 0.59895 | valid_f1_macro: 0.48371 |  0:23:24s
epoch 34 | loss: 0.60071 | train_balanced_accuracy: 0.55643 | train_logloss: 0.59643 | train_f1_macro: 0.54096 | valid_balanced_accuracy: 0.5551  | valid_logloss: 0.59632 | valid_f1_macro: 0.5389  |  0:24:05s
epoch 35 | loss: 0.59874 | train_balanced_accuracy: 0.53874 | train_logloss: 0.59613 | train_f1_macro: 0.50465 | valid_balanced_accuracy: 0.54077 | valid_logloss: 0.5952  | valid_f1_macro: 0.50716 |  0:24:47s
epoch 36 | loss: 0.59685 | train_balanced_accuracy: 0.55144 | train_logloss: 0.59485 | train_f1_macro: 0.52949 | valid_balanced_accuracy: 0.55415 | valid_logloss: 0.59278 | valid_f1_macro: 0.53326 |  0:25:28s
epoch 37 | loss: 0.59341 | train_balanced_accuracy: 0.55686 | train_logloss: 0.59095 | train_f1_macro: 0.54515 | valid_balanced_accuracy: 0.55911 | valid_logloss: 0.58875 | valid_f1_macro: 0.54765 |  0:26:10s
epoch 38 | loss: 0.5864  | train_balanced_accuracy: 0.58714 | train_logloss: 0.57645 | train_f1_macro: 0.58676 | valid_balanced_accuracy: 0.59043 | valid_logloss: 0.57374 | valid_f1_macro: 0.5904  |  0:26:51s
epoch 39 | loss: 0.58019 | train_balanced_accuracy: 0.56668 | train_logloss: 0.59506 | train_f1_macro: 0.55829 | valid_balanced_accuracy: 0.57019 | valid_logloss: 0.59071 | valid_f1_macro: 0.56206 |  0:27:32s
epoch 40 | loss: 0.58299 | train_balanced_accuracy: 0.54931 | train_logloss: 0.57961 | train_f1_macro: 0.52325 | valid_balanced_accuracy: 0.55464 | valid_logloss: 0.57641 | valid_f1_macro: 0.53051 |  0:28:13s
epoch 41 | loss: 0.57852 | train_balanced_accuracy: 0.57326 | train_logloss: 0.57236 | train_f1_macro: 0.56613 | valid_balanced_accuracy: 0.58113 | valid_logloss: 0.56908 | valid_f1_macro: 0.57629 |  0:28:55s
epoch 42 | loss: 0.57521 | train_balanced_accuracy: 0.57553 | train_logloss: 0.57175 | train_f1_macro: 0.56738 | valid_balanced_accuracy: 0.58269 | valid_logloss: 0.56745 | valid_f1_macro: 0.57672 |  0:29:37s
epoch 43 | loss: 0.57653 | train_balanced_accuracy: 0.59185 | train_logloss: 0.57162 | train_f1_macro: 0.5887  | valid_balanced_accuracy: 0.58994 | valid_logloss: 0.57183 | valid_f1_macro: 0.58576 |  0:30:18s
epoch 44 | loss: 0.5734  | train_balanced_accuracy: 0.62684 | train_logloss: 0.56272 | train_f1_macro: 0.63318 | valid_balanced_accuracy: 0.6268  | valid_logloss: 0.56186 | valid_f1_macro: 0.63314 |  0:30:59s
epoch 45 | loss: 0.56578 | train_balanced_accuracy: 0.6243  | train_logloss: 0.56781 | train_f1_macro: 0.63043 | valid_balanced_accuracy: 0.62467 | valid_logloss: 0.57    | valid_f1_macro: 0.63084 |  0:31:40s
epoch 46 | loss: 0.56408 | train_balanced_accuracy: 0.60058 | train_logloss: 0.56402 | train_f1_macro: 0.60094 | valid_balanced_accuracy: 0.60216 | valid_logloss: 0.56548 | valid_f1_macro: 0.60268 |  0:32:21s
epoch 47 | loss: 0.56229 | train_balanced_accuracy: 0.63282 | train_logloss: 0.55858 | train_f1_macro: 0.63938 | valid_balanced_accuracy: 0.63964 | valid_logloss: 0.55915 | valid_f1_macro: 0.64666 |  0:33:02s
epoch 48 | loss: 0.56124 | train_balanced_accuracy: 0.63124 | train_logloss: 0.57009 | train_f1_macro: 0.63676 | valid_balanced_accuracy: 0.63723 | valid_logloss: 0.56996 | valid_f1_macro: 0.6431  |  0:33:43s
epoch 49 | loss: 0.56155 | train_balanced_accuracy: 0.62663 | train_logloss: 0.57284 | train_f1_macro: 0.63287 | valid_balanced_accuracy: 0.6298  | valid_logloss: 0.57318 | valid_f1_macro: 0.63624 |  0:34:24s
epoch 50 | loss: 0.55871 | train_balanced_accuracy: 0.63366 | train_logloss: 0.56    | train_f1_macro: 0.64035 | valid_balanced_accuracy: 0.63663 | valid_logloss: 0.55952 | valid_f1_macro: 0.64351 |  0:35:06s
epoch 51 | loss: 0.55838 | train_balanced_accuracy: 0.62328 | train_logloss: 0.55448 | train_f1_macro: 0.62937 | valid_balanced_accuracy: 0.62886 | valid_logloss: 0.55488 | valid_f1_macro: 0.63568 |  0:35:47s
epoch 52 | loss: 0.55934 | train_balanced_accuracy: 0.62286 | train_logloss: 0.57519 | train_f1_macro: 0.62865 | valid_balanced_accuracy: 0.62265 | valid_logloss: 0.57475 | valid_f1_macro: 0.6284  |  0:36:28s
epoch 53 | loss: 0.56222 | train_balanced_accuracy: 0.6109  | train_logloss: 0.56272 | train_f1_macro: 0.61486 | valid_balanced_accuracy: 0.61048 | valid_logloss: 0.56292 | valid_f1_macro: 0.61424 |  0:37:09s
epoch 54 | loss: 0.56217 | train_balanced_accuracy: 0.60446 | train_logloss: 0.57876 | train_f1_macro: 0.60814 | valid_balanced_accuracy: 0.61069 | valid_logloss: 0.577   | valid_f1_macro: 0.61516 |  0:37:50s
epoch 55 | loss: 0.56269 | train_balanced_accuracy: 0.59848 | train_logloss: 0.55698 | train_f1_macro: 0.59744 | valid_balanced_accuracy: 0.60144 | valid_logloss: 0.55771 | valid_f1_macro: 0.60062 |  0:38:34s
epoch 56 | loss: 0.57421 | train_balanced_accuracy: 0.57181 | train_logloss: 0.59221 | train_f1_macro: 0.56761 | valid_balanced_accuracy: 0.57812 | valid_logloss: 0.5907  | valid_f1_macro: 0.5747  |  0:39:31s
epoch 57 | loss: 0.57809 | train_balanced_accuracy: 0.60348 | train_logloss: 0.59848 | train_f1_macro: 0.60737 | valid_balanced_accuracy: 0.60286 | valid_logloss: 0.59864 | valid_f1_macro: 0.60672 |  0:40:14s
epoch 58 | loss: 0.56969 | train_balanced_accuracy: 0.60471 | train_logloss: 0.57178 | train_f1_macro: 0.60775 | valid_balanced_accuracy: 0.60432 | valid_logloss: 0.57211 | valid_f1_macro: 0.60722 |  0:40:55s
epoch 59 | loss: 0.56423 | train_balanced_accuracy: 0.59596 | train_logloss: 0.55986 | train_f1_macro: 0.59412 | valid_balanced_accuracy: 0.59352 | valid_logloss: 0.56079 | valid_f1_macro: 0.59065 |  0:41:36s
epoch 60 | loss: 0.56437 | train_balanced_accuracy: 0.61703 | train_logloss: 0.57134 | train_f1_macro: 0.62238 | valid_balanced_accuracy: 0.61876 | valid_logloss: 0.57162 | valid_f1_macro: 0.62432 |  0:42:17s
epoch 61 | loss: 0.56496 | train_balanced_accuracy: 0.62254 | train_logloss: 0.57375 | train_f1_macro: 0.62832 | valid_balanced_accuracy: 0.62588 | valid_logloss: 0.57143 | valid_f1_macro: 0.63192 |  0:42:58s
epoch 62 | loss: 0.56113 | train_balanced_accuracy: 0.62404 | train_logloss: 0.56434 | train_f1_macro: 0.62999 | valid_balanced_accuracy: 0.63083 | valid_logloss: 0.56235 | valid_f1_macro: 0.63741 |  0:43:39s
epoch 63 | loss: 0.55896 | train_balanced_accuracy: 0.62127 | train_logloss: 0.55603 | train_f1_macro: 0.62713 | valid_balanced_accuracy: 0.62473 | valid_logloss: 0.55553 | valid_f1_macro: 0.63101 |  0:44:20s
epoch 64 | loss: 0.55854 | train_balanced_accuracy: 0.59739 | train_logloss: 0.56138 | train_f1_macro: 0.59593 | valid_balanced_accuracy: 0.59643 | valid_logloss: 0.56192 | valid_f1_macro: 0.59433 |  0:45:01s
epoch 65 | loss: 0.55916 | train_balanced_accuracy: 0.619   | train_logloss: 0.57329 | train_f1_macro: 0.62445 | valid_balanced_accuracy: 0.62193 | valid_logloss: 0.57293 | valid_f1_macro: 0.62761 |  0:45:42s
epoch 66 | loss: 0.5597  | train_balanced_accuracy: 0.62382 | train_logloss: 0.56518 | train_f1_macro: 0.62992 | valid_balanced_accuracy: 0.62747 | valid_logloss: 0.56505 | valid_f1_macro: 0.63396 |  0:46:23s
epoch 67 | loss: 0.55917 | train_balanced_accuracy: 0.60388 | train_logloss: 0.55618 | train_f1_macro: 0.6049  | valid_balanced_accuracy: 0.60361 | valid_logloss: 0.55708 | valid_f1_macro: 0.60438 |  0:47:04s

Early stopping occurred at epoch 67 with best_epoch = 47 and best_valid_f1_macro = 0.64666
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/callbacks.py:172: UserWarning: Best weights from best epoch are automatically used!
  warnings.warn(wrn_msg)
[CV 1/5; 7/7] END classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1;, score=0.413 total time=48.4min
[CV 2/5; 7/7] START classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: n_d changed from 8 to 64
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_dims changed from [] to [18, 29, 25, 129, 117, 76, 125]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_emb_dim changed from 20 to [9, 14, 12, 20, 20, 20, 20]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_idxs changed from [] to [1, 2, 3, 10, 11, 12, 18]
  warnings.warn(wrn_msg)
epoch 0  | loss: 1.72123 | train_balanced_accuracy: 0.51816 | train_logloss: 0.82818 | train_f1_macro: 0.49958 | valid_balanced_accuracy: 0.52427 | valid_logloss: 0.82553 | valid_f1_macro: 0.5083  |  0:00:41s
epoch 1  | loss: 2.12837 | train_balanced_accuracy: 0.53627 | train_logloss: 2.21616 | train_f1_macro: 0.52514 | valid_balanced_accuracy: 0.5277  | valid_logloss: 2.27385 | valid_f1_macro: 0.51581 |  0:01:24s
epoch 2  | loss: 1.06418 | train_balanced_accuracy: 0.52664 | train_logloss: 0.89078 | train_f1_macro: 0.5211  | valid_balanced_accuracy: 0.51824 | valid_logloss: 0.90621 | valid_f1_macro: 0.51326 |  0:02:06s
epoch 3  | loss: 0.72642 | train_balanced_accuracy: 0.50146 | train_logloss: 0.64208 | train_f1_macro: 0.40447 | valid_balanced_accuracy: 0.5015  | valid_logloss: 0.64166 | valid_f1_macro: 0.40408 |  0:02:47s
epoch 4  | loss: 0.62587 | train_balanced_accuracy: 0.54586 | train_logloss: 0.61955 | train_f1_macro: 0.5224  | valid_balanced_accuracy: 0.55455 | valid_logloss: 0.62065 | valid_f1_macro: 0.53448 |  0:03:28s
epoch 5  | loss: 0.61863 | train_balanced_accuracy: 0.51933 | train_logloss: 0.61256 | train_f1_macro: 0.45961 | valid_balanced_accuracy: 0.5191  | valid_logloss: 0.61571 | valid_f1_macro: 0.45774 |  0:04:10s
epoch 6  | loss: 0.61887 | train_balanced_accuracy: 0.54754 | train_logloss: 0.62258 | train_f1_macro: 0.52383 | valid_balanced_accuracy: 0.54705 | valid_logloss: 0.62642 | valid_f1_macro: 0.52175 |  0:04:51s
epoch 7  | loss: 0.61692 | train_balanced_accuracy: 0.537   | train_logloss: 0.62146 | train_f1_macro: 0.49848 | valid_balanced_accuracy: 0.53979 | valid_logloss: 0.61906 | valid_f1_macro: 0.50224 |  0:05:32s
epoch 8  | loss: 0.62827 | train_balanced_accuracy: 0.58895 | train_logloss: 0.61805 | train_f1_macro: 0.59151 | valid_balanced_accuracy: 0.58831 | valid_logloss: 0.61825 | valid_f1_macro: 0.59082 |  0:06:13s
epoch 9  | loss: 0.61203 | train_balanced_accuracy: 0.56697 | train_logloss: 0.62046 | train_f1_macro: 0.55731 | valid_balanced_accuracy: 0.5675  | valid_logloss: 0.62171 | valid_f1_macro: 0.55719 |  0:06:54s
epoch 10 | loss: 0.6058  | train_balanced_accuracy: 0.55503 | train_logloss: 0.61125 | train_f1_macro: 0.53694 | valid_balanced_accuracy: 0.54973 | valid_logloss: 0.61479 | valid_f1_macro: 0.52883 |  0:07:35s
epoch 11 | loss: 0.6093  | train_balanced_accuracy: 0.54659 | train_logloss: 0.60828 | train_f1_macro: 0.50968 | valid_balanced_accuracy: 0.54959 | valid_logloss: 0.60891 | valid_f1_macro: 0.51224 |  0:08:16s
epoch 12 | loss: 0.61341 | train_balanced_accuracy: 0.52012 | train_logloss: 0.61127 | train_f1_macro: 0.46252 | valid_balanced_accuracy: 0.51823 | valid_logloss: 0.61213 | valid_f1_macro: 0.45854 |  0:08:58s
epoch 13 | loss: 0.61124 | train_balanced_accuracy: 0.57854 | train_logloss: 0.61708 | train_f1_macro: 0.5803  | valid_balanced_accuracy: 0.57789 | valid_logloss: 0.6182  | valid_f1_macro: 0.57949 |  0:09:39s
epoch 14 | loss: 0.60649 | train_balanced_accuracy: 0.56615 | train_logloss: 0.73479 | train_f1_macro: 0.56411 | valid_balanced_accuracy: 0.56486 | valid_logloss: 0.73003 | valid_f1_macro: 0.56286 |  0:10:20s
epoch 15 | loss: 0.60759 | train_balanced_accuracy: 0.53975 | train_logloss: 0.61272 | train_f1_macro: 0.50694 | valid_balanced_accuracy: 0.54066 | valid_logloss: 0.61862 | valid_f1_macro: 0.50925 |  0:11:03s
epoch 16 | loss: 0.60777 | train_balanced_accuracy: 0.59379 | train_logloss: 0.60899 | train_f1_macro: 0.59659 | valid_balanced_accuracy: 0.59257 | valid_logloss: 0.61026 | valid_f1_macro: 0.59525 |  0:11:50s
epoch 17 | loss: 0.60229 | train_balanced_accuracy: 0.53096 | train_logloss: 0.63397 | train_f1_macro: 0.48553 | valid_balanced_accuracy: 0.52984 | valid_logloss: 0.6397  | valid_f1_macro: 0.48557 |  0:12:30s
epoch 18 | loss: 0.60401 | train_balanced_accuracy: 0.51621 | train_logloss: 0.64787 | train_f1_macro: 0.45271 | valid_balanced_accuracy: 0.51484 | valid_logloss: 0.64963 | valid_f1_macro: 0.45115 |  0:13:11s
epoch 19 | loss: 0.61113 | train_balanced_accuracy: 0.5585  | train_logloss: 0.62786 | train_f1_macro: 0.54488 | valid_balanced_accuracy: 0.56094 | valid_logloss: 0.62843 | valid_f1_macro: 0.54744 |  0:13:53s
epoch 20 | loss: 0.61496 | train_balanced_accuracy: 0.54926 | train_logloss: 0.62313 | train_f1_macro: 0.53166 | valid_balanced_accuracy: 0.54854 | valid_logloss: 0.62438 | valid_f1_macro: 0.52907 |  0:14:34s
epoch 21 | loss: 0.61468 | train_balanced_accuracy: 0.56357 | train_logloss: 0.66352 | train_f1_macro: 0.56298 | valid_balanced_accuracy: 0.5568  | valid_logloss: 0.66374 | valid_f1_macro: 0.5553  |  0:15:15s
epoch 22 | loss: 0.61267 | train_balanced_accuracy: 0.5455  | train_logloss: 0.63221 | train_f1_macro: 0.52858 | valid_balanced_accuracy: 0.53369 | valid_logloss: 0.63537 | valid_f1_macro: 0.5131  |  0:15:56s
epoch 23 | loss: 0.60615 | train_balanced_accuracy: 0.56193 | train_logloss: 0.63855 | train_f1_macro: 0.55662 | valid_balanced_accuracy: 0.55026 | valid_logloss: 0.64348 | valid_f1_macro: 0.5426  |  0:16:37s
epoch 24 | loss: 0.60201 | train_balanced_accuracy: 0.57002 | train_logloss: 0.60258 | train_f1_macro: 0.5598  | valid_balanced_accuracy: 0.56766 | valid_logloss: 0.60512 | valid_f1_macro: 0.55565 |  0:17:18s
epoch 25 | loss: 0.6016  | train_balanced_accuracy: 0.57342 | train_logloss: 0.62536 | train_f1_macro: 0.57296 | valid_balanced_accuracy: 0.55973 | valid_logloss: 0.63449 | valid_f1_macro: 0.55668 |  0:17:59s
epoch 26 | loss: 0.60051 | train_balanced_accuracy: 0.55879 | train_logloss: 0.5988  | train_f1_macro: 0.53546 | valid_balanced_accuracy: 0.55424 | valid_logloss: 0.60211 | valid_f1_macro: 0.52943 |  0:18:40s
epoch 27 | loss: 0.59998 | train_balanced_accuracy: 0.55633 | train_logloss: 0.60487 | train_f1_macro: 0.53978 | valid_balanced_accuracy: 0.55747 | valid_logloss: 0.60781 | valid_f1_macro: 0.54175 |  0:19:20s
epoch 28 | loss: 0.60079 | train_balanced_accuracy: 0.53578 | train_logloss: 0.60278 | train_f1_macro: 0.49156 | valid_balanced_accuracy: 0.53253 | valid_logloss: 0.60706 | valid_f1_macro: 0.48627 |  0:20:01s
epoch 29 | loss: 0.60273 | train_balanced_accuracy: 0.55917 | train_logloss: 0.5983  | train_f1_macro: 0.54358 | valid_balanced_accuracy: 0.55802 | valid_logloss: 0.60092 | valid_f1_macro: 0.54162 |  0:20:42s
epoch 30 | loss: 0.60141 | train_balanced_accuracy: 0.57074 | train_logloss: 0.60548 | train_f1_macro: 0.56296 | valid_balanced_accuracy: 0.57192 | valid_logloss: 0.60523 | valid_f1_macro: 0.56367 |  0:21:24s
epoch 31 | loss: 0.59916 | train_balanced_accuracy: 0.55207 | train_logloss: 0.59966 | train_f1_macro: 0.52606 | valid_balanced_accuracy: 0.55069 | valid_logloss: 0.60084 | valid_f1_macro: 0.52313 |  0:22:05s
epoch 32 | loss: 0.59952 | train_balanced_accuracy: 0.57706 | train_logloss: 0.60095 | train_f1_macro: 0.5717  | valid_balanced_accuracy: 0.57484 | valid_logloss: 0.60346 | valid_f1_macro: 0.5681  |  0:22:46s
epoch 33 | loss: 0.60138 | train_balanced_accuracy: 0.54431 | train_logloss: 0.59767 | train_f1_macro: 0.51285 | valid_balanced_accuracy: 0.54279 | valid_logloss: 0.60022 | valid_f1_macro: 0.51054 |  0:23:27s
epoch 34 | loss: 0.60137 | train_balanced_accuracy: 0.58701 | train_logloss: 0.60139 | train_f1_macro: 0.58654 | valid_balanced_accuracy: 0.5926  | valid_logloss: 0.60313 | valid_f1_macro: 0.59311 |  0:24:08s
epoch 35 | loss: 0.60358 | train_balanced_accuracy: 0.58461 | train_logloss: 0.60558 | train_f1_macro: 0.58171 | valid_balanced_accuracy: 0.58179 | valid_logloss: 0.60804 | valid_f1_macro: 0.57783 |  0:24:48s
epoch 36 | loss: 0.60201 | train_balanced_accuracy: 0.56699 | train_logloss: 0.60083 | train_f1_macro: 0.55586 | valid_balanced_accuracy: 0.5645  | valid_logloss: 0.60153 | valid_f1_macro: 0.55206 |  0:25:29s

Early stopping occurred at epoch 36 with best_epoch = 16 and best_valid_f1_macro = 0.59525
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/callbacks.py:172: UserWarning: Best weights from best epoch are automatically used!
  warnings.warn(wrn_msg)
[CV 2/5; 7/7] END classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1;, score=0.384 total time=26.8min
[CV 3/5; 7/7] START classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: n_d changed from 8 to 64
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_dims changed from [] to [28, 35, 37, 118, 120, 77, 124]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_emb_dim changed from 20 to [14, 17, 18, 20, 20, 20, 20]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_idxs changed from [] to [1, 2, 3, 10, 11, 12, 18]
  warnings.warn(wrn_msg)
epoch 0  | loss: 1.82457 | train_balanced_accuracy: 0.51686 | train_logloss: 3.31096 | train_f1_macro: 0.3253  | valid_balanced_accuracy: 0.51695 | valid_logloss: 3.32228 | valid_f1_macro: 0.3249  |  0:00:41s
epoch 1  | loss: 1.79919 | train_balanced_accuracy: 0.5     | train_logloss: 4.16465 | train_f1_macro: 0.40094 | valid_balanced_accuracy: 0.5     | valid_logloss: 4.16864 | valid_f1_macro: 0.40093 |  0:01:23s
epoch 2  | loss: 2.67682 | train_balanced_accuracy: 0.5     | train_logloss: 0.6864  | train_f1_macro: 0.40094 | valid_balanced_accuracy: 0.5     | valid_logloss: 0.68469 | valid_f1_macro: 0.40093 |  0:02:04s
epoch 3  | loss: 0.62217 | train_balanced_accuracy: 0.50822 | train_logloss: 0.62176 | train_f1_macro: 0.43356 | valid_balanced_accuracy: 0.50621 | valid_logloss: 0.624   | valid_f1_macro: 0.43075 |  0:02:45s
epoch 4  | loss: 0.61853 | train_balanced_accuracy: 0.49979 | train_logloss: 0.64314 | train_f1_macro: 0.40434 | valid_balanced_accuracy: 0.49859 | valid_logloss: 0.64494 | valid_f1_macro: 0.4021  |  0:03:27s
epoch 5  | loss: 0.61573 | train_balanced_accuracy: 0.53956 | train_logloss: 0.62775 | train_f1_macro: 0.52321 | valid_balanced_accuracy: 0.54358 | valid_logloss: 0.62849 | valid_f1_macro: 0.53071 |  0:04:10s
epoch 6  | loss: 0.6122  | train_balanced_accuracy: 0.53002 | train_logloss: 0.61099 | train_f1_macro: 0.50036 | valid_balanced_accuracy: 0.53648 | valid_logloss: 0.60983 | valid_f1_macro: 0.51121 |  0:04:52s
epoch 7  | loss: 0.6162  | train_balanced_accuracy: 0.53433 | train_logloss: 0.61814 | train_f1_macro: 0.50283 | valid_balanced_accuracy: 0.53773 | valid_logloss: 0.61833 | valid_f1_macro: 0.50652 |  0:05:33s
epoch 8  | loss: 0.61251 | train_balanced_accuracy: 0.56542 | train_logloss: 0.6328  | train_f1_macro: 0.55894 | valid_balanced_accuracy: 0.56735 | valid_logloss: 0.63969 | valid_f1_macro: 0.56221 |  0:06:15s
epoch 9  | loss: 0.61101 | train_balanced_accuracy: 0.53064 | train_logloss: 0.61027 | train_f1_macro: 0.4874  | valid_balanced_accuracy: 0.53202 | valid_logloss: 0.61069 | valid_f1_macro: 0.48985 |  0:06:56s
epoch 10 | loss: 0.61085 | train_balanced_accuracy: 0.51355 | train_logloss: 0.61136 | train_f1_macro: 0.44023 | valid_balanced_accuracy: 0.51712 | valid_logloss: 0.61138 | valid_f1_macro: 0.44666 |  0:07:38s
epoch 11 | loss: 0.60786 | train_balanced_accuracy: 0.52472 | train_logloss: 0.6148  | train_f1_macro: 0.46863 | valid_balanced_accuracy: 0.52734 | valid_logloss: 0.61327 | valid_f1_macro: 0.47174 |  0:08:19s
epoch 12 | loss: 0.60695 | train_balanced_accuracy: 0.56699 | train_logloss: 0.60373 | train_f1_macro: 0.56285 | valid_balanced_accuracy: 0.57221 | valid_logloss: 0.60517 | valid_f1_macro: 0.56946 |  0:09:01s
epoch 13 | loss: 0.60387 | train_balanced_accuracy: 0.52801 | train_logloss: 0.60834 | train_f1_macro: 0.47345 | valid_balanced_accuracy: 0.53182 | valid_logloss: 0.60766 | valid_f1_macro: 0.48011 |  0:09:42s
epoch 14 | loss: 0.60526 | train_balanced_accuracy: 0.56402 | train_logloss: 0.60828 | train_f1_macro: 0.5511  | valid_balanced_accuracy: 0.56815 | valid_logloss: 0.60873 | valid_f1_macro: 0.5567  |  0:10:24s
epoch 15 | loss: 0.60428 | train_balanced_accuracy: 0.53964 | train_logloss: 0.608   | train_f1_macro: 0.50987 | valid_balanced_accuracy: 0.55409 | valid_logloss: 0.60529 | valid_f1_macro: 0.53016 |  0:11:06s
epoch 16 | loss: 0.60256 | train_balanced_accuracy: 0.53762 | train_logloss: 0.60503 | train_f1_macro: 0.50519 | valid_balanced_accuracy: 0.54338 | valid_logloss: 0.60662 | valid_f1_macro: 0.51366 |  0:11:47s
epoch 17 | loss: 0.60498 | train_balanced_accuracy: 0.53547 | train_logloss: 0.62027 | train_f1_macro: 0.49605 | valid_balanced_accuracy: 0.53506 | valid_logloss: 0.61999 | valid_f1_macro: 0.49492 |  0:12:29s
epoch 18 | loss: 0.61061 | train_balanced_accuracy: 0.54129 | train_logloss: 0.6016  | train_f1_macro: 0.50571 | valid_balanced_accuracy: 0.54386 | valid_logloss: 0.60221 | valid_f1_macro: 0.5096  |  0:13:11s
epoch 19 | loss: 0.60759 | train_balanced_accuracy: 0.56071 | train_logloss: 0.60918 | train_f1_macro: 0.5516  | valid_balanced_accuracy: 0.56318 | valid_logloss: 0.61014 | valid_f1_macro: 0.55448 |  0:13:53s
epoch 20 | loss: 0.60886 | train_balanced_accuracy: 0.54675 | train_logloss: 0.61248 | train_f1_macro: 0.52221 | valid_balanced_accuracy: 0.55221 | valid_logloss: 0.61094 | valid_f1_macro: 0.52947 |  0:14:35s
epoch 21 | loss: 0.60697 | train_balanced_accuracy: 0.55762 | train_logloss: 0.60097 | train_f1_macro: 0.54453 | valid_balanced_accuracy: 0.56499 | valid_logloss: 0.5989  | valid_f1_macro: 0.55366 |  0:15:17s
epoch 22 | loss: 0.6031  | train_balanced_accuracy: 0.54703 | train_logloss: 0.60727 | train_f1_macro: 0.52271 | valid_balanced_accuracy: 0.54855 | valid_logloss: 0.60466 | valid_f1_macro: 0.52461 |  0:15:58s
epoch 23 | loss: 0.60377 | train_balanced_accuracy: 0.55262 | train_logloss: 0.60385 | train_f1_macro: 0.53335 | valid_balanced_accuracy: 0.55569 | valid_logloss: 0.60188 | valid_f1_macro: 0.5363  |  0:16:40s
epoch 24 | loss: 0.60121 | train_balanced_accuracy: 0.55095 | train_logloss: 0.59812 | train_f1_macro: 0.52968 | valid_balanced_accuracy: 0.55121 | valid_logloss: 0.59768 | valid_f1_macro: 0.52945 |  0:17:21s
epoch 25 | loss: 0.59802 | train_balanced_accuracy: 0.54396 | train_logloss: 0.59741 | train_f1_macro: 0.50679 | valid_balanced_accuracy: 0.54269 | valid_logloss: 0.5967  | valid_f1_macro: 0.50472 |  0:18:03s
epoch 26 | loss: 0.59641 | train_balanced_accuracy: 0.55569 | train_logloss: 0.59823 | train_f1_macro: 0.53714 | valid_balanced_accuracy: 0.5585  | valid_logloss: 0.59822 | valid_f1_macro: 0.54083 |  0:18:45s
epoch 27 | loss: 0.59629 | train_balanced_accuracy: 0.55043 | train_logloss: 0.60103 | train_f1_macro: 0.52349 | valid_balanced_accuracy: 0.55487 | valid_logloss: 0.59859 | valid_f1_macro: 0.53049 |  0:19:26s
epoch 28 | loss: 0.59917 | train_balanced_accuracy: 0.56462 | train_logloss: 0.59689 | train_f1_macro: 0.55403 | valid_balanced_accuracy: 0.56724 | valid_logloss: 0.59553 | valid_f1_macro: 0.55702 |  0:20:07s
epoch 29 | loss: 0.59693 | train_balanced_accuracy: 0.58012 | train_logloss: 0.59147 | train_f1_macro: 0.57593 | valid_balanced_accuracy: 0.58229 | valid_logloss: 0.59094 | valid_f1_macro: 0.57909 |  0:20:49s
epoch 30 | loss: 0.59436 | train_balanced_accuracy: 0.58223 | train_logloss: 0.59646 | train_f1_macro: 0.58075 | valid_balanced_accuracy: 0.58382 | valid_logloss: 0.59707 | valid_f1_macro: 0.58259 |  0:21:31s
epoch 31 | loss: 0.59747 | train_balanced_accuracy: 0.58972 | train_logloss: 0.59742 | train_f1_macro: 0.59031 | valid_balanced_accuracy: 0.58889 | valid_logloss: 0.59674 | valid_f1_macro: 0.58922 |  0:22:13s
epoch 32 | loss: 0.59891 | train_balanced_accuracy: 0.57295 | train_logloss: 0.60153 | train_f1_macro: 0.5626  | valid_balanced_accuracy: 0.57585 | valid_logloss: 0.60124 | valid_f1_macro: 0.56522 |  0:22:54s
epoch 33 | loss: 0.59196 | train_balanced_accuracy: 0.59173 | train_logloss: 0.58604 | train_f1_macro: 0.58792 | valid_balanced_accuracy: 0.58971 | valid_logloss: 0.58571 | valid_f1_macro: 0.58489 |  0:23:36s
epoch 34 | loss: 0.58773 | train_balanced_accuracy: 0.60365 | train_logloss: 0.5837  | train_f1_macro: 0.60529 | valid_balanced_accuracy: 0.60353 | valid_logloss: 0.58187 | valid_f1_macro: 0.60497 |  0:24:18s
epoch 35 | loss: 0.58297 | train_balanced_accuracy: 0.60387 | train_logloss: 0.58531 | train_f1_macro: 0.60622 | valid_balanced_accuracy: 0.60415 | valid_logloss: 0.58489 | valid_f1_macro: 0.60646 |  0:25:00s
epoch 36 | loss: 0.58574 | train_balanced_accuracy: 0.59395 | train_logloss: 0.58826 | train_f1_macro: 0.59493 | valid_balanced_accuracy: 0.59883 | valid_logloss: 0.58734 | valid_f1_macro: 0.6005  |  0:25:42s
epoch 37 | loss: 0.58385 | train_balanced_accuracy: 0.59024 | train_logloss: 0.58993 | train_f1_macro: 0.58782 | valid_balanced_accuracy: 0.59605 | valid_logloss: 0.58885 | valid_f1_macro: 0.59514 |  0:26:23s
epoch 38 | loss: 0.58989 | train_balanced_accuracy: 0.60039 | train_logloss: 0.58926 | train_f1_macro: 0.60261 | valid_balanced_accuracy: 0.59911 | valid_logloss: 0.58838 | valid_f1_macro: 0.60119 |  0:27:04s
epoch 39 | loss: 0.58325 | train_balanced_accuracy: 0.61046 | train_logloss: 0.5861  | train_f1_macro: 0.61466 | valid_balanced_accuracy: 0.61045 | valid_logloss: 0.5865  | valid_f1_macro: 0.61471 |  0:27:45s
epoch 40 | loss: 0.58486 | train_balanced_accuracy: 0.61059 | train_logloss: 0.62042 | train_f1_macro: 0.615   | valid_balanced_accuracy: 0.60464 | valid_logloss: 0.62297 | valid_f1_macro: 0.60853 |  0:28:27s
epoch 41 | loss: 0.5906  | train_balanced_accuracy: 0.61995 | train_logloss: 0.64044 | train_f1_macro: 0.60891 | valid_balanced_accuracy: 0.617   | valid_logloss: 0.63863 | valid_f1_macro: 0.60633 |  0:29:08s
epoch 42 | loss: 0.59558 | train_balanced_accuracy: 0.5629  | train_logloss: 0.61241 | train_f1_macro: 0.54506 | valid_balanced_accuracy: 0.56988 | valid_logloss: 0.60862 | valid_f1_macro: 0.55515 |  0:29:49s
epoch 43 | loss: 0.60165 | train_balanced_accuracy: 0.5556  | train_logloss: 0.59983 | train_f1_macro: 0.53017 | valid_balanced_accuracy: 0.55772 | valid_logloss: 0.60074 | valid_f1_macro: 0.53332 |  0:30:31s
epoch 44 | loss: 0.59831 | train_balanced_accuracy: 0.57201 | train_logloss: 0.59149 | train_f1_macro: 0.55868 | valid_balanced_accuracy: 0.5724  | valid_logloss: 0.59172 | valid_f1_macro: 0.55999 |  0:31:12s
epoch 45 | loss: 0.59427 | train_balanced_accuracy: 0.58355 | train_logloss: 0.59026 | train_f1_macro: 0.57983 | valid_balanced_accuracy: 0.58494 | valid_logloss: 0.5896  | valid_f1_macro: 0.58105 |  0:31:54s
epoch 46 | loss: 0.59112 | train_balanced_accuracy: 0.58447 | train_logloss: 0.58352 | train_f1_macro: 0.57713 | valid_balanced_accuracy: 0.59064 | valid_logloss: 0.58356 | valid_f1_macro: 0.58515 |  0:32:35s
epoch 47 | loss: 0.58475 | train_balanced_accuracy: 0.61018 | train_logloss: 0.57922 | train_f1_macro: 0.61365 | valid_balanced_accuracy: 0.60567 | valid_logloss: 0.58059 | valid_f1_macro: 0.60823 |  0:33:17s
epoch 48 | loss: 0.58081 | train_balanced_accuracy: 0.62059 | train_logloss: 0.57562 | train_f1_macro: 0.62553 | valid_balanced_accuracy: 0.61865 | valid_logloss: 0.57739 | valid_f1_macro: 0.62324 |  0:33:58s
epoch 49 | loss: 0.57744 | train_balanced_accuracy: 0.61598 | train_logloss: 0.57128 | train_f1_macro: 0.6194  | valid_balanced_accuracy: 0.61665 | valid_logloss: 0.57244 | valid_f1_macro: 0.62017 |  0:34:41s
epoch 50 | loss: 0.57238 | train_balanced_accuracy: 0.61755 | train_logloss: 0.56753 | train_f1_macro: 0.62203 | valid_balanced_accuracy: 0.62089 | valid_logloss: 0.56965 | valid_f1_macro: 0.62593 |  0:35:23s
epoch 51 | loss: 0.56921 | train_balanced_accuracy: 0.64237 | train_logloss: 0.5649  | train_f1_macro: 0.6494  | valid_balanced_accuracy: 0.63852 | valid_logloss: 0.56622 | valid_f1_macro: 0.64519 |  0:36:05s
epoch 52 | loss: 0.57222 | train_balanced_accuracy: 0.61222 | train_logloss: 0.58204 | train_f1_macro: 0.61562 | valid_balanced_accuracy: 0.60978 | valid_logloss: 0.58133 | valid_f1_macro: 0.61277 |  0:36:46s
epoch 53 | loss: 0.58761 | train_balanced_accuracy: 0.57552 | train_logloss: 0.61141 | train_f1_macro: 0.56873 | valid_balanced_accuracy: 0.57208 | valid_logloss: 0.61186 | valid_f1_macro: 0.56469 |  0:37:28s
epoch 54 | loss: 0.59667 | train_balanced_accuracy: 0.57086 | train_logloss: 0.59497 | train_f1_macro: 0.5563  | valid_balanced_accuracy: 0.57226 | valid_logloss: 0.59584 | valid_f1_macro: 0.5577  |  0:38:09s
epoch 55 | loss: 0.59299 | train_balanced_accuracy: 0.54836 | train_logloss: 0.59545 | train_f1_macro: 0.51852 | valid_balanced_accuracy: 0.55036 | valid_logloss: 0.59703 | valid_f1_macro: 0.52159 |  0:38:50s
epoch 56 | loss: 0.58867 | train_balanced_accuracy: 0.58968 | train_logloss: 0.58695 | train_f1_macro: 0.58442 | valid_balanced_accuracy: 0.58754 | valid_logloss: 0.58562 | valid_f1_macro: 0.58164 |  0:39:32s
epoch 57 | loss: 0.58827 | train_balanced_accuracy: 0.60345 | train_logloss: 0.59443 | train_f1_macro: 0.60577 | valid_balanced_accuracy: 0.61108 | valid_logloss: 0.59384 | valid_f1_macro: 0.61448 |  0:40:13s
epoch 58 | loss: 0.57721 | train_balanced_accuracy: 0.60171 | train_logloss: 0.56561 | train_f1_macro: 0.59925 | valid_balanced_accuracy: 0.60381 | valid_logloss: 0.56686 | valid_f1_macro: 0.60215 |  0:40:54s
epoch 59 | loss: 0.56474 | train_balanced_accuracy: 0.61842 | train_logloss: 0.55613 | train_f1_macro: 0.62205 | valid_balanced_accuracy: 0.62167 | valid_logloss: 0.55719 | valid_f1_macro: 0.62615 |  0:41:35s
epoch 60 | loss: 0.55511 | train_balanced_accuracy: 0.64359 | train_logloss: 0.55619 | train_f1_macro: 0.65102 | valid_balanced_accuracy: 0.64246 | valid_logloss: 0.56298 | valid_f1_macro: 0.64976 |  0:42:17s
epoch 61 | loss: 0.54894 | train_balanced_accuracy: 0.6407  | train_logloss: 0.56071 | train_f1_macro: 0.64885 | valid_balanced_accuracy: 0.63681 | valid_logloss: 0.56591 | valid_f1_macro: 0.6444  |  0:42:58s
epoch 62 | loss: 0.54567 | train_balanced_accuracy: 0.60686 | train_logloss: 0.5487  | train_f1_macro: 0.60628 | valid_balanced_accuracy: 0.60583 | valid_logloss: 0.55221 | valid_f1_macro: 0.60522 |  0:43:39s
epoch 63 | loss: 0.54032 | train_balanced_accuracy: 0.62791 | train_logloss: 0.53429 | train_f1_macro: 0.63377 | valid_balanced_accuracy: 0.62625 | valid_logloss: 0.53714 | valid_f1_macro: 0.63185 |  0:44:22s
epoch 64 | loss: 0.5338  | train_balanced_accuracy: 0.67792 | train_logloss: 0.52856 | train_f1_macro: 0.6845  | valid_balanced_accuracy: 0.67615 | valid_logloss: 0.53267 | valid_f1_macro: 0.68276 |  0:45:03s
epoch 65 | loss: 0.52923 | train_balanced_accuracy: 0.65077 | train_logloss: 0.52859 | train_f1_macro: 0.66013 | valid_balanced_accuracy: 0.64564 | valid_logloss: 0.53444 | valid_f1_macro: 0.65424 |  0:45:45s
epoch 66 | loss: 0.5277  | train_balanced_accuracy: 0.63655 | train_logloss: 0.52548 | train_f1_macro: 0.64376 | valid_balanced_accuracy: 0.63267 | valid_logloss: 0.53416 | valid_f1_macro: 0.63925 |  0:46:26s
epoch 67 | loss: 0.52794 | train_balanced_accuracy: 0.6545  | train_logloss: 0.52485 | train_f1_macro: 0.66472 | valid_balanced_accuracy: 0.64278 | valid_logloss: 0.53417 | valid_f1_macro: 0.65122 |  0:47:08s
epoch 68 | loss: 0.52527 | train_balanced_accuracy: 0.61    | train_logloss: 0.54919 | train_f1_macro: 0.60769 | valid_balanced_accuracy: 0.61162 | valid_logloss: 0.55777 | valid_f1_macro: 0.61032 |  0:47:49s
epoch 69 | loss: 0.51863 | train_balanced_accuracy: 0.65745 | train_logloss: 0.50767 | train_f1_macro: 0.66839 | valid_balanced_accuracy: 0.64965 | valid_logloss: 0.51842 | valid_f1_macro: 0.65922 |  0:48:30s
epoch 70 | loss: 0.51201 | train_balanced_accuracy: 0.66663 | train_logloss: 0.49743 | train_f1_macro: 0.67867 | valid_balanced_accuracy: 0.66164 | valid_logloss: 0.50607 | valid_f1_macro: 0.67288 |  0:49:12s
epoch 71 | loss: 0.50411 | train_balanced_accuracy: 0.69127 | train_logloss: 0.48831 | train_f1_macro: 0.70311 | valid_balanced_accuracy: 0.68765 | valid_logloss: 0.502   | valid_f1_macro: 0.69879 |  0:49:52s
epoch 72 | loss: 0.49498 | train_balanced_accuracy: 0.70972 | train_logloss: 0.49097 | train_f1_macro: 0.71841 | valid_balanced_accuracy: 0.70259 | valid_logloss: 0.50002 | valid_f1_macro: 0.71065 |  0:50:34s
epoch 73 | loss: 0.48795 | train_balanced_accuracy: 0.69091 | train_logloss: 0.47627 | train_f1_macro: 0.70524 | valid_balanced_accuracy: 0.68478 | valid_logloss: 0.4871  | valid_f1_macro: 0.69797 |  0:51:15s
epoch 74 | loss: 0.4857  | train_balanced_accuracy: 0.7096  | train_logloss: 0.4705  | train_f1_macro: 0.72057 | valid_balanced_accuracy: 0.69882 | valid_logloss: 0.48481 | valid_f1_macro: 0.709   |  0:51:56s
epoch 75 | loss: 0.47175 | train_balanced_accuracy: 0.72515 | train_logloss: 0.46223 | train_f1_macro: 0.7349  | valid_balanced_accuracy: 0.72061 | valid_logloss: 0.47628 | valid_f1_macro: 0.72937 |  0:52:37s
epoch 76 | loss: 0.46819 | train_balanced_accuracy: 0.72551 | train_logloss: 0.45352 | train_f1_macro: 0.73655 | valid_balanced_accuracy: 0.71583 | valid_logloss: 0.47043 | valid_f1_macro: 0.72609 |  0:53:18s
epoch 77 | loss: 0.45693 | train_balanced_accuracy: 0.71862 | train_logloss: 0.4388  | train_f1_macro: 0.73419 | valid_balanced_accuracy: 0.70759 | valid_logloss: 0.46096 | valid_f1_macro: 0.72148 |  0:53:59s
epoch 78 | loss: 0.4479  | train_balanced_accuracy: 0.72241 | train_logloss: 0.4381  | train_f1_macro: 0.73826 | valid_balanced_accuracy: 0.71285 | valid_logloss: 0.45834 | valid_f1_macro: 0.72725 |  0:54:42s
epoch 79 | loss: 0.44125 | train_balanced_accuracy: 0.71645 | train_logloss: 0.42439 | train_f1_macro: 0.73503 | valid_balanced_accuracy: 0.70296 | valid_logloss: 0.44396 | valid_f1_macro: 0.7195  |  0:55:23s
epoch 80 | loss: 0.42949 | train_balanced_accuracy: 0.76791 | train_logloss: 0.42361 | train_f1_macro: 0.77053 | valid_balanced_accuracy: 0.75554 | valid_logloss: 0.45302 | valid_f1_macro: 0.7571  |  0:56:05s
epoch 81 | loss: 0.42127 | train_balanced_accuracy: 0.76588 | train_logloss: 0.41132 | train_f1_macro: 0.77373 | valid_balanced_accuracy: 0.75282 | valid_logloss: 0.43425 | valid_f1_macro: 0.7598  |  0:56:46s
epoch 82 | loss: 0.41106 | train_balanced_accuracy: 0.76063 | train_logloss: 0.40283 | train_f1_macro: 0.77307 | valid_balanced_accuracy: 0.74533 | valid_logloss: 0.42993 | valid_f1_macro: 0.75679 |  0:57:28s
epoch 83 | loss: 0.40528 | train_balanced_accuracy: 0.76821 | train_logloss: 0.38329 | train_f1_macro: 0.7827  | valid_balanced_accuracy: 0.75204 | valid_logloss: 0.4193  | valid_f1_macro: 0.7659  |  0:58:09s
epoch 84 | loss: 0.39535 | train_balanced_accuracy: 0.78298 | train_logloss: 0.39853 | train_f1_macro: 0.78814 | valid_balanced_accuracy: 0.76733 | valid_logloss: 0.42608 | valid_f1_macro: 0.77163 |  0:58:50s
epoch 85 | loss: 0.38614 | train_balanced_accuracy: 0.79941 | train_logloss: 0.38471 | train_f1_macro: 0.79745 | valid_balanced_accuracy: 0.78362 | valid_logloss: 0.42131 | valid_f1_macro: 0.78101 |  0:59:32s
epoch 86 | loss: 0.37273 | train_balanced_accuracy: 0.79418 | train_logloss: 0.36834 | train_f1_macro: 0.80682 | valid_balanced_accuracy: 0.7768  | valid_logloss: 0.40166 | valid_f1_macro: 0.78736 |  1:00:13s
epoch 87 | loss: 0.36153 | train_balanced_accuracy: 0.82772 | train_logloss: 0.34603 | train_f1_macro: 0.82784 | valid_balanced_accuracy: 0.80309 | valid_logloss: 0.38746 | valid_f1_macro: 0.80213 |  1:00:55s
epoch 88 | loss: 0.35256 | train_balanced_accuracy: 0.83839 | train_logloss: 0.3494  | train_f1_macro: 0.83287 | valid_balanced_accuracy: 0.8161  | valid_logloss: 0.38694 | valid_f1_macro: 0.81056 |  1:01:36s
epoch 89 | loss: 0.3422  | train_balanced_accuracy: 0.83337 | train_logloss: 0.31744 | train_f1_macro: 0.83736 | valid_balanced_accuracy: 0.80611 | valid_logloss: 0.36911 | valid_f1_macro: 0.80863 |  1:02:17s
epoch 90 | loss: 0.33173 | train_balanced_accuracy: 0.84925 | train_logloss: 0.32063 | train_f1_macro: 0.84611 | valid_balanced_accuracy: 0.8262  | valid_logloss: 0.36902 | valid_f1_macro: 0.82155 |  1:02:58s
epoch 91 | loss: 0.32016 | train_balanced_accuracy: 0.83571 | train_logloss: 0.29393 | train_f1_macro: 0.84695 | valid_balanced_accuracy: 0.81157 | valid_logloss: 0.3402  | valid_f1_macro: 0.82217 |  1:03:40s
epoch 92 | loss: 0.33261 | train_balanced_accuracy: 0.81638 | train_logloss: 0.33804 | train_f1_macro: 0.82726 | valid_balanced_accuracy: 0.797   | valid_logloss: 0.37719 | valid_f1_macro: 0.80662 |  1:04:23s
epoch 93 | loss: 0.33729 | train_balanced_accuracy: 0.81748 | train_logloss: 0.30048 | train_f1_macro: 0.83506 | valid_balanced_accuracy: 0.79732 | valid_logloss: 0.35941 | valid_f1_macro: 0.81312 |  1:05:04s
epoch 94 | loss: 0.33095 | train_balanced_accuracy: 0.8302  | train_logloss: 0.31188 | train_f1_macro: 0.84201 | valid_balanced_accuracy: 0.8068  | valid_logloss: 0.351   | valid_f1_macro: 0.8167  |  1:05:45s
epoch 95 | loss: 0.31293 | train_balanced_accuracy: 0.83474 | train_logloss: 0.27391 | train_f1_macro: 0.84911 | valid_balanced_accuracy: 0.81326 | valid_logloss: 0.32906 | valid_f1_macro: 0.82622 |  1:06:27s
epoch 96 | loss: 0.30047 | train_balanced_accuracy: 0.8434  | train_logloss: 0.26975 | train_f1_macro: 0.8575  | valid_balanced_accuracy: 0.81838 | valid_logloss: 0.32549 | valid_f1_macro: 0.83083 |  1:07:08s
epoch 97 | loss: 0.2866  | train_balanced_accuracy: 0.86282 | train_logloss: 0.24897 | train_f1_macro: 0.8702  | valid_balanced_accuracy: 0.83319 | valid_logloss: 0.30929 | valid_f1_macro: 0.8398  |  1:07:50s
epoch 98 | loss: 0.28054 | train_balanced_accuracy: 0.865   | train_logloss: 0.26073 | train_f1_macro: 0.86757 | valid_balanced_accuracy: 0.84166 | valid_logloss: 0.32364 | valid_f1_macro: 0.84346 |  1:08:31s
epoch 99 | loss: 0.35513 | train_balanced_accuracy: 0.76197 | train_logloss: 0.45081 | train_f1_macro: 0.76538 | valid_balanced_accuracy: 0.74548 | valid_logloss: 0.47876 | valid_f1_macro: 0.74745 |  1:09:13s
epoch 100| loss: 0.3932  | train_balanced_accuracy: 0.78762 | train_logloss: 0.34761 | train_f1_macro: 0.80891 | valid_balanced_accuracy: 0.76824 | valid_logloss: 0.41184 | valid_f1_macro: 0.78741 |  1:09:54s
epoch 101| loss: 0.33797 | train_balanced_accuracy: 0.81829 | train_logloss: 0.30776 | train_f1_macro: 0.83611 | valid_balanced_accuracy: 0.79064 | valid_logloss: 0.38314 | valid_f1_macro: 0.80824 |  1:10:36s
epoch 102| loss: 0.31721 | train_balanced_accuracy: 0.84654 | train_logloss: 0.27754 | train_f1_macro: 0.86032 | valid_balanced_accuracy: 0.81772 | valid_logloss: 0.35013 | valid_f1_macro: 0.83125 |  1:11:17s
epoch 103| loss: 0.30752 | train_balanced_accuracy: 0.85774 | train_logloss: 0.26391 | train_f1_macro: 0.86692 | valid_balanced_accuracy: 0.83193 | valid_logloss: 0.32602 | valid_f1_macro: 0.84135 |  1:11:59s
epoch 104| loss: 0.30231 | train_balanced_accuracy: 0.83882 | train_logloss: 0.29803 | train_f1_macro: 0.85127 | valid_balanced_accuracy: 0.8169  | valid_logloss: 0.35811 | valid_f1_macro: 0.8281  |  1:12:40s
epoch 105| loss: 0.32251 | train_balanced_accuracy: 0.82294 | train_logloss: 0.31808 | train_f1_macro: 0.83495 | valid_balanced_accuracy: 0.79652 | valid_logloss: 0.39159 | valid_f1_macro: 0.80926 |  1:13:22s
epoch 106| loss: 0.34671 | train_balanced_accuracy: 0.77419 | train_logloss: 0.34138 | train_f1_macro: 0.80014 | valid_balanced_accuracy: 0.75706 | valid_logloss: 0.40451 | valid_f1_macro: 0.78084 |  1:14:04s
epoch 107| loss: 0.32891 | train_balanced_accuracy: 0.83267 | train_logloss: 0.2884  | train_f1_macro: 0.84781 | valid_balanced_accuracy: 0.80854 | valid_logloss: 0.34703 | valid_f1_macro: 0.82241 |  1:14:46s
epoch 108| loss: 0.3137  | train_balanced_accuracy: 0.83106 | train_logloss: 0.28379 | train_f1_macro: 0.84688 | valid_balanced_accuracy: 0.8045  | valid_logloss: 0.34923 | valid_f1_macro: 0.82017 |  1:15:27s
epoch 109| loss: 0.28996 | train_balanced_accuracy: 0.86527 | train_logloss: 0.25827 | train_f1_macro: 0.8674  | valid_balanced_accuracy: 0.83486 | valid_logloss: 0.32736 | valid_f1_macro: 0.83814 |  1:16:09s
epoch 110| loss: 0.3418  | train_balanced_accuracy: 0.78411 | train_logloss: 0.3835  | train_f1_macro: 0.79818 | valid_balanced_accuracy: 0.76741 | valid_logloss: 0.42286 | valid_f1_macro: 0.77977 |  1:16:50s
epoch 111| loss: 0.40515 | train_balanced_accuracy: 0.77436 | train_logloss: 0.4004  | train_f1_macro: 0.79205 | valid_balanced_accuracy: 0.76321 | valid_logloss: 0.42883 | valid_f1_macro: 0.77984 |  1:17:32s
epoch 112| loss: 0.41501 | train_balanced_accuracy: 0.74605 | train_logloss: 0.43601 | train_f1_macro: 0.7634  | valid_balanced_accuracy: 0.73325 | valid_logloss: 0.45414 | valid_f1_macro: 0.74965 |  1:18:13s
epoch 113| loss: 0.40214 | train_balanced_accuracy: 0.80648 | train_logloss: 0.34367 | train_f1_macro: 0.82115 | valid_balanced_accuracy: 0.78068 | valid_logloss: 0.38462 | valid_f1_macro: 0.79512 |  1:18:55s
epoch 114| loss: 0.36159 | train_balanced_accuracy: 0.81145 | train_logloss: 0.33307 | train_f1_macro: 0.8267  | valid_balanced_accuracy: 0.7853  | valid_logloss: 0.37732 | valid_f1_macro: 0.79992 |  1:19:36s
epoch 115| loss: 0.37813 | train_balanced_accuracy: 0.81929 | train_logloss: 0.34999 | train_f1_macro: 0.82621 | valid_balanced_accuracy: 0.79353 | valid_logloss: 0.38674 | valid_f1_macro: 0.80179 |  1:20:18s
epoch 116| loss: 0.33724 | train_balanced_accuracy: 0.8557  | train_logloss: 0.28346 | train_f1_macro: 0.86253 | valid_balanced_accuracy: 0.82666 | valid_logloss: 0.32947 | valid_f1_macro: 0.83303 |  1:20:59s
epoch 117| loss: 0.34995 | train_balanced_accuracy: 0.81978 | train_logloss: 0.32786 | train_f1_macro: 0.83265 | valid_balanced_accuracy: 0.80015 | valid_logloss: 0.37292 | valid_f1_macro: 0.81141 |  1:21:41s
epoch 118| loss: 0.32632 | train_balanced_accuracy: 0.85021 | train_logloss: 0.28869 | train_f1_macro: 0.85834 | valid_balanced_accuracy: 0.82384 | valid_logloss: 0.33735 | valid_f1_macro: 0.83136 |  1:22:23s

Early stopping occurred at epoch 118 with best_epoch = 98 and best_valid_f1_macro = 0.84346
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/callbacks.py:172: UserWarning: Best weights from best epoch are automatically used!
  warnings.warn(wrn_msg)
[CV 3/5; 7/7] END classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1;, score=0.513 total time=83.7min
[CV 4/5; 7/7] START classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: n_d changed from 8 to 64
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_dims changed from [] to [31, 39, 42, 149, 112, 82, 116, 131]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_emb_dim changed from 20 to [15, 19, 20, 20, 20, 20, 20, 20]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_idxs changed from [] to [1, 2, 3, 10, 11, 12, 18, 19]
  warnings.warn(wrn_msg)
epoch 0  | loss: 3.11167 | train_balanced_accuracy: 0.5     | train_logloss: 7.79162 | train_f1_macro: 0.24731 | valid_balanced_accuracy: 0.5     | valid_logloss: 7.85196 | valid_f1_macro: 0.24734 |  0:00:44s
epoch 1  | loss: 1.95651 | train_balanced_accuracy: 0.54642 | train_logloss: 1.86544 | train_f1_macro: 0.45593 | valid_balanced_accuracy: 0.54525 | valid_logloss: 1.86123 | valid_f1_macro: 0.45835 |  0:01:28s
epoch 2  | loss: 0.94215 | train_balanced_accuracy: 0.5181  | train_logloss: 0.8489  | train_f1_macro: 0.45992 | valid_balanced_accuracy: 0.51469 | valid_logloss: 0.842   | valid_f1_macro: 0.45713 |  0:02:11s
epoch 3  | loss: 0.84174 | train_balanced_accuracy: 0.55188 | train_logloss: 0.63743 | train_f1_macro: 0.53961 | valid_balanced_accuracy: 0.55978 | valid_logloss: 0.63408 | valid_f1_macro: 0.5486  |  0:02:54s
epoch 4  | loss: 0.62772 | train_balanced_accuracy: 0.50893 | train_logloss: 0.63235 | train_f1_macro: 0.44241 | valid_balanced_accuracy: 0.50819 | valid_logloss: 0.63054 | valid_f1_macro: 0.4418  |  0:03:36s
epoch 5  | loss: 0.62322 | train_balanced_accuracy: 0.52078 | train_logloss: 0.62951 | train_f1_macro: 0.49834 | valid_balanced_accuracy: 0.51553 | valid_logloss: 0.62908 | valid_f1_macro: 0.49023 |  0:04:18s
epoch 6  | loss: 0.61672 | train_balanced_accuracy: 0.52822 | train_logloss: 0.61545 | train_f1_macro: 0.49275 | valid_balanced_accuracy: 0.52709 | valid_logloss: 0.61466 | valid_f1_macro: 0.48984 |  0:05:01s
epoch 7  | loss: 0.61606 | train_balanced_accuracy: 0.52254 | train_logloss: 0.62751 | train_f1_macro: 0.47166 | valid_balanced_accuracy: 0.52011 | valid_logloss: 0.62992 | valid_f1_macro: 0.46629 |  0:05:43s
epoch 8  | loss: 0.61158 | train_balanced_accuracy: 0.55272 | train_logloss: 0.65251 | train_f1_macro: 0.54433 | valid_balanced_accuracy: 0.55834 | valid_logloss: 0.6519  | valid_f1_macro: 0.55077 |  0:06:26s
epoch 9  | loss: 0.61192 | train_balanced_accuracy: 0.51451 | train_logloss: 0.62093 | train_f1_macro: 0.4443  | valid_balanced_accuracy: 0.51295 | valid_logloss: 0.61749 | valid_f1_macro: 0.44125 |  0:07:09s
epoch 10 | loss: 0.60913 | train_balanced_accuracy: 0.53254 | train_logloss: 0.60937 | train_f1_macro: 0.49827 | valid_balanced_accuracy: 0.53337 | valid_logloss: 0.60784 | valid_f1_macro: 0.49931 |  0:07:51s
epoch 11 | loss: 0.6095  | train_balanced_accuracy: 0.51291 | train_logloss: 0.61113 | train_f1_macro: 0.44341 | valid_balanced_accuracy: 0.51073 | valid_logloss: 0.60976 | valid_f1_macro: 0.43941 |  0:08:33s
epoch 12 | loss: 0.60842 | train_balanced_accuracy: 0.53109 | train_logloss: 0.60468 | train_f1_macro: 0.4921  | valid_balanced_accuracy: 0.52692 | valid_logloss: 0.60379 | valid_f1_macro: 0.48303 |  0:09:15s
epoch 13 | loss: 0.60478 | train_balanced_accuracy: 0.55038 | train_logloss: 0.61139 | train_f1_macro: 0.53143 | valid_balanced_accuracy: 0.54941 | valid_logloss: 0.60704 | valid_f1_macro: 0.52798 |  0:09:58s
epoch 14 | loss: 0.60407 | train_balanced_accuracy: 0.53381 | train_logloss: 0.60732 | train_f1_macro: 0.49718 | valid_balanced_accuracy: 0.53305 | valid_logloss: 0.60536 | valid_f1_macro: 0.49592 |  0:10:42s
epoch 15 | loss: 0.60203 | train_balanced_accuracy: 0.53013 | train_logloss: 0.60258 | train_f1_macro: 0.48637 | valid_balanced_accuracy: 0.52756 | valid_logloss: 0.60255 | valid_f1_macro: 0.48042 |  0:11:24s
epoch 16 | loss: 0.60399 | train_balanced_accuracy: 0.53375 | train_logloss: 0.60389 | train_f1_macro: 0.4978  | valid_balanced_accuracy: 0.53042 | valid_logloss: 0.60291 | valid_f1_macro: 0.49005 |  0:12:06s
epoch 17 | loss: 0.60307 | train_balanced_accuracy: 0.5316  | train_logloss: 0.59793 | train_f1_macro: 0.49321 | valid_balanced_accuracy: 0.52854 | valid_logloss: 0.59736 | valid_f1_macro: 0.48589 |  0:12:49s
epoch 18 | loss: 0.59078 | train_balanced_accuracy: 0.57573 | train_logloss: 0.58112 | train_f1_macro: 0.57373 | valid_balanced_accuracy: 0.57139 | valid_logloss: 0.58093 | valid_f1_macro: 0.568   |  0:13:32s
epoch 19 | loss: 0.58294 | train_balanced_accuracy: 0.53884 | train_logloss: 0.62238 | train_f1_macro: 0.51889 | valid_balanced_accuracy: 0.5388  | valid_logloss: 0.62071 | valid_f1_macro: 0.51786 |  0:14:15s
epoch 20 | loss: 0.61474 | train_balanced_accuracy: 0.52381 | train_logloss: 0.62283 | train_f1_macro: 0.4755  | valid_balanced_accuracy: 0.52163 | valid_logloss: 0.62026 | valid_f1_macro: 0.47214 |  0:14:57s
epoch 21 | loss: 0.61125 | train_balanced_accuracy: 0.52643 | train_logloss: 0.60599 | train_f1_macro: 0.47979 | valid_balanced_accuracy: 0.52563 | valid_logloss: 0.60346 | valid_f1_macro: 0.47707 |  0:15:40s
epoch 22 | loss: 0.60483 | train_balanced_accuracy: 0.52702 | train_logloss: 0.59987 | train_f1_macro: 0.48017 | valid_balanced_accuracy: 0.52537 | valid_logloss: 0.5974  | valid_f1_macro: 0.47625 |  0:16:23s
epoch 23 | loss: 0.59919 | train_balanced_accuracy: 0.527   | train_logloss: 0.59636 | train_f1_macro: 0.48004 | valid_balanced_accuracy: 0.52537 | valid_logloss: 0.59347 | valid_f1_macro: 0.47625 |  0:17:05s
epoch 24 | loss: 0.5986  | train_balanced_accuracy: 0.54132 | train_logloss: 0.59731 | train_f1_macro: 0.51131 | valid_balanced_accuracy: 0.54424 | valid_logloss: 0.59367 | valid_f1_macro: 0.51526 |  0:17:48s
epoch 25 | loss: 0.59614 | train_balanced_accuracy: 0.54523 | train_logloss: 0.5935  | train_f1_macro: 0.51774 | valid_balanced_accuracy: 0.54218 | valid_logloss: 0.59304 | valid_f1_macro: 0.51344 |  0:18:30s
epoch 26 | loss: 0.5961  | train_balanced_accuracy: 0.54931 | train_logloss: 0.59469 | train_f1_macro: 0.52507 | valid_balanced_accuracy: 0.55085 | valid_logloss: 0.59292 | valid_f1_macro: 0.52754 |  0:19:13s
epoch 27 | loss: 0.59462 | train_balanced_accuracy: 0.53699 | train_logloss: 0.6029  | train_f1_macro: 0.50355 | valid_balanced_accuracy: 0.53635 | valid_logloss: 0.60161 | valid_f1_macro: 0.50109 |  0:19:56s
epoch 28 | loss: 0.60289 | train_balanced_accuracy: 0.5453  | train_logloss: 0.6012  | train_f1_macro: 0.51707 | valid_balanced_accuracy: 0.5476  | valid_logloss: 0.60014 | valid_f1_macro: 0.51965 |  0:20:40s
epoch 29 | loss: 0.59958 | train_balanced_accuracy: 0.53587 | train_logloss: 0.59836 | train_f1_macro: 0.50005 | valid_balanced_accuracy: 0.53948 | valid_logloss: 0.59823 | valid_f1_macro: 0.50535 |  0:21:22s
epoch 30 | loss: 0.59675 | train_balanced_accuracy: 0.55198 | train_logloss: 0.59197 | train_f1_macro: 0.52531 | valid_balanced_accuracy: 0.5546  | valid_logloss: 0.59058 | valid_f1_macro: 0.52982 |  0:22:04s
epoch 31 | loss: 0.58876 | train_balanced_accuracy: 0.56297 | train_logloss: 0.58509 | train_f1_macro: 0.54173 | valid_balanced_accuracy: 0.56219 | valid_logloss: 0.5848  | valid_f1_macro: 0.54126 |  0:22:47s
epoch 32 | loss: 0.58375 | train_balanced_accuracy: 0.59476 | train_logloss: 0.57377 | train_f1_macro: 0.59204 | valid_balanced_accuracy: 0.59913 | valid_logloss: 0.56922 | valid_f1_macro: 0.59687 |  0:23:30s
epoch 33 | loss: 0.57833 | train_balanced_accuracy: 0.58462 | train_logloss: 0.57138 | train_f1_macro: 0.57627 | valid_balanced_accuracy: 0.58536 | valid_logloss: 0.57018 | valid_f1_macro: 0.57642 |  0:24:12s
epoch 34 | loss: 0.57669 | train_balanced_accuracy: 0.60919 | train_logloss: 0.56796 | train_f1_macro: 0.6107  | valid_balanced_accuracy: 0.60819 | valid_logloss: 0.56728 | valid_f1_macro: 0.60944 |  0:24:55s
epoch 35 | loss: 0.5708  | train_balanced_accuracy: 0.6114  | train_logloss: 0.56896 | train_f1_macro: 0.61332 | valid_balanced_accuracy: 0.61308 | valid_logloss: 0.56916 | valid_f1_macro: 0.6153  |  0:25:38s
epoch 36 | loss: 0.56395 | train_balanced_accuracy: 0.61601 | train_logloss: 0.55592 | train_f1_macro: 0.61896 | valid_balanced_accuracy: 0.62049 | valid_logloss: 0.55513 | valid_f1_macro: 0.62447 |  0:26:21s
epoch 37 | loss: 0.55937 | train_balanced_accuracy: 0.64399 | train_logloss: 0.54659 | train_f1_macro: 0.65262 | valid_balanced_accuracy: 0.64312 | valid_logloss: 0.54899 | valid_f1_macro: 0.65171 |  0:27:04s
epoch 38 | loss: 0.55115 | train_balanced_accuracy: 0.6032  | train_logloss: 0.56765 | train_f1_macro: 0.60018 | valid_balanced_accuracy: 0.60336 | valid_logloss: 0.57259 | valid_f1_macro: 0.59987 |  0:27:46s
epoch 39 | loss: 0.55705 | train_balanced_accuracy: 0.57938 | train_logloss: 0.57965 | train_f1_macro: 0.56288 | valid_balanced_accuracy: 0.58247 | valid_logloss: 0.5816  | valid_f1_macro: 0.5661  |  0:28:30s
epoch 40 | loss: 0.58565 | train_balanced_accuracy: 0.55915 | train_logloss: 0.59    | train_f1_macro: 0.53122 | valid_balanced_accuracy: 0.56171 | valid_logloss: 0.59148 | valid_f1_macro: 0.53366 |  0:29:12s
epoch 41 | loss: 0.60435 | train_balanced_accuracy: 0.54246 | train_logloss: 0.60327 | train_f1_macro: 0.50374 | valid_balanced_accuracy: 0.54573 | valid_logloss: 0.60165 | valid_f1_macro: 0.50778 |  0:29:55s
epoch 42 | loss: 0.59959 | train_balanced_accuracy: 0.56774 | train_logloss: 0.59852 | train_f1_macro: 0.55051 | valid_balanced_accuracy: 0.56434 | valid_logloss: 0.59861 | valid_f1_macro: 0.54575 |  0:30:39s
epoch 43 | loss: 0.59846 | train_balanced_accuracy: 0.55947 | train_logloss: 0.58678 | train_f1_macro: 0.53232 | valid_balanced_accuracy: 0.55862 | valid_logloss: 0.58696 | valid_f1_macro: 0.53049 |  0:31:23s
epoch 44 | loss: 0.58337 | train_balanced_accuracy: 0.60725 | train_logloss: 0.57051 | train_f1_macro: 0.61024 | valid_balanced_accuracy: 0.61177 | valid_logloss: 0.57137 | valid_f1_macro: 0.6155  |  0:32:06s
epoch 45 | loss: 0.57371 | train_balanced_accuracy: 0.62207 | train_logloss: 0.5664  | train_f1_macro: 0.62793 | valid_balanced_accuracy: 0.62751 | valid_logloss: 0.56495 | valid_f1_macro: 0.63405 |  0:32:49s
epoch 46 | loss: 0.56993 | train_balanced_accuracy: 0.59593 | train_logloss: 0.5673  | train_f1_macro: 0.59428 | valid_balanced_accuracy: 0.59719 | valid_logloss: 0.56733 | valid_f1_macro: 0.59522 |  0:33:31s
epoch 47 | loss: 0.57394 | train_balanced_accuracy: 0.5796  | train_logloss: 0.58537 | train_f1_macro: 0.57008 | valid_balanced_accuracy: 0.57569 | valid_logloss: 0.58867 | valid_f1_macro: 0.5647  |  0:34:14s
epoch 48 | loss: 0.57079 | train_balanced_accuracy: 0.59939 | train_logloss: 0.56386 | train_f1_macro: 0.59792 | valid_balanced_accuracy: 0.60103 | valid_logloss: 0.56337 | valid_f1_macro: 0.59977 |  0:34:57s
epoch 49 | loss: 0.56478 | train_balanced_accuracy: 0.60248 | train_logloss: 0.55531 | train_f1_macro: 0.60114 | valid_balanced_accuracy: 0.60707 | valid_logloss: 0.55021 | valid_f1_macro: 0.60658 |  0:35:40s
epoch 50 | loss: 0.55811 | train_balanced_accuracy: 0.6309  | train_logloss: 0.55889 | train_f1_macro: 0.63771 | valid_balanced_accuracy: 0.63522 | valid_logloss: 0.55841 | valid_f1_macro: 0.64244 |  0:36:23s
epoch 51 | loss: 0.55701 | train_balanced_accuracy: 0.62861 | train_logloss: 0.55165 | train_f1_macro: 0.63517 | valid_balanced_accuracy: 0.63516 | valid_logloss: 0.54713 | valid_f1_macro: 0.64273 |  0:37:05s
epoch 52 | loss: 0.55432 | train_balanced_accuracy: 0.61621 | train_logloss: 0.55068 | train_f1_macro: 0.61921 | valid_balanced_accuracy: 0.61966 | valid_logloss: 0.55192 | valid_f1_macro: 0.62334 |  0:37:48s
epoch 53 | loss: 0.55452 | train_balanced_accuracy: 0.64091 | train_logloss: 0.54331 | train_f1_macro: 0.64924 | valid_balanced_accuracy: 0.64891 | valid_logloss: 0.54079 | valid_f1_macro: 0.65821 |  0:38:31s
epoch 54 | loss: 0.54998 | train_balanced_accuracy: 0.65241 | train_logloss: 0.54933 | train_f1_macro: 0.66134 | valid_balanced_accuracy: 0.65911 | valid_logloss: 0.54572 | valid_f1_macro: 0.66849 |  0:39:14s
epoch 55 | loss: 0.5513  | train_balanced_accuracy: 0.63765 | train_logloss: 0.55667 | train_f1_macro: 0.64517 | valid_balanced_accuracy: 0.64151 | valid_logloss: 0.55808 | valid_f1_macro: 0.64954 |  0:39:57s
epoch 56 | loss: 0.55941 | train_balanced_accuracy: 0.5772  | train_logloss: 0.82615 | train_f1_macro: 0.56803 | valid_balanced_accuracy: 0.57226 | valid_logloss: 0.83782 | valid_f1_macro: 0.5633  |  0:40:41s
epoch 57 | loss: 0.55415 | train_balanced_accuracy: 0.63322 | train_logloss: 0.54667 | train_f1_macro: 0.64049 | valid_balanced_accuracy: 0.6369  | valid_logloss: 0.54709 | valid_f1_macro: 0.64474 |  0:41:24s
epoch 58 | loss: 0.54808 | train_balanced_accuracy: 0.65104 | train_logloss: 0.53819 | train_f1_macro: 0.66033 | valid_balanced_accuracy: 0.65585 | valid_logloss: 0.53755 | valid_f1_macro: 0.66554 |  0:42:06s
epoch 59 | loss: 0.54346 | train_balanced_accuracy: 0.6429  | train_logloss: 0.53948 | train_f1_macro: 0.65153 | valid_balanced_accuracy: 0.6506  | valid_logloss: 0.53593 | valid_f1_macro: 0.66011 |  0:42:49s
epoch 60 | loss: 0.54399 | train_balanced_accuracy: 0.63864 | train_logloss: 0.53597 | train_f1_macro: 0.64667 | valid_balanced_accuracy: 0.64167 | valid_logloss: 0.53707 | valid_f1_macro: 0.65021 |  0:43:32s
epoch 61 | loss: 0.54378 | train_balanced_accuracy: 0.6383  | train_logloss: 0.53624 | train_f1_macro: 0.64632 | valid_balanced_accuracy: 0.63559 | valid_logloss: 0.53747 | valid_f1_macro: 0.6431  |  0:44:15s
epoch 62 | loss: 0.54018 | train_balanced_accuracy: 0.65365 | train_logloss: 0.5305  | train_f1_macro: 0.66359 | valid_balanced_accuracy: 0.65556 | valid_logloss: 0.53128 | valid_f1_macro: 0.66575 |  0:44:57s
epoch 63 | loss: 0.53579 | train_balanced_accuracy: 0.6005  | train_logloss: 0.63763 | train_f1_macro: 0.6002  | valid_balanced_accuracy: 0.59295 | valid_logloss: 0.64133 | valid_f1_macro: 0.59093 |  0:45:40s
epoch 64 | loss: 0.53535 | train_balanced_accuracy: 0.66797 | train_logloss: 0.52954 | train_f1_macro: 0.67767 | valid_balanced_accuracy: 0.66803 | valid_logloss: 0.53041 | valid_f1_macro: 0.67756 |  0:46:23s
epoch 65 | loss: 0.53165 | train_balanced_accuracy: 0.66431 | train_logloss: 0.52086 | train_f1_macro: 0.67516 | valid_balanced_accuracy: 0.661   | valid_logloss: 0.52544 | valid_f1_macro: 0.67157 |  0:47:05s
epoch 66 | loss: 0.52728 | train_balanced_accuracy: 0.66956 | train_logloss: 0.51776 | train_f1_macro: 0.68007 | valid_balanced_accuracy: 0.66589 | valid_logloss: 0.52324 | valid_f1_macro: 0.67615 |  0:47:48s
epoch 67 | loss: 0.52523 | train_balanced_accuracy: 0.64652 | train_logloss: 0.51423 | train_f1_macro: 0.65591 | valid_balanced_accuracy: 0.63848 | valid_logloss: 0.52198 | valid_f1_macro: 0.64637 |  0:48:30s
epoch 68 | loss: 0.52165 | train_balanced_accuracy: 0.67347 | train_logloss: 0.52287 | train_f1_macro: 0.68233 | valid_balanced_accuracy: 0.66519 | valid_logloss: 0.53175 | valid_f1_macro: 0.67359 |  0:49:13s
epoch 69 | loss: 0.54135 | train_balanced_accuracy: 0.64191 | train_logloss: 0.52989 | train_f1_macro: 0.6505  | valid_balanced_accuracy: 0.63654 | valid_logloss: 0.53689 | valid_f1_macro: 0.64418 |  0:49:56s
epoch 70 | loss: 0.52831 | train_balanced_accuracy: 0.65579 | train_logloss: 0.52678 | train_f1_macro: 0.6663  | valid_balanced_accuracy: 0.6483  | valid_logloss: 0.52999 | valid_f1_macro: 0.65764 |  0:50:40s
epoch 71 | loss: 0.53575 | train_balanced_accuracy: 0.65058 | train_logloss: 0.55299 | train_f1_macro: 0.6575  | valid_balanced_accuracy: 0.64729 | valid_logloss: 0.55337 | valid_f1_macro: 0.65397 |  0:51:23s
epoch 72 | loss: 0.5663  | train_balanced_accuracy: 0.61554 | train_logloss: 0.56813 | train_f1_macro: 0.62064 | valid_balanced_accuracy: 0.61789 | valid_logloss: 0.56496 | valid_f1_macro: 0.62325 |  0:52:06s
epoch 73 | loss: 0.57078 | train_balanced_accuracy: 0.61983 | train_logloss: 0.55417 | train_f1_macro: 0.62533 | valid_balanced_accuracy: 0.62692 | valid_logloss: 0.55281 | valid_f1_macro: 0.63337 |  0:52:49s
epoch 74 | loss: 0.54963 | train_balanced_accuracy: 0.63366 | train_logloss: 0.53182 | train_f1_macro: 0.64103 | valid_balanced_accuracy: 0.63343 | valid_logloss: 0.53266 | valid_f1_macro: 0.64077 |  0:53:32s
epoch 75 | loss: 0.54127 | train_balanced_accuracy: 0.60881 | train_logloss: 0.5505  | train_f1_macro: 0.61086 | valid_balanced_accuracy: 0.61162 | valid_logloss: 0.54923 | valid_f1_macro: 0.61401 |  0:54:15s
epoch 76 | loss: 0.5616  | train_balanced_accuracy: 0.67026 | train_logloss: 0.55549 | train_f1_macro: 0.67287 | valid_balanced_accuracy: 0.67333 | valid_logloss: 0.55424 | valid_f1_macro: 0.67631 |  0:54:58s
epoch 77 | loss: 0.55712 | train_balanced_accuracy: 0.64099 | train_logloss: 0.55202 | train_f1_macro: 0.64761 | valid_balanced_accuracy: 0.65095 | valid_logloss: 0.54709 | valid_f1_macro: 0.65855 |  0:55:41s
epoch 78 | loss: 0.54858 | train_balanced_accuracy: 0.66418 | train_logloss: 0.54571 | train_f1_macro: 0.6708  | valid_balanced_accuracy: 0.6712  | valid_logloss: 0.54148 | valid_f1_macro: 0.67868 |  0:56:24s
epoch 79 | loss: 0.55455 | train_balanced_accuracy: 0.6005  | train_logloss: 0.54994 | train_f1_macro: 0.60118 | valid_balanced_accuracy: 0.60015 | valid_logloss: 0.55251 | valid_f1_macro: 0.60023 |  0:57:07s
epoch 80 | loss: 0.54757 | train_balanced_accuracy: 0.60009 | train_logloss: 0.55122 | train_f1_macro: 0.59723 | valid_balanced_accuracy: 0.60562 | valid_logloss: 0.5521  | valid_f1_macro: 0.60389 |  0:57:50s
epoch 81 | loss: 0.54484 | train_balanced_accuracy: 0.60279 | train_logloss: 0.54751 | train_f1_macro: 0.60237 | valid_balanced_accuracy: 0.60617 | valid_logloss: 0.55065 | valid_f1_macro: 0.60611 |  0:58:33s
epoch 82 | loss: 0.55703 | train_balanced_accuracy: 0.64398 | train_logloss: 0.56423 | train_f1_macro: 0.65011 | valid_balanced_accuracy: 0.64627 | valid_logloss: 0.56583 | valid_f1_macro: 0.65276 |  0:59:16s
epoch 83 | loss: 0.56543 | train_balanced_accuracy: 0.63535 | train_logloss: 0.55179 | train_f1_macro: 0.6428  | valid_balanced_accuracy: 0.63    | valid_logloss: 0.55504 | valid_f1_macro: 0.63685 |  0:59:58s
epoch 84 | loss: 0.54849 | train_balanced_accuracy: 0.64236 | train_logloss: 0.54569 | train_f1_macro: 0.6497  | valid_balanced_accuracy: 0.64562 | valid_logloss: 0.54591 | valid_f1_macro: 0.65339 |  1:00:42s
epoch 85 | loss: 0.54499 | train_balanced_accuracy: 0.65965 | train_logloss: 0.54275 | train_f1_macro: 0.66537 | valid_balanced_accuracy: 0.66107 | valid_logloss: 0.54291 | valid_f1_macro: 0.66681 |  1:01:25s
epoch 86 | loss: 0.54029 | train_balanced_accuracy: 0.65525 | train_logloss: 0.53093 | train_f1_macro: 0.6629  | valid_balanced_accuracy: 0.65338 | valid_logloss: 0.53132 | valid_f1_macro: 0.66104 |  1:02:08s
epoch 87 | loss: 0.53466 | train_balanced_accuracy: 0.63955 | train_logloss: 0.52842 | train_f1_macro: 0.64772 | valid_balanced_accuracy: 0.6426  | valid_logloss: 0.53036 | valid_f1_macro: 0.65119 |  1:02:51s
epoch 88 | loss: 0.52732 | train_balanced_accuracy: 0.65885 | train_logloss: 0.52423 | train_f1_macro: 0.66783 | valid_balanced_accuracy: 0.65767 | valid_logloss: 0.5278  | valid_f1_macro: 0.66642 |  1:03:35s
epoch 89 | loss: 0.55415 | train_balanced_accuracy: 0.61619 | train_logloss: 0.54829 | train_f1_macro: 0.62052 | valid_balanced_accuracy: 0.61805 | valid_logloss: 0.54938 | valid_f1_macro: 0.62258 |  1:04:17s
epoch 90 | loss: 0.54416 | train_balanced_accuracy: 0.67164 | train_logloss: 0.53274 | train_f1_macro: 0.67919 | valid_balanced_accuracy: 0.67033 | valid_logloss: 0.5352  | valid_f1_macro: 0.67759 |  1:05:00s
epoch 91 | loss: 0.54621 | train_balanced_accuracy: 0.66436 | train_logloss: 0.53912 | train_f1_macro: 0.67215 | valid_balanced_accuracy: 0.6645  | valid_logloss: 0.53974 | valid_f1_macro: 0.67257 |  1:05:43s
epoch 92 | loss: 0.53523 | train_balanced_accuracy: 0.67435 | train_logloss: 0.52946 | train_f1_macro: 0.68219 | valid_balanced_accuracy: 0.67773 | valid_logloss: 0.53019 | valid_f1_macro: 0.68599 |  1:06:26s
epoch 93 | loss: 0.53025 | train_balanced_accuracy: 0.6795  | train_logloss: 0.5257  | train_f1_macro: 0.68842 | valid_balanced_accuracy: 0.68217 | valid_logloss: 0.52699 | valid_f1_macro: 0.69123 |  1:07:09s
epoch 94 | loss: 0.52964 | train_balanced_accuracy: 0.67842 | train_logloss: 0.52251 | train_f1_macro: 0.68765 | valid_balanced_accuracy: 0.68111 | valid_logloss: 0.52292 | valid_f1_macro: 0.69099 |  1:07:52s
epoch 95 | loss: 0.53882 | train_balanced_accuracy: 0.64601 | train_logloss: 0.53907 | train_f1_macro: 0.65368 | valid_balanced_accuracy: 0.642   | valid_logloss: 0.54041 | valid_f1_macro: 0.64947 |  1:08:35s
epoch 96 | loss: 0.54497 | train_balanced_accuracy: 0.65532 | train_logloss: 0.53768 | train_f1_macro: 0.66374 | valid_balanced_accuracy: 0.6544  | valid_logloss: 0.54032 | valid_f1_macro: 0.66227 |  1:09:18s
epoch 97 | loss: 0.53456 | train_balanced_accuracy: 0.65403 | train_logloss: 0.53814 | train_f1_macro: 0.66252 | valid_balanced_accuracy: 0.65579 | valid_logloss: 0.53625 | valid_f1_macro: 0.66456 |  1:10:01s
epoch 98 | loss: 0.53992 | train_balanced_accuracy: 0.64587 | train_logloss: 0.54459 | train_f1_macro: 0.6538  | valid_balanced_accuracy: 0.64469 | valid_logloss: 0.54645 | valid_f1_macro: 0.65259 |  1:10:46s
epoch 99 | loss: 0.53413 | train_balanced_accuracy: 0.65953 | train_logloss: 0.52244 | train_f1_macro: 0.67022 | valid_balanced_accuracy: 0.65565 | valid_logloss: 0.5254  | valid_f1_macro: 0.66581 |  1:11:29s
epoch 100| loss: 0.52327 | train_balanced_accuracy: 0.67589 | train_logloss: 0.51794 | train_f1_macro: 0.68659 | valid_balanced_accuracy: 0.6702  | valid_logloss: 0.52066 | valid_f1_macro: 0.68045 |  1:12:11s
epoch 101| loss: 0.51751 | train_balanced_accuracy: 0.6862  | train_logloss: 0.51476 | train_f1_macro: 0.69478 | valid_balanced_accuracy: 0.68463 | valid_logloss: 0.51619 | valid_f1_macro: 0.69242 |  1:12:54s
epoch 102| loss: 0.51835 | train_balanced_accuracy: 0.6971  | train_logloss: 0.5138  | train_f1_macro: 0.70496 | valid_balanced_accuracy: 0.69544 | valid_logloss: 0.51879 | valid_f1_macro: 0.70305 |  1:13:37s
epoch 103| loss: 0.52059 | train_balanced_accuracy: 0.66879 | train_logloss: 0.53691 | train_f1_macro: 0.67654 | valid_balanced_accuracy: 0.66407 | valid_logloss: 0.53702 | valid_f1_macro: 0.67173 |  1:14:20s
epoch 104| loss: 0.53863 | train_balanced_accuracy: 0.62937 | train_logloss: 0.54382 | train_f1_macro: 0.63613 | valid_balanced_accuracy: 0.62302 | valid_logloss: 0.54558 | valid_f1_macro: 0.62898 |  1:15:03s
epoch 105| loss: 0.53369 | train_balanced_accuracy: 0.67658 | train_logloss: 0.51872 | train_f1_macro: 0.68564 | valid_balanced_accuracy: 0.67137 | valid_logloss: 0.51889 | valid_f1_macro: 0.68014 |  1:15:45s
epoch 106| loss: 0.51873 | train_balanced_accuracy: 0.67551 | train_logloss: 0.5122  | train_f1_macro: 0.68664 | valid_balanced_accuracy: 0.66875 | valid_logloss: 0.51411 | valid_f1_macro: 0.6795  |  1:16:28s
epoch 107| loss: 0.50979 | train_balanced_accuracy: 0.69367 | train_logloss: 0.50028 | train_f1_macro: 0.70383 | valid_balanced_accuracy: 0.68757 | valid_logloss: 0.50359 | valid_f1_macro: 0.69747 |  1:17:11s
epoch 108| loss: 0.50397 | train_balanced_accuracy: 0.71082 | train_logloss: 0.49036 | train_f1_macro: 0.71932 | valid_balanced_accuracy: 0.70424 | valid_logloss: 0.49513 | valid_f1_macro: 0.71255 |  1:17:54s
epoch 109| loss: 0.49794 | train_balanced_accuracy: 0.71846 | train_logloss: 0.48674 | train_f1_macro: 0.72446 | valid_balanced_accuracy: 0.71632 | valid_logloss: 0.49188 | valid_f1_macro: 0.72224 |  1:18:37s
epoch 110| loss: 0.49228 | train_balanced_accuracy: 0.7192  | train_logloss: 0.47965 | train_f1_macro: 0.72861 | valid_balanced_accuracy: 0.71009 | valid_logloss: 0.48862 | valid_f1_macro: 0.71875 |  1:19:20s
epoch 111| loss: 0.48499 | train_balanced_accuracy: 0.71114 | train_logloss: 0.49573 | train_f1_macro: 0.7199  | valid_balanced_accuracy: 0.70076 | valid_logloss: 0.50141 | valid_f1_macro: 0.70828 |  1:20:03s
epoch 112| loss: 0.49967 | train_balanced_accuracy: 0.69073 | train_logloss: 0.48738 | train_f1_macro: 0.70425 | valid_balanced_accuracy: 0.68059 | valid_logloss: 0.49811 | valid_f1_macro: 0.69336 |  1:20:47s
epoch 113| loss: 0.49776 | train_balanced_accuracy: 0.71476 | train_logloss: 0.4872  | train_f1_macro: 0.72535 | valid_balanced_accuracy: 0.7053  | valid_logloss: 0.49507 | valid_f1_macro: 0.7154  |  1:21:30s
epoch 114| loss: 0.48885 | train_balanced_accuracy: 0.7043  | train_logloss: 0.47977 | train_f1_macro: 0.71806 | valid_balanced_accuracy: 0.69308 | valid_logloss: 0.49404 | valid_f1_macro: 0.70607 |  1:22:13s
epoch 115| loss: 0.48887 | train_balanced_accuracy: 0.72264 | train_logloss: 0.47737 | train_f1_macro: 0.73318 | valid_balanced_accuracy: 0.71536 | valid_logloss: 0.48709 | valid_f1_macro: 0.72572 |  1:22:56s
epoch 116| loss: 0.48607 | train_balanced_accuracy: 0.72463 | train_logloss: 0.47949 | train_f1_macro: 0.73524 | valid_balanced_accuracy: 0.71836 | valid_logloss: 0.49188 | valid_f1_macro: 0.72841 |  1:23:39s
epoch 117| loss: 0.49687 | train_balanced_accuracy: 0.71315 | train_logloss: 0.47725 | train_f1_macro: 0.72648 | valid_balanced_accuracy: 0.701   | valid_logloss: 0.49094 | valid_f1_macro: 0.71329 |  1:24:22s
epoch 118| loss: 0.47855 | train_balanced_accuracy: 0.73204 | train_logloss: 0.46563 | train_f1_macro: 0.7447  | valid_balanced_accuracy: 0.72371 | valid_logloss: 0.47768 | valid_f1_macro: 0.73553 |  1:25:04s
epoch 119| loss: 0.47773 | train_balanced_accuracy: 0.74127 | train_logloss: 0.45673 | train_f1_macro: 0.75154 | valid_balanced_accuracy: 0.73352 | valid_logloss: 0.4713  | valid_f1_macro: 0.74307 |  1:25:47s
epoch 120| loss: 0.4611  | train_balanced_accuracy: 0.75382 | train_logloss: 0.44894 | train_f1_macro: 0.76542 | valid_balanced_accuracy: 0.74157 | valid_logloss: 0.46411 | valid_f1_macro: 0.75232 |  1:26:30s
epoch 121| loss: 0.45411 | train_balanced_accuracy: 0.77223 | train_logloss: 0.43077 | train_f1_macro: 0.77825 | valid_balanced_accuracy: 0.75916 | valid_logloss: 0.4502  | valid_f1_macro: 0.76459 |  1:27:12s
epoch 122| loss: 0.4505  | train_balanced_accuracy: 0.74122 | train_logloss: 0.45308 | train_f1_macro: 0.75257 | valid_balanced_accuracy: 0.72679 | valid_logloss: 0.47031 | valid_f1_macro: 0.73708 |  1:27:55s
epoch 123| loss: 0.45289 | train_balanced_accuracy: 0.76303 | train_logloss: 0.42809 | train_f1_macro: 0.77578 | valid_balanced_accuracy: 0.74746 | valid_logloss: 0.44969 | valid_f1_macro: 0.75918 |  1:28:39s
epoch 124| loss: 0.47783 | train_balanced_accuracy: 0.73673 | train_logloss: 0.46672 | train_f1_macro: 0.74472 | valid_balanced_accuracy: 0.72258 | valid_logloss: 0.4845  | valid_f1_macro: 0.72982 |  1:29:21s
epoch 125| loss: 0.49316 | train_balanced_accuracy: 0.6569  | train_logloss: 0.53973 | train_f1_macro: 0.66748 | valid_balanced_accuracy: 0.6563  | valid_logloss: 0.54468 | valid_f1_macro: 0.6668  |  1:30:04s
epoch 126| loss: 0.50816 | train_balanced_accuracy: 0.70215 | train_logloss: 0.48536 | train_f1_macro: 0.71839 | valid_balanced_accuracy: 0.69417 | valid_logloss: 0.50183 | valid_f1_macro: 0.70899 |  1:30:48s
epoch 127| loss: 0.49412 | train_balanced_accuracy: 0.71149 | train_logloss: 0.48235 | train_f1_macro: 0.72437 | valid_balanced_accuracy: 0.70306 | valid_logloss: 0.49536 | valid_f1_macro: 0.71486 |  1:31:30s
epoch 128| loss: 0.48289 | train_balanced_accuracy: 0.71478 | train_logloss: 0.46945 | train_f1_macro: 0.73065 | valid_balanced_accuracy: 0.70848 | valid_logloss: 0.48261 | valid_f1_macro: 0.72381 |  1:32:14s
epoch 129| loss: 0.45837 | train_balanced_accuracy: 0.7543  | train_logloss: 0.44045 | train_f1_macro: 0.76901 | valid_balanced_accuracy: 0.73986 | valid_logloss: 0.46322 | valid_f1_macro: 0.75347 |  1:32:56s
epoch 130| loss: 0.4534  | train_balanced_accuracy: 0.73288 | train_logloss: 0.45946 | train_f1_macro: 0.75237 | valid_balanced_accuracy: 0.72091 | valid_logloss: 0.48275 | valid_f1_macro: 0.73864 |  1:33:39s
epoch 131| loss: 0.44713 | train_balanced_accuracy: 0.76393 | train_logloss: 0.43605 | train_f1_macro: 0.77445 | valid_balanced_accuracy: 0.74976 | valid_logloss: 0.45958 | valid_f1_macro: 0.75948 |  1:34:22s
epoch 132| loss: 0.43044 | train_balanced_accuracy: 0.78744 | train_logloss: 0.4064  | train_f1_macro: 0.798   | valid_balanced_accuracy: 0.76999 | valid_logloss: 0.43322 | valid_f1_macro: 0.78006 |  1:35:04s
epoch 133| loss: 0.41533 | train_balanced_accuracy: 0.78734 | train_logloss: 0.39824 | train_f1_macro: 0.80188 | valid_balanced_accuracy: 0.76838 | valid_logloss: 0.42741 | valid_f1_macro: 0.78148 |  1:35:47s
epoch 134| loss: 0.40199 | train_balanced_accuracy: 0.8081  | train_logloss: 0.3773  | train_f1_macro: 0.818   | valid_balanced_accuracy: 0.7891  | valid_logloss: 0.41093 | valid_f1_macro: 0.79788 |  1:36:30s
epoch 135| loss: 0.39979 | train_balanced_accuracy: 0.80464 | train_logloss: 0.39265 | train_f1_macro: 0.81078 | valid_balanced_accuracy: 0.78267 | valid_logloss: 0.42933 | valid_f1_macro: 0.7882  |  1:37:13s
epoch 136| loss: 0.3893  | train_balanced_accuracy: 0.80616 | train_logloss: 0.37878 | train_f1_macro: 0.81496 | valid_balanced_accuracy: 0.78575 | valid_logloss: 0.41807 | valid_f1_macro: 0.794   |  1:37:56s
epoch 137| loss: 0.37863 | train_balanced_accuracy: 0.81724 | train_logloss: 0.35059 | train_f1_macro: 0.83197 | valid_balanced_accuracy: 0.78901 | valid_logloss: 0.39219 | valid_f1_macro: 0.8028  |  1:38:39s
epoch 138| loss: 0.36938 | train_balanced_accuracy: 0.83033 | train_logloss: 0.33798 | train_f1_macro: 0.84252 | valid_balanced_accuracy: 0.80363 | valid_logloss: 0.3803  | valid_f1_macro: 0.81595 |  1:39:21s
epoch 139| loss: 0.36463 | train_balanced_accuracy: 0.83055 | train_logloss: 0.33652 | train_f1_macro: 0.84138 | valid_balanced_accuracy: 0.80284 | valid_logloss: 0.38455 | valid_f1_macro: 0.81314 |  1:40:04s
epoch 140| loss: 0.35178 | train_balanced_accuracy: 0.83454 | train_logloss: 0.31884 | train_f1_macro: 0.84846 | valid_balanced_accuracy: 0.80569 | valid_logloss: 0.36716 | valid_f1_macro: 0.81875 |  1:40:49s
epoch 141| loss: 0.35146 | train_balanced_accuracy: 0.83532 | train_logloss: 0.33739 | train_f1_macro: 0.84147 | valid_balanced_accuracy: 0.81021 | valid_logloss: 0.38844 | valid_f1_macro: 0.81557 |  1:41:32s
epoch 142| loss: 0.3696  | train_balanced_accuracy: 0.7858  | train_logloss: 0.91032 | train_f1_macro: 0.80071 | valid_balanced_accuracy: 0.76315 | valid_logloss: 0.94121 | valid_f1_macro: 0.77627 |  1:42:14s
epoch 143| loss: 0.36039 | train_balanced_accuracy: 0.58151 | train_logloss: 0.77332 | train_f1_macro: 0.55828 | valid_balanced_accuracy: 0.57442 | valid_logloss: 0.83168 | valid_f1_macro: 0.54768 |  1:42:57s
epoch 144| loss: 0.35088 | train_balanced_accuracy: 0.84328 | train_logloss: 0.31848 | train_f1_macro: 0.85197 | valid_balanced_accuracy: 0.81125 | valid_logloss: 0.36452 | valid_f1_macro: 0.82031 |  1:43:40s
epoch 145| loss: 0.3318  | train_balanced_accuracy: 0.85654 | train_logloss: 0.29046 | train_f1_macro: 0.86751 | valid_balanced_accuracy: 0.82563 | valid_logloss: 0.34749 | valid_f1_macro: 0.83644 |  1:44:23s
epoch 146| loss: 0.32549 | train_balanced_accuracy: 0.86075 | train_logloss: 0.29273 | train_f1_macro: 0.8687  | valid_balanced_accuracy: 0.82932 | valid_logloss: 0.34997 | valid_f1_macro: 0.83639 |  1:45:06s
epoch 147| loss: 0.31162 | train_balanced_accuracy: 0.84203 | train_logloss: 0.29999 | train_f1_macro: 0.85889 | valid_balanced_accuracy: 0.80653 | valid_logloss: 0.36556 | valid_f1_macro: 0.8222  |  1:45:49s
epoch 148| loss: 0.30271 | train_balanced_accuracy: 0.87446 | train_logloss: 0.28228 | train_f1_macro: 0.87517 | valid_balanced_accuracy: 0.83961 | valid_logloss: 0.34594 | valid_f1_macro: 0.84022 |  1:46:31s
epoch 149| loss: 0.29859 | train_balanced_accuracy: 0.87389 | train_logloss: 0.28257 | train_f1_macro: 0.87481 | valid_balanced_accuracy: 0.84031 | valid_logloss: 0.34415 | valid_f1_macro: 0.84143 |  1:47:14s
epoch 150| loss: 0.29507 | train_balanced_accuracy: 0.84074 | train_logloss: 0.46565 | train_f1_macro: 0.85614 | valid_balanced_accuracy: 0.80983 | valid_logloss: 0.52997 | valid_f1_macro: 0.82373 |  1:47:57s
epoch 151| loss: 0.2878  | train_balanced_accuracy: 0.88051 | train_logloss: 0.25591 | train_f1_macro: 0.88619 | valid_balanced_accuracy: 0.84691 | valid_logloss: 0.3219  | valid_f1_macro: 0.85351 |  1:48:40s
epoch 152| loss: 0.28282 | train_balanced_accuracy: 0.8549  | train_logloss: 0.78108 | train_f1_macro: 0.86309 | valid_balanced_accuracy: 0.82176 | valid_logloss: 0.84891 | valid_f1_macro: 0.82911 |  1:49:22s
epoch 153| loss: 0.28035 | train_balanced_accuracy: 0.88618 | train_logloss: 0.24409 | train_f1_macro: 0.89382 | valid_balanced_accuracy: 0.84894 | valid_logloss: 0.31349 | valid_f1_macro: 0.85704 |  1:50:05s
epoch 154| loss: 0.27436 | train_balanced_accuracy: 0.58693 | train_logloss: 4.71188 | train_f1_macro: 0.56599 | valid_balanced_accuracy: 0.57635 | valid_logloss: 4.83708 | valid_f1_macro: 0.55039 |  1:50:50s
epoch 155| loss: 0.2674  | train_balanced_accuracy: 0.58802 | train_logloss: 1.99568 | train_f1_macro: 0.56922 | valid_balanced_accuracy: 0.57707 | valid_logloss: 2.1007  | valid_f1_macro: 0.55385 |  1:51:32s
epoch 156| loss: 0.26129 | train_balanced_accuracy: 0.89562 | train_logloss: 0.22971 | train_f1_macro: 0.90186 | valid_balanced_accuracy: 0.85359 | valid_logloss: 0.30735 | valid_f1_macro: 0.85968 |  1:52:15s
epoch 157| loss: 0.25924 | train_balanced_accuracy: 0.89508 | train_logloss: 0.23589 | train_f1_macro: 0.89878 | valid_balanced_accuracy: 0.85752 | valid_logloss: 0.3083  | valid_f1_macro: 0.86146 |  1:52:58s
epoch 158| loss: 0.29867 | train_balanced_accuracy: 0.86194 | train_logloss: 0.28786 | train_f1_macro: 0.87603 | valid_balanced_accuracy: 0.82381 | valid_logloss: 0.36244 | valid_f1_macro: 0.83763 |  1:53:41s
epoch 159| loss: 0.29202 | train_balanced_accuracy: 0.8188  | train_logloss: 0.33565 | train_f1_macro: 0.83512 | valid_balanced_accuracy: 0.78987 | valid_logloss: 0.38826 | valid_f1_macro: 0.80587 |  1:54:23s
epoch 160| loss: 0.314   | train_balanced_accuracy: 0.87081 | train_logloss: 0.26209 | train_f1_macro: 0.88401 | valid_balanced_accuracy: 0.831   | valid_logloss: 0.33458 | valid_f1_macro: 0.84389 |  1:55:05s
epoch 161| loss: 0.27518 | train_balanced_accuracy: 0.89186 | train_logloss: 0.24203 | train_f1_macro: 0.901   | valid_balanced_accuracy: 0.85172 | valid_logloss: 0.31342 | valid_f1_macro: 0.86065 |  1:55:48s
epoch 162| loss: 0.2556  | train_balanced_accuracy: 0.88153 | train_logloss: 0.23832 | train_f1_macro: 0.89461 | valid_balanced_accuracy: 0.83749 | valid_logloss: 0.31604 | valid_f1_macro: 0.85091 |  1:56:31s
epoch 163| loss: 0.25333 | train_balanced_accuracy: 0.84595 | train_logloss: 0.51399 | train_f1_macro: 0.86077 | valid_balanced_accuracy: 0.80814 | valid_logloss: 0.60017 | valid_f1_macro: 0.82196 |  1:57:13s
epoch 164| loss: 0.26491 | train_balanced_accuracy: 0.85454 | train_logloss: 0.37629 | train_f1_macro: 0.87323 | valid_balanced_accuracy: 0.81666 | valid_logloss: 0.46258 | valid_f1_macro: 0.8343  |  1:57:55s
epoch 165| loss: 0.24081 | train_balanced_accuracy: 0.86627 | train_logloss: 0.50529 | train_f1_macro: 0.88272 | valid_balanced_accuracy: 0.82921 | valid_logloss: 0.59092 | valid_f1_macro: 0.84466 |  1:58:37s
epoch 166| loss: 0.22992 | train_balanced_accuracy: 0.89314 | train_logloss: 0.21289 | train_f1_macro: 0.90663 | valid_balanced_accuracy: 0.85103 | valid_logloss: 0.29333 | valid_f1_macro: 0.86526 |  1:59:20s
epoch 167| loss: 0.22542 | train_balanced_accuracy: 0.90385 | train_logloss: 0.19887 | train_f1_macro: 0.91324 | valid_balanced_accuracy: 0.86576 | valid_logloss: 0.28145 | valid_f1_macro: 0.87482 |  2:00:02s
epoch 168| loss: 0.21985 | train_balanced_accuracy: 0.91064 | train_logloss: 0.19011 | train_f1_macro: 0.92005 | valid_balanced_accuracy: 0.87093 | valid_logloss: 0.27623 | valid_f1_macro: 0.88114 |  2:00:46s
epoch 169| loss: 0.21414 | train_balanced_accuracy: 0.8993  | train_logloss: 0.19131 | train_f1_macro: 0.91478 | valid_balanced_accuracy: 0.8552  | valid_logloss: 0.27855 | valid_f1_macro: 0.87185 |  2:01:28s
epoch 170| loss: 0.2093  | train_balanced_accuracy: 0.91106 | train_logloss: 0.18131 | train_f1_macro: 0.92087 | valid_balanced_accuracy: 0.86586 | valid_logloss: 0.27119 | valid_f1_macro: 0.87638 |  2:02:11s
epoch 171| loss: 0.21237 | train_balanced_accuracy: 0.91476 | train_logloss: 0.18347 | train_f1_macro: 0.92396 | valid_balanced_accuracy: 0.87536 | valid_logloss: 0.27241 | valid_f1_macro: 0.88516 |  2:02:53s
epoch 172| loss: 0.20681 | train_balanced_accuracy: 0.91903 | train_logloss: 0.17082 | train_f1_macro: 0.92815 | valid_balanced_accuracy: 0.87517 | valid_logloss: 0.2578  | valid_f1_macro: 0.88576 |  2:03:36s
epoch 173| loss: 0.20049 | train_balanced_accuracy: 0.88693 | train_logloss: 0.44726 | train_f1_macro: 0.90015 | valid_balanced_accuracy: 0.85045 | valid_logloss: 0.53622 | valid_f1_macro: 0.86308 |  2:04:18s
epoch 174| loss: 0.19718 | train_balanced_accuracy: 0.89655 | train_logloss: 0.19782 | train_f1_macro: 0.91003 | valid_balanced_accuracy: 0.85926 | valid_logloss: 0.29425 | valid_f1_macro: 0.87257 |  2:05:00s
epoch 175| loss: 0.22125 | train_balanced_accuracy: 0.87088 | train_logloss: 0.52557 | train_f1_macro: 0.88769 | valid_balanced_accuracy: 0.83685 | valid_logloss: 0.6122  | valid_f1_macro: 0.85225 |  2:05:42s
epoch 176| loss: 0.20905 | train_balanced_accuracy: 0.91441 | train_logloss: 0.18733 | train_f1_macro: 0.91704 | valid_balanced_accuracy: 0.87506 | valid_logloss: 0.28018 | valid_f1_macro: 0.87757 |  2:06:25s
epoch 177| loss: 0.19659 | train_balanced_accuracy: 0.88409 | train_logloss: 0.21523 | train_f1_macro: 0.9021  | valid_balanced_accuracy: 0.84971 | valid_logloss: 0.30465 | valid_f1_macro: 0.86708 |  2:07:07s
epoch 178| loss: 0.1872  | train_balanced_accuracy: 0.92707 | train_logloss: 0.14785 | train_f1_macro: 0.93753 | valid_balanced_accuracy: 0.88159 | valid_logloss: 0.24773 | valid_f1_macro: 0.89451 |  2:07:49s
epoch 179| loss: 0.18448 | train_balanced_accuracy: 0.93797 | train_logloss: 0.14798 | train_f1_macro: 0.9382  | valid_balanced_accuracy: 0.89786 | valid_logloss: 0.24786 | valid_f1_macro: 0.8974  |  2:08:32s
epoch 180| loss: 0.18283 | train_balanced_accuracy: 0.94204 | train_logloss: 0.13249 | train_f1_macro: 0.9472  | valid_balanced_accuracy: 0.89966 | valid_logloss: 0.22626 | valid_f1_macro: 0.9054  |  2:09:14s
epoch 181| loss: 0.17636 | train_balanced_accuracy: 0.94114 | train_logloss: 0.13166 | train_f1_macro: 0.94642 | valid_balanced_accuracy: 0.90022 | valid_logloss: 0.22407 | valid_f1_macro: 0.906   |  2:09:57s
epoch 182| loss: 0.17292 | train_balanced_accuracy: 0.93882 | train_logloss: 0.12695 | train_f1_macro: 0.94754 | valid_balanced_accuracy: 0.89379 | valid_logloss: 0.22363 | valid_f1_macro: 0.90437 |  2:10:41s
epoch 183| loss: 0.17356 | train_balanced_accuracy: 0.90413 | train_logloss: 0.34621 | train_f1_macro: 0.91245 | valid_balanced_accuracy: 0.87243 | valid_logloss: 0.4384  | valid_f1_macro: 0.87898 |  2:11:24s
epoch 184| loss: 0.16243 | train_balanced_accuracy: 0.88981 | train_logloss: 0.58082 | train_f1_macro: 0.90677 | valid_balanced_accuracy: 0.84924 | valid_logloss: 0.69126 | valid_f1_macro: 0.86615 |  2:12:06s
epoch 185| loss: 0.16136 | train_balanced_accuracy: 0.94309 | train_logloss: 0.11566 | train_f1_macro: 0.95132 | valid_balanced_accuracy: 0.89428 | valid_logloss: 0.21744 | valid_f1_macro: 0.90487 |  2:12:48s
epoch 186| loss: 0.15953 | train_balanced_accuracy: 0.90165 | train_logloss: 0.4307  | train_f1_macro: 0.91399 | valid_balanced_accuracy: 0.86324 | valid_logloss: 0.53072 | valid_f1_macro: 0.87536 |  2:13:31s
epoch 187| loss: 0.18091 | train_balanced_accuracy: 0.89654 | train_logloss: 1.26191 | train_f1_macro: 0.91055 | valid_balanced_accuracy: 0.85991 | valid_logloss: 1.34344 | valid_f1_macro: 0.87295 |  2:14:14s
epoch 188| loss: 0.15884 | train_balanced_accuracy: 0.94112 | train_logloss: 0.12247 | train_f1_macro: 0.94816 | valid_balanced_accuracy: 0.89884 | valid_logloss: 0.22337 | valid_f1_macro: 0.90739 |  2:14:56s
epoch 189| loss: 0.14929 | train_balanced_accuracy: 0.89648 | train_logloss: 0.19724 | train_f1_macro: 0.91342 | valid_balanced_accuracy: 0.85477 | valid_logloss: 0.31755 | valid_f1_macro: 0.87216 |  2:15:39s
epoch 190| loss: 0.15831 | train_balanced_accuracy: 0.92933 | train_logloss: 0.12557 | train_f1_macro: 0.94276 | valid_balanced_accuracy: 0.88422 | valid_logloss: 0.22774 | valid_f1_macro: 0.90014 |  2:16:22s
epoch 191| loss: 0.143   | train_balanced_accuracy: 0.95024 | train_logloss: 0.1051  | train_f1_macro: 0.95617 | valid_balanced_accuracy: 0.90821 | valid_logloss: 0.21059 | valid_f1_macro: 0.91497 |  2:17:04s
epoch 192| loss: 0.14321 | train_balanced_accuracy: 0.95948 | train_logloss: 0.0989  | train_f1_macro: 0.96107 | valid_balanced_accuracy: 0.91531 | valid_logloss: 0.21424 | valid_f1_macro: 0.91833 |  2:17:47s
epoch 193| loss: 0.14565 | train_balanced_accuracy: 0.94275 | train_logloss: 0.11825 | train_f1_macro: 0.94973 | valid_balanced_accuracy: 0.9023  | valid_logloss: 0.2277  | valid_f1_macro: 0.91066 |  2:18:29s
epoch 194| loss: 0.1425  | train_balanced_accuracy: 0.96136 | train_logloss: 0.09091 | train_f1_macro: 0.96362 | valid_balanced_accuracy: 0.91981 | valid_logloss: 0.19276 | valid_f1_macro: 0.92252 |  2:19:12s
epoch 195| loss: 0.1388  | train_balanced_accuracy: 0.91106 | train_logloss: 0.46668 | train_f1_macro: 0.92405 | valid_balanced_accuracy: 0.87179 | valid_logloss: 0.57329 | valid_f1_macro: 0.88504 |  2:19:55s
epoch 196| loss: 0.15636 | train_balanced_accuracy: 0.94832 | train_logloss: 0.12642 | train_f1_macro: 0.94753 | valid_balanced_accuracy: 0.90505 | valid_logloss: 0.22663 | valid_f1_macro: 0.90529 |  2:20:38s
epoch 197| loss: 0.14863 | train_balanced_accuracy: 0.95428 | train_logloss: 0.09381 | train_f1_macro: 0.9614  | valid_balanced_accuracy: 0.90818 | valid_logloss: 0.20367 | valid_f1_macro: 0.91809 |  2:21:21s
epoch 198| loss: 0.13776 | train_balanced_accuracy: 0.96174 | train_logloss: 0.08878 | train_f1_macro: 0.9653  | valid_balanced_accuracy: 0.91931 | valid_logloss: 0.19679 | valid_f1_macro: 0.925   |  2:22:03s
epoch 199| loss: 0.1324  | train_balanced_accuracy: 0.95374 | train_logloss: 0.09234 | train_f1_macro: 0.96083 | valid_balanced_accuracy: 0.90939 | valid_logloss: 0.20511 | valid_f1_macro: 0.91912 |  2:22:46s
epoch 200| loss: 0.12503 | train_balanced_accuracy: 0.92358 | train_logloss: 0.635   | train_f1_macro: 0.93345 | valid_balanced_accuracy: 0.88553 | valid_logloss: 0.75993 | valid_f1_macro: 0.89603 |  2:23:28s
epoch 201| loss: 0.12378 | train_balanced_accuracy: 0.91103 | train_logloss: 0.64246 | train_f1_macro: 0.9256  | valid_balanced_accuracy: 0.87275 | valid_logloss: 0.76916 | valid_f1_macro: 0.88837 |  2:24:11s
epoch 202| loss: 0.13945 | train_balanced_accuracy: 0.57263 | train_logloss: 1.11321 | train_f1_macro: 0.54109 | valid_balanced_accuracy: 0.56427 | valid_logloss: 1.29305 | valid_f1_macro: 0.52891 |  2:24:53s
epoch 203| loss: 0.13111 | train_balanced_accuracy: 0.95967 | train_logloss: 0.08096 | train_f1_macro: 0.96557 | valid_balanced_accuracy: 0.9145  | valid_logloss: 0.19587 | valid_f1_macro: 0.92246 |  2:25:36s
epoch 204| loss: 0.12144 | train_balanced_accuracy: 0.57257 | train_logloss: 1.22963 | train_f1_macro: 0.54103 | valid_balanced_accuracy: 0.56428 | valid_logloss: 1.4471  | valid_f1_macro: 0.5293  |  2:26:18s
epoch 205| loss: 0.11974 | train_balanced_accuracy: 0.92181 | train_logloss: 0.68551 | train_f1_macro: 0.93327 | valid_balanced_accuracy: 0.88534 | valid_logloss: 0.81173 | valid_f1_macro: 0.89656 |  2:27:01s
epoch 206| loss: 0.11609 | train_balanced_accuracy: 0.9604  | train_logloss: 0.07735 | train_f1_macro: 0.96735 | valid_balanced_accuracy: 0.91451 | valid_logloss: 0.19776 | valid_f1_macro: 0.92483 |  2:27:43s
epoch 207| loss: 0.11112 | train_balanced_accuracy: 0.57276 | train_logloss: 4.62631 | train_f1_macro: 0.54094 | valid_balanced_accuracy: 0.56531 | valid_logloss: 4.86919 | valid_f1_macro: 0.53011 |  2:28:25s
epoch 208| loss: 0.12517 | train_balanced_accuracy: 0.57192 | train_logloss: 4.60576 | train_f1_macro: 0.53991 | valid_balanced_accuracy: 0.56475 | valid_logloss: 4.81321 | valid_f1_macro: 0.5296  |  2:29:08s
epoch 209| loss: 0.12775 | train_balanced_accuracy: 0.91223 | train_logloss: 0.3936  | train_f1_macro: 0.927   | valid_balanced_accuracy: 0.86774 | valid_logloss: 0.52901 | valid_f1_macro: 0.88411 |  2:29:51s
epoch 210| loss: 0.1161  | train_balanced_accuracy: 0.97168 | train_logloss: 0.06949 | train_f1_macro: 0.97207 | valid_balanced_accuracy: 0.92591 | valid_logloss: 0.18482 | valid_f1_macro: 0.92828 |  2:30:35s
epoch 211| loss: 0.11221 | train_balanced_accuracy: 0.96474 | train_logloss: 0.07993 | train_f1_macro: 0.96734 | valid_balanced_accuracy: 0.92142 | valid_logloss: 0.20704 | valid_f1_macro: 0.92626 |  2:31:17s
epoch 212| loss: 0.10713 | train_balanced_accuracy: 0.9622  | train_logloss: 0.07264 | train_f1_macro: 0.96862 | valid_balanced_accuracy: 0.91629 | valid_logloss: 0.19329 | valid_f1_macro: 0.92626 |  2:32:00s
epoch 213| loss: 0.10191 | train_balanced_accuracy: 0.97367 | train_logloss: 0.05806 | train_f1_macro: 0.97652 | valid_balanced_accuracy: 0.9312  | valid_logloss: 0.18232 | valid_f1_macro: 0.93622 |  2:32:42s
epoch 214| loss: 0.10394 | train_balanced_accuracy: 0.92406 | train_logloss: 0.21944 | train_f1_macro: 0.93735 | valid_balanced_accuracy: 0.88477 | valid_logloss: 0.36172 | valid_f1_macro: 0.89882 |  2:33:25s
epoch 215| loss: 0.10047 | train_balanced_accuracy: 0.92718 | train_logloss: 0.24243 | train_f1_macro: 0.9395  | valid_balanced_accuracy: 0.89181 | valid_logloss: 0.36461 | valid_f1_macro: 0.90423 |  2:34:07s
epoch 216| loss: 0.10037 | train_balanced_accuracy: 0.92573 | train_logloss: 0.2831  | train_f1_macro: 0.93743 | valid_balanced_accuracy: 0.89248 | valid_logloss: 0.40765 | valid_f1_macro: 0.90389 |  2:34:50s
epoch 217| loss: 0.10887 | train_balanced_accuracy: 0.95815 | train_logloss: 0.09019 | train_f1_macro: 0.96379 | valid_balanced_accuracy: 0.91622 | valid_logloss: 0.21368 | valid_f1_macro: 0.92326 |  2:35:33s
epoch 218| loss: 0.1023  | train_balanced_accuracy: 0.9299  | train_logloss: 0.12694 | train_f1_macro: 0.94232 | valid_balanced_accuracy: 0.88606 | valid_logloss: 0.2705  | valid_f1_macro: 0.89971 |  2:36:16s
epoch 219| loss: 0.09975 | train_balanced_accuracy: 0.97695 | train_logloss: 0.05585 | train_f1_macro: 0.97814 | valid_balanced_accuracy: 0.9345  | valid_logloss: 0.18248 | valid_f1_macro: 0.93666 |  2:36:58s
epoch 220| loss: 0.09545 | train_balanced_accuracy: 0.92468 | train_logloss: 1.17483 | train_f1_macro: 0.93712 | valid_balanced_accuracy: 0.88707 | valid_logloss: 1.31243 | valid_f1_macro: 0.89956 |  2:37:40s
epoch 221| loss: 0.09954 | train_balanced_accuracy: 0.92563 | train_logloss: 0.69589 | train_f1_macro: 0.93738 | valid_balanced_accuracy: 0.88975 | valid_logloss: 0.82359 | valid_f1_macro: 0.90133 |  2:38:23s
epoch 222| loss: 0.0939  | train_balanced_accuracy: 0.92606 | train_logloss: 0.65893 | train_f1_macro: 0.94018 | valid_balanced_accuracy: 0.88572 | valid_logloss: 0.79817 | valid_f1_macro: 0.90011 |  2:39:06s
epoch 223| loss: 0.09294 | train_balanced_accuracy: 0.97392 | train_logloss: 0.05721 | train_f1_macro: 0.97668 | valid_balanced_accuracy: 0.92838 | valid_logloss: 0.18767 | valid_f1_macro: 0.93394 |  2:39:48s
epoch 224| loss: 0.09213 | train_balanced_accuracy: 0.97348 | train_logloss: 0.05223 | train_f1_macro: 0.97738 | valid_balanced_accuracy: 0.93146 | valid_logloss: 0.17916 | valid_f1_macro: 0.93869 |  2:40:33s
epoch 225| loss: 0.08764 | train_balanced_accuracy: 0.97588 | train_logloss: 0.04969 | train_f1_macro: 0.97888 | valid_balanced_accuracy: 0.93289 | valid_logloss: 0.18077 | valid_f1_macro: 0.93793 |  2:41:16s
epoch 226| loss: 0.08343 | train_balanced_accuracy: 0.9266  | train_logloss: 0.5607  | train_f1_macro: 0.94066 | valid_balanced_accuracy: 0.88862 | valid_logloss: 0.70213 | valid_f1_macro: 0.90273 |  2:41:58s
epoch 227| loss: 0.10234 | train_balanced_accuracy: 0.92502 | train_logloss: 0.59666 | train_f1_macro: 0.93685 | valid_balanced_accuracy: 0.88915 | valid_logloss: 0.71999 | valid_f1_macro: 0.90178 |  2:42:41s
epoch 228| loss: 0.09706 | train_balanced_accuracy: 0.92927 | train_logloss: 1.18915 | train_f1_macro: 0.94262 | valid_balanced_accuracy: 0.89289 | valid_logloss: 1.29415 | valid_f1_macro: 0.90663 |  2:43:23s
epoch 229| loss: 0.086   | train_balanced_accuracy: 0.97629 | train_logloss: 0.04989 | train_f1_macro: 0.97947 | valid_balanced_accuracy: 0.93269 | valid_logloss: 0.18166 | valid_f1_macro: 0.93896 |  2:44:06s
epoch 230| loss: 0.08381 | train_balanced_accuracy: 0.92132 | train_logloss: 0.69346 | train_f1_macro: 0.93753 | valid_balanced_accuracy: 0.87931 | valid_logloss: 0.84417 | valid_f1_macro: 0.89787 |  2:44:48s
epoch 231| loss: 0.08119 | train_balanced_accuracy: 0.9317  | train_logloss: 0.69819 | train_f1_macro: 0.94388 | valid_balanced_accuracy: 0.89559 | valid_logloss: 0.82951 | valid_f1_macro: 0.9078  |  2:45:31s
epoch 232| loss: 0.08163 | train_balanced_accuracy: 0.93247 | train_logloss: 1.1852  | train_f1_macro: 0.94365 | valid_balanced_accuracy: 0.89602 | valid_logloss: 1.29609 | valid_f1_macro: 0.9072  |  2:46:13s
epoch 233| loss: 0.08254 | train_balanced_accuracy: 0.57554 | train_logloss: 1.1995  | train_f1_macro: 0.5455  | valid_balanced_accuracy: 0.56821 | valid_logloss: 1.47844 | valid_f1_macro: 0.53478 |  2:46:56s
epoch 234| loss: 0.07898 | train_balanced_accuracy: 0.9817  | train_logloss: 0.04208 | train_f1_macro: 0.98378 | valid_balanced_accuracy: 0.94044 | valid_logloss: 0.18175 | valid_f1_macro: 0.94516 |  2:47:38s
epoch 235| loss: 0.07636 | train_balanced_accuracy: 0.9344  | train_logloss: 1.17852 | train_f1_macro: 0.94743 | valid_balanced_accuracy: 0.89266 | valid_logloss: 1.29586 | valid_f1_macro: 0.90826 |  2:48:20s
epoch 236| loss: 0.0773  | train_balanced_accuracy: 0.57398 | train_logloss: 2.00596 | train_f1_macro: 0.54284 | valid_balanced_accuracy: 0.56691 | valid_logloss: 2.29269 | valid_f1_macro: 0.53233 |  2:49:03s
epoch 237| loss: 0.07439 | train_balanced_accuracy: 0.93373 | train_logloss: 0.36093 | train_f1_macro: 0.94568 | valid_balanced_accuracy: 0.89636 | valid_logloss: 0.5071  | valid_f1_macro: 0.90945 |  2:49:46s
epoch 238| loss: 0.07033 | train_balanced_accuracy: 0.98302 | train_logloss: 0.03871 | train_f1_macro: 0.9845  | valid_balanced_accuracy: 0.94048 | valid_logloss: 0.18586 | valid_f1_macro: 0.94388 |  2:50:30s
epoch 239| loss: 0.07258 | train_balanced_accuracy: 0.98383 | train_logloss: 0.03648 | train_f1_macro: 0.9856  | valid_balanced_accuracy: 0.93823 | valid_logloss: 0.17929 | valid_f1_macro: 0.94436 |  2:51:12s
epoch 240| loss: 0.07186 | train_balanced_accuracy: 0.93471 | train_logloss: 0.96703 | train_f1_macro: 0.94742 | valid_balanced_accuracy: 0.89486 | valid_logloss: 1.10621 | valid_f1_macro: 0.90953 |  2:51:54s
epoch 241| loss: 0.06865 | train_balanced_accuracy: 0.98565 | train_logloss: 0.0346  | train_f1_macro: 0.98689 | valid_balanced_accuracy: 0.9418  | valid_logloss: 0.18283 | valid_f1_macro: 0.9465  |  2:52:37s
epoch 242| loss: 0.06346 | train_balanced_accuracy: 0.53905 | train_logloss: 21.33955| train_f1_macro: 0.33122 | valid_balanced_accuracy: 0.53598 | valid_logloss: 21.33512| valid_f1_macro: 0.32906 |  2:53:19s
epoch 243| loss: 0.07047 | train_balanced_accuracy: 0.9827  | train_logloss: 0.03648 | train_f1_macro: 0.98548 | valid_balanced_accuracy: 0.93713 | valid_logloss: 0.19254 | valid_f1_macro: 0.94262 |  2:54:02s
epoch 244| loss: 0.07126 | train_balanced_accuracy: 0.93854 | train_logloss: 0.29363 | train_f1_macro: 0.94948 | valid_balanced_accuracy: 0.90389 | valid_logloss: 0.44007 | valid_f1_macro: 0.91486 |  2:54:45s
epoch 245| loss: 0.06934 | train_balanced_accuracy: 0.93755 | train_logloss: 0.18871 | train_f1_macro: 0.94975 | valid_balanced_accuracy: 0.90074 | valid_logloss: 0.33872 | valid_f1_macro: 0.91475 |  2:55:28s
epoch 246| loss: 0.06896 | train_balanced_accuracy: 0.98653 | train_logloss: 0.03948 | train_f1_macro: 0.98513 | valid_balanced_accuracy: 0.94718 | valid_logloss: 0.18006 | valid_f1_macro: 0.94666 |  2:56:10s
epoch 247| loss: 0.06779 | train_balanced_accuracy: 0.93816 | train_logloss: 0.3071  | train_f1_macro: 0.94947 | valid_balanced_accuracy: 0.89875 | valid_logloss: 0.461   | valid_f1_macro: 0.91224 |  2:56:53s
epoch 248| loss: 0.08359 | train_balanced_accuracy: 0.97688 | train_logloss: 0.04129 | train_f1_macro: 0.98107 | valid_balanced_accuracy: 0.93379 | valid_logloss: 0.1876  | valid_f1_macro: 0.94081 |  2:57:35s
epoch 249| loss: 0.06739 | train_balanced_accuracy: 0.93638 | train_logloss: 0.6115  | train_f1_macro: 0.94962 | valid_balanced_accuracy: 0.89798 | valid_logloss: 0.76644 | valid_f1_macro: 0.91298 |  2:58:18s
epoch 250| loss: 0.06782 | train_balanced_accuracy: 0.93731 | train_logloss: 0.83215 | train_f1_macro: 0.94904 | valid_balanced_accuracy: 0.89724 | valid_logloss: 0.98242 | valid_f1_macro: 0.91053 |  2:59:00s
epoch 251| loss: 0.07004 | train_balanced_accuracy: 0.93365 | train_logloss: 0.52461 | train_f1_macro: 0.9474  | valid_balanced_accuracy: 0.89071 | valid_logloss: 0.68342 | valid_f1_macro: 0.90713 |  2:59:43s
epoch 252| loss: 0.06151 | train_balanced_accuracy: 0.98627 | train_logloss: 0.05216 | train_f1_macro: 0.98673 | valid_balanced_accuracy: 0.94459 | valid_logloss: 0.19566 | valid_f1_macro: 0.94735 |  3:00:26s
epoch 253| loss: 0.06135 | train_balanced_accuracy: 0.96429 | train_logloss: 0.09565 | train_f1_macro: 0.97262 | valid_balanced_accuracy: 0.91383 | valid_logloss: 0.27695 | valid_f1_macro: 0.92772 |  3:01:09s
epoch 254| loss: 0.06127 | train_balanced_accuracy: 0.93926 | train_logloss: 0.95892 | train_f1_macro: 0.95138 | valid_balanced_accuracy: 0.9014  | valid_logloss: 1.09752 | valid_f1_macro: 0.91498 |  3:01:52s
epoch 255| loss: 0.06235 | train_balanced_accuracy: 0.99061 | train_logloss: 0.02916 | train_f1_macro: 0.98947 | valid_balanced_accuracy: 0.95054 | valid_logloss: 0.17147 | valid_f1_macro: 0.95013 |  3:02:34s
epoch 256| loss: 0.05889 | train_balanced_accuracy: 0.93853 | train_logloss: 0.6642  | train_f1_macro: 0.95113 | valid_balanced_accuracy: 0.89848 | valid_logloss: 0.81468 | valid_f1_macro: 0.91308 |  3:03:16s
epoch 257| loss: 0.05527 | train_balanced_accuracy: 0.59873 | train_logloss: 1.31883 | train_f1_macro: 0.58286 | valid_balanced_accuracy: 0.59289 | valid_logloss: 1.67347 | valid_f1_macro: 0.5743  |  3:03:59s
epoch 258| loss: 0.05809 | train_balanced_accuracy: 0.98489 | train_logloss: 0.05468 | train_f1_macro: 0.98625 | valid_balanced_accuracy: 0.94233 | valid_logloss: 0.20029 | valid_f1_macro: 0.94548 |  3:04:42s
epoch 259| loss: 0.05906 | train_balanced_accuracy: 0.93869 | train_logloss: 0.22563 | train_f1_macro: 0.9511  | valid_balanced_accuracy: 0.89849 | valid_logloss: 0.39268 | valid_f1_macro: 0.91268 |  3:05:24s
epoch 260| loss: 0.06241 | train_balanced_accuracy: 0.99062 | train_logloss: 0.02827 | train_f1_macro: 0.98985 | valid_balanced_accuracy: 0.94863 | valid_logloss: 0.16847 | valid_f1_macro: 0.95048 |  3:06:07s
epoch 261| loss: 0.05645 | train_balanced_accuracy: 0.98843 | train_logloss: 0.02643 | train_f1_macro: 0.9891  | valid_balanced_accuracy: 0.94449 | valid_logloss: 0.18778 | valid_f1_macro: 0.94777 |  3:06:50s
epoch 262| loss: 0.05782 | train_balanced_accuracy: 0.98835 | train_logloss: 0.02815 | train_f1_macro: 0.98907 | valid_balanced_accuracy: 0.94545 | valid_logloss: 0.18094 | valid_f1_macro: 0.94885 |  3:07:32s
epoch 263| loss: 0.05995 | train_balanced_accuracy: 0.98981 | train_logloss: 0.02834 | train_f1_macro: 0.98919 | valid_balanced_accuracy: 0.9463  | valid_logloss: 0.18499 | valid_f1_macro: 0.94807 |  3:08:15s
epoch 264| loss: 0.05396 | train_balanced_accuracy: 0.99179 | train_logloss: 0.02175 | train_f1_macro: 0.99226 | valid_balanced_accuracy: 0.94948 | valid_logloss: 0.18096 | valid_f1_macro: 0.9522  |  3:08:57s
epoch 265| loss: 0.05642 | train_balanced_accuracy: 0.98254 | train_logloss: 0.03668 | train_f1_macro: 0.98583 | valid_balanced_accuracy: 0.93568 | valid_logloss: 0.19757 | valid_f1_macro: 0.94373 |  3:09:40s
epoch 266| loss: 0.05567 | train_balanced_accuracy: 0.99148 | train_logloss: 0.02297 | train_f1_macro: 0.99152 | valid_balanced_accuracy: 0.94878 | valid_logloss: 0.17783 | valid_f1_macro: 0.95093 |  3:10:22s
epoch 267| loss: 0.05185 | train_balanced_accuracy: 0.98971 | train_logloss: 0.02791 | train_f1_macro: 0.98989 | valid_balanced_accuracy: 0.94748 | valid_logloss: 0.17689 | valid_f1_macro: 0.95026 |  3:11:06s
epoch 268| loss: 0.05224 | train_balanced_accuracy: 0.99179 | train_logloss: 0.0246  | train_f1_macro: 0.99129 | valid_balanced_accuracy: 0.95242 | valid_logloss: 0.17572 | valid_f1_macro: 0.95336 |  3:11:49s
epoch 269| loss: 0.05281 | train_balanced_accuracy: 0.98776 | train_logloss: 0.02688 | train_f1_macro: 0.98967 | valid_balanced_accuracy: 0.93926 | valid_logloss: 0.19179 | valid_f1_macro: 0.94578 |  3:12:32s
epoch 270| loss: 0.05359 | train_balanced_accuracy: 0.9424  | train_logloss: 0.72767 | train_f1_macro: 0.95424 | valid_balanced_accuracy: 0.90398 | valid_logloss: 0.88509 | valid_f1_macro: 0.9171  |  3:13:14s
epoch 271| loss: 0.0502  | train_balanced_accuracy: 0.94102 | train_logloss: 0.21878 | train_f1_macro: 0.95287 | valid_balanced_accuracy: 0.90151 | valid_logloss: 0.3808  | valid_f1_macro: 0.9143  |  3:13:57s
epoch 272| loss: 0.05508 | train_balanced_accuracy: 0.98811 | train_logloss: 0.03016 | train_f1_macro: 0.9888  | valid_balanced_accuracy: 0.94787 | valid_logloss: 0.1879  | valid_f1_macro: 0.95073 |  3:14:40s
epoch 273| loss: 0.05201 | train_balanced_accuracy: 0.99067 | train_logloss: 0.02165 | train_f1_macro: 0.99156 | valid_balanced_accuracy: 0.94619 | valid_logloss: 0.17766 | valid_f1_macro: 0.94893 |  3:15:23s
epoch 274| loss: 0.05408 | train_balanced_accuracy: 0.94039 | train_logloss: 0.22389 | train_f1_macro: 0.95305 | valid_balanced_accuracy: 0.90235 | valid_logloss: 0.38429 | valid_f1_macro: 0.91628 |  3:16:05s
epoch 275| loss: 0.05245 | train_balanced_accuracy: 0.99118 | train_logloss: 0.02122 | train_f1_macro: 0.99202 | valid_balanced_accuracy: 0.94848 | valid_logloss: 0.17008 | valid_f1_macro: 0.95243 |  3:16:47s
epoch 276| loss: 0.05309 | train_balanced_accuracy: 0.94149 | train_logloss: 0.40282 | train_f1_macro: 0.95372 | valid_balanced_accuracy: 0.90132 | valid_logloss: 0.56938 | valid_f1_macro: 0.91486 |  3:17:30s
epoch 277| loss: 0.04726 | train_balanced_accuracy: 0.97535 | train_logloss: 0.04829 | train_f1_macro: 0.98063 | valid_balanced_accuracy: 0.93094 | valid_logloss: 0.22195 | valid_f1_macro: 0.93937 |  3:18:13s
epoch 278| loss: 0.06363 | train_balanced_accuracy: 0.98584 | train_logloss: 0.02947 | train_f1_macro: 0.98875 | valid_balanced_accuracy: 0.93624 | valid_logloss: 0.20402 | valid_f1_macro: 0.94445 |  3:18:55s
epoch 279| loss: 0.05075 | train_balanced_accuracy: 0.94117 | train_logloss: 0.28772 | train_f1_macro: 0.95314 | valid_balanced_accuracy: 0.89968 | valid_logloss: 0.46625 | valid_f1_macro: 0.91433 |  3:19:37s
epoch 280| loss: 0.05307 | train_balanced_accuracy: 0.95007 | train_logloss: 0.12657 | train_f1_macro: 0.95984 | valid_balanced_accuracy: 0.91383 | valid_logloss: 0.28545 | valid_f1_macro: 0.92533 |  3:20:20s
epoch 281| loss: 0.0464  | train_balanced_accuracy: 0.94157 | train_logloss: 0.69116 | train_f1_macro: 0.9536  | valid_balanced_accuracy: 0.90234 | valid_logloss: 0.86341 | valid_f1_macro: 0.91658 |  3:21:05s
epoch 282| loss: 0.05273 | train_balanced_accuracy: 0.9925  | train_logloss: 0.02375 | train_f1_macro: 0.99322 | valid_balanced_accuracy: 0.94767 | valid_logloss: 0.17584 | valid_f1_macro: 0.9518  |  3:21:47s
epoch 283| loss: 0.04955 | train_balanced_accuracy: 0.98925 | train_logloss: 0.0355  | train_f1_macro: 0.98865 | valid_balanced_accuracy: 0.94355 | valid_logloss: 0.19046 | valid_f1_macro: 0.94627 |  3:22:35s
epoch 284| loss: 0.04941 | train_balanced_accuracy: 0.93798 | train_logloss: 0.54588 | train_f1_macro: 0.95126 | valid_balanced_accuracy: 0.89457 | valid_logloss: 0.73032 | valid_f1_macro: 0.91086 |  3:23:17s
epoch 285| loss: 0.04839 | train_balanced_accuracy: 0.98982 | train_logloss: 0.02141 | train_f1_macro: 0.99125 | valid_balanced_accuracy: 0.94612 | valid_logloss: 0.17675 | valid_f1_macro: 0.95121 |  3:24:04s
epoch 286| loss: 0.04642 | train_balanced_accuracy: 0.99227 | train_logloss: 0.02044 | train_f1_macro: 0.99206 | valid_balanced_accuracy: 0.94875 | valid_logloss: 0.18045 | valid_f1_macro: 0.95169 |  3:24:47s
epoch 287| loss: 0.04397 | train_balanced_accuracy: 0.98215 | train_logloss: 0.03183 | train_f1_macro: 0.98597 | valid_balanced_accuracy: 0.93138 | valid_logloss: 0.22247 | valid_f1_macro: 0.94104 |  3:25:29s
epoch 288| loss: 0.04697 | train_balanced_accuracy: 0.99189 | train_logloss: 0.02214 | train_f1_macro: 0.99147 | valid_balanced_accuracy: 0.9478  | valid_logloss: 0.18099 | valid_f1_macro: 0.95051 |  3:26:12s

Early stopping occurred at epoch 288 with best_epoch = 268 and best_valid_f1_macro = 0.95336
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/callbacks.py:172: UserWarning: Best weights from best epoch are automatically used!
  warnings.warn(wrn_msg)
[CV 4/5; 7/7] END classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1;, score=0.543 total time=207.5min
[CV 5/5; 7/7] START classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: n_d changed from 8 to 64
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_dims changed from [] to [36, 38, 40, 128, 125, 74, 129, 115]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_emb_dim changed from 20 to [18, 19, 20, 20, 20, 20, 20, 20]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_idxs changed from [] to [1, 2, 3, 10, 11, 12, 18, 19]
  warnings.warn(wrn_msg)
epoch 0  | loss: 2.22815 | train_balanced_accuracy: 0.5     | train_logloss: 6.76334 | train_f1_macro: 0.24812 | valid_balanced_accuracy: 0.5     | valid_logloss: 6.77465 | valid_f1_macro: 0.24815 |  0:00:43s
epoch 1  | loss: 2.99313 | train_balanced_accuracy: 0.5     | train_logloss: 5.14836 | train_f1_macro: 0.4012  | valid_balanced_accuracy: 0.5     | valid_logloss: 5.16215 | valid_f1_macro: 0.40118 |  0:01:26s
epoch 2  | loss: 1.38673 | train_balanced_accuracy: 0.50754 | train_logloss: 0.6854  | train_f1_macro: 0.4342  | valid_balanced_accuracy: 0.50947 | valid_logloss: 0.67888 | valid_f1_macro: 0.43649 |  0:02:10s
epoch 3  | loss: 0.66159 | train_balanced_accuracy: 0.50977 | train_logloss: 0.63155 | train_f1_macro: 0.43696 | valid_balanced_accuracy: 0.5129  | valid_logloss: 0.62677 | valid_f1_macro: 0.442   |  0:02:53s
epoch 4  | loss: 0.61262 | train_balanced_accuracy: 0.52929 | train_logloss: 0.63229 | train_f1_macro: 0.49106 | valid_balanced_accuracy: 0.52889 | valid_logloss: 0.63131 | valid_f1_macro: 0.48863 |  0:03:37s
epoch 5  | loss: 0.61268 | train_balanced_accuracy: 0.54914 | train_logloss: 0.60998 | train_f1_macro: 0.5282  | valid_balanced_accuracy: 0.55148 | valid_logloss: 0.60767 | valid_f1_macro: 0.52967 |  0:04:21s
epoch 6  | loss: 0.61444 | train_balanced_accuracy: 0.50142 | train_logloss: 0.6266  | train_f1_macro: 0.40821 | valid_balanced_accuracy: 0.50147 | valid_logloss: 0.62318 | valid_f1_macro: 0.40693 |  0:05:04s
epoch 7  | loss: 0.61154 | train_balanced_accuracy: 0.50115 | train_logloss: 0.61792 | train_f1_macro: 0.40396 | valid_balanced_accuracy: 0.50008 | valid_logloss: 0.61691 | valid_f1_macro: 0.40176 |  0:05:47s
epoch 8  | loss: 0.6127  | train_balanced_accuracy: 0.51528 | train_logloss: 0.61018 | train_f1_macro: 0.44707 | valid_balanced_accuracy: 0.51659 | valid_logloss: 0.60813 | valid_f1_macro: 0.44906 |  0:06:29s
epoch 9  | loss: 0.60753 | train_balanced_accuracy: 0.57882 | train_logloss: 0.60315 | train_f1_macro: 0.57737 | valid_balanced_accuracy: 0.57903 | valid_logloss: 0.60246 | valid_f1_macro: 0.57612 |  0:07:12s
epoch 10 | loss: 0.60382 | train_balanced_accuracy: 0.52015 | train_logloss: 0.61054 | train_f1_macro: 0.46019 | valid_balanced_accuracy: 0.51695 | valid_logloss: 0.61    | valid_f1_macro: 0.45241 |  0:07:56s
epoch 11 | loss: 0.60507 | train_balanced_accuracy: 0.51801 | train_logloss: 0.60512 | train_f1_macro: 0.45048 | valid_balanced_accuracy: 0.51697 | valid_logloss: 0.60414 | valid_f1_macro: 0.44731 |  0:08:39s
epoch 12 | loss: 0.60503 | train_balanced_accuracy: 0.50693 | train_logloss: 0.6025  | train_f1_macro: 0.42085 | valid_balanced_accuracy: 0.50349 | valid_logloss: 0.60218 | valid_f1_macro: 0.41332 |  0:09:22s
epoch 13 | loss: 0.604   | train_balanced_accuracy: 0.51606 | train_logloss: 0.60375 | train_f1_macro: 0.44617 | valid_balanced_accuracy: 0.518   | valid_logloss: 0.60039 | valid_f1_macro: 0.44881 |  0:10:04s
epoch 14 | loss: 0.60524 | train_balanced_accuracy: 0.56922 | train_logloss: 0.61289 | train_f1_macro: 0.56433 | valid_balanced_accuracy: 0.57103 | valid_logloss: 0.61204 | valid_f1_macro: 0.56514 |  0:10:47s
epoch 15 | loss: 0.60284 | train_balanced_accuracy: 0.53445 | train_logloss: 0.60137 | train_f1_macro: 0.4951  | valid_balanced_accuracy: 0.53652 | valid_logloss: 0.59686 | valid_f1_macro: 0.49729 |  0:11:31s
epoch 16 | loss: 0.59916 | train_balanced_accuracy: 0.57833 | train_logloss: 0.59641 | train_f1_macro: 0.57395 | valid_balanced_accuracy: 0.57879 | valid_logloss: 0.5926  | valid_f1_macro: 0.57323 |  0:12:13s
epoch 17 | loss: 0.59888 | train_balanced_accuracy: 0.56148 | train_logloss: 0.59454 | train_f1_macro: 0.54066 | valid_balanced_accuracy: 0.56352 | valid_logloss: 0.59206 | valid_f1_macro: 0.5421  |  0:12:58s
epoch 18 | loss: 0.59583 | train_balanced_accuracy: 0.55532 | train_logloss: 0.59306 | train_f1_macro: 0.5323  | valid_balanced_accuracy: 0.55487 | valid_logloss: 0.5927  | valid_f1_macro: 0.52926 |  0:13:41s
epoch 19 | loss: 0.59323 | train_balanced_accuracy: 0.56755 | train_logloss: 0.58897 | train_f1_macro: 0.5522  | valid_balanced_accuracy: 0.56319 | valid_logloss: 0.58928 | valid_f1_macro: 0.54415 |  0:14:25s
epoch 20 | loss: 0.59325 | train_balanced_accuracy: 0.57719 | train_logloss: 0.58695 | train_f1_macro: 0.56706 | valid_balanced_accuracy: 0.5748  | valid_logloss: 0.58532 | valid_f1_macro: 0.56268 |  0:15:08s
epoch 21 | loss: 0.5888  | train_balanced_accuracy: 0.60268 | train_logloss: 0.58303 | train_f1_macro: 0.60544 | valid_balanced_accuracy: 0.60068 | valid_logloss: 0.58114 | valid_f1_macro: 0.60254 |  0:15:51s
epoch 22 | loss: 0.58544 | train_balanced_accuracy: 0.60486 | train_logloss: 0.58454 | train_f1_macro: 0.60755 | valid_balanced_accuracy: 0.60616 | valid_logloss: 0.5828  | valid_f1_macro: 0.60872 |  0:16:35s
epoch 23 | loss: 0.58324 | train_balanced_accuracy: 0.59724 | train_logloss: 0.57823 | train_f1_macro: 0.59616 | valid_balanced_accuracy: 0.60193 | valid_logloss: 0.57699 | valid_f1_macro: 0.60111 |  0:17:18s
epoch 24 | loss: 0.58105 | train_balanced_accuracy: 0.60831 | train_logloss: 0.57655 | train_f1_macro: 0.61126 | valid_balanced_accuracy: 0.60701 | valid_logloss: 0.5765  | valid_f1_macro: 0.60945 |  0:18:02s
epoch 25 | loss: 0.57719 | train_balanced_accuracy: 0.61154 | train_logloss: 0.56864 | train_f1_macro: 0.6137  | valid_balanced_accuracy: 0.61171 | valid_logloss: 0.56987 | valid_f1_macro: 0.61339 |  0:18:46s
epoch 26 | loss: 0.57268 | train_balanced_accuracy: 0.60071 | train_logloss: 0.57059 | train_f1_macro: 0.59759 | valid_balanced_accuracy: 0.60088 | valid_logloss: 0.56823 | valid_f1_macro: 0.59684 |  0:19:29s
epoch 27 | loss: 0.56552 | train_balanced_accuracy: 0.61513 | train_logloss: 0.55254 | train_f1_macro: 0.6176  | valid_balanced_accuracy: 0.61654 | valid_logloss: 0.5532  | valid_f1_macro: 0.61888 |  0:20:12s
epoch 28 | loss: 0.55079 | train_balanced_accuracy: 0.63985 | train_logloss: 0.53544 | train_f1_macro: 0.64789 | valid_balanced_accuracy: 0.64392 | valid_logloss: 0.53536 | valid_f1_macro: 0.65252 |  0:20:56s
epoch 29 | loss: 0.54056 | train_balanced_accuracy: 0.63496 | train_logloss: 0.5435  | train_f1_macro: 0.64237 | valid_balanced_accuracy: 0.632   | valid_logloss: 0.54532 | valid_f1_macro: 0.63892 |  0:21:39s
epoch 30 | loss: 0.5466  | train_balanced_accuracy: 0.6593  | train_logloss: 0.52438 | train_f1_macro: 0.66826 | valid_balanced_accuracy: 0.65964 | valid_logloss: 0.52906 | valid_f1_macro: 0.6688  |  0:22:23s
epoch 31 | loss: 0.52805 | train_balanced_accuracy: 0.65925 | train_logloss: 0.52061 | train_f1_macro: 0.66915 | valid_balanced_accuracy: 0.65826 | valid_logloss: 0.52484 | valid_f1_macro: 0.66801 |  0:23:08s
epoch 32 | loss: 0.52084 | train_balanced_accuracy: 0.66088 | train_logloss: 0.51852 | train_f1_macro: 0.67089 | valid_balanced_accuracy: 0.65873 | valid_logloss: 0.52417 | valid_f1_macro: 0.66859 |  0:23:51s
epoch 33 | loss: 0.51834 | train_balanced_accuracy: 0.67938 | train_logloss: 0.50867 | train_f1_macro: 0.68895 | valid_balanced_accuracy: 0.67506 | valid_logloss: 0.51721 | valid_f1_macro: 0.68464 |  0:24:35s
epoch 34 | loss: 0.51493 | train_balanced_accuracy: 0.69459 | train_logloss: 0.49926 | train_f1_macro: 0.70191 | valid_balanced_accuracy: 0.68541 | valid_logloss: 0.51028 | valid_f1_macro: 0.69273 |  0:25:18s
epoch 35 | loss: 0.5068  | train_balanced_accuracy: 0.67607 | train_logloss: 0.50529 | train_f1_macro: 0.68634 | valid_balanced_accuracy: 0.6733  | valid_logloss: 0.51485 | valid_f1_macro: 0.68362 |  0:26:01s
epoch 36 | loss: 0.50579 | train_balanced_accuracy: 0.70214 | train_logloss: 0.49307 | train_f1_macro: 0.7073  | valid_balanced_accuracy: 0.69913 | valid_logloss: 0.50401 | valid_f1_macro: 0.70464 |  0:26:44s
epoch 37 | loss: 0.49905 | train_balanced_accuracy: 0.70204 | train_logloss: 0.47975 | train_f1_macro: 0.71205 | valid_balanced_accuracy: 0.69624 | valid_logloss: 0.4928  | valid_f1_macro: 0.70596 |  0:27:28s
epoch 38 | loss: 0.48993 | train_balanced_accuracy: 0.71961 | train_logloss: 0.47535 | train_f1_macro: 0.7272  | valid_balanced_accuracy: 0.71799 | valid_logloss: 0.48803 | valid_f1_macro: 0.7254  |  0:28:11s
epoch 39 | loss: 0.48331 | train_balanced_accuracy: 0.7115  | train_logloss: 0.46859 | train_f1_macro: 0.72134 | valid_balanced_accuracy: 0.70258 | valid_logloss: 0.48631 | valid_f1_macro: 0.7121  |  0:28:55s
epoch 40 | loss: 0.478   | train_balanced_accuracy: 0.71977 | train_logloss: 0.46302 | train_f1_macro: 0.72896 | valid_balanced_accuracy: 0.70775 | valid_logloss: 0.48108 | valid_f1_macro: 0.71653 |  0:29:39s
epoch 41 | loss: 0.46997 | train_balanced_accuracy: 0.69833 | train_logloss: 0.45727 | train_f1_macro: 0.71325 | valid_balanced_accuracy: 0.69211 | valid_logloss: 0.47777 | valid_f1_macro: 0.70658 |  0:30:21s
epoch 42 | loss: 0.45983 | train_balanced_accuracy: 0.72327 | train_logloss: 0.45853 | train_f1_macro: 0.73322 | valid_balanced_accuracy: 0.71257 | valid_logloss: 0.48135 | valid_f1_macro: 0.7225  |  0:31:05s
epoch 43 | loss: 0.45221 | train_balanced_accuracy: 0.73791 | train_logloss: 0.4504  | train_f1_macro: 0.74407 | valid_balanced_accuracy: 0.72306 | valid_logloss: 0.4754  | valid_f1_macro: 0.72974 |  0:31:48s
epoch 44 | loss: 0.45079 | train_balanced_accuracy: 0.70819 | train_logloss: 0.43914 | train_f1_macro: 0.7251  | valid_balanced_accuracy: 0.69221 | valid_logloss: 0.46735 | valid_f1_macro: 0.70744 |  0:32:32s
epoch 45 | loss: 0.42835 | train_balanced_accuracy: 0.76904 | train_logloss: 0.40323 | train_f1_macro: 0.77837 | valid_balanced_accuracy: 0.74894 | valid_logloss: 0.43702 | valid_f1_macro: 0.75807 |  0:33:16s
epoch 46 | loss: 0.44685 | train_balanced_accuracy: 0.71518 | train_logloss: 0.46553 | train_f1_macro: 0.72973 | valid_balanced_accuracy: 0.70033 | valid_logloss: 0.49053 | valid_f1_macro: 0.71378 |  0:34:00s
epoch 47 | loss: 0.44507 | train_balanced_accuracy: 0.75765 | train_logloss: 0.41258 | train_f1_macro: 0.77071 | valid_balanced_accuracy: 0.7375  | valid_logloss: 0.44365 | valid_f1_macro: 0.75021 |  0:34:43s
epoch 48 | loss: 0.41944 | train_balanced_accuracy: 0.74064 | train_logloss: 0.40582 | train_f1_macro: 0.75921 | valid_balanced_accuracy: 0.71809 | valid_logloss: 0.44622 | valid_f1_macro: 0.73531 |  0:35:28s
epoch 49 | loss: 0.40798 | train_balanced_accuracy: 0.78299 | train_logloss: 0.38382 | train_f1_macro: 0.79476 | valid_balanced_accuracy: 0.75828 | valid_logloss: 0.42463 | valid_f1_macro: 0.76989 |  0:36:11s
epoch 50 | loss: 0.38461 | train_balanced_accuracy: 0.80798 | train_logloss: 0.35469 | train_f1_macro: 0.8166  | valid_balanced_accuracy: 0.77469 | valid_logloss: 0.40555 | valid_f1_macro: 0.78383 |  0:36:55s
epoch 51 | loss: 0.37545 | train_balanced_accuracy: 0.7882  | train_logloss: 0.357   | train_f1_macro: 0.8065  | valid_balanced_accuracy: 0.75899 | valid_logloss: 0.41104 | valid_f1_macro: 0.7768  |  0:37:38s
epoch 52 | loss: 0.35819 | train_balanced_accuracy: 0.82254 | train_logloss: 0.32896 | train_f1_macro: 0.83338 | valid_balanced_accuracy: 0.78988 | valid_logloss: 0.38647 | valid_f1_macro: 0.80143 |  0:38:22s
epoch 53 | loss: 0.3391  | train_balanced_accuracy: 0.83038 | train_logloss: 0.31679 | train_f1_macro: 0.84137 | valid_balanced_accuracy: 0.80057 | valid_logloss: 0.3722  | valid_f1_macro: 0.81259 |  0:39:06s
epoch 54 | loss: 0.32441 | train_balanced_accuracy: 0.83653 | train_logloss: 0.29369 | train_f1_macro: 0.8498  | valid_balanced_accuracy: 0.80343 | valid_logloss: 0.35666 | valid_f1_macro: 0.81616 |  0:39:49s
epoch 55 | loss: 0.31902 | train_balanced_accuracy: 0.85676 | train_logloss: 0.31757 | train_f1_macro: 0.85012 | valid_balanced_accuracy: 0.82402 | valid_logloss: 0.38157 | valid_f1_macro: 0.81909 |  0:40:33s
epoch 56 | loss: 0.33015 | train_balanced_accuracy: 0.78528 | train_logloss: 0.38411 | train_f1_macro: 0.7988  | valid_balanced_accuracy: 0.76463 | valid_logloss: 0.41006 | valid_f1_macro: 0.77748 |  0:41:16s
epoch 57 | loss: 0.34986 | train_balanced_accuracy: 0.82753 | train_logloss: 0.30708 | train_f1_macro: 0.84184 | valid_balanced_accuracy: 0.79135 | valid_logloss: 0.36334 | valid_f1_macro: 0.80662 |  0:42:00s
epoch 58 | loss: 0.2998  | train_balanced_accuracy: 0.88718 | train_logloss: 0.24712 | train_f1_macro: 0.88711 | valid_balanced_accuracy: 0.84891 | valid_logloss: 0.31961 | valid_f1_macro: 0.85022 |  0:42:44s
epoch 59 | loss: 0.27262 | train_balanced_accuracy: 0.88912 | train_logloss: 0.22612 | train_f1_macro: 0.89518 | valid_balanced_accuracy: 0.8457  | valid_logloss: 0.30691 | valid_f1_macro: 0.8533  |  0:43:28s
epoch 60 | loss: 0.26095 | train_balanced_accuracy: 0.90235 | train_logloss: 0.21744 | train_f1_macro: 0.90572 | valid_balanced_accuracy: 0.85861 | valid_logloss: 0.29076 | valid_f1_macro: 0.86445 |  0:44:12s
epoch 61 | loss: 0.25174 | train_balanced_accuracy: 0.90732 | train_logloss: 0.20515 | train_f1_macro: 0.90978 | valid_balanced_accuracy: 0.87121 | valid_logloss: 0.27727 | valid_f1_macro: 0.87455 |  0:44:56s
epoch 62 | loss: 0.23818 | train_balanced_accuracy: 0.90957 | train_logloss: 0.1928  | train_f1_macro: 0.91491 | valid_balanced_accuracy: 0.86735 | valid_logloss: 0.27766 | valid_f1_macro: 0.87494 |  0:45:39s
epoch 63 | loss: 0.22671 | train_balanced_accuracy: 0.91749 | train_logloss: 0.18058 | train_f1_macro: 0.92209 | valid_balanced_accuracy: 0.87487 | valid_logloss: 0.26376 | valid_f1_macro: 0.88192 |  0:46:23s
epoch 64 | loss: 0.21859 | train_balanced_accuracy: 0.92765 | train_logloss: 0.16953 | train_f1_macro: 0.92817 | valid_balanced_accuracy: 0.88393 | valid_logloss: 0.25292 | valid_f1_macro: 0.88662 |  0:47:06s
epoch 65 | loss: 0.21178 | train_balanced_accuracy: 0.92518 | train_logloss: 0.17163 | train_f1_macro: 0.92725 | valid_balanced_accuracy: 0.88086 | valid_logloss: 0.26658 | valid_f1_macro: 0.88497 |  0:47:50s
epoch 66 | loss: 0.21139 | train_balanced_accuracy: 0.91979 | train_logloss: 0.16783 | train_f1_macro: 0.92437 | valid_balanced_accuracy: 0.87526 | valid_logloss: 0.26114 | valid_f1_macro: 0.88293 |  0:48:34s
epoch 67 | loss: 0.2312  | train_balanced_accuracy: 0.90282 | train_logloss: 0.21208 | train_f1_macro: 0.90635 | valid_balanced_accuracy: 0.86093 | valid_logloss: 0.29633 | valid_f1_macro: 0.86677 |  0:49:17s
epoch 68 | loss: 0.24327 | train_balanced_accuracy: 0.90343 | train_logloss: 0.19203 | train_f1_macro: 0.91349 | valid_balanced_accuracy: 0.86117 | valid_logloss: 0.2767  | valid_f1_macro: 0.87282 |  0:50:01s
epoch 69 | loss: 0.20621 | train_balanced_accuracy: 0.93043 | train_logloss: 0.14844 | train_f1_macro: 0.9352  | valid_balanced_accuracy: 0.88191 | valid_logloss: 0.24814 | valid_f1_macro: 0.88883 |  0:50:44s
epoch 70 | loss: 0.18624 | train_balanced_accuracy: 0.92857 | train_logloss: 0.16743 | train_f1_macro: 0.92995 | valid_balanced_accuracy: 0.88611 | valid_logloss: 0.25973 | valid_f1_macro: 0.89085 |  0:51:28s
epoch 71 | loss: 0.22301 | train_balanced_accuracy: 0.93135 | train_logloss: 0.15514 | train_f1_macro: 0.93316 | valid_balanced_accuracy: 0.88477 | valid_logloss: 0.26038 | valid_f1_macro: 0.88905 |  0:52:11s
epoch 72 | loss: 0.18052 | train_balanced_accuracy: 0.93906 | train_logloss: 0.13185 | train_f1_macro: 0.94277 | valid_balanced_accuracy: 0.89293 | valid_logloss: 0.24232 | valid_f1_macro: 0.89996 |  0:52:55s
epoch 73 | loss: 0.16376 | train_balanced_accuracy: 0.95021 | train_logloss: 0.11348 | train_f1_macro: 0.95332 | valid_balanced_accuracy: 0.90399 | valid_logloss: 0.22421 | valid_f1_macro: 0.90923 |  0:53:40s
epoch 74 | loss: 0.15639 | train_balanced_accuracy: 0.93562 | train_logloss: 0.12759 | train_f1_macro: 0.94506 | valid_balanced_accuracy: 0.88471 | valid_logloss: 0.24692 | valid_f1_macro: 0.89771 |  0:54:23s
epoch 75 | loss: 0.14938 | train_balanced_accuracy: 0.95198 | train_logloss: 0.10477 | train_f1_macro: 0.95717 | valid_balanced_accuracy: 0.90367 | valid_logloss: 0.21255 | valid_f1_macro: 0.91242 |  0:55:07s
epoch 76 | loss: 0.14014 | train_balanced_accuracy: 0.95609 | train_logloss: 0.09756 | train_f1_macro: 0.95962 | valid_balanced_accuracy: 0.90914 | valid_logloss: 0.19959 | valid_f1_macro: 0.91604 |  0:55:50s
epoch 77 | loss: 0.14455 | train_balanced_accuracy: 0.9407  | train_logloss: 0.12437 | train_f1_macro: 0.94677 | valid_balanced_accuracy: 0.894   | valid_logloss: 0.2281  | valid_f1_macro: 0.90299 |  0:56:34s
epoch 78 | loss: 0.15166 | train_balanced_accuracy: 0.96245 | train_logloss: 0.09655 | train_f1_macro: 0.95992 | valid_balanced_accuracy: 0.917   | valid_logloss: 0.21268 | valid_f1_macro: 0.91551 |  0:57:17s
epoch 79 | loss: 0.1468  | train_balanced_accuracy: 0.95169 | train_logloss: 0.10731 | train_f1_macro: 0.9556  | valid_balanced_accuracy: 0.90321 | valid_logloss: 0.21637 | valid_f1_macro: 0.91095 |  0:58:01s
epoch 80 | loss: 0.17147 | train_balanced_accuracy: 0.93373 | train_logloss: 0.14037 | train_f1_macro: 0.94084 | valid_balanced_accuracy: 0.88693 | valid_logloss: 0.23397 | valid_f1_macro: 0.89747 |  0:58:44s
epoch 81 | loss: 0.18129 | train_balanced_accuracy: 0.91686 | train_logloss: 0.1754  | train_f1_macro: 0.9228  | valid_balanced_accuracy: 0.86979 | valid_logloss: 0.25969 | valid_f1_macro: 0.87893 |  0:59:28s
epoch 82 | loss: 0.1928  | train_balanced_accuracy: 0.94392 | train_logloss: 0.13649 | train_f1_macro: 0.94416 | valid_balanced_accuracy: 0.90037 | valid_logloss: 0.22838 | valid_f1_macro: 0.90344 |  1:00:11s
epoch 83 | loss: 0.14619 | train_balanced_accuracy: 0.95599 | train_logloss: 0.0983  | train_f1_macro: 0.95876 | valid_balanced_accuracy: 0.90841 | valid_logloss: 0.21233 | valid_f1_macro: 0.91611 |  1:00:54s
epoch 84 | loss: 0.13257 | train_balanced_accuracy: 0.96628 | train_logloss: 0.08461 | train_f1_macro: 0.96562 | valid_balanced_accuracy: 0.92301 | valid_logloss: 0.19529 | valid_f1_macro: 0.92422 |  1:01:38s
epoch 85 | loss: 0.11774 | train_balanced_accuracy: 0.96931 | train_logloss: 0.0724  | train_f1_macro: 0.97168 | valid_balanced_accuracy: 0.92002 | valid_logloss: 0.18577 | valid_f1_macro: 0.92641 |  1:02:21s
epoch 86 | loss: 0.10899 | train_balanced_accuracy: 0.96851 | train_logloss: 0.07778 | train_f1_macro: 0.97013 | valid_balanced_accuracy: 0.92534 | valid_logloss: 0.19347 | valid_f1_macro: 0.92938 |  1:03:07s
epoch 87 | loss: 0.10347 | train_balanced_accuracy: 0.9714  | train_logloss: 0.07057 | train_f1_macro: 0.97225 | valid_balanced_accuracy: 0.92261 | valid_logloss: 0.19807 | valid_f1_macro: 0.92712 |  1:03:50s
epoch 88 | loss: 0.10954 | train_balanced_accuracy: 0.96246 | train_logloss: 0.07339 | train_f1_macro: 0.96794 | valid_balanced_accuracy: 0.91251 | valid_logloss: 0.19293 | valid_f1_macro: 0.9222  |  1:04:34s
epoch 89 | loss: 0.09971 | train_balanced_accuracy: 0.97698 | train_logloss: 0.06023 | train_f1_macro: 0.97732 | valid_balanced_accuracy: 0.92896 | valid_logloss: 0.18196 | valid_f1_macro: 0.93197 |  1:05:17s
epoch 90 | loss: 0.09975 | train_balanced_accuracy: 0.97498 | train_logloss: 0.05868 | train_f1_macro: 0.97723 | valid_balanced_accuracy: 0.92783 | valid_logloss: 0.17689 | valid_f1_macro: 0.93474 |  1:06:00s
epoch 91 | loss: 0.12118 | train_balanced_accuracy: 0.96298 | train_logloss: 0.08928 | train_f1_macro: 0.96435 | valid_balanced_accuracy: 0.92121 | valid_logloss: 0.19851 | valid_f1_macro: 0.92424 |  1:06:44s
epoch 92 | loss: 0.12908 | train_balanced_accuracy: 0.96506 | train_logloss: 0.09616 | train_f1_macro: 0.96531 | valid_balanced_accuracy: 0.92395 | valid_logloss: 0.19039 | valid_f1_macro: 0.92599 |  1:07:27s
epoch 93 | loss: 0.12345 | train_balanced_accuracy: 0.96352 | train_logloss: 0.08485 | train_f1_macro: 0.96708 | valid_balanced_accuracy: 0.92072 | valid_logloss: 0.18836 | valid_f1_macro: 0.92786 |  1:08:11s
epoch 94 | loss: 0.10979 | train_balanced_accuracy: 0.95709 | train_logloss: 0.09838 | train_f1_macro: 0.96229 | valid_balanced_accuracy: 0.9158  | valid_logloss: 0.20183 | valid_f1_macro: 0.9248  |  1:08:54s
epoch 95 | loss: 0.12344 | train_balanced_accuracy: 0.97025 | train_logloss: 0.08491 | train_f1_macro: 0.96794 | valid_balanced_accuracy: 0.92888 | valid_logloss: 0.18666 | valid_f1_macro: 0.92815 |  1:09:38s
epoch 96 | loss: 0.09926 | train_balanced_accuracy: 0.9818  | train_logloss: 0.0538  | train_f1_macro: 0.98053 | valid_balanced_accuracy: 0.93982 | valid_logloss: 0.16469 | valid_f1_macro: 0.93903 |  1:10:21s
epoch 97 | loss: 0.09076 | train_balanced_accuracy: 0.97744 | train_logloss: 0.05531 | train_f1_macro: 0.97955 | valid_balanced_accuracy: 0.9259  | valid_logloss: 0.1886  | valid_f1_macro: 0.93341 |  1:11:05s
epoch 98 | loss: 0.08873 | train_balanced_accuracy: 0.96972 | train_logloss: 0.05905 | train_f1_macro: 0.9747  | valid_balanced_accuracy: 0.91431 | valid_logloss: 0.19313 | valid_f1_macro: 0.92578 |  1:11:49s
epoch 99 | loss: 0.08436 | train_balanced_accuracy: 0.979   | train_logloss: 0.0618  | train_f1_macro: 0.97596 | valid_balanced_accuracy: 0.93752 | valid_logloss: 0.17697 | valid_f1_macro: 0.93603 |  1:12:32s
epoch 100| loss: 0.0821  | train_balanced_accuracy: 0.98128 | train_logloss: 0.049   | train_f1_macro: 0.98025 | valid_balanced_accuracy: 0.93978 | valid_logloss: 0.17665 | valid_f1_macro: 0.94082 |  1:13:17s
epoch 101| loss: 0.07971 | train_balanced_accuracy: 0.98267 | train_logloss: 0.04531 | train_f1_macro: 0.98304 | valid_balanced_accuracy: 0.93893 | valid_logloss: 0.17187 | valid_f1_macro: 0.9421  |  1:14:01s
epoch 102| loss: 0.07391 | train_balanced_accuracy: 0.98007 | train_logloss: 0.04502 | train_f1_macro: 0.98225 | valid_balanced_accuracy: 0.93703 | valid_logloss: 0.17188 | valid_f1_macro: 0.94325 |  1:14:45s
epoch 103| loss: 0.07538 | train_balanced_accuracy: 0.98043 | train_logloss: 0.04505 | train_f1_macro: 0.98163 | valid_balanced_accuracy: 0.93737 | valid_logloss: 0.17072 | valid_f1_macro: 0.94265 |  1:15:28s
epoch 104| loss: 0.07753 | train_balanced_accuracy: 0.98461 | train_logloss: 0.03621 | train_f1_macro: 0.98557 | valid_balanced_accuracy: 0.94017 | valid_logloss: 0.16217 | valid_f1_macro: 0.94534 |  1:16:11s
epoch 105| loss: 0.07423 | train_balanced_accuracy: 0.9839  | train_logloss: 0.04178 | train_f1_macro: 0.98534 | valid_balanced_accuracy: 0.93609 | valid_logloss: 0.1712  | valid_f1_macro: 0.94143 |  1:16:54s
epoch 106| loss: 0.07118 | train_balanced_accuracy: 0.98495 | train_logloss: 0.04582 | train_f1_macro: 0.98372 | valid_balanced_accuracy: 0.94058 | valid_logloss: 0.17691 | valid_f1_macro: 0.94155 |  1:17:38s
epoch 107| loss: 0.06616 | train_balanced_accuracy: 0.98274 | train_logloss: 0.03834 | train_f1_macro: 0.98417 | valid_balanced_accuracy: 0.9377  | valid_logloss: 0.17646 | valid_f1_macro: 0.94259 |  1:18:22s
epoch 108| loss: 0.06733 | train_balanced_accuracy: 0.97754 | train_logloss: 0.04244 | train_f1_macro: 0.98161 | valid_balanced_accuracy: 0.92536 | valid_logloss: 0.1884  | valid_f1_macro: 0.93575 |  1:19:05s
epoch 109| loss: 0.06435 | train_balanced_accuracy: 0.97946 | train_logloss: 0.0394  | train_f1_macro: 0.98337 | valid_balanced_accuracy: 0.92937 | valid_logloss: 0.19301 | valid_f1_macro: 0.93918 |  1:19:48s
epoch 110| loss: 0.06022 | train_balanced_accuracy: 0.98461 | train_logloss: 0.03466 | train_f1_macro: 0.98644 | valid_balanced_accuracy: 0.93525 | valid_logloss: 0.17707 | valid_f1_macro: 0.94271 |  1:20:32s
epoch 111| loss: 0.05942 | train_balanced_accuracy: 0.98721 | train_logloss: 0.03217 | train_f1_macro: 0.98809 | valid_balanced_accuracy: 0.94443 | valid_logloss: 0.16233 | valid_f1_macro: 0.94818 |  1:21:15s
epoch 112| loss: 0.06389 | train_balanced_accuracy: 0.98623 | train_logloss: 0.03437 | train_f1_macro: 0.98623 | valid_balanced_accuracy: 0.94182 | valid_logloss: 0.17718 | valid_f1_macro: 0.94446 |  1:21:59s
epoch 113| loss: 0.06252 | train_balanced_accuracy: 0.98712 | train_logloss: 0.03297 | train_f1_macro: 0.98654 | valid_balanced_accuracy: 0.94919 | valid_logloss: 0.16709 | valid_f1_macro: 0.95073 |  1:22:42s
epoch 114| loss: 0.05872 | train_balanced_accuracy: 0.9854  | train_logloss: 0.03195 | train_f1_macro: 0.98699 | valid_balanced_accuracy: 0.936   | valid_logloss: 0.16958 | valid_f1_macro: 0.94195 |  1:23:27s
epoch 115| loss: 0.06037 | train_balanced_accuracy: 0.98095 | train_logloss: 0.03704 | train_f1_macro: 0.98449 | valid_balanced_accuracy: 0.9325  | valid_logloss: 0.18431 | valid_f1_macro: 0.9414  |  1:24:11s
epoch 116| loss: 0.06012 | train_balanced_accuracy: 0.97937 | train_logloss: 0.04036 | train_f1_macro: 0.98263 | valid_balanced_accuracy: 0.93012 | valid_logloss: 0.2061  | valid_f1_macro: 0.93811 |  1:24:54s
epoch 117| loss: 0.06271 | train_balanced_accuracy: 0.9844  | train_logloss: 0.03376 | train_f1_macro: 0.98568 | valid_balanced_accuracy: 0.93522 | valid_logloss: 0.18614 | valid_f1_macro: 0.94026 |  1:25:37s
epoch 118| loss: 0.05887 | train_balanced_accuracy: 0.98694 | train_logloss: 0.03152 | train_f1_macro: 0.98712 | valid_balanced_accuracy: 0.94612 | valid_logloss: 0.17448 | valid_f1_macro: 0.94912 |  1:26:21s
epoch 119| loss: 0.05796 | train_balanced_accuracy: 0.9867  | train_logloss: 0.03385 | train_f1_macro: 0.98682 | valid_balanced_accuracy: 0.94035 | valid_logloss: 0.18137 | valid_f1_macro: 0.9444  |  1:27:05s
epoch 120| loss: 0.0588  | train_balanced_accuracy: 0.99034 | train_logloss: 0.02985 | train_f1_macro: 0.98927 | valid_balanced_accuracy: 0.94779 | valid_logloss: 0.16012 | valid_f1_macro: 0.94779 |  1:27:48s
epoch 121| loss: 0.05407 | train_balanced_accuracy: 0.99033 | train_logloss: 0.0267  | train_f1_macro: 0.99062 | valid_balanced_accuracy: 0.94499 | valid_logloss: 0.1631  | valid_f1_macro: 0.94889 |  1:28:31s
epoch 122| loss: 0.0563  | train_balanced_accuracy: 0.98857 | train_logloss: 0.02765 | train_f1_macro: 0.98903 | valid_balanced_accuracy: 0.93914 | valid_logloss: 0.16715 | valid_f1_macro: 0.94383 |  1:29:15s
epoch 123| loss: 0.05553 | train_balanced_accuracy: 0.98876 | train_logloss: 0.02728 | train_f1_macro: 0.98977 | valid_balanced_accuracy: 0.94402 | valid_logloss: 0.15866 | valid_f1_macro: 0.94857 |  1:29:58s
epoch 124| loss: 0.05181 | train_balanced_accuracy: 0.99058 | train_logloss: 0.02833 | train_f1_macro: 0.9903  | valid_balanced_accuracy: 0.94572 | valid_logloss: 0.16504 | valid_f1_macro: 0.94875 |  1:30:42s
epoch 125| loss: 0.05697 | train_balanced_accuracy: 0.98788 | train_logloss: 0.03081 | train_f1_macro: 0.98784 | valid_balanced_accuracy: 0.94219 | valid_logloss: 0.16919 | valid_f1_macro: 0.94621 |  1:31:25s
epoch 126| loss: 0.05582 | train_balanced_accuracy: 0.98651 | train_logloss: 0.03105 | train_f1_macro: 0.98828 | valid_balanced_accuracy: 0.93719 | valid_logloss: 0.17187 | valid_f1_macro: 0.94349 |  1:32:08s
epoch 127| loss: 0.05265 | train_balanced_accuracy: 0.98882 | train_logloss: 0.02471 | train_f1_macro: 0.98998 | valid_balanced_accuracy: 0.93799 | valid_logloss: 0.18334 | valid_f1_macro: 0.94422 |  1:32:52s
epoch 128| loss: 0.05006 | train_balanced_accuracy: 0.98982 | train_logloss: 0.02626 | train_f1_macro: 0.99    | valid_balanced_accuracy: 0.9397  | valid_logloss: 0.17513 | valid_f1_macro: 0.94443 |  1:33:36s
epoch 129| loss: 0.04764 | train_balanced_accuracy: 0.99067 | train_logloss: 0.02419 | train_f1_macro: 0.99116 | valid_balanced_accuracy: 0.9449  | valid_logloss: 0.17222 | valid_f1_macro: 0.94931 |  1:34:19s
epoch 130| loss: 0.04817 | train_balanced_accuracy: 0.9868  | train_logloss: 0.03178 | train_f1_macro: 0.98723 | valid_balanced_accuracy: 0.94244 | valid_logloss: 0.18065 | valid_f1_macro: 0.94603 |  1:35:02s
epoch 131| loss: 0.05297 | train_balanced_accuracy: 0.99204 | train_logloss: 0.02311 | train_f1_macro: 0.99186 | valid_balanced_accuracy: 0.94958 | valid_logloss: 0.15892 | valid_f1_macro: 0.95153 |  1:35:45s
epoch 132| loss: 0.05033 | train_balanced_accuracy: 0.99021 | train_logloss: 0.02075 | train_f1_macro: 0.9915  | valid_balanced_accuracy: 0.9464  | valid_logloss: 0.15484 | valid_f1_macro: 0.95164 |  1:36:29s
epoch 133| loss: 0.04698 | train_balanced_accuracy: 0.98533 | train_logloss: 0.03316 | train_f1_macro: 0.98702 | valid_balanced_accuracy: 0.93943 | valid_logloss: 0.18352 | valid_f1_macro: 0.94536 |  1:37:12s
epoch 134| loss: 0.05042 | train_balanced_accuracy: 0.98894 | train_logloss: 0.02905 | train_f1_macro: 0.99024 | valid_balanced_accuracy: 0.93885 | valid_logloss: 0.1716  | valid_f1_macro: 0.94572 |  1:37:56s
epoch 135| loss: 0.04637 | train_balanced_accuracy: 0.99049 | train_logloss: 0.02413 | train_f1_macro: 0.98992 | valid_balanced_accuracy: 0.94942 | valid_logloss: 0.16454 | valid_f1_macro: 0.95129 |  1:38:39s
epoch 136| loss: 0.04438 | train_balanced_accuracy: 0.98905 | train_logloss: 0.02424 | train_f1_macro: 0.99078 | valid_balanced_accuracy: 0.9443  | valid_logloss: 0.164   | valid_f1_macro: 0.95066 |  1:39:23s
epoch 137| loss: 0.05027 | train_balanced_accuracy: 0.99029 | train_logloss: 0.03061 | train_f1_macro: 0.98989 | valid_balanced_accuracy: 0.9481  | valid_logloss: 0.17098 | valid_f1_macro: 0.94857 |  1:40:06s
epoch 138| loss: 0.04658 | train_balanced_accuracy: 0.99002 | train_logloss: 0.02155 | train_f1_macro: 0.99188 | valid_balanced_accuracy: 0.94343 | valid_logloss: 0.16382 | valid_f1_macro: 0.94926 |  1:40:49s
epoch 139| loss: 0.0459  | train_balanced_accuracy: 0.9906  | train_logloss: 0.02284 | train_f1_macro: 0.99139 | valid_balanced_accuracy: 0.94259 | valid_logloss: 0.17419 | valid_f1_macro: 0.94669 |  1:41:32s
epoch 140| loss: 0.04625 | train_balanced_accuracy: 0.99133 | train_logloss: 0.02143 | train_f1_macro: 0.99191 | valid_balanced_accuracy: 0.94533 | valid_logloss: 0.17356 | valid_f1_macro: 0.94806 |  1:42:16s
epoch 141| loss: 0.07431 | train_balanced_accuracy: 0.98343 | train_logloss: 0.05048 | train_f1_macro: 0.98062 | valid_balanced_accuracy: 0.93968 | valid_logloss: 0.17339 | valid_f1_macro: 0.93807 |  1:43:00s
epoch 142| loss: 0.06052 | train_balanced_accuracy: 0.98728 | train_logloss: 0.02852 | train_f1_macro: 0.98938 | valid_balanced_accuracy: 0.94359 | valid_logloss: 0.16166 | valid_f1_macro: 0.94917 |  1:43:44s
epoch 143| loss: 0.0506  | train_balanced_accuracy: 0.99057 | train_logloss: 0.02357 | train_f1_macro: 0.99089 | valid_balanced_accuracy: 0.94876 | valid_logloss: 0.1634  | valid_f1_macro: 0.95177 |  1:44:27s
epoch 144| loss: 0.05041 | train_balanced_accuracy: 0.99124 | train_logloss: 0.02049 | train_f1_macro: 0.9922  | valid_balanced_accuracy: 0.94448 | valid_logloss: 0.16741 | valid_f1_macro: 0.94959 |  1:45:11s
epoch 145| loss: 0.0452  | train_balanced_accuracy: 0.99341 | train_logloss: 0.01928 | train_f1_macro: 0.99347 | valid_balanced_accuracy: 0.95116 | valid_logloss: 0.15191 | valid_f1_macro: 0.95407 |  1:45:54s
epoch 146| loss: 0.04332 | train_balanced_accuracy: 0.98994 | train_logloss: 0.02441 | train_f1_macro: 0.99097 | valid_balanced_accuracy: 0.94721 | valid_logloss: 0.1591  | valid_f1_macro: 0.95194 |  1:46:38s
epoch 147| loss: 0.04542 | train_balanced_accuracy: 0.99074 | train_logloss: 0.02736 | train_f1_macro: 0.99063 | valid_balanced_accuracy: 0.94465 | valid_logloss: 0.17251 | valid_f1_macro: 0.94929 |  1:47:21s
epoch 148| loss: 0.04356 | train_balanced_accuracy: 0.98752 | train_logloss: 0.02502 | train_f1_macro: 0.98968 | valid_balanced_accuracy: 0.93586 | valid_logloss: 0.18488 | valid_f1_macro: 0.94472 |  1:48:04s
epoch 149| loss: 0.04508 | train_balanced_accuracy: 0.99337 | train_logloss: 0.0176  | train_f1_macro: 0.99353 | valid_balanced_accuracy: 0.94707 | valid_logloss: 0.16323 | valid_f1_macro: 0.95062 |  1:48:47s
epoch 150| loss: 0.03996 | train_balanced_accuracy: 0.99284 | train_logloss: 0.01727 | train_f1_macro: 0.99355 | valid_balanced_accuracy: 0.95475 | valid_logloss: 0.14545 | valid_f1_macro: 0.9578  |  1:49:31s
epoch 151| loss: 0.03962 | train_balanced_accuracy: 0.9921  | train_logloss: 0.01863 | train_f1_macro: 0.99304 | valid_balanced_accuracy: 0.94678 | valid_logloss: 0.16355 | valid_f1_macro: 0.95266 |  1:50:14s
epoch 152| loss: 0.03594 | train_balanced_accuracy: 0.99067 | train_logloss: 0.01922 | train_f1_macro: 0.99201 | valid_balanced_accuracy: 0.94568 | valid_logloss: 0.16516 | valid_f1_macro: 0.95091 |  1:50:57s
epoch 153| loss: 0.04077 | train_balanced_accuracy: 0.99306 | train_logloss: 0.02008 | train_f1_macro: 0.99397 | valid_balanced_accuracy: 0.94423 | valid_logloss: 0.15283 | valid_f1_macro: 0.95    |  1:51:41s
epoch 154| loss: 0.03798 | train_balanced_accuracy: 0.99236 | train_logloss: 0.01745 | train_f1_macro: 0.99316 | valid_balanced_accuracy: 0.95019 | valid_logloss: 0.16195 | valid_f1_macro: 0.95365 |  1:52:24s
epoch 155| loss: 0.04201 | train_balanced_accuracy: 0.99176 | train_logloss: 0.02002 | train_f1_macro: 0.99268 | valid_balanced_accuracy: 0.94568 | valid_logloss: 0.15314 | valid_f1_macro: 0.95102 |  1:53:09s
epoch 156| loss: 0.03704 | train_balanced_accuracy: 0.9918  | train_logloss: 0.01829 | train_f1_macro: 0.99268 | valid_balanced_accuracy: 0.94609 | valid_logloss: 0.1724  | valid_f1_macro: 0.95085 |  1:53:52s
epoch 157| loss: 0.04151 | train_balanced_accuracy: 0.99346 | train_logloss: 0.0195  | train_f1_macro: 0.993   | valid_balanced_accuracy: 0.95176 | valid_logloss: 0.15832 | valid_f1_macro: 0.95282 |  1:54:36s
epoch 158| loss: 0.04061 | train_balanced_accuracy: 0.99465 | train_logloss: 0.01705 | train_f1_macro: 0.99473 | valid_balanced_accuracy: 0.95037 | valid_logloss: 0.16248 | valid_f1_macro: 0.95258 |  1:55:20s
epoch 159| loss: 0.03755 | train_balanced_accuracy: 0.99181 | train_logloss: 0.01788 | train_f1_macro: 0.99304 | valid_balanced_accuracy: 0.94647 | valid_logloss: 0.16516 | valid_f1_macro: 0.95219 |  1:56:03s
epoch 160| loss: 0.04738 | train_balanced_accuracy: 0.98033 | train_logloss: 0.0357  | train_f1_macro: 0.98386 | valid_balanced_accuracy: 0.92761 | valid_logloss: 0.20388 | valid_f1_macro: 0.93755 |  1:56:50s
epoch 161| loss: 0.05208 | train_balanced_accuracy: 0.9922  | train_logloss: 0.019   | train_f1_macro: 0.99304 | valid_balanced_accuracy: 0.94858 | valid_logloss: 0.16883 | valid_f1_macro: 0.95241 |  1:57:40s
epoch 162| loss: 0.04143 | train_balanced_accuracy: 0.98802 | train_logloss: 0.02502 | train_f1_macro: 0.98937 | valid_balanced_accuracy: 0.9395  | valid_logloss: 0.18181 | valid_f1_macro: 0.94591 |  1:58:23s
epoch 163| loss: 0.03734 | train_balanced_accuracy: 0.99323 | train_logloss: 0.01745 | train_f1_macro: 0.99341 | valid_balanced_accuracy: 0.94907 | valid_logloss: 0.16022 | valid_f1_macro: 0.95267 |  1:59:08s
epoch 164| loss: 0.03684 | train_balanced_accuracy: 0.99185 | train_logloss: 0.02002 | train_f1_macro: 0.99221 | valid_balanced_accuracy: 0.9489  | valid_logloss: 0.17381 | valid_f1_macro: 0.95266 |  1:59:53s
epoch 165| loss: 0.03632 | train_balanced_accuracy: 0.99391 | train_logloss: 0.01514 | train_f1_macro: 0.99422 | valid_balanced_accuracy: 0.95508 | valid_logloss: 0.15462 | valid_f1_macro: 0.9575  |  2:00:36s
epoch 166| loss: 0.03698 | train_balanced_accuracy: 0.992   | train_logloss: 0.01776 | train_f1_macro: 0.99298 | valid_balanced_accuracy: 0.94873 | valid_logloss: 0.16411 | valid_f1_macro: 0.95329 |  2:01:20s
epoch 167| loss: 0.03432 | train_balanced_accuracy: 0.99421 | train_logloss: 0.01506 | train_f1_macro: 0.99449 | valid_balanced_accuracy: 0.95244 | valid_logloss: 0.16397 | valid_f1_macro: 0.95529 |  2:02:03s
epoch 168| loss: 0.03586 | train_balanced_accuracy: 0.99399 | train_logloss: 0.01524 | train_f1_macro: 0.99431 | valid_balanced_accuracy: 0.95058 | valid_logloss: 0.15983 | valid_f1_macro: 0.95413 |  2:02:46s
epoch 169| loss: 0.03392 | train_balanced_accuracy: 0.99499 | train_logloss: 0.016   | train_f1_macro: 0.99417 | valid_balanced_accuracy: 0.95494 | valid_logloss: 0.16436 | valid_f1_macro: 0.9565  |  2:03:31s
epoch 170| loss: 0.04432 | train_balanced_accuracy: 0.99325 | train_logloss: 0.02008 | train_f1_macro: 0.99359 | valid_balanced_accuracy: 0.95044 | valid_logloss: 0.17049 | valid_f1_macro: 0.95313 |  2:04:14s

Early stopping occurred at epoch 170 with best_epoch = 150 and best_valid_f1_macro = 0.9578
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/callbacks.py:172: UserWarning: Best weights from best epoch are automatically used!
  warnings.warn(wrn_msg)
[CV 5/5; 7/7] END classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1;, score=0.531 total time=125.6min
--------------------- RESULTS GS1 ---------------------

CSV gerado com sucesso em: ./runs/results/GS1-cv_results-15-04-2023_06:13:46.csv.
Function generate_new_csv Took 0:00:00.012679

Cross validation results:
   mean_fit_time  std_fit_time  mean_score_time  std_score_time  ... split4_test_score mean_test_score std_test_score rank_test_score
4     205.530097      0.587389         0.985025        0.057250  ...          0.548862        0.550034       0.002396               1
1      75.816891     17.846310         0.020732        0.000926  ...          0.498340        0.505245       0.006742               2
5      68.144649      0.822700         0.125463        0.010457  ...          0.493703        0.490767       0.006738               3
3     190.152475     19.161201         0.051636        0.002761  ...          0.463959        0.477526       0.010200               4
6    5898.792095   3840.534100         4.180785        0.107517  ...          0.531390        0.476955       0.065542               5
0      62.903089      1.754425         0.020975        0.001416  ...          0.378028        0.383924       0.002963               6
2      62.297601      0.674392         0.021312        0.001733  ...          0.291445        0.289136       0.006239               7

[7 rows x 58 columns]
Object saved in file: ./runs/best_estimators/GS1-best_pipe-15-04-2023_06:13:46.joblib
Object saved in file: ./runs/best_estimators/best_estimator-RandomForestClassifier-15-04-2023_06:13:48.joblib
Best estimator: RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42)
Object saved in file: ./runs/encoders_scalers/GS1-column_transformer-15-04-2023_06:13:49.joblib
Internal CV score obtained by the best set of parameters: 0.55003374681453
Best params: {'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}
Scorer function: make_scorer(f1_score, pos_label=None, average=macro)
The number of CV splits: 5
Seconds used for refitting the best model on the whole dataset: 269.56506156921387
Whether the scorers compute several metrics: False
The number of features when fit is performed: 21
Names of features seen during fit: ['Tipificacao' 'Peso' 'QuestionarioClassificacaoEstabel' 'ILP' 'IFP'
 'ILPF' 'QuestionarioPossuiOutrosIncentiv' 'QuestionarioFabricaRacao'
 'regua de manejo' 'identificacao individual' 'rastreamento SISBOV'
 'participa de aliancas mercadolog' 'QuestionarioPraticaRecuperacaoPa'
 'Confinamento' 'Suplementacao_a_campo' 'SemiConfinamento' 'tot3m_Chuva'
 'med3m_formITUinst' 'med3m_NDVI' 'med3m_preR_milho' 'med3m_preR_boi']

!!!>> When you observe high training accuracy, but low test accuracy, it is likely that you encountered overfitting problem.
Training set score: 0.6477839047182179
Test set score: 0.5512410212459384

CSV gerado com sucesso em: ./runs/results/GS1-grid_search_results-15-04-2023_06:13:55.csv.
Function generate_new_csv Took 0:00:00.002504

*****INICIO CONFUSION MATRIX DISPLAY******
Figure confusion_matrix_display-15-04-2023_06:14:00.png saved in ./plots/ directory.
*****FIM CONFUSION MATRIX DISPLAY******

Function confusion_matrix_display Took 0:00:05.164199


--- Test data performance ---
Test Acurácia: 0.5997145016374171
Test Acurácia Balanceada: 0.6781623873975149
Test Revocação: 0.5592877377579927
Test Micro Revocação: 0.5997145016374171
Test Macro Revocação: 0.6781623873975149
Test Precisão: 0.9307964303754841
Test Micro Precisão: 0.5997145016374171
Test Macro Precisão: 0.600574094584727
Test F1: 0.698729697276117
Test Micro F1: 0.5997145016374171
Test Macro F1: 0.5512410212459384
Test Coeficiente Kappa: 0.20080188411302735
Test Coeficiente de Correlação de Matthews: 0.2677201583860164
Test Log Loss: 1.0201083411368972
Test ROC AUC Score: 0.7613852291519903

CSV gerado com sucesso em: ./runs/results/GS1-performance_results-15-04-2023_06:14:03.csv.
Function generate_new_csv Took 0:00:00.001267

              precision    recall  f1-score   support

           0       0.27      0.80      0.40      2025
           1       0.93      0.56      0.70      9884

    accuracy                           0.60     11909
   macro avg       0.60      0.68      0.55     11909
weighted avg       0.82      0.60      0.65     11909


CSV gerado com sucesso em: ./runs/results/GS1-classification_report-15-04-2023_06:14:03.csv.
Function generate_new_csv Took 0:00:00.000850

Function run_grid_search Took 9:13:08.464584

