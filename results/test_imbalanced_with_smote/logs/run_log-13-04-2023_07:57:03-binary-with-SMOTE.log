
*****INICIO LOAD DATA******

*****INICIO PRINT INFOS******
Número total de linhas do DataFrame: 63072
Número de colunas: 112
Informações do DataFrame:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 63072 entries, 0 to 63071
Data columns (total 112 columns):
 #    Column                            Dtype         
---   ------                            -----         
 0    ID_ANIMAL                         uint32        
 1    EstabelecimentoMunicipio          category      
 2    DataAbate                         datetime64[ns]
 3    Frigorifico_ID                    uint8         
 4    Frigorifico_CNPJ                  uint64        
 5    Frigorifico_RazaoSocial           category      
 6    Municipio_Frigorifico             category      
 7    Tipificacao                       category      
 8    Maturidade                        category      
 9    Acabamento                        category      
 10   Peso                              float32       
 11   EstabelecimentoIdentificador      uint16        
 12   Data_homol                        datetime64[ns]
 13   Questionario_ID                   uint16        
 14   QuestionarioClassificacaoEstabel  uint8         
 15   FERTIIRRIGACAO                    uint8         
 16   ILP                               uint8         
 17   IFP                               uint8         
 18   ILPF                              uint8         
 19   CONCEN_VOLUM                      UInt8         
 20   CREEPFEEDING                      UInt8         
 21   FORN_ESTRAT_SILAGEM               UInt8         
 22   PROTEICO                          UInt8         
 23   PROTEICO_ENERGETICO               UInt8         
 24   RACAO_BAL_CONS_INFERIOR           UInt8         
 25   SAL_MINERAL                       UInt8         
 26   SALMINERAL_UREIA                  UInt8         
 27   RACAOO_BAL_CONSUMO_IG             UInt8         
 28   GRAO_INTEIRO                      UInt8         
 29   ALTO_CONCENTR_VOLUM               UInt8         
 30   ALTO_CONCENTRADO                  UInt8         
 31   QuestionarioPossuiOutrosIncentiv  uint8         
 32   QuestionarioFabricaRacao          uint8         
 33   area so confinamento              UInt8         
 34   regua de manejo                   UInt8         
 35   boa cobertura vegetal, com baixa  UInt8         
 36   erosaoo laminar ou em sulco igua  UInt8         
 37   identificacao individual          UInt8         
 38   rastreamento SISBOV               UInt8         
 39   Lista Trace                       UInt8         
 40   BPA                               UInt8         
 41   participa de aliancas mercadolog  UInt8         
 42   QuestionarioPraticaRecuperacaoPa  uint8         
 43   Confinamento                      UInt8         
 44   Suplementacao_a_campo             UInt8         
 45   SemiConfinamento                  UInt8         
 46   dif_datas                         uint16        
 47   DataAbate_6m_ANT                  datetime64[ns]
 48   data_homol_select                 datetime64[ns]
 49   data12m                           datetime64[ns]
 50   data6m                            datetime64[ns]
 51   data3m                            datetime64[ns]
 52   data1m                            datetime64[ns]
 53   data7d                            datetime64[ns]
 54   tot7d_Chuva                       float32       
 55   med7d_TempInst                    float32       
 56   med7d_TempMin                     float32       
 57   med7d_UmidInst                    float32       
 58   med7d_formITUinst                 float32       
 59   med7d_formITUmax                  float32       
 60   med7d_NDVI                        float32       
 61   med7d_EVI                         float32       
 62   med7d_preR_soja                   float32       
 63   med7d_preR_milho                  float32       
 64   med7d_preR_boi                    float32       
 65   tot1m_Chuva                       float32       
 66   med1m_TempInst                    float32       
 67   med1m_UmidInst                    float32       
 68   med1m_formITUinst                 float32       
 69   med1m_NDVI                        float32       
 70   med1m_EVI                         float32       
 71   med1m_preR_soja                   float32       
 72   med1m_preR_milho                  float32       
 73   med1m_preR_boi                    float32       
 74   tot3m_Chuva                       float32       
 75   med3m_TempInst                    float32       
 76   med3m_UmidInst                    float32       
 77   med3m_formITUinst                 float32       
 78   med3m_formITUmax                  float32       
 79   med3m_NDVI                        float32       
 80   med3m_EVI                         float32       
 81   med3m_preR_soja                   float32       
 82   med3m_preR_milho                  float32       
 83   med3m_preR_boi                    float32       
 84   tot6m_Chuva                       float32       
 85   med6m_TempInst                    float32       
 86   med6m_UmidInst                    float32       
 87   med6m_formITUinst                 float32       
 88   med6m_NDVI                        float32       
 89   med6m_EVI                         float32       
 90   med6m_preR_soja                   float32       
 91   med6m_preR_milho                  float32       
 92   med6m_preR_boi                    float32       
 93   tot12m_Chuva                      float32       
 94   med12m_TempInst                   float32       
 95   med12m_TempMin                    float32       
 96   med12m_UmidInst                   float32       
 97   med12m_formITUinst                float32       
 98   med12m_NDVI                       float32       
 99   med12m_EVI                        float32       
 100  med12m_preR_soja                  float32       
 101  med12m_preR_milho                 float32       
 102  med12m_preR_boi                   float32       
 103  cnt7d_CL_ITUinst                  float32       
 104  cnt1m_CL_ITUinst                  float32       
 105  cnt3m_CL_ITUinst                  float32       
 106  cnt6m_CL_ITUinst                  float32       
 107  cnt12m_CL_ITUinst                 float32       
 108  ANO                               uint16        
 109  CATEGORIA                         category      
 110  classificacao                     category      
 111  Motivo                            category      
dtypes: UInt8(24), category(9), datetime64[ns](9), float32(55), uint16(4), uint32(1), uint64(1), uint8(9)
memory usage: 22.7 MB
*****FIM PRINT INFOS*********
Function informations Took 0:00:00.015468

*****INICIO DELETE COLUNAS******
Coluna EstabelecimentoMunicipio excluída.
Coluna Frigorifico_ID excluída.
Coluna Frigorifico_CNPJ excluída.
Coluna Frigorifico_RazaoSocial excluída.
Coluna Municipio_Frigorifico excluída.
Coluna Maturidade excluída.
Coluna Acabamento excluída.
Coluna EstabelecimentoIdentificador excluída.
Coluna Questionario_ID excluída.
Coluna FERTIIRRIGACAO excluída.
Coluna CONCEN_VOLUM excluída.
Coluna CREEPFEEDING excluída.
Coluna FORN_ESTRAT_SILAGEM excluída.
Coluna PROTEICO excluída.
Coluna PROTEICO_ENERGETICO excluída.
Coluna RACAO_BAL_CONS_INFERIOR excluída.
Coluna SAL_MINERAL excluída.
Coluna SALMINERAL_UREIA excluída.
Coluna RACAOO_BAL_CONSUMO_IG excluída.
Coluna GRAO_INTEIRO excluída.
Coluna ALTO_CONCENTR_VOLUM excluída.
Coluna ALTO_CONCENTRADO excluída.
Coluna area so confinamento excluída.
Coluna boa cobertura vegetal, com baixa excluída.
Coluna erosaoo laminar ou em sulco igua excluída.
Coluna Lista Trace excluída.
Coluna BPA excluída.
Coluna dif_datas excluída.
Coluna tot7d_Chuva excluída.
Coluna med7d_TempInst excluída.
Coluna med7d_TempMin excluída.
Coluna med7d_UmidInst excluída.
Coluna med7d_formITUinst excluída.
Coluna med7d_formITUmax excluída.
Coluna med7d_NDVI excluída.
Coluna med7d_EVI excluída.
Coluna med7d_preR_soja excluída.
Coluna med7d_preR_milho excluída.
Coluna med7d_preR_boi excluída.
Coluna tot1m_Chuva excluída.
Coluna med1m_TempInst excluída.
Coluna med1m_UmidInst excluída.
Coluna med1m_formITUinst excluída.
Coluna med1m_NDVI excluída.
Coluna med1m_EVI excluída.
Coluna med1m_preR_soja excluída.
Coluna med1m_preR_milho excluída.
Coluna med1m_preR_boi excluída.
Coluna med3m_TempInst excluída.
Coluna med3m_UmidInst excluída.
Coluna med3m_formITUmax excluída.
Coluna med3m_EVI excluída.
Coluna med3m_preR_soja excluída.
Coluna tot6m_Chuva excluída.
Coluna med6m_TempInst excluída.
Coluna med6m_UmidInst excluída.
Coluna med6m_formITUinst excluída.
Coluna med6m_NDVI excluída.
Coluna med6m_EVI excluída.
Coluna med6m_preR_soja excluída.
Coluna med6m_preR_milho excluída.
Coluna med6m_preR_boi excluída.
Coluna tot12m_Chuva excluída.
Coluna med12m_TempInst excluída.
Coluna med12m_TempMin excluída.
Coluna med12m_UmidInst excluída.
Coluna med12m_formITUinst excluída.
Coluna med12m_NDVI excluída.
Coluna med12m_EVI excluída.
Coluna med12m_preR_soja excluída.
Coluna med12m_preR_milho excluída.
Coluna med12m_preR_boi excluída.
Coluna cnt7d_CL_ITUinst excluída.
Coluna cnt1m_CL_ITUinst excluída.
Coluna cnt3m_CL_ITUinst excluída.
Coluna cnt6m_CL_ITUinst excluída.
Coluna cnt12m_CL_ITUinst excluída.
Coluna ANO excluída.
Coluna Motivo excluída.
Coluna DataAbate excluída.
Coluna Data_homol excluída.
Coluna DataAbate_6m_ANT excluída.
Coluna data_homol_select excluída.
Coluna data12m excluída.
Coluna data6m excluída.
Coluna data3m excluída.
Coluna data1m excluída.
Coluna data7d excluída.
Coluna CATEGORIA excluída.
*****FIM DELETE COLUNAS*********

*****INICIO PRINT INFOS******
Número total de linhas do DataFrame: 63072
Número de colunas: 23
Informações do DataFrame:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 63072 entries, 0 to 63071
Data columns (total 23 columns):
 #   Column                            Non-Null Count  Dtype   
---  ------                            --------------  -----   
 0   ID_ANIMAL                         63072 non-null  uint32  
 1   Tipificacao                       63072 non-null  category
 2   Peso                              63072 non-null  float32 
 3   QuestionarioClassificacaoEstabel  63072 non-null  uint8   
 4   ILP                               63072 non-null  uint8   
 5   IFP                               63072 non-null  uint8   
 6   ILPF                              63072 non-null  uint8   
 7   QuestionarioPossuiOutrosIncentiv  63072 non-null  uint8   
 8   QuestionarioFabricaRacao          63072 non-null  uint8   
 9   regua de manejo                   63062 non-null  UInt8   
 10  identificacao individual          63062 non-null  UInt8   
 11  rastreamento SISBOV               63050 non-null  UInt8   
 12  participa de aliancas mercadolog  63062 non-null  UInt8   
 13  QuestionarioPraticaRecuperacaoPa  63072 non-null  uint8   
 14  Confinamento                      63062 non-null  UInt8   
 15  Suplementacao_a_campo             63062 non-null  UInt8   
 16  SemiConfinamento                  63062 non-null  UInt8   
 17  tot3m_Chuva                       61719 non-null  float32 
 18  med3m_formITUinst                 63063 non-null  float32 
 19  med3m_NDVI                        60906 non-null  float32 
 20  med3m_preR_milho                  63063 non-null  float32 
 21  med3m_preR_boi                    63063 non-null  float32 
 22  classificacao                     63072 non-null  category
dtypes: UInt8(7), category(2), float32(6), uint32(1), uint8(7)
memory usage: 3.1 MB
*****FIM PRINT INFOS*********
Function informations Took 0:00:00.012794

*****FIM LOAD DATA******
Function load_data Took 0:00:41.820617

*****INICIO SHOW SETTINGS******
os = <module 'os' from '/usr/lib/python3.8/os.py'>
pd = <module 'pandas' from '/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pandas/__init__.py'>
torch = <module 'torch' from '/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/torch/__init__.py'>
PANDAS_MAX_ROWS = 5000
random_seed = 42
n_jobs = 1
dataset_folder_path = /mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/base_dados/
csv_path = /mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/base_dados/TAB_MODELAGEM_RAFAEL_2020_1-2.0-percentage-sampling.csv
number_csv_lines = None
dtype_dict = {'ID_ANIMAL': 'uint32', 'EstabelecimentoMunicipio': 'category', 'Frigorifico_ID': 'uint8', 'Frigorifico_CNPJ': 'uint64', 'Frigorifico_RazaoSocial': 'category', 'Municipio_Frigorifico': 'category', 'Tipificacao': 'category', 'Maturidade': 'category', 'Acabamento': 'category', 'Peso': 'float32', 'EstabelecimentoIdentificador': 'uint16', 'Questionario_ID': 'uint16', 'QuestionarioClassificacaoEstabel': 'uint8', 'FERTIIRRIGACAO': 'uint8', 'ILP': 'uint8', 'IFP': 'uint8', 'ILPF': 'uint8', 'CONCEN_VOLUM': 'UInt8', 'CREEPFEEDING': 'UInt8', 'FORN_ESTRAT_SILAGEM': 'UInt8', 'PROTEICO': 'UInt8', 'PROTEICO_ENERGETICO': 'UInt8', 'RACAO_BAL_CONS_INFERIOR': 'UInt8', 'SAL_MINERAL': 'UInt8', 'SALMINERAL_UREIA': 'UInt8', 'RACAOO_BAL_CONSUMO_IG': 'UInt8', 'GRAO_INTEIRO': 'UInt8', 'ALTO_CONCENTR_VOLUM': 'UInt8', 'ALTO_CONCENTRADO': 'UInt8', 'QuestionarioPossuiOutrosIncentiv': 'uint8', 'QuestionarioFabricaRacao': 'uint8', 'area so confinamento': 'UInt8', 'regua de manejo': 'UInt8', 'boa cobertura vegetal, com baixa': 'UInt8', 'erosaoo laminar ou em sulco igua': 'UInt8', 'identificacao individual': 'UInt8', 'rastreamento SISBOV': 'UInt8', 'Lista Trace': 'UInt8', 'BPA': 'UInt8', 'participa de aliancas mercadolog': 'UInt8', 'QuestionarioPraticaRecuperacaoPa': 'uint8', 'Confinamento': 'UInt8', 'Suplementacao_a_campo': 'UInt8', 'SemiConfinamento': 'UInt8', 'dif_datas': 'uint16', 'tot7d_Chuva': 'float32', 'med7d_TempInst': 'float32', 'med7d_TempMin': 'float32', 'med7d_UmidInst': 'float32', 'med7d_formITUinst': 'float32', 'med7d_formITUmax': 'float32', 'med7d_NDVI': 'float32', 'med7d_EVI': 'float32', 'med7d_preR_soja': 'float32', 'med7d_preR_milho': 'float32', 'med7d_preR_boi': 'float32', 'tot1m_Chuva': 'float32', 'med1m_TempInst': 'float32', 'med1m_UmidInst': 'float32', 'med1m_formITUinst': 'float32', 'med1m_NDVI': 'float32', 'med1m_EVI': 'float32', 'med1m_preR_soja': 'float32', 'med1m_preR_milho': 'float32', 'med1m_preR_boi': 'float32', 'tot3m_Chuva': 'float32', 'med3m_TempInst': 'float32', 'med3m_UmidInst': 'float32', 'med3m_formITUinst': 'float32', 'med3m_formITUmax': 'float32', 'med3m_NDVI': 'float32', 'med3m_EVI': 'float32', 'med3m_preR_soja': 'float32', 'med3m_preR_milho': 'float32', 'med3m_preR_boi': 'float32', 'tot6m_Chuva': 'float32', 'med6m_TempInst': 'float32', 'med6m_UmidInst': 'float32', 'med6m_formITUinst': 'float32', 'med6m_NDVI': 'float32', 'med6m_EVI': 'float32', 'med6m_preR_soja': 'float32', 'med6m_preR_milho': 'float32', 'med6m_preR_boi': 'float32', 'tot12m_Chuva': 'float32', 'med12m_TempInst': 'float32', 'med12m_TempMin': 'float32', 'med12m_UmidInst': 'float32', 'med12m_formITUinst': 'float32', 'med12m_NDVI': 'float32', 'med12m_EVI': 'float32', 'med12m_preR_soja': 'float32', 'med12m_preR_milho': 'float32', 'med12m_preR_boi': 'float32', 'cnt7d_CL_ITUinst': 'float32', 'cnt1m_CL_ITUinst': 'float32', 'cnt3m_CL_ITUinst': 'float32', 'cnt6m_CL_ITUinst': 'float32', 'cnt12m_CL_ITUinst': 'float32', 'ANO': 'uint16', 'CATEGORIA': 'category', 'classificacao': 'category', 'Motivo': 'category', 'QTD_ANIMAIS_LOTE': 'uint16', 'PESO_MEDIO_LOTE': 'float32', 'CATEGORIA_BINARIA': 'category'}
parse_dates = ['DataAbate', 'Data_homol', 'DataAbate_6m_ANT', 'data_homol_select', 'data12m', 'data6m', 'data3m', 'data1m', 'data7d']
delete_columns_names_on_load_data = ['EstabelecimentoMunicipio', 'Frigorifico_ID', 'Frigorifico_CNPJ', 'Frigorifico_RazaoSocial', 'Municipio_Frigorifico', 'Maturidade', 'Acabamento', 'EstabelecimentoIdentificador', 'Questionario_ID', 'FERTIIRRIGACAO', 'CONCEN_VOLUM', 'CREEPFEEDING', 'FORN_ESTRAT_SILAGEM', 'PROTEICO', 'PROTEICO_ENERGETICO', 'RACAO_BAL_CONS_INFERIOR', 'SAL_MINERAL', 'SALMINERAL_UREIA', 'RACAOO_BAL_CONSUMO_IG', 'GRAO_INTEIRO', 'ALTO_CONCENTR_VOLUM', 'ALTO_CONCENTRADO', 'area so confinamento', 'boa cobertura vegetal, com baixa', 'erosaoo laminar ou em sulco igua', 'Lista Trace', 'BPA', 'dif_datas', 'tot7d_Chuva', 'med7d_TempInst', 'med7d_TempMin', 'med7d_UmidInst', 'med7d_formITUinst', 'med7d_formITUmax', 'med7d_NDVI', 'med7d_EVI', 'med7d_preR_soja', 'med7d_preR_milho', 'med7d_preR_boi', 'tot1m_Chuva', 'med1m_TempInst', 'med1m_UmidInst', 'med1m_formITUinst', 'med1m_NDVI', 'med1m_EVI', 'med1m_preR_soja', 'med1m_preR_milho', 'med1m_preR_boi', 'med3m_TempInst', 'med3m_UmidInst', 'med3m_formITUmax', 'med3m_EVI', 'med3m_preR_soja', 'tot6m_Chuva', 'med6m_TempInst', 'med6m_UmidInst', 'med6m_formITUinst', 'med6m_NDVI', 'med6m_EVI', 'med6m_preR_soja', 'med6m_preR_milho', 'med6m_preR_boi', 'tot12m_Chuva', 'med12m_TempInst', 'med12m_TempMin', 'med12m_UmidInst', 'med12m_formITUinst', 'med12m_NDVI', 'med12m_EVI', 'med12m_preR_soja', 'med12m_preR_milho', 'med12m_preR_boi', 'cnt7d_CL_ITUinst', 'cnt1m_CL_ITUinst', 'cnt3m_CL_ITUinst', 'cnt6m_CL_ITUinst', 'cnt12m_CL_ITUinst', 'ANO', 'Motivo', 'DataAbate', 'Data_homol', 'DataAbate_6m_ANT', 'data_homol_select', 'data12m', 'data6m', 'data3m', 'data1m', 'data7d', 'CATEGORIA']
PATH_SAVE_PLOTS = ./plots
PATH_SAVE_ESTIMATORS_REPR = ./runs/estimators_repr
PATH_SAVE_BEST_ESTIMATORS = ./runs/best_estimators
PATH_SAVE_RESULTS = ./runs/results
PATH_SAVE_LOGS = ./logs
PATH_SAVE_ENCODERS_SCALERS = ./runs/encoders_scalers
ordinal_encoder_columns_names = {'QuestionarioClassificacaoEstabel': ['0', '21', '26', '30']}
columns_ordinal_encoded = {}
label_encoder_columns_names = ['classificacao']
columns_label_encoded = {}
one_hot_encoder_columns_names = ['Tipificacao']
columns_one_hot_encoded = {}
min_max_scaler_columns_names = ['Peso', 'tot3m_Chuva', 'med3m_formITUinst', 'med3m_NDVI', 'med3m_preR_milho', 'med3m_preR_boi']
columns_min_max_scaled = {}
columns_label_binarized = {}
simple_imputer_columns_names = []
columns_names_drop_feature_by_correlation = ['med3m_formITUinst', 'med3m_preR_boi', 'classificacao']
class_column = classificacao
classifiers = {}
models_results = {}
device_name = cpu
use_embeddings = True
use_cat_emb_dim = True
threshold_categorical_features = 150
num_workers = 4
eval_metric = ['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>]
augmentations = None
weights = 0
batch_size = 1024
virtual_batch_size = 128
run_grid_search_cv_tuner = True
save_results_during_run = True
new_run = True
PATH_OBJECTS_PERSISTED_RESULTS_RUNS = ./runs/objects_persisted_results_runs
PARAMETERS_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/parameters_persist
RESULTS_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/results_persist
SPLIT_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/split_persist
tree_method = hist
objective = binary:logistic
*****FIM SHOW SETTINGS******


*****INICIO DELETE DUPLICATE ROWS BY ATTRIBUTE******
Nenhuma linha duplicada encontrada para o atributo ID_ANIMAL.
*****FIM DELETE DUPLICATE ROWS BY ATTRIBUTE*********
Function delete_duplicate_rows_by_attribute Took 0:00:00.012006

*****INICIO DELETE COLUNAS******
Coluna ID_ANIMAL excluída.
*****FIM DELETE COLUNAS*********

*****INICIO DELETE NAN ROWS******
Linhas com valores NaN encontradas.
*****FIM DELETE NAN ROWS*********
Function delete_nan_rows Took 0:00:00.018079


*****INICIO DELETE COLUMNS WITH SINGLE VALUE******
>>> Nenhuma coluna com valor único encontrada.
*****FIM DELETE COLUMNS WITH SINGLE VALUE*********
Function delete_columns_with_single_value Took 0:00:00.015598


*****INICIO LABEL ENCODER******
*****FIM LABEL ENCODER*********
Function label_encoder_columns Took 0:00:00.014306

Object saved in file: ./runs/encoders_scalers/target_encoded-13-04-2023_07:57:45.joblib

*****INICIO RELATÓRIO DISTRIBUIÇÃO DE CLASSES******
Distribuição da classe 1: 83%
Distribuição da classe 0: 17%
Erro majoritário: 17%
*****FIM RELATÓRIO DISTRIBUIÇÃO DE CLASSES******
Function class_distribution Took 0:00:00.002630

/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
Number of folds for cross validation: 5
Scoring strategy for grid search: f1_macro
Test Size: 0.2

x_train shape: (47635, 21)
y_train shape: (47635,)
x_test shape: (11909, 21)
y_test shape: (11909,)
Removing all files in directory: ./runs/objects_persisted_results_runs
Do you want to continue? (y/n): 
All files in directory ./runs/objects_persisted_results_runs were removed.
Fitting 5 folds for each of 7 candidates, totalling 35 fits
[CV 1/5; 1/7] START classifier__estimator=GaussianNB()..........................
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 1/5; 1/7] END classifier__estimator=GaussianNB();, score=0.442 total time=   2.7s
[CV 2/5; 1/7] START classifier__estimator=GaussianNB()..........................
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 2/5; 1/7] END classifier__estimator=GaussianNB();, score=0.445 total time=   1.1s
[CV 3/5; 1/7] START classifier__estimator=GaussianNB()..........................
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 3/5; 1/7] END classifier__estimator=GaussianNB();, score=0.446 total time=   1.2s
[CV 4/5; 1/7] START classifier__estimator=GaussianNB()..........................
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 4/5; 1/7] END classifier__estimator=GaussianNB();, score=0.451 total time=   1.1s
[CV 5/5; 1/7] START classifier__estimator=GaussianNB()..........................
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 5/5; 1/7] END classifier__estimator=GaussianNB();, score=0.439 total time=   1.2s
[CV 1/5; 2/7] START classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 1/5; 2/7] END classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best;, score=0.605 total time=   2.2s
[CV 2/5; 2/7] START classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 2/5; 2/7] END classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best;, score=0.606 total time=   1.9s
[CV 3/5; 2/7] START classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 3/5; 2/7] END classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best;, score=0.603 total time=   1.8s
[CV 4/5; 2/7] START classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 4/5; 2/7] END classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best;, score=0.608 total time=   1.9s
[CV 5/5; 2/7] START classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 5/5; 2/7] END classifier__estimator=DecisionTreeClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=gini, classifier__estimator__max_depth=None, classifier__estimator__min_samples_leaf=10, classifier__estimator__min_samples_split=100, classifier__estimator__random_state=42, classifier__estimator__splitter=best;, score=0.601 total time=   1.8s
[CV 1/5; 3/7] START classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 1/5; 3/7] END classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42;, score=0.502 total time=   1.3s
[CV 2/5; 3/7] START classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 2/5; 3/7] END classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42;, score=0.505 total time=   1.3s
[CV 3/5; 3/7] START classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 3/5; 3/7] END classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42;, score=0.501 total time=   1.3s
[CV 4/5; 3/7] START classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 4/5; 3/7] END classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42;, score=0.503 total time=   1.5s
[CV 5/5; 3/7] START classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 5/5; 3/7] END classifier__estimator=LinearSVC(), classifier__estimator__C=0.001, classifier__estimator__class_weight=None, classifier__estimator__dual=False, classifier__estimator__max_iter=10000, classifier__estimator__penalty=l2, classifier__estimator__random_state=42;, score=0.503 total time=   1.5s
[CV 1/5; 4/7] START classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 1/5; 4/7] END classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam;, score=0.581 total time= 2.3min
[CV 2/5; 4/7] START classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 2/5; 4/7] END classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam;, score=0.578 total time= 3.0min
[CV 3/5; 4/7] START classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 3/5; 4/7] END classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam;, score=0.609 total time= 3.6min
[CV 4/5; 4/7] START classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 4/5; 4/7] END classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam;, score=0.572 total time= 2.0min
[CV 5/5; 4/7] START classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 5/5; 4/7] END classifier__estimator=MLPClassifier(), classifier__estimator__activation=relu, classifier__estimator__alpha=0.0001, classifier__estimator__early_stopping=True, classifier__estimator__hidden_layer_sizes=(50, 100, 50), classifier__estimator__learning_rate=adaptive, classifier__estimator__learning_rate_init=0.0001, classifier__estimator__max_iter=1000, classifier__estimator__momentum=0.0, classifier__estimator__random_state=42, classifier__estimator__solver=adam;, score=0.584 total time= 3.2min
[CV 1/5; 5/7] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 1/5; 5/7] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42;, score=0.668 total time= 4.0min
[CV 2/5; 5/7] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 2/5; 5/7] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42;, score=0.671 total time= 4.1min
[CV 3/5; 5/7] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 3/5; 5/7] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42;, score=0.672 total time= 4.2min
[CV 4/5; 5/7] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 4/5; 5/7] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42;, score=0.669 total time= 4.1min
[CV 5/5; 5/7] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 5/5; 5/7] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__random_state=42;, score=0.677 total time= 4.0min
[CV 1/5; 6/7] START classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 1/5; 6/7] END classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist;, score=0.632 total time=   8.3s
[CV 2/5; 6/7] START classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 2/5; 6/7] END classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist;, score=0.643 total time=   8.4s
[CV 3/5; 6/7] START classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 3/5; 6/7] END classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist;, score=0.627 total time=  13.7s
[CV 4/5; 6/7] START classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 4/5; 6/7] END classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist;, score=0.637 total time=  11.8s
[CV 5/5; 6/7] START classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
[CV 5/5; 6/7] END classifier__estimator=XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), classifier__estimator__colsample_bytree=0.75, classifier__estimator__gamma=0.05, classifier__estimator__learning_rate=0.01, classifier__estimator__max_delta_step=1.0, classifier__estimator__max_depth=None, classifier__estimator__n_estimators=1000, classifier__estimator__n_jobs=-1, classifier__estimator__objective=binary:logistic, classifier__estimator__random_state=42, classifier__estimator__reg_alpha=0, classifier__estimator__reg_lambda=0.01, classifier__estimator__subsample=0.75, classifier__estimator__tree_method=hist;, score=0.633 total time=  10.9s
[CV 1/5; 7/7] START classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: n_d changed from 8 to 64
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_dims changed from [] to [15, 25, 26, 119, 76, 119, 141]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_emb_dim changed from 20 to [7, 12, 13, 20, 20, 20, 20]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_idxs changed from [] to [1, 2, 3, 11, 12, 18, 19]
  warnings.warn(wrn_msg)
epoch 0  | loss: 2.64258 | train_balanced_accuracy: 0.50643 | train_logloss: 1.24805 | train_f1_macro: 0.42157 | valid_balanced_accuracy: 0.50979 | valid_logloss: 1.24142 | valid_f1_macro: 0.42411 |  0:01:04s
epoch 1  | loss: 2.4818  | train_balanced_accuracy: 0.5     | train_logloss: 3.81354 | train_f1_macro: 0.33334 | valid_balanced_accuracy: 0.5     | valid_logloss: 3.85929 | valid_f1_macro: 0.33332 |  0:02:04s
epoch 2  | loss: 0.84591 | train_balanced_accuracy: 0.54173 | train_logloss: 0.68963 | train_f1_macro: 0.52722 | valid_balanced_accuracy: 0.54239 | valid_logloss: 0.68829 | valid_f1_macro: 0.5289  |  0:03:00s
epoch 3  | loss: 0.66108 | train_balanced_accuracy: 0.55015 | train_logloss: 0.69109 | train_f1_macro: 0.5405  | valid_balanced_accuracy: 0.55425 | valid_logloss: 0.69155 | valid_f1_macro: 0.5453  |  0:03:57s
epoch 4  | loss: 0.65885 | train_balanced_accuracy: 0.55137 | train_logloss: 0.69766 | train_f1_macro: 0.54956 | valid_balanced_accuracy: 0.55568 | valid_logloss: 0.69884 | valid_f1_macro: 0.55424 |  0:04:56s
epoch 5  | loss: 0.65647 | train_balanced_accuracy: 0.55378 | train_logloss: 0.68466 | train_f1_macro: 0.55374 | valid_balanced_accuracy: 0.55798 | valid_logloss: 0.68459 | valid_f1_macro: 0.55787 |  0:05:53s
epoch 6  | loss: 0.64656 | train_balanced_accuracy: 0.57098 | train_logloss: 0.6851  | train_f1_macro: 0.56987 | valid_balanced_accuracy: 0.57166 | valid_logloss: 0.68481 | valid_f1_macro: 0.57034 |  0:06:50s
epoch 7  | loss: 0.64622 | train_balanced_accuracy: 0.56212 | train_logloss: 0.72154 | train_f1_macro: 0.54545 | valid_balanced_accuracy: 0.55981 | valid_logloss: 0.72347 | valid_f1_macro: 0.54203 |  0:07:48s
epoch 8  | loss: 0.6454  | train_balanced_accuracy: 0.57599 | train_logloss: 0.68648 | train_f1_macro: 0.5733  | valid_balanced_accuracy: 0.57901 | valid_logloss: 0.68652 | valid_f1_macro: 0.57587 |  0:08:45s
epoch 9  | loss: 0.64234 | train_balanced_accuracy: 0.57117 | train_logloss: 0.69244 | train_f1_macro: 0.57103 | valid_balanced_accuracy: 0.57845 | valid_logloss: 0.69137 | valid_f1_macro: 0.5782  |  0:09:41s
epoch 10 | loss: 0.63992 | train_balanced_accuracy: 0.58674 | train_logloss: 0.67684 | train_f1_macro: 0.58103 | valid_balanced_accuracy: 0.58336 | valid_logloss: 0.67713 | valid_f1_macro: 0.57687 |  0:10:38s
epoch 11 | loss: 0.64    | train_balanced_accuracy: 0.59637 | train_logloss: 0.67579 | train_f1_macro: 0.59549 | valid_balanced_accuracy: 0.59735 | valid_logloss: 0.67694 | valid_f1_macro: 0.59608 |  0:11:35s
epoch 12 | loss: 0.63773 | train_balanced_accuracy: 0.6071  | train_logloss: 0.6562  | train_f1_macro: 0.59677 | valid_balanced_accuracy: 0.60273 | valid_logloss: 0.6583  | valid_f1_macro: 0.59161 |  0:12:34s
epoch 13 | loss: 0.64094 | train_balanced_accuracy: 0.62455 | train_logloss: 0.64116 | train_f1_macro: 0.62237 | valid_balanced_accuracy: 0.62224 | valid_logloss: 0.64267 | valid_f1_macro: 0.62068 |  0:13:33s
epoch 14 | loss: 0.63964 | train_balanced_accuracy: 0.62528 | train_logloss: 0.63655 | train_f1_macro: 0.62521 | valid_balanced_accuracy: 0.61584 | valid_logloss: 0.64054 | valid_f1_macro: 0.61581 |  0:14:33s
epoch 15 | loss: 0.64061 | train_balanced_accuracy: 0.62445 | train_logloss: 0.63537 | train_f1_macro: 0.62422 | valid_balanced_accuracy: 0.61885 | valid_logloss: 0.63778 | valid_f1_macro: 0.61852 |  0:15:30s
epoch 16 | loss: 0.64191 | train_balanced_accuracy: 0.62228 | train_logloss: 0.63443 | train_f1_macro: 0.62204 | valid_balanced_accuracy: 0.61861 | valid_logloss: 0.63799 | valid_f1_macro: 0.61848 |  0:16:26s
epoch 17 | loss: 0.63872 | train_balanced_accuracy: 0.62613 | train_logloss: 0.63198 | train_f1_macro: 0.62599 | valid_balanced_accuracy: 0.61908 | valid_logloss: 0.63654 | valid_f1_macro: 0.61885 |  0:17:27s
epoch 18 | loss: 0.63887 | train_balanced_accuracy: 0.61908 | train_logloss: 0.63765 | train_f1_macro: 0.61761 | valid_balanced_accuracy: 0.61474 | valid_logloss: 0.64194 | valid_f1_macro: 0.61283 |  0:18:33s
epoch 19 | loss: 0.63894 | train_balanced_accuracy: 0.61914 | train_logloss: 0.64109 | train_f1_macro: 0.61893 | valid_balanced_accuracy: 0.61379 | valid_logloss: 0.64673 | valid_f1_macro: 0.6134  |  0:19:29s
epoch 20 | loss: 0.63998 | train_balanced_accuracy: 0.62252 | train_logloss: 0.63358 | train_f1_macro: 0.6225  | valid_balanced_accuracy: 0.61758 | valid_logloss: 0.63664 | valid_f1_macro: 0.61752 |  0:20:24s
epoch 21 | loss: 0.64227 | train_balanced_accuracy: 0.62196 | train_logloss: 0.63531 | train_f1_macro: 0.62176 | valid_balanced_accuracy: 0.61497 | valid_logloss: 0.63897 | valid_f1_macro: 0.61451 |  0:21:19s
epoch 22 | loss: 0.64153 | train_balanced_accuracy: 0.62192 | train_logloss: 0.63155 | train_f1_macro: 0.62192 | valid_balanced_accuracy: 0.61718 | valid_logloss: 0.63521 | valid_f1_macro: 0.61718 |  0:22:14s
epoch 23 | loss: 0.64014 | train_balanced_accuracy: 0.62686 | train_logloss: 0.64077 | train_f1_macro: 0.62595 | valid_balanced_accuracy: 0.62399 | valid_logloss: 0.64263 | valid_f1_macro: 0.6227  |  0:23:26s
epoch 24 | loss: 0.63847 | train_balanced_accuracy: 0.62704 | train_logloss: 0.63565 | train_f1_macro: 0.62685 | valid_balanced_accuracy: 0.62438 | valid_logloss: 0.63869 | valid_f1_macro: 0.62407 |  0:24:33s
epoch 25 | loss: 0.63719 | train_balanced_accuracy: 0.6225  | train_logloss: 0.64838 | train_f1_macro: 0.62199 | valid_balanced_accuracy: 0.62343 | valid_logloss: 0.65166 | valid_f1_macro: 0.62264 |  0:25:47s
epoch 26 | loss: 0.63689 | train_balanced_accuracy: 0.63129 | train_logloss: 0.63002 | train_f1_macro: 0.63114 | valid_balanced_accuracy: 0.63244 | valid_logloss: 0.63289 | valid_f1_macro: 0.63238 |  0:26:48s
epoch 27 | loss: 0.63612 | train_balanced_accuracy: 0.63254 | train_logloss: 0.63153 | train_f1_macro: 0.63192 | valid_balanced_accuracy: 0.62525 | valid_logloss: 0.63717 | valid_f1_macro: 0.62433 |  0:27:50s
epoch 28 | loss: 0.63547 | train_balanced_accuracy: 0.63685 | train_logloss: 0.63348 | train_f1_macro: 0.63677 | valid_balanced_accuracy: 0.63339 | valid_logloss: 0.63658 | valid_f1_macro: 0.63337 |  0:29:00s
epoch 29 | loss: 0.63534 | train_balanced_accuracy: 0.62872 | train_logloss: 0.6327  | train_f1_macro: 0.6282  | valid_balanced_accuracy: 0.6254  | valid_logloss: 0.63577 | valid_f1_macro: 0.62505 |  0:30:14s
epoch 30 | loss: 0.63381 | train_balanced_accuracy: 0.63358 | train_logloss: 0.63028 | train_f1_macro: 0.63347 | valid_balanced_accuracy: 0.62857 | valid_logloss: 0.63383 | valid_f1_macro: 0.62835 |  0:31:13s
epoch 31 | loss: 0.6357  | train_balanced_accuracy: 0.63133 | train_logloss: 0.62823 | train_f1_macro: 0.62993 | valid_balanced_accuracy: 0.62508 | valid_logloss: 0.63457 | valid_f1_macro: 0.62387 |  0:32:10s
epoch 32 | loss: 0.63484 | train_balanced_accuracy: 0.62738 | train_logloss: 0.6353  | train_f1_macro: 0.62653 | valid_balanced_accuracy: 0.62248 | valid_logloss: 0.63942 | valid_f1_macro: 0.62188 |  0:33:04s
epoch 33 | loss: 0.6347  | train_balanced_accuracy: 0.63072 | train_logloss: 0.63012 | train_f1_macro: 0.62961 | valid_balanced_accuracy: 0.6239  | valid_logloss: 0.6341  | valid_f1_macro: 0.62316 |  0:34:00s
epoch 34 | loss: 0.635   | train_balanced_accuracy: 0.63524 | train_logloss: 0.63145 | train_f1_macro: 0.63519 | valid_balanced_accuracy: 0.62841 | valid_logloss: 0.63543 | valid_f1_macro: 0.62829 |  0:35:05s
epoch 35 | loss: 0.63411 | train_balanced_accuracy: 0.63167 | train_logloss: 0.63576 | train_f1_macro: 0.63167 | valid_balanced_accuracy: 0.62707 | valid_logloss: 0.64164 | valid_f1_macro: 0.62706 |  0:36:05s
epoch 36 | loss: 0.63334 | train_balanced_accuracy: 0.63645 | train_logloss: 0.62752 | train_f1_macro: 0.6364  | valid_balanced_accuracy: 0.6311  | valid_logloss: 0.63123 | valid_f1_macro: 0.63108 |  0:37:07s
epoch 37 | loss: 0.63347 | train_balanced_accuracy: 0.63424 | train_logloss: 0.62649 | train_f1_macro: 0.63408 | valid_balanced_accuracy: 0.62778 | valid_logloss: 0.63133 | valid_f1_macro: 0.6277  |  0:38:05s
epoch 38 | loss: 0.63415 | train_balanced_accuracy: 0.6373  | train_logloss: 0.63416 | train_f1_macro: 0.63692 | valid_balanced_accuracy: 0.63339 | valid_logloss: 0.63809 | valid_f1_macro: 0.63275 |  0:39:02s
epoch 39 | loss: 0.63277 | train_balanced_accuracy: 0.63429 | train_logloss: 0.62781 | train_f1_macro: 0.63303 | valid_balanced_accuracy: 0.62968 | valid_logloss: 0.63592 | valid_f1_macro: 0.62816 |  0:39:57s
epoch 40 | loss: 0.6327  | train_balanced_accuracy: 0.63797 | train_logloss: 0.62501 | train_f1_macro: 0.63785 | valid_balanced_accuracy: 0.62967 | valid_logloss: 0.63048 | valid_f1_macro: 0.62962 |  0:40:52s
epoch 41 | loss: 0.63159 | train_balanced_accuracy: 0.63412 | train_logloss: 0.62599 | train_f1_macro: 0.63231 | valid_balanced_accuracy: 0.62525 | valid_logloss: 0.63126 | valid_f1_macro: 0.62314 |  0:41:46s
epoch 42 | loss: 0.63099 | train_balanced_accuracy: 0.63975 | train_logloss: 0.63159 | train_f1_macro: 0.63975 | valid_balanced_accuracy: 0.63521 | valid_logloss: 0.63715 | valid_f1_macro: 0.6352  |  0:42:41s
epoch 43 | loss: 0.63059 | train_balanced_accuracy: 0.63181 | train_logloss: 0.62952 | train_f1_macro: 0.62966 | valid_balanced_accuracy: 0.62943 | valid_logloss: 0.63234 | valid_f1_macro: 0.62768 |  0:43:37s
epoch 44 | loss: 0.63376 | train_balanced_accuracy: 0.63216 | train_logloss: 0.63154 | train_f1_macro: 0.632   | valid_balanced_accuracy: 0.63134 | valid_logloss: 0.63446 | valid_f1_macro: 0.63105 |  0:44:35s
epoch 45 | loss: 0.63345 | train_balanced_accuracy: 0.634   | train_logloss: 0.63055 | train_f1_macro: 0.63373 | valid_balanced_accuracy: 0.63466 | valid_logloss: 0.63336 | valid_f1_macro: 0.63425 |  0:45:29s
epoch 46 | loss: 0.63295 | train_balanced_accuracy: 0.63625 | train_logloss: 0.63144 | train_f1_macro: 0.63625 | valid_balanced_accuracy: 0.62849 | valid_logloss: 0.63781 | valid_f1_macro: 0.62845 |  0:46:25s
epoch 47 | loss: 0.65088 | train_balanced_accuracy: 0.63354 | train_logloss: 0.63311 | train_f1_macro: 0.63344 | valid_balanced_accuracy: 0.63157 | valid_logloss: 0.63916 | valid_f1_macro: 0.6313  |  0:47:19s
epoch 48 | loss: 0.63281 | train_balanced_accuracy: 0.63777 | train_logloss: 0.63341 | train_f1_macro: 0.63775 | valid_balanced_accuracy: 0.63766 | valid_logloss: 0.63661 | valid_f1_macro: 0.63766 |  0:48:13s
epoch 49 | loss: 0.63422 | train_balanced_accuracy: 0.63463 | train_logloss: 0.62698 | train_f1_macro: 0.63455 | valid_balanced_accuracy: 0.63133 | valid_logloss: 0.63107 | valid_f1_macro: 0.63131 |  0:49:08s
epoch 50 | loss: 0.62974 | train_balanced_accuracy: 0.63809 | train_logloss: 0.62315 | train_f1_macro: 0.63782 | valid_balanced_accuracy: 0.63584 | valid_logloss: 0.62777 | valid_f1_macro: 0.63568 |  0:50:01s
epoch 51 | loss: 0.63699 | train_balanced_accuracy: 0.62592 | train_logloss: 0.63498 | train_f1_macro: 0.62519 | valid_balanced_accuracy: 0.61869 | valid_logloss: 0.63751 | valid_f1_macro: 0.61747 |  0:50:56s
epoch 52 | loss: 0.63264 | train_balanced_accuracy: 0.62695 | train_logloss: 0.63452 | train_f1_macro: 0.62466 | valid_balanced_accuracy: 0.62018 | valid_logloss: 0.63948 | valid_f1_macro: 0.6184  |  0:52:03s
epoch 53 | loss: 0.62968 | train_balanced_accuracy: 0.6357  | train_logloss: 0.6302  | train_f1_macro: 0.63512 | valid_balanced_accuracy: 0.62438 | valid_logloss: 0.6375  | valid_f1_macro: 0.62341 |  0:53:06s
epoch 54 | loss: 0.63077 | train_balanced_accuracy: 0.63651 | train_logloss: 0.63024 | train_f1_macro: 0.6365  | valid_balanced_accuracy: 0.62959 | valid_logloss: 0.63517 | valid_f1_macro: 0.62959 |  0:54:03s
epoch 55 | loss: 0.63045 | train_balanced_accuracy: 0.6377  | train_logloss: 0.62636 | train_f1_macro: 0.63699 | valid_balanced_accuracy: 0.6352  | valid_logloss: 0.63296 | valid_f1_macro: 0.63472 |  0:54:59s
epoch 56 | loss: 0.63166 | train_balanced_accuracy: 0.64277 | train_logloss: 0.62024 | train_f1_macro: 0.64277 | valid_balanced_accuracy: 0.63125 | valid_logloss: 0.62823 | valid_f1_macro: 0.63125 |  0:55:54s
epoch 57 | loss: 0.62872 | train_balanced_accuracy: 0.6371  | train_logloss: 0.63382 | train_f1_macro: 0.6369  | valid_balanced_accuracy: 0.62778 | valid_logloss: 0.6403  | valid_f1_macro: 0.62744 |  0:56:48s
epoch 58 | loss: 0.63434 | train_balanced_accuracy: 0.63453 | train_logloss: 0.63072 | train_f1_macro: 0.63453 | valid_balanced_accuracy: 0.6243  | valid_logloss: 0.63726 | valid_f1_macro: 0.62428 |  0:57:44s
epoch 59 | loss: 0.63563 | train_balanced_accuracy: 0.60052 | train_logloss: 0.65265 | train_f1_macro: 0.59193 | valid_balanced_accuracy: 0.59512 | valid_logloss: 0.65656 | valid_f1_macro: 0.58744 |  0:58:39s
epoch 60 | loss: 0.63313 | train_balanced_accuracy: 0.62368 | train_logloss: 0.63632 | train_f1_macro: 0.62338 | valid_balanced_accuracy: 0.62256 | valid_logloss: 0.63801 | valid_f1_macro: 0.62232 |  0:59:35s
epoch 61 | loss: 0.63836 | train_balanced_accuracy: 0.61341 | train_logloss: 0.63732 | train_f1_macro: 0.61261 | valid_balanced_accuracy: 0.60541 | valid_logloss: 0.64051 | valid_f1_macro: 0.60421 |  1:00:34s
epoch 62 | loss: 0.637   | train_balanced_accuracy: 0.63228 | train_logloss: 0.63589 | train_f1_macro: 0.63212 | valid_balanced_accuracy: 0.62738 | valid_logloss: 0.64049 | valid_f1_macro: 0.62734 |  1:01:30s
epoch 63 | loss: 0.64195 | train_balanced_accuracy: 0.62465 | train_logloss: 0.63353 | train_f1_macro: 0.62465 | valid_balanced_accuracy: 0.62082 | valid_logloss: 0.63621 | valid_f1_macro: 0.62079 |  1:02:26s
epoch 64 | loss: 0.63834 | train_balanced_accuracy: 0.61639 | train_logloss: 0.63742 | train_f1_macro: 0.61604 | valid_balanced_accuracy: 0.61592 | valid_logloss: 0.64013 | valid_f1_macro: 0.61567 |  1:03:21s
epoch 65 | loss: 0.63802 | train_balanced_accuracy: 0.59127 | train_logloss: 0.67416 | train_f1_macro: 0.59122 | valid_balanced_accuracy: 0.58976 | valid_logloss: 0.6733  | valid_f1_macro: 0.58957 |  1:04:19s
epoch 66 | loss: 0.64379 | train_balanced_accuracy: 0.62552 | train_logloss: 0.63371 | train_f1_macro: 0.62406 | valid_balanced_accuracy: 0.61948 | valid_logloss: 0.63611 | valid_f1_macro: 0.61755 |  1:05:14s
epoch 67 | loss: 0.64102 | train_balanced_accuracy: 0.61673 | train_logloss: 0.64641 | train_f1_macro: 0.61591 | valid_balanced_accuracy: 0.60825 | valid_logloss: 0.65234 | valid_f1_macro: 0.60769 |  1:06:11s
epoch 68 | loss: 0.64318 | train_balanced_accuracy: 0.61548 | train_logloss: 0.64412 | train_f1_macro: 0.61541 | valid_balanced_accuracy: 0.61252 | valid_logloss: 0.64689 | valid_f1_macro: 0.61229 |  1:07:05s

Early stopping occurred at epoch 68 with best_epoch = 48 and best_valid_f1_macro = 0.63766
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/callbacks.py:172: UserWarning: Best weights from best epoch are automatically used!
  warnings.warn(wrn_msg)
[CV 1/5; 7/7] END classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1;, score=0.559 total time=67.4min
[CV 2/5; 7/7] START classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: n_d changed from 8 to 64
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_dims changed from [] to [18, 29, 25, 131, 117, 76, 124]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_emb_dim changed from 20 to [9, 14, 12, 20, 20, 20, 20]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_idxs changed from [] to [1, 2, 3, 10, 11, 12, 18]
  warnings.warn(wrn_msg)
epoch 0  | loss: 2.50045 | train_balanced_accuracy: 0.50273 | train_logloss: 1.34393 | train_f1_macro: 0.46211 | valid_balanced_accuracy: 0.50923 | valid_logloss: 1.3096  | valid_f1_macro: 0.47056 |  0:00:55s
epoch 1  | loss: 3.71868 | train_balanced_accuracy: 0.50124 | train_logloss: 3.4841  | train_f1_macro: 0.33782 | valid_balanced_accuracy: 0.50158 | valid_logloss: 3.49828 | valid_f1_macro: 0.33852 |  0:01:51s
epoch 2  | loss: 1.24754 | train_balanced_accuracy: 0.5338  | train_logloss: 0.73629 | train_f1_macro: 0.50879 | valid_balanced_accuracy: 0.53507 | valid_logloss: 0.73273 | valid_f1_macro: 0.51    |  0:02:46s
epoch 3  | loss: 0.68713 | train_balanced_accuracy: 0.52167 | train_logloss: 0.70219 | train_f1_macro: 0.51341 | valid_balanced_accuracy: 0.51649 | valid_logloss: 0.7029  | valid_f1_macro: 0.50822 |  0:03:42s
epoch 4  | loss: 0.68221 | train_balanced_accuracy: 0.55157 | train_logloss: 0.69207 | train_f1_macro: 0.55148 | valid_balanced_accuracy: 0.53861 | valid_logloss: 0.69578 | valid_f1_macro: 0.5385  |  0:04:37s
epoch 5  | loss: 0.68484 | train_balanced_accuracy: 0.56602 | train_logloss: 0.68259 | train_f1_macro: 0.56393 | valid_balanced_accuracy: 0.55544 | valid_logloss: 0.68496 | valid_f1_macro: 0.55316 |  0:05:32s
epoch 6  | loss: 0.68239 | train_balanced_accuracy: 0.57194 | train_logloss: 0.68213 | train_f1_macro: 0.56928 | valid_balanced_accuracy: 0.5655  | valid_logloss: 0.68446 | valid_f1_macro: 0.56251 |  0:06:29s
epoch 7  | loss: 0.67991 | train_balanced_accuracy: 0.53807 | train_logloss: 0.68121 | train_f1_macro: 0.53757 | valid_balanced_accuracy: 0.53521 | valid_logloss: 0.68365 | valid_f1_macro: 0.53441 |  0:07:26s
epoch 8  | loss: 0.67941 | train_balanced_accuracy: 0.57483 | train_logloss: 0.68175 | train_f1_macro: 0.57135 | valid_balanced_accuracy: 0.5669  | valid_logloss: 0.68438 | valid_f1_macro: 0.5633  |  0:08:21s
epoch 9  | loss: 0.67787 | train_balanced_accuracy: 0.56284 | train_logloss: 0.68162 | train_f1_macro: 0.54947 | valid_balanced_accuracy: 0.55749 | valid_logloss: 0.68351 | valid_f1_macro: 0.54364 |  0:09:18s
epoch 10 | loss: 0.67752 | train_balanced_accuracy: 0.5777  | train_logloss: 0.67832 | train_f1_macro: 0.57397 | valid_balanced_accuracy: 0.56943 | valid_logloss: 0.68072 | valid_f1_macro: 0.56585 |  0:10:14s
epoch 11 | loss: 0.67802 | train_balanced_accuracy: 0.57719 | train_logloss: 0.68005 | train_f1_macro: 0.56881 | valid_balanced_accuracy: 0.57346 | valid_logloss: 0.68206 | valid_f1_macro: 0.56539 |  0:11:10s
epoch 12 | loss: 0.67953 | train_balanced_accuracy: 0.55526 | train_logloss: 0.72309 | train_f1_macro: 0.55328 | valid_balanced_accuracy: 0.54637 | valid_logloss: 0.75766 | valid_f1_macro: 0.54416 |  0:12:07s
epoch 13 | loss: 0.68349 | train_balanced_accuracy: 0.5579  | train_logloss: 0.68567 | train_f1_macro: 0.55438 | valid_balanced_accuracy: 0.55623 | valid_logloss: 0.6852  | valid_f1_macro: 0.55314 |  0:13:03s
epoch 14 | loss: 0.68147 | train_balanced_accuracy: 0.5624  | train_logloss: 0.67735 | train_f1_macro: 0.55496 | valid_balanced_accuracy: 0.55876 | valid_logloss: 0.67836 | valid_f1_macro: 0.55095 |  0:14:00s
epoch 15 | loss: 0.67605 | train_balanced_accuracy: 0.56305 | train_logloss: 0.68317 | train_f1_macro: 0.55158 | valid_balanced_accuracy: 0.5523  | valid_logloss: 0.68443 | valid_f1_macro: 0.53969 |  0:14:59s
epoch 16 | loss: 0.67601 | train_balanced_accuracy: 0.56631 | train_logloss: 0.67639 | train_f1_macro: 0.56534 | valid_balanced_accuracy: 0.55996 | valid_logloss: 0.6782  | valid_f1_macro: 0.55897 |  0:16:15s
epoch 17 | loss: 0.67358 | train_balanced_accuracy: 0.57643 | train_logloss: 0.67421 | train_f1_macro: 0.57515 | valid_balanced_accuracy: 0.56684 | valid_logloss: 0.6757  | valid_f1_macro: 0.56571 |  0:17:13s
epoch 18 | loss: 0.67346 | train_balanced_accuracy: 0.56133 | train_logloss: 0.67472 | train_f1_macro: 0.55554 | valid_balanced_accuracy: 0.56447 | valid_logloss: 0.67588 | valid_f1_macro: 0.55916 |  0:18:09s
epoch 19 | loss: 0.67303 | train_balanced_accuracy: 0.58076 | train_logloss: 0.67309 | train_f1_macro: 0.57883 | valid_balanced_accuracy: 0.56809 | valid_logloss: 0.67578 | valid_f1_macro: 0.56593 |  0:19:08s
epoch 20 | loss: 0.67408 | train_balanced_accuracy: 0.58671 | train_logloss: 0.67415 | train_f1_macro: 0.58548 | valid_balanced_accuracy: 0.57805 | valid_logloss: 0.67552 | valid_f1_macro: 0.57674 |  0:20:05s
epoch 21 | loss: 0.6726  | train_balanced_accuracy: 0.59058 | train_logloss: 0.67518 | train_f1_macro: 0.58833 | valid_balanced_accuracy: 0.58177 | valid_logloss: 0.6797  | valid_f1_macro: 0.57942 |  0:21:03s
epoch 22 | loss: 0.67189 | train_balanced_accuracy: 0.57952 | train_logloss: 0.67208 | train_f1_macro: 0.57376 | valid_balanced_accuracy: 0.57402 | valid_logloss: 0.67422 | valid_f1_macro: 0.56802 |  0:21:59s
epoch 23 | loss: 0.67212 | train_balanced_accuracy: 0.58533 | train_logloss: 0.67149 | train_f1_macro: 0.58181 | valid_balanced_accuracy: 0.5775  | valid_logloss: 0.67411 | valid_f1_macro: 0.57351 |  0:22:57s
epoch 24 | loss: 0.67231 | train_balanced_accuracy: 0.58669 | train_logloss: 0.67246 | train_f1_macro: 0.58374 | valid_balanced_accuracy: 0.58224 | valid_logloss: 0.67318 | valid_f1_macro: 0.57885 |  0:23:53s
epoch 25 | loss: 0.67171 | train_balanced_accuracy: 0.58406 | train_logloss: 0.67527 | train_f1_macro: 0.58347 | valid_balanced_accuracy: 0.57805 | valid_logloss: 0.67465 | valid_f1_macro: 0.57744 |  0:24:53s
epoch 26 | loss: 0.67027 | train_balanced_accuracy: 0.58515 | train_logloss: 0.68195 | train_f1_macro: 0.58472 | valid_balanced_accuracy: 0.57434 | valid_logloss: 0.67862 | valid_f1_macro: 0.57385 |  0:25:53s
epoch 27 | loss: 0.67036 | train_balanced_accuracy: 0.58888 | train_logloss: 0.67069 | train_f1_macro: 0.58717 | valid_balanced_accuracy: 0.57932 | valid_logloss: 0.67211 | valid_f1_macro: 0.57739 |  0:27:16s
epoch 28 | loss: 0.67092 | train_balanced_accuracy: 0.58791 | train_logloss: 0.67086 | train_f1_macro: 0.58593 | valid_balanced_accuracy: 0.57963 | valid_logloss: 0.67245 | valid_f1_macro: 0.57757 |  0:28:21s
epoch 29 | loss: 0.6704  | train_balanced_accuracy: 0.58606 | train_logloss: 0.67507 | train_f1_macro: 0.58387 | valid_balanced_accuracy: 0.57979 | valid_logloss: 0.6757  | valid_f1_macro: 0.57753 |  0:29:23s
epoch 30 | loss: 0.66918 | train_balanced_accuracy: 0.58926 | train_logloss: 0.66846 | train_f1_macro: 0.58864 | valid_balanced_accuracy: 0.57813 | valid_logloss: 0.67073 | valid_f1_macro: 0.57742 |  0:30:21s
epoch 31 | loss: 0.66987 | train_balanced_accuracy: 0.58833 | train_logloss: 0.66686 | train_f1_macro: 0.58426 | valid_balanced_accuracy: 0.57995 | valid_logloss: 0.66957 | valid_f1_macro: 0.57555 |  0:31:21s
epoch 32 | loss: 0.669   | train_balanced_accuracy: 0.54359 | train_logloss: 0.72164 | train_f1_macro: 0.50083 | valid_balanced_accuracy: 0.53788 | valid_logloss: 0.72602 | valid_f1_macro: 0.49347 |  0:32:21s
epoch 33 | loss: 0.67037 | train_balanced_accuracy: 0.58635 | train_logloss: 0.67188 | train_f1_macro: 0.58439 | valid_balanced_accuracy: 0.57702 | valid_logloss: 0.67525 | valid_f1_macro: 0.57507 |  0:33:25s
epoch 34 | loss: 0.66963 | train_balanced_accuracy: 0.59003 | train_logloss: 0.66835 | train_f1_macro: 0.58792 | valid_balanced_accuracy: 0.58042 | valid_logloss: 0.67171 | valid_f1_macro: 0.57819 |  0:34:25s
epoch 35 | loss: 0.67011 | train_balanced_accuracy: 0.57177 | train_logloss: 0.71186 | train_f1_macro: 0.56872 | valid_balanced_accuracy: 0.56384 | valid_logloss: 0.71862 | valid_f1_macro: 0.56084 |  0:35:19s
epoch 36 | loss: 0.66801 | train_balanced_accuracy: 0.56815 | train_logloss: 0.67365 | train_f1_macro: 0.55289 | valid_balanced_accuracy: 0.56139 | valid_logloss: 0.677   | valid_f1_macro: 0.54565 |  0:36:13s
epoch 37 | loss: 0.66827 | train_balanced_accuracy: 0.54284 | train_logloss: 0.74302 | train_f1_macro: 0.51756 | valid_balanced_accuracy: 0.53686 | valid_logloss: 0.74723 | valid_f1_macro: 0.51051 |  0:37:10s
epoch 38 | loss: 0.6704  | train_balanced_accuracy: 0.58999 | train_logloss: 0.66809 | train_f1_macro: 0.58856 | valid_balanced_accuracy: 0.5805  | valid_logloss: 0.67163 | valid_f1_macro: 0.57897 |  0:38:04s
epoch 39 | loss: 0.66821 | train_balanced_accuracy: 0.589   | train_logloss: 0.66761 | train_f1_macro: 0.58695 | valid_balanced_accuracy: 0.57853 | valid_logloss: 0.67115 | valid_f1_macro: 0.57635 |  0:39:08s
epoch 40 | loss: 0.66773 | train_balanced_accuracy: 0.56645 | train_logloss: 0.68534 | train_f1_macro: 0.5526  | valid_balanced_accuracy: 0.56049 | valid_logloss: 0.69081 | valid_f1_macro: 0.54595 |  0:40:14s
epoch 41 | loss: 0.66698 | train_balanced_accuracy: 0.58641 | train_logloss: 0.66853 | train_f1_macro: 0.58572 | valid_balanced_accuracy: 0.57703 | valid_logloss: 0.67326 | valid_f1_macro: 0.57634 |  0:41:16s

Early stopping occurred at epoch 41 with best_epoch = 21 and best_valid_f1_macro = 0.57942
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/callbacks.py:172: UserWarning: Best weights from best epoch are automatically used!
  warnings.warn(wrn_msg)
[CV 2/5; 7/7] END classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1;, score=0.485 total time=41.6min
[CV 3/5; 7/7] START classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: n_d changed from 8 to 64
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_dims changed from [] to [27, 34, 37, 117, 119, 78, 125]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_emb_dim changed from 20 to [13, 17, 18, 20, 20, 20, 20]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_idxs changed from [] to [1, 2, 3, 10, 11, 12, 18]
  warnings.warn(wrn_msg)
epoch 0  | loss: 2.68898 | train_balanced_accuracy: 0.49377 | train_logloss: 3.12581 | train_f1_macro: 0.4228  | valid_balanced_accuracy: 0.48602 | valid_logloss: 3.17065 | valid_f1_macro: 0.41322 |  0:00:58s
epoch 1  | loss: 2.04633 | train_balanced_accuracy: 0.49972 | train_logloss: 0.76438 | train_f1_macro: 0.33363 | valid_balanced_accuracy: 0.50016 | valid_logloss: 0.76378 | valid_f1_macro: 0.33454 |  0:01:56s
epoch 2  | loss: 0.74387 | train_balanced_accuracy: 0.52654 | train_logloss: 0.69677 | train_f1_macro: 0.48923 | valid_balanced_accuracy: 0.52674 | valid_logloss: 0.69814 | valid_f1_macro: 0.49029 |  0:03:04s
epoch 3  | loss: 0.68312 | train_balanced_accuracy: 0.55396 | train_logloss: 0.68816 | train_f1_macro: 0.54584 | valid_balanced_accuracy: 0.54139 | valid_logloss: 0.69063 | valid_f1_macro: 0.53275 |  0:04:04s
epoch 4  | loss: 0.67981 | train_balanced_accuracy: 0.5527  | train_logloss: 0.68772 | train_f1_macro: 0.54341 | valid_balanced_accuracy: 0.55323 | valid_logloss: 0.68925 | valid_f1_macro: 0.5434  |  0:05:02s
epoch 5  | loss: 0.67906 | train_balanced_accuracy: 0.57538 | train_logloss: 0.67782 | train_f1_macro: 0.57387 | valid_balanced_accuracy: 0.56953 | valid_logloss: 0.68046 | valid_f1_macro: 0.56789 |  0:06:01s
epoch 6  | loss: 0.68319 | train_balanced_accuracy: 0.55864 | train_logloss: 0.69747 | train_f1_macro: 0.55386 | valid_balanced_accuracy: 0.54629 | valid_logloss: 0.70166 | valid_f1_macro: 0.54108 |  0:07:07s
epoch 7  | loss: 0.68388 | train_balanced_accuracy: 0.54254 | train_logloss: 0.68969 | train_f1_macro: 0.53681 | valid_balanced_accuracy: 0.53759 | valid_logloss: 0.6911  | valid_f1_macro: 0.53214 |  0:08:06s
epoch 8  | loss: 0.68378 | train_balanced_accuracy: 0.56987 | train_logloss: 0.68644 | train_f1_macro: 0.56183 | valid_balanced_accuracy: 0.55504 | valid_logloss: 0.69009 | valid_f1_macro: 0.54652 |  0:09:14s
epoch 9  | loss: 0.67833 | train_balanced_accuracy: 0.55977 | train_logloss: 0.67787 | train_f1_macro: 0.55724 | valid_balanced_accuracy: 0.55157 | valid_logloss: 0.68272 | valid_f1_macro: 0.54907 |  0:10:14s
epoch 10 | loss: 0.66969 | train_balanced_accuracy: 0.57125 | train_logloss: 0.68786 | train_f1_macro: 0.57104 | valid_balanced_accuracy: 0.56423 | valid_logloss: 0.69203 | valid_f1_macro: 0.56393 |  0:11:16s
epoch 11 | loss: 0.66907 | train_balanced_accuracy: 0.5887  | train_logloss: 0.67163 | train_f1_macro: 0.58751 | valid_balanced_accuracy: 0.57482 | valid_logloss: 0.67717 | valid_f1_macro: 0.57356 |  0:12:17s
epoch 12 | loss: 0.65063 | train_balanced_accuracy: 0.6124  | train_logloss: 0.65253 | train_f1_macro: 0.61238 | valid_balanced_accuracy: 0.60462 | valid_logloss: 0.65949 | valid_f1_macro: 0.60461 |  0:13:16s
epoch 13 | loss: 0.64766 | train_balanced_accuracy: 0.61694 | train_logloss: 0.64212 | train_f1_macro: 0.61192 | valid_balanced_accuracy: 0.61095 | valid_logloss: 0.64741 | valid_f1_macro: 0.60555 |  0:14:19s
epoch 14 | loss: 0.64387 | train_balanced_accuracy: 0.60514 | train_logloss: 0.63666 | train_f1_macro: 0.60295 | valid_balanced_accuracy: 0.5919  | valid_logloss: 0.64685 | valid_f1_macro: 0.58959 |  0:15:17s
epoch 15 | loss: 0.64078 | train_balanced_accuracy: 0.60287 | train_logloss: 0.63918 | train_f1_macro: 0.60223 | valid_balanced_accuracy: 0.58793 | valid_logloss: 0.64728 | valid_f1_macro: 0.58729 |  0:16:18s
epoch 16 | loss: 0.64096 | train_balanced_accuracy: 0.62424 | train_logloss: 0.64338 | train_f1_macro: 0.61926 | valid_balanced_accuracy: 0.61512 | valid_logloss: 0.65268 | valid_f1_macro: 0.61001 |  0:17:16s
epoch 17 | loss: 0.64034 | train_balanced_accuracy: 0.61169 | train_logloss: 0.6396  | train_f1_macro: 0.60437 | valid_balanced_accuracy: 0.60587 | valid_logloss: 0.64377 | valid_f1_macro: 0.59849 |  0:18:21s
epoch 18 | loss: 0.64504 | train_balanced_accuracy: 0.61455 | train_logloss: 0.63946 | train_f1_macro: 0.61439 | valid_balanced_accuracy: 0.60557 | valid_logloss: 0.64595 | valid_f1_macro: 0.60541 |  0:19:23s
epoch 19 | loss: 0.64201 | train_balanced_accuracy: 0.61926 | train_logloss: 0.63633 | train_f1_macro: 0.619   | valid_balanced_accuracy: 0.60912 | valid_logloss: 0.64415 | valid_f1_macro: 0.60877 |  0:20:23s
epoch 20 | loss: 0.64257 | train_balanced_accuracy: 0.61969 | train_logloss: 0.63692 | train_f1_macro: 0.61924 | valid_balanced_accuracy: 0.61149 | valid_logloss: 0.64624 | valid_f1_macro: 0.6111  |  0:21:27s
epoch 21 | loss: 0.64055 | train_balanced_accuracy: 0.61497 | train_logloss: 0.63836 | train_f1_macro: 0.60792 | valid_balanced_accuracy: 0.59751 | valid_logloss: 0.64806 | valid_f1_macro: 0.5898  |  0:22:34s
epoch 22 | loss: 0.6449  | train_balanced_accuracy: 0.61671 | train_logloss: 0.64313 | train_f1_macro: 0.6166  | valid_balanced_accuracy: 0.60635 | valid_logloss: 0.65144 | valid_f1_macro: 0.60626 |  0:23:33s
epoch 23 | loss: 0.64583 | train_balanced_accuracy: 0.62285 | train_logloss: 0.64089 | train_f1_macro: 0.62284 | valid_balanced_accuracy: 0.61039 | valid_logloss: 0.6484  | valid_f1_macro: 0.61034 |  0:24:31s
epoch 24 | loss: 0.64251 | train_balanced_accuracy: 0.61052 | train_logloss: 0.64283 | train_f1_macro: 0.60794 | valid_balanced_accuracy: 0.60186 | valid_logloss: 0.64872 | valid_f1_macro: 0.59901 |  0:25:30s
epoch 25 | loss: 0.64372 | train_balanced_accuracy: 0.61944 | train_logloss: 0.64187 | train_f1_macro: 0.61865 | valid_balanced_accuracy: 0.60762 | valid_logloss: 0.652   | valid_f1_macro: 0.60687 |  0:26:29s
epoch 26 | loss: 0.64049 | train_balanced_accuracy: 0.62704 | train_logloss: 0.63339 | train_f1_macro: 0.62654 | valid_balanced_accuracy: 0.61339 | valid_logloss: 0.64415 | valid_f1_macro: 0.61292 |  0:27:27s
epoch 27 | loss: 0.63988 | train_balanced_accuracy: 0.62631 | train_logloss: 0.63466 | train_f1_macro: 0.62609 | valid_balanced_accuracy: 0.61742 | valid_logloss: 0.64125 | valid_f1_macro: 0.61727 |  0:28:37s
epoch 28 | loss: 0.63916 | train_balanced_accuracy: 0.62762 | train_logloss: 0.63202 | train_f1_macro: 0.62687 | valid_balanced_accuracy: 0.61418 | valid_logloss: 0.64197 | valid_f1_macro: 0.61352 |  0:29:36s
epoch 29 | loss: 0.637   | train_balanced_accuracy: 0.61668 | train_logloss: 0.63062 | train_f1_macro: 0.6092  | valid_balanced_accuracy: 0.59981 | valid_logloss: 0.63873 | valid_f1_macro: 0.59136 |  0:30:44s
epoch 30 | loss: 0.63622 | train_balanced_accuracy: 0.62218 | train_logloss: 0.63523 | train_f1_macro: 0.62175 | valid_balanced_accuracy: 0.61316 | valid_logloss: 0.64209 | valid_f1_macro: 0.6127  |  0:31:57s
epoch 31 | loss: 0.63822 | train_balanced_accuracy: 0.63349 | train_logloss: 0.63454 | train_f1_macro: 0.63348 | valid_balanced_accuracy: 0.61948 | valid_logloss: 0.64269 | valid_f1_macro: 0.61946 |  0:33:05s
epoch 32 | loss: 0.63645 | train_balanced_accuracy: 0.62511 | train_logloss: 0.63281 | train_f1_macro: 0.625   | valid_balanced_accuracy: 0.61924 | valid_logloss: 0.64219 | valid_f1_macro: 0.61916 |  0:34:23s
epoch 33 | loss: 0.63805 | train_balanced_accuracy: 0.62105 | train_logloss: 0.63188 | train_f1_macro: 0.62068 | valid_balanced_accuracy: 0.60731 | valid_logloss: 0.64155 | valid_f1_macro: 0.60681 |  0:35:42s
epoch 34 | loss: 0.64249 | train_balanced_accuracy: 0.62489 | train_logloss: 0.64441 | train_f1_macro: 0.62477 | valid_balanced_accuracy: 0.61458 | valid_logloss: 0.65014 | valid_f1_macro: 0.61439 |  0:36:53s
epoch 35 | loss: 0.64109 | train_balanced_accuracy: 0.62675 | train_logloss: 0.63351 | train_f1_macro: 0.62673 | valid_balanced_accuracy: 0.61568 | valid_logloss: 0.6415  | valid_f1_macro: 0.61559 |  0:37:59s
epoch 36 | loss: 0.64064 | train_balanced_accuracy: 0.62813 | train_logloss: 0.63494 | train_f1_macro: 0.62756 | valid_balanced_accuracy: 0.61758 | valid_logloss: 0.64198 | valid_f1_macro: 0.61704 |  0:39:04s
epoch 37 | loss: 0.63869 | train_balanced_accuracy: 0.62809 | train_logloss: 0.63469 | train_f1_macro: 0.62768 | valid_balanced_accuracy: 0.61528 | valid_logloss: 0.64288 | valid_f1_macro: 0.61489 |  0:40:06s
epoch 38 | loss: 0.63985 | train_balanced_accuracy: 0.6271  | train_logloss: 0.63149 | train_f1_macro: 0.62674 | valid_balanced_accuracy: 0.61276 | valid_logloss: 0.63958 | valid_f1_macro: 0.61232 |  0:41:08s
epoch 39 | loss: 0.6388  | train_balanced_accuracy: 0.63044 | train_logloss: 0.64038 | train_f1_macro: 0.63044 | valid_balanced_accuracy: 0.61711 | valid_logloss: 0.64746 | valid_f1_macro: 0.61711 |  0:42:07s
epoch 40 | loss: 0.63733 | train_balanced_accuracy: 0.63121 | train_logloss: 0.63218 | train_f1_macro: 0.63074 | valid_balanced_accuracy: 0.61924 | valid_logloss: 0.64132 | valid_f1_macro: 0.61883 |  0:43:02s
epoch 41 | loss: 0.63876 | train_balanced_accuracy: 0.61257 | train_logloss: 0.63517 | train_f1_macro: 0.60651 | valid_balanced_accuracy: 0.59617 | valid_logloss: 0.64551 | valid_f1_macro: 0.58953 |  0:43:57s
epoch 42 | loss: 0.63872 | train_balanced_accuracy: 0.62777 | train_logloss: 0.63847 | train_f1_macro: 0.62761 | valid_balanced_accuracy: 0.61395 | valid_logloss: 0.64699 | valid_f1_macro: 0.61372 |  0:44:52s
epoch 43 | loss: 0.63924 | train_balanced_accuracy: 0.63098 | train_logloss: 0.63036 | train_f1_macro: 0.63064 | valid_balanced_accuracy: 0.61742 | valid_logloss: 0.64029 | valid_f1_macro: 0.6171  |  0:45:49s
epoch 44 | loss: 0.63707 | train_balanced_accuracy: 0.63349 | train_logloss: 0.63312 | train_f1_macro: 0.6327  | valid_balanced_accuracy: 0.62066 | valid_logloss: 0.64174 | valid_f1_macro: 0.61998 |  0:46:44s
epoch 45 | loss: 0.63662 | train_balanced_accuracy: 0.62906 | train_logloss: 0.6294  | train_f1_macro: 0.62904 | valid_balanced_accuracy: 0.61529 | valid_logloss: 0.63986 | valid_f1_macro: 0.61528 |  0:47:39s
epoch 46 | loss: 0.63655 | train_balanced_accuracy: 0.63042 | train_logloss: 0.62966 | train_f1_macro: 0.62927 | valid_balanced_accuracy: 0.61797 | valid_logloss: 0.63949 | valid_f1_macro: 0.61691 |  0:48:34s
epoch 47 | loss: 0.6369  | train_balanced_accuracy: 0.62989 | train_logloss: 0.64018 | train_f1_macro: 0.62906 | valid_balanced_accuracy: 0.61758 | valid_logloss: 0.64811 | valid_f1_macro: 0.61685 |  0:49:29s
epoch 48 | loss: 0.63756 | train_balanced_accuracy: 0.632   | train_logloss: 0.63073 | train_f1_macro: 0.6306  | valid_balanced_accuracy: 0.62066 | valid_logloss: 0.63988 | valid_f1_macro: 0.61935 |  0:50:24s
epoch 49 | loss: 0.6368  | train_balanced_accuracy: 0.63323 | train_logloss: 0.63376 | train_f1_macro: 0.63145 | valid_balanced_accuracy: 0.62042 | valid_logloss: 0.64216 | valid_f1_macro: 0.6187  |  0:51:20s
epoch 50 | loss: 0.63844 | train_balanced_accuracy: 0.62951 | train_logloss: 0.63104 | train_f1_macro: 0.62703 | valid_balanced_accuracy: 0.6156  | valid_logloss: 0.64092 | valid_f1_macro: 0.61322 |  0:52:14s
epoch 51 | loss: 0.63553 | train_balanced_accuracy: 0.63546 | train_logloss: 0.63154 | train_f1_macro: 0.63501 | valid_balanced_accuracy: 0.62137 | valid_logloss: 0.64003 | valid_f1_macro: 0.62099 |  0:53:09s
epoch 52 | loss: 0.63747 | train_balanced_accuracy: 0.6341  | train_logloss: 0.6327  | train_f1_macro: 0.63402 | valid_balanced_accuracy: 0.62042 | valid_logloss: 0.64197 | valid_f1_macro: 0.62039 |  0:54:04s
epoch 53 | loss: 0.63581 | train_balanced_accuracy: 0.63436 | train_logloss: 0.63063 | train_f1_macro: 0.63302 | valid_balanced_accuracy: 0.62263 | valid_logloss: 0.63966 | valid_f1_macro: 0.62142 |  0:55:00s
epoch 54 | loss: 0.63584 | train_balanced_accuracy: 0.63127 | train_logloss: 0.63088 | train_f1_macro: 0.62935 | valid_balanced_accuracy: 0.61868 | valid_logloss: 0.63979 | valid_f1_macro: 0.61687 |  0:55:56s
epoch 55 | loss: 0.63632 | train_balanced_accuracy: 0.63175 | train_logloss: 0.63092 | train_f1_macro: 0.6313  | valid_balanced_accuracy: 0.61639 | valid_logloss: 0.63958 | valid_f1_macro: 0.61601 |  0:56:51s
epoch 56 | loss: 0.63643 | train_balanced_accuracy: 0.63218 | train_logloss: 0.62981 | train_f1_macro: 0.63061 | valid_balanced_accuracy: 0.61765 | valid_logloss: 0.63861 | valid_f1_macro: 0.6161  |  0:57:46s
epoch 57 | loss: 0.63468 | train_balanced_accuracy: 0.63147 | train_logloss: 0.62923 | train_f1_macro: 0.63108 | valid_balanced_accuracy: 0.61884 | valid_logloss: 0.63853 | valid_f1_macro: 0.61852 |  0:58:41s
epoch 58 | loss: 0.63568 | train_balanced_accuracy: 0.63042 | train_logloss: 0.63525 | train_f1_macro: 0.63042 | valid_balanced_accuracy: 0.61908 | valid_logloss: 0.64288 | valid_f1_macro: 0.61907 |  0:59:36s
epoch 59 | loss: 0.63646 | train_balanced_accuracy: 0.63084 | train_logloss: 0.62863 | train_f1_macro: 0.6308  | valid_balanced_accuracy: 0.6171  | valid_logloss: 0.63784 | valid_f1_macro: 0.61709 |  1:00:31s
epoch 60 | loss: 0.63463 | train_balanced_accuracy: 0.62801 | train_logloss: 0.63375 | train_f1_macro: 0.62725 | valid_balanced_accuracy: 0.61513 | valid_logloss: 0.6413  | valid_f1_macro: 0.6142  |  1:01:27s
epoch 61 | loss: 0.63546 | train_balanced_accuracy: 0.63086 | train_logloss: 0.63088 | train_f1_macro: 0.62946 | valid_balanced_accuracy: 0.61797 | valid_logloss: 0.63845 | valid_f1_macro: 0.61652 |  1:02:22s
epoch 62 | loss: 0.63394 | train_balanced_accuracy: 0.62918 | train_logloss: 0.6364  | train_f1_macro: 0.62852 | valid_balanced_accuracy: 0.61743 | valid_logloss: 0.64381 | valid_f1_macro: 0.61657 |  1:03:17s
epoch 63 | loss: 0.63383 | train_balanced_accuracy: 0.63068 | train_logloss: 0.62935 | train_f1_macro: 0.6299  | valid_balanced_accuracy: 0.6171  | valid_logloss: 0.63788 | valid_f1_macro: 0.61644 |  1:04:12s
epoch 64 | loss: 0.63697 | train_balanced_accuracy: 0.62517 | train_logloss: 0.63311 | train_f1_macro: 0.62243 | valid_balanced_accuracy: 0.61149 | valid_logloss: 0.64189 | valid_f1_macro: 0.60863 |  1:05:09s
epoch 65 | loss: 0.63631 | train_balanced_accuracy: 0.62036 | train_logloss: 0.64113 | train_f1_macro: 0.61971 | valid_balanced_accuracy: 0.61165 | valid_logloss: 0.64814 | valid_f1_macro: 0.61104 |  1:06:05s
epoch 66 | loss: 0.64081 | train_balanced_accuracy: 0.62112 | train_logloss: 0.64033 | train_f1_macro: 0.6205  | valid_balanced_accuracy: 0.61165 | valid_logloss: 0.64916 | valid_f1_macro: 0.61105 |  1:07:00s
epoch 67 | loss: 0.64313 | train_balanced_accuracy: 0.62434 | train_logloss: 0.635   | train_f1_macro: 0.6242  | valid_balanced_accuracy: 0.61568 | valid_logloss: 0.6427  | valid_f1_macro: 0.61554 |  1:07:54s
epoch 68 | loss: 0.63818 | train_balanced_accuracy: 0.6121  | train_logloss: 0.64108 | train_f1_macro: 0.60689 | valid_balanced_accuracy: 0.59783 | valid_logloss: 0.65096 | valid_f1_macro: 0.59209 |  1:08:50s
epoch 69 | loss: 0.63609 | train_balanced_accuracy: 0.62513 | train_logloss: 0.6307  | train_f1_macro: 0.62423 | valid_balanced_accuracy: 0.61513 | valid_logloss: 0.63878 | valid_f1_macro: 0.61429 |  1:09:45s
epoch 70 | loss: 0.63774 | train_balanced_accuracy: 0.61359 | train_logloss: 0.6392  | train_f1_macro: 0.61114 | valid_balanced_accuracy: 0.60287 | valid_logloss: 0.6474  | valid_f1_macro: 0.60054 |  1:10:40s
epoch 71 | loss: 0.63614 | train_balanced_accuracy: 0.61032 | train_logloss: 0.67166 | train_f1_macro: 0.60915 | valid_balanced_accuracy: 0.59166 | valid_logloss: 0.6869  | valid_f1_macro: 0.59028 |  1:11:36s
epoch 72 | loss: 0.63573 | train_balanced_accuracy: 0.62418 | train_logloss: 0.63438 | train_f1_macro: 0.62305 | valid_balanced_accuracy: 0.61394 | valid_logloss: 0.64134 | valid_f1_macro: 0.61291 |  1:12:31s
epoch 73 | loss: 0.63571 | train_balanced_accuracy: 0.62015 | train_logloss: 0.64819 | train_f1_macro: 0.62005 | valid_balanced_accuracy: 0.6077  | valid_logloss: 0.65738 | valid_f1_macro: 0.60764 |  1:13:26s

Early stopping occurred at epoch 73 with best_epoch = 53 and best_valid_f1_macro = 0.62142
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/callbacks.py:172: UserWarning: Best weights from best epoch are automatically used!
  warnings.warn(wrn_msg)
[CV 3/5; 7/7] END classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1;, score=0.524 total time=73.8min
[CV 4/5; 7/7] START classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: n_d changed from 8 to 64
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_dims changed from [] to [32, 40, 42, 148, 112, 82, 118, 132]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_emb_dim changed from 20 to [16, 20, 20, 20, 20, 20, 20, 20]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_idxs changed from [] to [1, 2, 3, 10, 11, 12, 18, 19]
  warnings.warn(wrn_msg)
epoch 0  | loss: 2.9422  | train_balanced_accuracy: 0.5157  | train_logloss: 1.03595 | train_f1_macro: 0.50835 | valid_balanced_accuracy: 0.51949 | valid_logloss: 1.01553 | valid_f1_macro: 0.5123  |  0:00:58s
epoch 1  | loss: 1.94    | train_balanced_accuracy: 0.51192 | train_logloss: 0.73971 | train_f1_macro: 0.39815 | valid_balanced_accuracy: 0.50981 | valid_logloss: 0.74041 | valid_f1_macro: 0.39509 |  0:01:57s
epoch 2  | loss: 0.76304 | train_balanced_accuracy: 0.55712 | train_logloss: 0.68531 | train_f1_macro: 0.55078 | valid_balanced_accuracy: 0.55228 | valid_logloss: 0.68617 | valid_f1_macro: 0.54426 |  0:02:55s
epoch 3  | loss: 0.6816  | train_balanced_accuracy: 0.54155 | train_logloss: 0.69881 | train_f1_macro: 0.5374  | valid_balanced_accuracy: 0.54137 | valid_logloss: 0.6959  | valid_f1_macro: 0.53625 |  0:03:53s
epoch 4  | loss: 0.68097 | train_balanced_accuracy: 0.54762 | train_logloss: 0.68354 | train_f1_macro: 0.51544 | valid_balanced_accuracy: 0.55053 | valid_logloss: 0.68327 | valid_f1_macro: 0.51703 |  0:04:51s
epoch 5  | loss: 0.6793  | train_balanced_accuracy: 0.57179 | train_logloss: 0.67884 | train_f1_macro: 0.5641  | valid_balanced_accuracy: 0.56777 | valid_logloss: 0.67889 | valid_f1_macro: 0.55892 |  0:05:49s
epoch 6  | loss: 0.67926 | train_balanced_accuracy: 0.56208 | train_logloss: 0.68187 | train_f1_macro: 0.55438 | valid_balanced_accuracy: 0.55971 | valid_logloss: 0.68288 | valid_f1_macro: 0.5512  |  0:06:46s
epoch 7  | loss: 0.67689 | train_balanced_accuracy: 0.57072 | train_logloss: 0.67726 | train_f1_macro: 0.57054 | valid_balanced_accuracy: 0.57094 | valid_logloss: 0.67747 | valid_f1_macro: 0.57086 |  0:07:44s
epoch 8  | loss: 0.67727 | train_balanced_accuracy: 0.5689  | train_logloss: 0.68111 | train_f1_macro: 0.56634 | valid_balanced_accuracy: 0.56874 | valid_logloss: 0.68023 | valid_f1_macro: 0.56656 |  0:08:42s
epoch 9  | loss: 0.678   | train_balanced_accuracy: 0.57623 | train_logloss: 0.67665 | train_f1_macro: 0.57574 | valid_balanced_accuracy: 0.57173 | valid_logloss: 0.67836 | valid_f1_macro: 0.57108 |  0:09:40s
epoch 10 | loss: 0.67714 | train_balanced_accuracy: 0.57854 | train_logloss: 0.676   | train_f1_macro: 0.57767 | valid_balanced_accuracy: 0.57386 | valid_logloss: 0.67573 | valid_f1_macro: 0.57244 |  0:10:39s
epoch 11 | loss: 0.67551 | train_balanced_accuracy: 0.57259 | train_logloss: 0.68099 | train_f1_macro: 0.56919 | valid_balanced_accuracy: 0.56858 | valid_logloss: 0.68071 | valid_f1_macro: 0.56546 |  0:11:38s
epoch 12 | loss: 0.67706 | train_balanced_accuracy: 0.57471 | train_logloss: 0.67494 | train_f1_macro: 0.57327 | valid_balanced_accuracy: 0.5745  | valid_logloss: 0.67467 | valid_f1_macro: 0.57333 |  0:12:36s
epoch 13 | loss: 0.67553 | train_balanced_accuracy: 0.57524 | train_logloss: 0.67657 | train_f1_macro: 0.57524 | valid_balanced_accuracy: 0.5666  | valid_logloss: 0.67838 | valid_f1_macro: 0.56659 |  0:13:34s
epoch 14 | loss: 0.67763 | train_balanced_accuracy: 0.57777 | train_logloss: 0.67558 | train_f1_macro: 0.57639 | valid_balanced_accuracy: 0.57117 | valid_logloss: 0.67616 | valid_f1_macro: 0.56923 |  0:14:32s
epoch 15 | loss: 0.67681 | train_balanced_accuracy: 0.57793 | train_logloss: 0.67673 | train_f1_macro: 0.57793 | valid_balanced_accuracy: 0.57458 | valid_logloss: 0.67736 | valid_f1_macro: 0.57458 |  0:15:30s
epoch 16 | loss: 0.67646 | train_balanced_accuracy: 0.57674 | train_logloss: 0.67465 | train_f1_macro: 0.57669 | valid_balanced_accuracy: 0.57205 | valid_logloss: 0.67572 | valid_f1_macro: 0.57195 |  0:16:30s
epoch 17 | loss: 0.67456 | train_balanced_accuracy: 0.57732 | train_logloss: 0.67503 | train_f1_macro: 0.5771  | valid_balanced_accuracy: 0.56723 | valid_logloss: 0.67843 | valid_f1_macro: 0.56712 |  0:17:28s
epoch 18 | loss: 0.67425 | train_balanced_accuracy: 0.58372 | train_logloss: 0.6715  | train_f1_macro: 0.58245 | valid_balanced_accuracy: 0.57933 | valid_logloss: 0.67235 | valid_f1_macro: 0.57849 |  0:18:26s
epoch 19 | loss: 0.6724  | train_balanced_accuracy: 0.58465 | train_logloss: 0.67067 | train_f1_macro: 0.58441 | valid_balanced_accuracy: 0.58082 | valid_logloss: 0.67082 | valid_f1_macro: 0.58036 |  0:19:24s
epoch 20 | loss: 0.67212 | train_balanced_accuracy: 0.58664 | train_logloss: 0.67162 | train_f1_macro: 0.58631 | valid_balanced_accuracy: 0.58375 | valid_logloss: 0.67282 | valid_f1_macro: 0.58356 |  0:20:22s
epoch 21 | loss: 0.6726  | train_balanced_accuracy: 0.58325 | train_logloss: 0.67125 | train_f1_macro: 0.58186 | valid_balanced_accuracy: 0.57473 | valid_logloss: 0.6727  | valid_f1_macro: 0.57276 |  0:21:21s
epoch 22 | loss: 0.67188 | train_balanced_accuracy: 0.57347 | train_logloss: 0.68611 | train_f1_macro: 0.55886 | valid_balanced_accuracy: 0.57116 | valid_logloss: 0.68525 | valid_f1_macro: 0.55472 |  0:22:19s
epoch 23 | loss: 0.66995 | train_balanced_accuracy: 0.59534 | train_logloss: 0.65819 | train_f1_macro: 0.59454 | valid_balanced_accuracy: 0.59449 | valid_logloss: 0.65975 | valid_f1_macro: 0.59344 |  0:23:16s
epoch 24 | loss: 0.66124 | train_balanced_accuracy: 0.59524 | train_logloss: 0.65738 | train_f1_macro: 0.58978 | valid_balanced_accuracy: 0.59322 | valid_logloss: 0.65772 | valid_f1_macro: 0.58699 |  0:24:14s
epoch 25 | loss: 0.65793 | train_balanced_accuracy: 0.59842 | train_logloss: 0.65305 | train_f1_macro: 0.59827 | valid_balanced_accuracy: 0.59695 | valid_logloss: 0.65277 | valid_f1_macro: 0.59684 |  0:25:12s
epoch 26 | loss: 0.65841 | train_balanced_accuracy: 0.602   | train_logloss: 0.65332 | train_f1_macro: 0.60199 | valid_balanced_accuracy: 0.59505 | valid_logloss: 0.65482 | valid_f1_macro: 0.59499 |  0:26:10s
epoch 27 | loss: 0.65759 | train_balanced_accuracy: 0.59884 | train_logloss: 0.65673 | train_f1_macro: 0.59884 | valid_balanced_accuracy: 0.59948 | valid_logloss: 0.65564 | valid_f1_macro: 0.59947 |  0:27:07s
epoch 28 | loss: 0.65687 | train_balanced_accuracy: 0.6002  | train_logloss: 0.65716 | train_f1_macro: 0.60019 | valid_balanced_accuracy: 0.599   | valid_logloss: 0.65799 | valid_f1_macro: 0.59893 |  0:28:05s
epoch 29 | loss: 0.65679 | train_balanced_accuracy: 0.60125 | train_logloss: 0.65188 | train_f1_macro: 0.60115 | valid_balanced_accuracy: 0.5979  | valid_logloss: 0.65363 | valid_f1_macro: 0.59768 |  0:29:02s
epoch 30 | loss: 0.65602 | train_balanced_accuracy: 0.60392 | train_logloss: 0.65339 | train_f1_macro: 0.60341 | valid_balanced_accuracy: 0.60161 | valid_logloss: 0.65376 | valid_f1_macro: 0.60097 |  0:30:00s
epoch 31 | loss: 0.65698 | train_balanced_accuracy: 0.59698 | train_logloss: 0.65668 | train_f1_macro: 0.59648 | valid_balanced_accuracy: 0.59449 | valid_logloss: 0.65765 | valid_f1_macro: 0.59369 |  0:30:59s
epoch 32 | loss: 0.65982 | train_balanced_accuracy: 0.59222 | train_logloss: 0.66463 | train_f1_macro: 0.59199 | valid_balanced_accuracy: 0.59118 | valid_logloss: 0.66484 | valid_f1_macro: 0.591   |  0:31:57s
epoch 33 | loss: 0.65655 | train_balanced_accuracy: 0.6007  | train_logloss: 0.6545  | train_f1_macro: 0.60066 | valid_balanced_accuracy: 0.59845 | valid_logloss: 0.65563 | valid_f1_macro: 0.59842 |  0:32:55s
epoch 34 | loss: 0.65761 | train_balanced_accuracy: 0.59961 | train_logloss: 0.66269 | train_f1_macro: 0.59956 | valid_balanced_accuracy: 0.59292 | valid_logloss: 0.66364 | valid_f1_macro: 0.59286 |  0:33:53s
epoch 35 | loss: 0.65477 | train_balanced_accuracy: 0.61093 | train_logloss: 0.64685 | train_f1_macro: 0.61069 | valid_balanced_accuracy: 0.60675 | valid_logloss: 0.64764 | valid_f1_macro: 0.60639 |  0:34:51s
epoch 36 | loss: 0.65275 | train_balanced_accuracy: 0.60467 | train_logloss: 0.65044 | train_f1_macro: 0.60466 | valid_balanced_accuracy: 0.59426 | valid_logloss: 0.65179 | valid_f1_macro: 0.59426 |  0:35:49s
epoch 37 | loss: 0.6483  | train_balanced_accuracy: 0.62334 | train_logloss: 0.63699 | train_f1_macro: 0.62298 | valid_balanced_accuracy: 0.61663 | valid_logloss: 0.64054 | valid_f1_macro: 0.61619 |  0:36:47s
epoch 38 | loss: 0.63937 | train_balanced_accuracy: 0.61876 | train_logloss: 0.63621 | train_f1_macro: 0.61685 | valid_balanced_accuracy: 0.60888 | valid_logloss: 0.64128 | valid_f1_macro: 0.60695 |  0:37:45s
epoch 39 | loss: 0.65522 | train_balanced_accuracy: 0.58868 | train_logloss: 0.71684 | train_f1_macro: 0.57649 | valid_balanced_accuracy: 0.58366 | valid_logloss: 0.72186 | valid_f1_macro: 0.57029 |  0:38:43s
epoch 40 | loss: 0.64799 | train_balanced_accuracy: 0.6082  | train_logloss: 0.6492  | train_f1_macro: 0.60809 | valid_balanced_accuracy: 0.6024  | valid_logloss: 0.65206 | valid_f1_macro: 0.60229 |  0:39:40s
epoch 41 | loss: 0.64406 | train_balanced_accuracy: 0.61789 | train_logloss: 0.64218 | train_f1_macro: 0.61486 | valid_balanced_accuracy: 0.61259 | valid_logloss: 0.64567 | valid_f1_macro: 0.60948 |  0:40:39s
epoch 42 | loss: 0.6433  | train_balanced_accuracy: 0.62087 | train_logloss: 0.6326  | train_f1_macro: 0.62023 | valid_balanced_accuracy: 0.61789 | valid_logloss: 0.63812 | valid_f1_macro: 0.61721 |  0:41:39s
epoch 43 | loss: 0.64487 | train_balanced_accuracy: 0.59949 | train_logloss: 0.65398 | train_f1_macro: 0.59755 | valid_balanced_accuracy: 0.59442 | valid_logloss: 0.66006 | valid_f1_macro: 0.59239 |  0:42:37s
epoch 44 | loss: 0.64193 | train_balanced_accuracy: 0.60686 | train_logloss: 0.64922 | train_f1_macro: 0.60686 | valid_balanced_accuracy: 0.6024  | valid_logloss: 0.65444 | valid_f1_macro: 0.6024  |  0:43:35s
epoch 45 | loss: 0.63969 | train_balanced_accuracy: 0.60965 | train_logloss: 0.63776 | train_f1_macro: 0.60496 | valid_balanced_accuracy: 0.60461 | valid_logloss: 0.64161 | valid_f1_macro: 0.59955 |  0:44:32s
epoch 46 | loss: 0.63962 | train_balanced_accuracy: 0.61374 | train_logloss: 0.63168 | train_f1_macro: 0.60636 | valid_balanced_accuracy: 0.60516 | valid_logloss: 0.63731 | valid_f1_macro: 0.59723 |  0:45:29s
epoch 47 | loss: 0.64143 | train_balanced_accuracy: 0.62538 | train_logloss: 0.63605 | train_f1_macro: 0.62521 | valid_balanced_accuracy: 0.61885 | valid_logloss: 0.63856 | valid_f1_macro: 0.61865 |  0:46:27s
epoch 48 | loss: 0.63818 | train_balanced_accuracy: 0.62184 | train_logloss: 0.63624 | train_f1_macro: 0.61976 | valid_balanced_accuracy: 0.61655 | valid_logloss: 0.64126 | valid_f1_macro: 0.61445 |  0:47:24s
epoch 49 | loss: 0.63622 | train_balanced_accuracy: 0.62437 | train_logloss: 0.63307 | train_f1_macro: 0.62388 | valid_balanced_accuracy: 0.61829 | valid_logloss: 0.63621 | valid_f1_macro: 0.61781 |  0:48:22s
epoch 50 | loss: 0.63509 | train_balanced_accuracy: 0.62538 | train_logloss: 0.62715 | train_f1_macro: 0.62519 | valid_balanced_accuracy: 0.62264 | valid_logloss: 0.62979 | valid_f1_macro: 0.62243 |  0:49:19s
epoch 51 | loss: 0.63359 | train_balanced_accuracy: 0.62668 | train_logloss: 0.62934 | train_f1_macro: 0.6263  | valid_balanced_accuracy: 0.62153 | valid_logloss: 0.63163 | valid_f1_macro: 0.6212  |  0:50:16s
epoch 52 | loss: 0.63774 | train_balanced_accuracy: 0.61823 | train_logloss: 0.63041 | train_f1_macro: 0.61525 | valid_balanced_accuracy: 0.6167  | valid_logloss: 0.6346  | valid_f1_macro: 0.61354 |  0:51:15s
epoch 53 | loss: 0.63309 | train_balanced_accuracy: 0.62589 | train_logloss: 0.63033 | train_f1_macro: 0.62481 | valid_balanced_accuracy: 0.62224 | valid_logloss: 0.63349 | valid_f1_macro: 0.62126 |  0:52:13s
epoch 54 | loss: 0.63334 | train_balanced_accuracy: 0.62413 | train_logloss: 0.63709 | train_f1_macro: 0.62375 | valid_balanced_accuracy: 0.62003 | valid_logloss: 0.6405  | valid_f1_macro: 0.61966 |  0:53:11s
epoch 55 | loss: 0.64239 | train_balanced_accuracy: 0.6088  | train_logloss: 0.64833 | train_f1_macro: 0.60868 | valid_balanced_accuracy: 0.60667 | valid_logloss: 0.6534  | valid_f1_macro: 0.60656 |  0:54:08s
epoch 56 | loss: 0.64184 | train_balanced_accuracy: 0.62419 | train_logloss: 0.62985 | train_f1_macro: 0.62365 | valid_balanced_accuracy: 0.6164  | valid_logloss: 0.63373 | valid_f1_macro: 0.61587 |  0:55:06s
epoch 57 | loss: 0.63499 | train_balanced_accuracy: 0.63036 | train_logloss: 0.6274  | train_f1_macro: 0.63034 | valid_balanced_accuracy: 0.62691 | valid_logloss: 0.63144 | valid_f1_macro: 0.62687 |  0:56:03s
epoch 58 | loss: 0.63275 | train_balanced_accuracy: 0.63067 | train_logloss: 0.62645 | train_f1_macro: 0.63067 | valid_balanced_accuracy: 0.62651 | valid_logloss: 0.62973 | valid_f1_macro: 0.62651 |  0:57:01s
epoch 59 | loss: 0.63311 | train_balanced_accuracy: 0.62763 | train_logloss: 0.62825 | train_f1_macro: 0.6274  | valid_balanced_accuracy: 0.62145 | valid_logloss: 0.63254 | valid_f1_macro: 0.62124 |  0:58:00s
epoch 60 | loss: 0.62946 | train_balanced_accuracy: 0.6251  | train_logloss: 0.63335 | train_f1_macro: 0.61814 | valid_balanced_accuracy: 0.622   | valid_logloss: 0.63612 | valid_f1_macro: 0.61513 |  0:58:57s
epoch 61 | loss: 0.62916 | train_balanced_accuracy: 0.62925 | train_logloss: 0.6209  | train_f1_macro: 0.62426 | valid_balanced_accuracy: 0.62634 | valid_logloss: 0.62436 | valid_f1_macro: 0.6212  |  0:59:56s
epoch 62 | loss: 0.62548 | train_balanced_accuracy: 0.63297 | train_logloss: 0.61776 | train_f1_macro: 0.63058 | valid_balanced_accuracy: 0.62785 | valid_logloss: 0.62229 | valid_f1_macro: 0.62552 |  1:00:54s
epoch 63 | loss: 0.62586 | train_balanced_accuracy: 0.63083 | train_logloss: 0.61711 | train_f1_macro: 0.63039 | valid_balanced_accuracy: 0.62659 | valid_logloss: 0.6216  | valid_f1_macro: 0.62611 |  1:01:53s
epoch 64 | loss: 0.62392 | train_balanced_accuracy: 0.63915 | train_logloss: 0.61891 | train_f1_macro: 0.63838 | valid_balanced_accuracy: 0.62999 | valid_logloss: 0.62469 | valid_f1_macro: 0.62933 |  1:02:51s
epoch 65 | loss: 0.62168 | train_balanced_accuracy: 0.64008 | train_logloss: 0.61503 | train_f1_macro: 0.63836 | valid_balanced_accuracy: 0.63568 | valid_logloss: 0.62058 | valid_f1_macro: 0.63382 |  1:03:49s
epoch 66 | loss: 0.62244 | train_balanced_accuracy: 0.58733 | train_logloss: 0.63605 | train_f1_macro: 0.55858 | valid_balanced_accuracy: 0.58495 | valid_logloss: 0.64133 | valid_f1_macro: 0.55622 |  1:04:47s
epoch 67 | loss: 0.62346 | train_balanced_accuracy: 0.59549 | train_logloss: 0.63545 | train_f1_macro: 0.54767 | valid_balanced_accuracy: 0.59286 | valid_logloss: 0.63924 | valid_f1_macro: 0.54568 |  1:05:45s
epoch 68 | loss: 0.6195  | train_balanced_accuracy: 0.56836 | train_logloss: 0.6608  | train_f1_macro: 0.50289 | valid_balanced_accuracy: 0.56702 | valid_logloss: 0.66458 | valid_f1_macro: 0.50138 |  1:06:43s
epoch 69 | loss: 0.61871 | train_balanced_accuracy: 0.6449  | train_logloss: 0.6167  | train_f1_macro: 0.64432 | valid_balanced_accuracy: 0.64089 | valid_logloss: 0.62273 | valid_f1_macro: 0.64029 |  1:07:46s
epoch 70 | loss: 0.61644 | train_balanced_accuracy: 0.65213 | train_logloss: 0.61072 | train_f1_macro: 0.65122 | valid_balanced_accuracy: 0.64541 | valid_logloss: 0.61628 | valid_f1_macro: 0.64456 |  1:09:05s
epoch 71 | loss: 0.61728 | train_balanced_accuracy: 0.65686 | train_logloss: 0.60625 | train_f1_macro: 0.65685 | valid_balanced_accuracy: 0.64975 | valid_logloss: 0.6131  | valid_f1_macro: 0.64974 |  1:10:07s
epoch 72 | loss: 0.61481 | train_balanced_accuracy: 0.64812 | train_logloss: 0.61324 | train_f1_macro: 0.64693 | valid_balanced_accuracy: 0.64097 | valid_logloss: 0.62134 | valid_f1_macro: 0.63962 |  1:11:08s
epoch 73 | loss: 0.61956 | train_balanced_accuracy: 0.64144 | train_logloss: 0.61433 | train_f1_macro: 0.64132 | valid_balanced_accuracy: 0.63386 | valid_logloss: 0.62001 | valid_f1_macro: 0.63382 |  1:12:12s
epoch 74 | loss: 0.62269 | train_balanced_accuracy: 0.64599 | train_logloss: 0.61564 | train_f1_macro: 0.64565 | valid_balanced_accuracy: 0.63773 | valid_logloss: 0.62348 | valid_f1_macro: 0.63729 |  1:13:16s
epoch 75 | loss: 0.6312  | train_balanced_accuracy: 0.61465 | train_logloss: 0.63114 | train_f1_macro: 0.61345 | valid_balanced_accuracy: 0.60943 | valid_logloss: 0.63512 | valid_f1_macro: 0.60805 |  1:14:21s
epoch 76 | loss: 0.63158 | train_balanced_accuracy: 0.62755 | train_logloss: 0.63876 | train_f1_macro: 0.62702 | valid_balanced_accuracy: 0.62374 | valid_logloss: 0.64263 | valid_f1_macro: 0.62312 |  1:15:22s
epoch 77 | loss: 0.62701 | train_balanced_accuracy: 0.63635 | train_logloss: 0.61872 | train_f1_macro: 0.6362  | valid_balanced_accuracy: 0.63149 | valid_logloss: 0.62516 | valid_f1_macro: 0.63136 |  1:16:24s
epoch 78 | loss: 0.62551 | train_balanced_accuracy: 0.64048 | train_logloss: 0.61812 | train_f1_macro: 0.63859 | valid_balanced_accuracy: 0.63046 | valid_logloss: 0.62436 | valid_f1_macro: 0.62855 |  1:17:24s
epoch 79 | loss: 0.62309 | train_balanced_accuracy: 0.63609 | train_logloss: 0.62584 | train_f1_macro: 0.63525 | valid_balanced_accuracy: 0.62683 | valid_logloss: 0.63116 | valid_f1_macro: 0.62594 |  1:18:24s
epoch 80 | loss: 0.62191 | train_balanced_accuracy: 0.64743 | train_logloss: 0.61591 | train_f1_macro: 0.64737 | valid_balanced_accuracy: 0.6394  | valid_logloss: 0.62328 | valid_f1_macro: 0.63936 |  1:19:23s
epoch 81 | loss: 0.62105 | train_balanced_accuracy: 0.65243 | train_logloss: 0.61221 | train_f1_macro: 0.65208 | valid_balanced_accuracy: 0.64169 | valid_logloss: 0.61937 | valid_f1_macro: 0.64136 |  1:20:23s
epoch 82 | loss: 0.61579 | train_balanced_accuracy: 0.65546 | train_logloss: 0.60932 | train_f1_macro: 0.65546 | valid_balanced_accuracy: 0.64627 | valid_logloss: 0.61621 | valid_f1_macro: 0.64627 |  1:21:24s
epoch 83 | loss: 0.61476 | train_balanced_accuracy: 0.65642 | train_logloss: 0.60901 | train_f1_macro: 0.65621 | valid_balanced_accuracy: 0.64445 | valid_logloss: 0.61632 | valid_f1_macro: 0.64429 |  1:22:23s
epoch 84 | loss: 0.61374 | train_balanced_accuracy: 0.65629 | train_logloss: 0.60764 | train_f1_macro: 0.65625 | valid_balanced_accuracy: 0.64627 | valid_logloss: 0.61473 | valid_f1_macro: 0.6462  |  1:23:22s
epoch 85 | loss: 0.61315 | train_balanced_accuracy: 0.65721 | train_logloss: 0.6088  | train_f1_macro: 0.65708 | valid_balanced_accuracy: 0.6454  | valid_logloss: 0.61609 | valid_f1_macro: 0.64532 |  1:24:23s
epoch 86 | loss: 0.61173 | train_balanced_accuracy: 0.66166 | train_logloss: 0.60262 | train_f1_macro: 0.66163 | valid_balanced_accuracy: 0.65157 | valid_logloss: 0.61097 | valid_f1_macro: 0.65156 |  1:25:23s
epoch 87 | loss: 0.6095  | train_balanced_accuracy: 0.66002 | train_logloss: 0.60373 | train_f1_macro: 0.66002 | valid_balanced_accuracy: 0.64706 | valid_logloss: 0.61335 | valid_f1_macro: 0.64706 |  1:26:24s
epoch 88 | loss: 0.60831 | train_balanced_accuracy: 0.65672 | train_logloss: 0.61015 | train_f1_macro: 0.65656 | valid_balanced_accuracy: 0.64999 | valid_logloss: 0.61883 | valid_f1_macro: 0.64981 |  1:27:23s
epoch 89 | loss: 0.60811 | train_balanced_accuracy: 0.6604  | train_logloss: 0.60363 | train_f1_macro: 0.66001 | valid_balanced_accuracy: 0.64769 | valid_logloss: 0.61135 | valid_f1_macro: 0.64726 |  1:28:21s
epoch 90 | loss: 0.60475 | train_balanced_accuracy: 0.66138 | train_logloss: 0.59769 | train_f1_macro: 0.66126 | valid_balanced_accuracy: 0.64865 | valid_logloss: 0.60928 | valid_f1_macro: 0.64855 |  1:29:19s
epoch 91 | loss: 0.60417 | train_balanced_accuracy: 0.6552  | train_logloss: 0.61171 | train_f1_macro: 0.65515 | valid_balanced_accuracy: 0.64659 | valid_logloss: 0.62106 | valid_f1_macro: 0.64654 |  1:30:18s
epoch 92 | loss: 0.6008  | train_balanced_accuracy: 0.66306 | train_logloss: 0.59783 | train_f1_macro: 0.663   | valid_balanced_accuracy: 0.65623 | valid_logloss: 0.60737 | valid_f1_macro: 0.65611 |  1:31:18s
epoch 93 | loss: 0.60229 | train_balanced_accuracy: 0.66806 | train_logloss: 0.59911 | train_f1_macro: 0.66767 | valid_balanced_accuracy: 0.66121 | valid_logloss: 0.60823 | valid_f1_macro: 0.6609  |  1:32:23s
epoch 94 | loss: 0.59883 | train_balanced_accuracy: 0.66822 | train_logloss: 0.59504 | train_f1_macro: 0.66739 | valid_balanced_accuracy: 0.65757 | valid_logloss: 0.60572 | valid_f1_macro: 0.65669 |  1:33:27s
epoch 95 | loss: 0.59711 | train_balanced_accuracy: 0.67073 | train_logloss: 0.58882 | train_f1_macro: 0.67053 | valid_balanced_accuracy: 0.6654  | valid_logloss: 0.5992  | valid_f1_macro: 0.6652  |  1:34:27s
epoch 96 | loss: 0.59837 | train_balanced_accuracy: 0.66874 | train_logloss: 0.59956 | train_f1_macro: 0.66686 | valid_balanced_accuracy: 0.65852 | valid_logloss: 0.6081  | valid_f1_macro: 0.65667 |  1:35:28s
epoch 97 | loss: 0.59675 | train_balanced_accuracy: 0.66038 | train_logloss: 0.59974 | train_f1_macro: 0.65457 | valid_balanced_accuracy: 0.65156 | valid_logloss: 0.61102 | valid_f1_macro: 0.64543 |  1:36:30s
epoch 98 | loss: 0.59033 | train_balanced_accuracy: 0.67178 | train_logloss: 0.59054 | train_f1_macro: 0.66389 | valid_balanced_accuracy: 0.66405 | valid_logloss: 0.60376 | valid_f1_macro: 0.65603 |  1:37:35s
epoch 99 | loss: 0.58717 | train_balanced_accuracy: 0.68607 | train_logloss: 0.58063 | train_f1_macro: 0.68469 | valid_balanced_accuracy: 0.67148 | valid_logloss: 0.59553 | valid_f1_macro: 0.67011 |  1:38:46s
epoch 100| loss: 0.58536 | train_balanced_accuracy: 0.68233 | train_logloss: 0.57704 | train_f1_macro: 0.68165 | valid_balanced_accuracy: 0.66769 | valid_logloss: 0.59098 | valid_f1_macro: 0.66685 |  1:39:45s
epoch 101| loss: 0.58571 | train_balanced_accuracy: 0.68775 | train_logloss: 0.576   | train_f1_macro: 0.6876  | valid_balanced_accuracy: 0.67457 | valid_logloss: 0.59038 | valid_f1_macro: 0.67436 |  1:40:45s
epoch 102| loss: 0.58099 | train_balanced_accuracy: 0.69779 | train_logloss: 0.56507 | train_f1_macro: 0.69764 | valid_balanced_accuracy: 0.68303 | valid_logloss: 0.58179 | valid_f1_macro: 0.68295 |  1:41:45s
epoch 103| loss: 0.58041 | train_balanced_accuracy: 0.69271 | train_logloss: 0.57727 | train_f1_macro: 0.6927  | valid_balanced_accuracy: 0.67931 | valid_logloss: 0.59407 | valid_f1_macro: 0.67931 |  1:42:44s
epoch 104| loss: 0.57481 | train_balanced_accuracy: 0.69812 | train_logloss: 0.57075 | train_f1_macro: 0.6975  | valid_balanced_accuracy: 0.67963 | valid_logloss: 0.59161 | valid_f1_macro: 0.67902 |  1:43:43s
epoch 105| loss: 0.57134 | train_balanced_accuracy: 0.69512 | train_logloss: 0.56447 | train_f1_macro: 0.6905  | valid_balanced_accuracy: 0.67701 | valid_logloss: 0.58355 | valid_f1_macro: 0.67218 |  1:44:42s
epoch 106| loss: 0.56843 | train_balanced_accuracy: 0.69573 | train_logloss: 0.57081 | train_f1_macro: 0.6953  | valid_balanced_accuracy: 0.67987 | valid_logloss: 0.59114 | valid_f1_macro: 0.67936 |  1:45:40s
epoch 107| loss: 0.5721  | train_balanced_accuracy: 0.67824 | train_logloss: 0.58695 | train_f1_macro: 0.67822 | valid_balanced_accuracy: 0.66429 | valid_logloss: 0.60716 | valid_f1_macro: 0.66428 |  1:46:39s
epoch 108| loss: 0.56823 | train_balanced_accuracy: 0.7028  | train_logloss: 0.55579 | train_f1_macro: 0.7023  | valid_balanced_accuracy: 0.6873  | valid_logloss: 0.57936 | valid_f1_macro: 0.6868  |  1:47:38s
epoch 109| loss: 0.56062 | train_balanced_accuracy: 0.71342 | train_logloss: 0.54727 | train_f1_macro: 0.71336 | valid_balanced_accuracy: 0.69117 | valid_logloss: 0.56896 | valid_f1_macro: 0.69111 |  1:48:37s
epoch 110| loss: 0.56035 | train_balanced_accuracy: 0.70158 | train_logloss: 0.56283 | train_f1_macro: 0.70158 | valid_balanced_accuracy: 0.67923 | valid_logloss: 0.58694 | valid_f1_macro: 0.67923 |  1:49:36s
epoch 111| loss: 0.56309 | train_balanced_accuracy: 0.71178 | train_logloss: 0.54961 | train_f1_macro: 0.71076 | valid_balanced_accuracy: 0.69045 | valid_logloss: 0.57418 | valid_f1_macro: 0.68917 |  1:50:36s
epoch 112| loss: 0.55168 | train_balanced_accuracy: 0.70405 | train_logloss: 0.57321 | train_f1_macro: 0.70129 | valid_balanced_accuracy: 0.68152 | valid_logloss: 0.60155 | valid_f1_macro: 0.67843 |  1:51:45s
epoch 113| loss: 0.54541 | train_balanced_accuracy: 0.71781 | train_logloss: 0.54158 | train_f1_macro: 0.71481 | valid_balanced_accuracy: 0.69622 | valid_logloss: 0.5702  | valid_f1_macro: 0.69276 |  1:52:44s
epoch 114| loss: 0.54591 | train_balanced_accuracy: 0.71656 | train_logloss: 0.54266 | train_f1_macro: 0.71262 | valid_balanced_accuracy: 0.68729 | valid_logloss: 0.57393 | valid_f1_macro: 0.68281 |  1:53:44s
epoch 115| loss: 0.53754 | train_balanced_accuracy: 0.72591 | train_logloss: 0.53914 | train_f1_macro: 0.72526 | valid_balanced_accuracy: 0.70121 | valid_logloss: 0.57351 | valid_f1_macro: 0.70055 |  1:54:49s
epoch 116| loss: 0.53484 | train_balanced_accuracy: 0.72816 | train_logloss: 0.52758 | train_f1_macro: 0.72668 | valid_balanced_accuracy: 0.70152 | valid_logloss: 0.56529 | valid_f1_macro: 0.69978 |  1:56:05s
epoch 117| loss: 0.53859 | train_balanced_accuracy: 0.67901 | train_logloss: 0.61352 | train_f1_macro: 0.67698 | valid_balanced_accuracy: 0.65686 | valid_logloss: 0.64232 | valid_f1_macro: 0.65442 |  1:57:07s
epoch 118| loss: 0.57424 | train_balanced_accuracy: 0.71199 | train_logloss: 0.54939 | train_f1_macro: 0.71169 | valid_balanced_accuracy: 0.68896 | valid_logloss: 0.57564 | valid_f1_macro: 0.68858 |  1:58:07s
epoch 119| loss: 0.5385  | train_balanced_accuracy: 0.73855 | train_logloss: 0.51631 | train_f1_macro: 0.73828 | valid_balanced_accuracy: 0.71528 | valid_logloss: 0.55287 | valid_f1_macro: 0.71497 |  1:59:08s
epoch 120| loss: 0.52799 | train_balanced_accuracy: 0.72091 | train_logloss: 0.55715 | train_f1_macro: 0.71938 | valid_balanced_accuracy: 0.69109 | valid_logloss: 0.59627 | valid_f1_macro: 0.68918 |  2:00:10s
epoch 121| loss: 0.53909 | train_balanced_accuracy: 0.74587 | train_logloss: 0.50476 | train_f1_macro: 0.74584 | valid_balanced_accuracy: 0.71907 | valid_logloss: 0.54737 | valid_f1_macro: 0.71905 |  2:01:09s
epoch 122| loss: 0.52099 | train_balanced_accuracy: 0.75419 | train_logloss: 0.49991 | train_f1_macro: 0.7536  | valid_balanced_accuracy: 0.7212  | valid_logloss: 0.54089 | valid_f1_macro: 0.72051 |  2:02:08s
epoch 123| loss: 0.5121  | train_balanced_accuracy: 0.75996 | train_logloss: 0.49557 | train_f1_macro: 0.75921 | valid_balanced_accuracy: 0.72531 | valid_logloss: 0.54135 | valid_f1_macro: 0.72443 |  2:03:06s
epoch 124| loss: 0.51002 | train_balanced_accuracy: 0.75956 | train_logloss: 0.49012 | train_f1_macro: 0.75938 | valid_balanced_accuracy: 0.72318 | valid_logloss: 0.5361  | valid_f1_macro: 0.72301 |  2:04:13s
epoch 125| loss: 0.50541 | train_balanced_accuracy: 0.73045 | train_logloss: 0.51999 | train_f1_macro: 0.72432 | valid_balanced_accuracy: 0.6997  | valid_logloss: 0.55877 | valid_f1_macro: 0.69229 |  2:05:38s
epoch 126| loss: 0.50751 | train_balanced_accuracy: 0.75118 | train_logloss: 0.57673 | train_f1_macro: 0.74836 | valid_balanced_accuracy: 0.71859 | valid_logloss: 0.60095 | valid_f1_macro: 0.71501 |  2:06:54s
epoch 127| loss: 0.5035  | train_balanced_accuracy: 0.74883 | train_logloss: 0.49848 | train_f1_macro: 0.74536 | valid_balanced_accuracy: 0.71559 | valid_logloss: 0.54288 | valid_f1_macro: 0.71105 |  2:07:59s
epoch 128| loss: 0.49875 | train_balanced_accuracy: 0.74189 | train_logloss: 0.50759 | train_f1_macro: 0.74032 | valid_balanced_accuracy: 0.70745 | valid_logloss: 0.55402 | valid_f1_macro: 0.70561 |  2:09:04s
epoch 129| loss: 0.49668 | train_balanced_accuracy: 0.75081 | train_logloss: 0.50276 | train_f1_macro: 0.7507  | valid_balanced_accuracy: 0.72294 | valid_logloss: 0.54844 | valid_f1_macro: 0.72277 |  2:10:07s
epoch 130| loss: 0.50818 | train_balanced_accuracy: 0.74679 | train_logloss: 0.49612 | train_f1_macro: 0.74677 | valid_balanced_accuracy: 0.71394 | valid_logloss: 0.54201 | valid_f1_macro: 0.71389 |  2:11:09s
epoch 131| loss: 0.50839 | train_balanced_accuracy: 0.74132 | train_logloss: 0.51623 | train_f1_macro: 0.73962 | valid_balanced_accuracy: 0.71386 | valid_logloss: 0.56511 | valid_f1_macro: 0.71172 |  2:12:10s
epoch 132| loss: 0.49218 | train_balanced_accuracy: 0.75493 | train_logloss: 0.48937 | train_f1_macro: 0.75316 | valid_balanced_accuracy: 0.71876 | valid_logloss: 0.55441 | valid_f1_macro: 0.71673 |  2:13:12s
epoch 133| loss: 0.48994 | train_balanced_accuracy: 0.77474 | train_logloss: 0.46166 | train_f1_macro: 0.77474 | valid_balanced_accuracy: 0.73638 | valid_logloss: 0.51871 | valid_f1_macro: 0.73638 |  2:14:15s
epoch 134| loss: 0.48544 | train_balanced_accuracy: 0.76798 | train_logloss: 0.4655  | train_f1_macro: 0.76721 | valid_balanced_accuracy: 0.73132 | valid_logloss: 0.52437 | valid_f1_macro: 0.73024 |  2:15:16s
epoch 135| loss: 0.48138 | train_balanced_accuracy: 0.78296 | train_logloss: 0.44953 | train_f1_macro: 0.78294 | valid_balanced_accuracy: 0.74223 | valid_logloss: 0.51208 | valid_f1_macro: 0.74222 |  2:16:15s
epoch 136| loss: 0.48378 | train_balanced_accuracy: 0.77004 | train_logloss: 0.46581 | train_f1_macro: 0.76773 | valid_balanced_accuracy: 0.72879 | valid_logloss: 0.52531 | valid_f1_macro: 0.72563 |  2:17:17s
epoch 137| loss: 0.47667 | train_balanced_accuracy: 0.78561 | train_logloss: 0.44205 | train_f1_macro: 0.78523 | valid_balanced_accuracy: 0.74263 | valid_logloss: 0.51159 | valid_f1_macro: 0.74218 |  2:18:19s
epoch 138| loss: 0.46108 | train_balanced_accuracy: 0.78598 | train_logloss: 0.44047 | train_f1_macro: 0.78595 | valid_balanced_accuracy: 0.74271 | valid_logloss: 0.51563 | valid_f1_macro: 0.74268 |  2:19:17s
epoch 139| loss: 0.45922 | train_balanced_accuracy: 0.77511 | train_logloss: 0.46289 | train_f1_macro: 0.77406 | valid_balanced_accuracy: 0.73007 | valid_logloss: 0.53744 | valid_f1_macro: 0.72896 |  2:20:17s
epoch 140| loss: 0.46109 | train_balanced_accuracy: 0.79458 | train_logloss: 0.42902 | train_f1_macro: 0.79431 | valid_balanced_accuracy: 0.75053 | valid_logloss: 0.49874 | valid_f1_macro: 0.75013 |  2:21:19s
epoch 141| loss: 0.44992 | train_balanced_accuracy: 0.80114 | train_logloss: 0.4203  | train_f1_macro: 0.80025 | valid_balanced_accuracy: 0.75329 | valid_logloss: 0.49624 | valid_f1_macro: 0.75197 |  2:22:17s
epoch 142| loss: 0.45085 | train_balanced_accuracy: 0.7846  | train_logloss: 0.45597 | train_f1_macro: 0.78212 | valid_balanced_accuracy: 0.74049 | valid_logloss: 0.52825 | valid_f1_macro: 0.73701 |  2:23:16s
epoch 143| loss: 0.44242 | train_balanced_accuracy: 0.79819 | train_logloss: 0.42346 | train_f1_macro: 0.7979  | valid_balanced_accuracy: 0.75132 | valid_logloss: 0.49981 | valid_f1_macro: 0.75083 |  2:24:18s
epoch 144| loss: 0.44414 | train_balanced_accuracy: 0.80758 | train_logloss: 0.40714 | train_f1_macro: 0.80646 | valid_balanced_accuracy: 0.76009 | valid_logloss: 0.48924 | valid_f1_macro: 0.75836 |  2:25:19s
epoch 145| loss: 0.43395 | train_balanced_accuracy: 0.81347 | train_logloss: 0.40231 | train_f1_macro: 0.81262 | valid_balanced_accuracy: 0.76404 | valid_logloss: 0.48648 | valid_f1_macro: 0.7628  |  2:26:24s
epoch 146| loss: 0.43366 | train_balanced_accuracy: 0.818   | train_logloss: 0.39278 | train_f1_macro: 0.81794 | valid_balanced_accuracy: 0.76958 | valid_logloss: 0.47601 | valid_f1_macro: 0.7695  |  2:27:24s
epoch 147| loss: 0.43427 | train_balanced_accuracy: 0.78859 | train_logloss: 0.42978 | train_f1_macro: 0.78595 | valid_balanced_accuracy: 0.74594 | valid_logloss: 0.50654 | valid_f1_macro: 0.74214 |  2:28:27s
epoch 148| loss: 0.4431  | train_balanced_accuracy: 0.80005 | train_logloss: 0.41895 | train_f1_macro: 0.80003 | valid_balanced_accuracy: 0.75583 | valid_logloss: 0.4953  | valid_f1_macro: 0.75582 |  2:29:26s
epoch 149| loss: 0.43554 | train_balanced_accuracy: 0.80264 | train_logloss: 0.41313 | train_f1_macro: 0.80237 | valid_balanced_accuracy: 0.75552 | valid_logloss: 0.49651 | valid_f1_macro: 0.75518 |  2:30:23s
epoch 150| loss: 0.428   | train_balanced_accuracy: 0.81802 | train_logloss: 0.38408 | train_f1_macro: 0.81777 | valid_balanced_accuracy: 0.76918 | valid_logloss: 0.47928 | valid_f1_macro: 0.76872 |  2:31:22s
epoch 151| loss: 0.42034 | train_balanced_accuracy: 0.82021 | train_logloss: 0.38648 | train_f1_macro: 0.81967 | valid_balanced_accuracy: 0.76563 | valid_logloss: 0.47931 | valid_f1_macro: 0.7647  |  2:32:19s
epoch 152| loss: 0.42024 | train_balanced_accuracy: 0.81798 | train_logloss: 0.38848 | train_f1_macro: 0.81758 | valid_balanced_accuracy: 0.76405 | valid_logloss: 0.48143 | valid_f1_macro: 0.76347 |  2:33:18s
epoch 153| loss: 0.4157  | train_balanced_accuracy: 0.81434 | train_logloss: 0.39282 | train_f1_macro: 0.81433 | valid_balanced_accuracy: 0.76136 | valid_logloss: 0.4906  | valid_f1_macro: 0.76135 |  2:34:16s
epoch 154| loss: 0.41307 | train_balanced_accuracy: 0.82766 | train_logloss: 0.3721  | train_f1_macro: 0.82696 | valid_balanced_accuracy: 0.77472 | valid_logloss: 0.4718  | valid_f1_macro: 0.77368 |  2:35:14s
epoch 155| loss: 0.41247 | train_balanced_accuracy: 0.8158  | train_logloss: 0.38983 | train_f1_macro: 0.81498 | valid_balanced_accuracy: 0.76736 | valid_logloss: 0.48064 | valid_f1_macro: 0.76608 |  2:36:23s
epoch 156| loss: 0.41853 | train_balanced_accuracy: 0.82602 | train_logloss: 0.3774  | train_f1_macro: 0.82536 | valid_balanced_accuracy: 0.77155 | valid_logloss: 0.47608 | valid_f1_macro: 0.77044 |  2:37:22s
epoch 157| loss: 0.41079 | train_balanced_accuracy: 0.81519 | train_logloss: 0.38927 | train_f1_macro: 0.81381 | valid_balanced_accuracy: 0.76128 | valid_logloss: 0.48781 | valid_f1_macro: 0.75905 |  2:38:20s
epoch 158| loss: 0.40685 | train_balanced_accuracy: 0.81462 | train_logloss: 0.39259 | train_f1_macro: 0.81334 | valid_balanced_accuracy: 0.76262 | valid_logloss: 0.48205 | valid_f1_macro: 0.7606  |  2:39:24s
epoch 159| loss: 0.40355 | train_balanced_accuracy: 0.82627 | train_logloss: 0.37167 | train_f1_macro: 0.82625 | valid_balanced_accuracy: 0.77275 | valid_logloss: 0.47238 | valid_f1_macro: 0.77272 |  2:40:23s
epoch 160| loss: 0.39831 | train_balanced_accuracy: 0.83052 | train_logloss: 0.36426 | train_f1_macro: 0.83052 | valid_balanced_accuracy: 0.77986 | valid_logloss: 0.46706 | valid_f1_macro: 0.77985 |  2:41:27s
epoch 161| loss: 0.3948  | train_balanced_accuracy: 0.84288 | train_logloss: 0.34685 | train_f1_macro: 0.84261 | valid_balanced_accuracy: 0.78381 | valid_logloss: 0.46253 | valid_f1_macro: 0.78336 |  2:42:27s
epoch 162| loss: 0.39065 | train_balanced_accuracy: 0.8428  | train_logloss: 0.34717 | train_f1_macro: 0.84208 | valid_balanced_accuracy: 0.78349 | valid_logloss: 0.45827 | valid_f1_macro: 0.78216 |  2:43:36s
epoch 163| loss: 0.38028 | train_balanced_accuracy: 0.84548 | train_logloss: 0.33669 | train_f1_macro: 0.84502 | valid_balanced_accuracy: 0.78223 | valid_logloss: 0.46221 | valid_f1_macro: 0.78137 |  2:44:52s
epoch 164| loss: 0.38511 | train_balanced_accuracy: 0.84462 | train_logloss: 0.34145 | train_f1_macro: 0.84384 | valid_balanced_accuracy: 0.78175 | valid_logloss: 0.46479 | valid_f1_macro: 0.78019 |  2:46:37s
epoch 165| loss: 0.38928 | train_balanced_accuracy: 0.83003 | train_logloss: 0.36522 | train_f1_macro: 0.82982 | valid_balanced_accuracy: 0.77432 | valid_logloss: 0.47198 | valid_f1_macro: 0.77389 |  2:48:10s
epoch 166| loss: 0.3861  | train_balanced_accuracy: 0.84244 | train_logloss: 0.34062 | train_f1_macro: 0.84204 | valid_balanced_accuracy: 0.7846  | valid_logloss: 0.46021 | valid_f1_macro: 0.78386 |  2:49:26s
epoch 167| loss: 0.39063 | train_balanced_accuracy: 0.84274 | train_logloss: 0.34584 | train_f1_macro: 0.8422  | valid_balanced_accuracy: 0.77922 | valid_logloss: 0.46338 | valid_f1_macro: 0.77806 |  2:50:47s
epoch 168| loss: 0.37912 | train_balanced_accuracy: 0.84695 | train_logloss: 0.33604 | train_f1_macro: 0.84678 | valid_balanced_accuracy: 0.78389 | valid_logloss: 0.4635  | valid_f1_macro: 0.78357 |  2:52:11s
epoch 169| loss: 0.37654 | train_balanced_accuracy: 0.82687 | train_logloss: 0.36285 | train_f1_macro: 0.82659 | valid_balanced_accuracy: 0.76532 | valid_logloss: 0.48469 | valid_f1_macro: 0.76483 |  2:54:22s
epoch 170| loss: 0.37631 | train_balanced_accuracy: 0.84946 | train_logloss: 0.33568 | train_f1_macro: 0.84932 | valid_balanced_accuracy: 0.78373 | valid_logloss: 0.45658 | valid_f1_macro: 0.78341 |  2:56:28s
epoch 171| loss: 0.38078 | train_balanced_accuracy: 0.8445  | train_logloss: 0.33792 | train_f1_macro: 0.84441 | valid_balanced_accuracy: 0.78088 | valid_logloss: 0.46655 | valid_f1_macro: 0.78063 |  2:58:38s
epoch 172| loss: 0.37718 | train_balanced_accuracy: 0.84005 | train_logloss: 0.34895 | train_f1_macro: 0.8391  | valid_balanced_accuracy: 0.78104 | valid_logloss: 0.46749 | valid_f1_macro: 0.77929 |  3:00:53s
epoch 173| loss: 0.37284 | train_balanced_accuracy: 0.83549 | train_logloss: 0.3524  | train_f1_macro: 0.83492 | valid_balanced_accuracy: 0.78025 | valid_logloss: 0.46969 | valid_f1_macro: 0.77912 |  3:03:08s
epoch 174| loss: 0.36539 | train_balanced_accuracy: 0.85853 | train_logloss: 0.31265 | train_f1_macro: 0.8585  | valid_balanced_accuracy: 0.79535 | valid_logloss: 0.44476 | valid_f1_macro: 0.79532 |  3:05:30s
epoch 175| loss: 0.36045 | train_balanced_accuracy: 0.854   | train_logloss: 0.31845 | train_f1_macro: 0.8537  | valid_balanced_accuracy: 0.79788 | valid_logloss: 0.45114 | valid_f1_macro: 0.79731 |  3:08:01s
epoch 176| loss: 0.36015 | train_balanced_accuracy: 0.85608 | train_logloss: 0.31688 | train_f1_macro: 0.85584 | valid_balanced_accuracy: 0.79819 | valid_logloss: 0.44839 | valid_f1_macro: 0.79778 |  3:10:30s
epoch 177| loss: 0.35966 | train_balanced_accuracy: 0.85965 | train_logloss: 0.30946 | train_f1_macro: 0.85945 | valid_balanced_accuracy: 0.79812 | valid_logloss: 0.44522 | valid_f1_macro: 0.79773 |  3:13:11s
epoch 178| loss: 0.35112 | train_balanced_accuracy: 0.8576  | train_logloss: 0.31846 | train_f1_macro: 0.85751 | valid_balanced_accuracy: 0.78721 | valid_logloss: 0.45217 | valid_f1_macro: 0.787   |  3:15:49s
epoch 179| loss: 0.3576  | train_balanced_accuracy: 0.8623  | train_logloss: 0.30704 | train_f1_macro: 0.86217 | valid_balanced_accuracy: 0.79314 | valid_logloss: 0.45169 | valid_f1_macro: 0.79286 |  3:18:35s
epoch 180| loss: 0.35069 | train_balanced_accuracy: 0.86744 | train_logloss: 0.29619 | train_f1_macro: 0.86744 | valid_balanced_accuracy: 0.79883 | valid_logloss: 0.45037 | valid_f1_macro: 0.79883 |  3:21:23s
epoch 181| loss: 0.34634 | train_balanced_accuracy: 0.87198 | train_logloss: 0.28816 | train_f1_macro: 0.87195 | valid_balanced_accuracy: 0.80333 | valid_logloss: 0.44445 | valid_f1_macro: 0.80326 |  3:24:51s
epoch 182| loss: 0.34245 | train_balanced_accuracy: 0.86971 | train_logloss: 0.33285 | train_f1_macro: 0.86954 | valid_balanced_accuracy: 0.80096 | valid_logloss: 0.4948  | valid_f1_macro: 0.80055 |  3:27:15s
epoch 183| loss: 0.34235 | train_balanced_accuracy: 0.86876 | train_logloss: 0.3301  | train_f1_macro: 0.86835 | valid_balanced_accuracy: 0.80128 | valid_logloss: 0.47856 | valid_f1_macro: 0.80031 |  3:29:45s
epoch 184| loss: 0.34526 | train_balanced_accuracy: 0.86815 | train_logloss: 0.33713 | train_f1_macro: 0.86772 | valid_balanced_accuracy: 0.80365 | valid_logloss: 0.48577 | valid_f1_macro: 0.80281 |  3:32:01s
epoch 185| loss: 0.33742 | train_balanced_accuracy: 0.87315 | train_logloss: 0.28427 | train_f1_macro: 0.87307 | valid_balanced_accuracy: 0.80626 | valid_logloss: 0.43808 | valid_f1_macro: 0.80613 |  3:34:23s
epoch 186| loss: 0.3337  | train_balanced_accuracy: 0.87574 | train_logloss: 0.28108 | train_f1_macro: 0.87557 | valid_balanced_accuracy: 0.80807 | valid_logloss: 0.43193 | valid_f1_macro: 0.80767 |  3:36:45s
epoch 187| loss: 0.33128 | train_balanced_accuracy: 0.8823  | train_logloss: 0.27776 | train_f1_macro: 0.88224 | valid_balanced_accuracy: 0.80989 | valid_logloss: 0.43215 | valid_f1_macro: 0.80977 |  3:39:17s
epoch 188| loss: 0.33052 | train_balanced_accuracy: 0.87817 | train_logloss: 0.2888  | train_f1_macro: 0.87798 | valid_balanced_accuracy: 0.80894 | valid_logloss: 0.43404 | valid_f1_macro: 0.80853 |  3:41:42s
epoch 189| loss: 0.33279 | train_balanced_accuracy: 0.87062 | train_logloss: 0.32306 | train_f1_macro: 0.87057 | valid_balanced_accuracy: 0.79835 | valid_logloss: 0.4918  | valid_f1_macro: 0.79825 |  3:43:07s
epoch 190| loss: 0.32914 | train_balanced_accuracy: 0.87704 | train_logloss: 0.31835 | train_f1_macro: 0.87651 | valid_balanced_accuracy: 0.80641 | valid_logloss: 0.47885 | valid_f1_macro: 0.80511 |  3:44:04s
epoch 191| loss: 0.32827 | train_balanced_accuracy: 0.87416 | train_logloss: 0.2826  | train_f1_macro: 0.87355 | valid_balanced_accuracy: 0.80333 | valid_logloss: 0.43817 | valid_f1_macro: 0.80183 |  3:45:00s
epoch 192| loss: 0.32441 | train_balanced_accuracy: 0.87495 | train_logloss: 0.32217 | train_f1_macro: 0.8743  | valid_balanced_accuracy: 0.80617 | valid_logloss: 0.49175 | valid_f1_macro: 0.80458 |  3:45:57s
epoch 193| loss: 0.3328  | train_balanced_accuracy: 0.87898 | train_logloss: 0.31484 | train_f1_macro: 0.87896 | valid_balanced_accuracy: 0.80887 | valid_logloss: 0.48822 | valid_f1_macro: 0.80881 |  3:46:54s
epoch 194| loss: 0.33022 | train_balanced_accuracy: 0.8803  | train_logloss: 0.27867 | train_f1_macro: 0.88025 | valid_balanced_accuracy: 0.81005 | valid_logloss: 0.43471 | valid_f1_macro: 0.8099  |  3:47:52s
epoch 195| loss: 0.32142 | train_balanced_accuracy: 0.88238 | train_logloss: 0.27174 | train_f1_macro: 0.88216 | valid_balanced_accuracy: 0.81139 | valid_logloss: 0.43132 | valid_f1_macro: 0.81079 |  3:48:50s
epoch 196| loss: 0.32111 | train_balanced_accuracy: 0.88274 | train_logloss: 0.27347 | train_f1_macro: 0.8825  | valid_balanced_accuracy: 0.80997 | valid_logloss: 0.436   | valid_f1_macro: 0.80937 |  3:49:48s
epoch 197| loss: 0.31936 | train_balanced_accuracy: 0.88141 | train_logloss: 0.2722  | train_f1_macro: 0.88131 | valid_balanced_accuracy: 0.80792 | valid_logloss: 0.44406 | valid_f1_macro: 0.80772 |  3:50:46s
epoch 198| loss: 0.32496 | train_balanced_accuracy: 0.88364 | train_logloss: 0.27124 | train_f1_macro: 0.88344 | valid_balanced_accuracy: 0.8155  | valid_logloss: 0.43006 | valid_f1_macro: 0.81507 |  3:51:45s
epoch 199| loss: 0.31718 | train_balanced_accuracy: 0.88214 | train_logloss: 0.32086 | train_f1_macro: 0.88196 | valid_balanced_accuracy: 0.80665 | valid_logloss: 0.49761 | valid_f1_macro: 0.8062  |  3:52:43s
epoch 200| loss: 0.31856 | train_balanced_accuracy: 0.8774  | train_logloss: 0.29837 | train_f1_macro: 0.87676 | valid_balanced_accuracy: 0.80839 | valid_logloss: 0.46217 | valid_f1_macro: 0.80688 |  3:53:39s
epoch 201| loss: 0.32179 | train_balanced_accuracy: 0.88281 | train_logloss: 0.26792 | train_f1_macro: 0.88268 | valid_balanced_accuracy: 0.81092 | valid_logloss: 0.43159 | valid_f1_macro: 0.81048 |  3:54:35s
epoch 202| loss: 0.31333 | train_balanced_accuracy: 0.88728 | train_logloss: 0.2641  | train_f1_macro: 0.8872  | valid_balanced_accuracy: 0.81764 | valid_logloss: 0.43874 | valid_f1_macro: 0.81741 |  3:55:31s
epoch 203| loss: 0.30999 | train_balanced_accuracy: 0.89165 | train_logloss: 0.2557  | train_f1_macro: 0.89151 | valid_balanced_accuracy: 0.81898 | valid_logloss: 0.43153 | valid_f1_macro: 0.8186  |  3:56:27s
epoch 204| loss: 0.30792 | train_balanced_accuracy: 0.88993 | train_logloss: 0.29604 | train_f1_macro: 0.88963 | valid_balanced_accuracy: 0.81471 | valid_logloss: 0.48092 | valid_f1_macro: 0.8138  |  3:57:23s
epoch 205| loss: 0.31332 | train_balanced_accuracy: 0.88793 | train_logloss: 0.29572 | train_f1_macro: 0.88777 | valid_balanced_accuracy: 0.81187 | valid_logloss: 0.47041 | valid_f1_macro: 0.81143 |  3:58:19s
epoch 206| loss: 0.30821 | train_balanced_accuracy: 0.891   | train_logloss: 0.29099 | train_f1_macro: 0.89086 | valid_balanced_accuracy: 0.81511 | valid_logloss: 0.48155 | valid_f1_macro: 0.81467 |  3:59:15s
epoch 207| loss: 0.30429 | train_balanced_accuracy: 0.89461 | train_logloss: 0.28491 | train_f1_macro: 0.89447 | valid_balanced_accuracy: 0.82001 | valid_logloss: 0.47889 | valid_f1_macro: 0.81958 |  4:00:11s
epoch 208| loss: 0.301   | train_balanced_accuracy: 0.89797 | train_logloss: 0.25728 | train_f1_macro: 0.89792 | valid_balanced_accuracy: 0.82159 | valid_logloss: 0.43963 | valid_f1_macro: 0.82143 |  4:01:07s
epoch 209| loss: 0.30126 | train_balanced_accuracy: 0.89773 | train_logloss: 0.24258 | train_f1_macro: 0.89769 | valid_balanced_accuracy: 0.82096 | valid_logloss: 0.42598 | valid_f1_macro: 0.82077 |  4:02:05s
epoch 210| loss: 0.29166 | train_balanced_accuracy: 0.89619 | train_logloss: 0.27022 | train_f1_macro: 0.89598 | valid_balanced_accuracy: 0.8204  | valid_logloss: 0.46219 | valid_f1_macro: 0.8197  |  4:03:00s
epoch 211| loss: 0.30804 | train_balanced_accuracy: 0.88171 | train_logloss: 0.30256 | train_f1_macro: 0.88129 | valid_balanced_accuracy: 0.81084 | valid_logloss: 0.49448 | valid_f1_macro: 0.8096  |  4:03:56s
epoch 212| loss: 0.29848 | train_balanced_accuracy: 0.89777 | train_logloss: 0.24041 | train_f1_macro: 0.89767 | valid_balanced_accuracy: 0.82135 | valid_logloss: 0.42871 | valid_f1_macro: 0.82096 |  4:04:53s
epoch 213| loss: 0.29786 | train_balanced_accuracy: 0.89499 | train_logloss: 0.27292 | train_f1_macro: 0.89497 | valid_balanced_accuracy: 0.82009 | valid_logloss: 0.47096 | valid_f1_macro: 0.82007 |  4:05:49s
epoch 214| loss: 0.29341 | train_balanced_accuracy: 0.89554 | train_logloss: 0.27707 | train_f1_macro: 0.89554 | valid_balanced_accuracy: 0.81337 | valid_logloss: 0.47036 | valid_f1_macro: 0.81335 |  4:06:45s
epoch 215| loss: 0.29566 | train_balanced_accuracy: 0.90109 | train_logloss: 0.23103 | train_f1_macro: 0.90092 | valid_balanced_accuracy: 0.8261  | valid_logloss: 0.425   | valid_f1_macro: 0.82553 |  4:07:42s
epoch 216| loss: 0.28432 | train_balanced_accuracy: 0.89928 | train_logloss: 0.23222 | train_f1_macro: 0.89916 | valid_balanced_accuracy: 0.81946 | valid_logloss: 0.44322 | valid_f1_macro: 0.81902 |  4:08:39s
epoch 217| loss: 0.29496 | train_balanced_accuracy: 0.89269 | train_logloss: 0.25899 | train_f1_macro: 0.89266 | valid_balanced_accuracy: 0.81764 | valid_logloss: 0.43756 | valid_f1_macro: 0.8175  |  4:09:35s
epoch 218| loss: 0.30354 | train_balanced_accuracy: 0.88313 | train_logloss: 0.26281 | train_f1_macro: 0.88306 | valid_balanced_accuracy: 0.8057  | valid_logloss: 0.44047 | valid_f1_macro: 0.80552 |  4:10:32s
epoch 219| loss: 0.29613 | train_balanced_accuracy: 0.89702 | train_logloss: 0.23386 | train_f1_macro: 0.89676 | valid_balanced_accuracy: 0.82151 | valid_logloss: 0.43095 | valid_f1_macro: 0.82075 |  4:11:47s
epoch 220| loss: 0.2919  | train_balanced_accuracy: 0.88916 | train_logloss: 0.25787 | train_f1_macro: 0.88868 | valid_balanced_accuracy: 0.81289 | valid_logloss: 0.45223 | valid_f1_macro: 0.81148 |  4:12:52s
epoch 221| loss: 0.29779 | train_balanced_accuracy: 0.89665 | train_logloss: 0.2346  | train_f1_macro: 0.89627 | valid_balanced_accuracy: 0.81827 | valid_logloss: 0.43546 | valid_f1_macro: 0.81707 |  4:13:58s
epoch 222| loss: 0.28773 | train_balanced_accuracy: 0.90159 | train_logloss: 0.22797 | train_f1_macro: 0.90126 | valid_balanced_accuracy: 0.82649 | valid_logloss: 0.42295 | valid_f1_macro: 0.82545 |  4:15:02s
epoch 223| loss: 0.28602 | train_balanced_accuracy: 0.90384 | train_logloss: 0.22298 | train_f1_macro: 0.9037  | valid_balanced_accuracy: 0.82673 | valid_logloss: 0.42174 | valid_f1_macro: 0.82626 |  4:16:05s
epoch 224| loss: 0.28411 | train_balanced_accuracy: 0.89817 | train_logloss: 0.23357 | train_f1_macro: 0.89773 | valid_balanced_accuracy: 0.81961 | valid_logloss: 0.43948 | valid_f1_macro: 0.81827 |  4:17:08s
epoch 225| loss: 0.28549 | train_balanced_accuracy: 0.90388 | train_logloss: 0.22631 | train_f1_macro: 0.90369 | valid_balanced_accuracy: 0.82681 | valid_logloss: 0.43037 | valid_f1_macro: 0.8262  |  4:18:10s
epoch 226| loss: 0.28361 | train_balanced_accuracy: 0.90617 | train_logloss: 0.22532 | train_f1_macro: 0.90616 | valid_balanced_accuracy: 0.82586 | valid_logloss: 0.42777 | valid_f1_macro: 0.82584 |  4:19:13s
epoch 227| loss: 0.27857 | train_balanced_accuracy: 0.90712 | train_logloss: 0.22292 | train_f1_macro: 0.90704 | valid_balanced_accuracy: 0.82665 | valid_logloss: 0.42547 | valid_f1_macro: 0.82637 |  4:20:19s
epoch 228| loss: 0.27666 | train_balanced_accuracy: 0.90206 | train_logloss: 0.22508 | train_f1_macro: 0.90172 | valid_balanced_accuracy: 0.82768 | valid_logloss: 0.44107 | valid_f1_macro: 0.82665 |  4:21:26s
epoch 229| loss: 0.28012 | train_balanced_accuracy: 0.90487 | train_logloss: 0.22173 | train_f1_macro: 0.9046  | valid_balanced_accuracy: 0.82752 | valid_logloss: 0.42864 | valid_f1_macro: 0.82666 |  4:22:26s
epoch 230| loss: 0.2765  | train_balanced_accuracy: 0.90918 | train_logloss: 0.2156  | train_f1_macro: 0.9091  | valid_balanced_accuracy: 0.8295  | valid_logloss: 0.42342 | valid_f1_macro: 0.82919 |  4:23:39s
epoch 231| loss: 0.27827 | train_balanced_accuracy: 0.90044 | train_logloss: 0.23497 | train_f1_macro: 0.90003 | valid_balanced_accuracy: 0.82135 | valid_logloss: 0.43405 | valid_f1_macro: 0.82    |  4:24:41s
epoch 232| loss: 0.27531 | train_balanced_accuracy: 0.90908 | train_logloss: 0.21514 | train_f1_macro: 0.90896 | valid_balanced_accuracy: 0.82997 | valid_logloss: 0.42649 | valid_f1_macro: 0.82955 |  4:25:42s
epoch 233| loss: 0.28025 | train_balanced_accuracy: 0.90248 | train_logloss: 0.22294 | train_f1_macro: 0.90238 | valid_balanced_accuracy: 0.82673 | valid_logloss: 0.4362  | valid_f1_macro: 0.82631 |  4:26:52s
epoch 234| loss: 0.27233 | train_balanced_accuracy: 0.90884 | train_logloss: 0.20905 | train_f1_macro: 0.9087  | valid_balanced_accuracy: 0.82863 | valid_logloss: 0.44247 | valid_f1_macro: 0.82807 |  4:27:51s
epoch 235| loss: 0.27206 | train_balanced_accuracy: 0.90532 | train_logloss: 0.21903 | train_f1_macro: 0.90505 | valid_balanced_accuracy: 0.82602 | valid_logloss: 0.42996 | valid_f1_macro: 0.82497 |  4:28:50s
epoch 236| loss: 0.27379 | train_balanced_accuracy: 0.90481 | train_logloss: 0.22296 | train_f1_macro: 0.90468 | valid_balanced_accuracy: 0.82254 | valid_logloss: 0.43476 | valid_f1_macro: 0.82201 |  4:29:49s
epoch 237| loss: 0.27976 | train_balanced_accuracy: 0.9019  | train_logloss: 0.22799 | train_f1_macro: 0.9017  | valid_balanced_accuracy: 0.82135 | valid_logloss: 0.43618 | valid_f1_macro: 0.82061 |  4:30:48s
epoch 238| loss: 0.27104 | train_balanced_accuracy: 0.9107  | train_logloss: 0.21124 | train_f1_macro: 0.91061 | valid_balanced_accuracy: 0.82776 | valid_logloss: 0.42536 | valid_f1_macro: 0.82744 |  4:31:58s
epoch 239| loss: 0.27813 | train_balanced_accuracy: 0.90762 | train_logloss: 0.21177 | train_f1_macro: 0.90733 | valid_balanced_accuracy: 0.82981 | valid_logloss: 0.43047 | valid_f1_macro: 0.82886 |  4:33:00s
epoch 240| loss: 0.27348 | train_balanced_accuracy: 0.90655 | train_logloss: 0.21655 | train_f1_macro: 0.90643 | valid_balanced_accuracy: 0.82736 | valid_logloss: 0.43478 | valid_f1_macro: 0.82702 |  4:33:59s
epoch 241| loss: 0.27425 | train_balanced_accuracy: 0.91074 | train_logloss: 0.21208 | train_f1_macro: 0.91063 | valid_balanced_accuracy: 0.82491 | valid_logloss: 0.42724 | valid_f1_macro: 0.82447 |  4:35:02s
epoch 242| loss: 0.27156 | train_balanced_accuracy: 0.9069  | train_logloss: 0.21467 | train_f1_macro: 0.90665 | valid_balanced_accuracy: 0.8257  | valid_logloss: 0.44013 | valid_f1_macro: 0.82472 |  4:36:11s
epoch 243| loss: 0.26772 | train_balanced_accuracy: 0.91252 | train_logloss: 0.20479 | train_f1_macro: 0.91239 | valid_balanced_accuracy: 0.83029 | valid_logloss: 0.43125 | valid_f1_macro: 0.82987 |  4:37:19s
epoch 244| loss: 0.26706 | train_balanced_accuracy: 0.91429 | train_logloss: 0.20231 | train_f1_macro: 0.91422 | valid_balanced_accuracy: 0.83124 | valid_logloss: 0.43295 | valid_f1_macro: 0.83096 |  4:38:25s
epoch 245| loss: 0.26019 | train_balanced_accuracy: 0.90623 | train_logloss: 0.21303 | train_f1_macro: 0.90589 | valid_balanced_accuracy: 0.82649 | valid_logloss: 0.43453 | valid_f1_macro: 0.82536 |  4:39:33s
epoch 246| loss: 0.25784 | train_balanced_accuracy: 0.91609 | train_logloss: 0.2009  | train_f1_macro: 0.91589 | valid_balanced_accuracy: 0.83131 | valid_logloss: 0.43009 | valid_f1_macro: 0.83054 |  4:40:50s
epoch 247| loss: 0.27115 | train_balanced_accuracy: 0.90763 | train_logloss: 0.21556 | train_f1_macro: 0.90752 | valid_balanced_accuracy: 0.82428 | valid_logloss: 0.4383  | valid_f1_macro: 0.82395 |  4:42:01s
epoch 248| loss: 0.27038 | train_balanced_accuracy: 0.91007 | train_logloss: 0.21541 | train_f1_macro: 0.90988 | valid_balanced_accuracy: 0.82728 | valid_logloss: 0.43579 | valid_f1_macro: 0.82658 |  4:43:14s
epoch 249| loss: 0.26739 | train_balanced_accuracy: 0.91226 | train_logloss: 0.20834 | train_f1_macro: 0.91209 | valid_balanced_accuracy: 0.831   | valid_logloss: 0.42416 | valid_f1_macro: 0.83031 |  4:44:34s
epoch 250| loss: 0.2625  | train_balanced_accuracy: 0.90955 | train_logloss: 0.20746 | train_f1_macro: 0.90919 | valid_balanced_accuracy: 0.82767 | valid_logloss: 0.44615 | valid_f1_macro: 0.82631 |  4:45:45s
epoch 251| loss: 0.25674 | train_balanced_accuracy: 0.91572 | train_logloss: 0.20184 | train_f1_macro: 0.91565 | valid_balanced_accuracy: 0.82894 | valid_logloss: 0.43418 | valid_f1_macro: 0.82871 |  4:46:48s
epoch 252| loss: 0.25817 | train_balanced_accuracy: 0.90846 | train_logloss: 0.21241 | train_f1_macro: 0.90824 | valid_balanced_accuracy: 0.82515 | valid_logloss: 0.43905 | valid_f1_macro: 0.82426 |  4:47:55s
epoch 253| loss: 0.26449 | train_balanced_accuracy: 0.90404 | train_logloss: 0.2175  | train_f1_macro: 0.90401 | valid_balanced_accuracy: 0.82072 | valid_logloss: 0.45069 | valid_f1_macro: 0.82055 |  4:49:09s
epoch 254| loss: 0.27819 | train_balanced_accuracy: 0.90422 | train_logloss: 0.21984 | train_f1_macro: 0.90393 | valid_balanced_accuracy: 0.82246 | valid_logloss: 0.45502 | valid_f1_macro: 0.82142 |  4:50:31s
epoch 255| loss: 0.27988 | train_balanced_accuracy: 0.90799 | train_logloss: 0.21658 | train_f1_macro: 0.90774 | valid_balanced_accuracy: 0.82483 | valid_logloss: 0.43945 | valid_f1_macro: 0.82391 |  4:51:37s
epoch 256| loss: 0.27236 | train_balanced_accuracy: 0.90513 | train_logloss: 0.22485 | train_f1_macro: 0.90483 | valid_balanced_accuracy: 0.82254 | valid_logloss: 0.44082 | valid_f1_macro: 0.8215  |  4:52:39s
epoch 257| loss: 0.26735 | train_balanced_accuracy: 0.91003 | train_logloss: 0.21175 | train_f1_macro: 0.90978 | valid_balanced_accuracy: 0.8257  | valid_logloss: 0.44044 | valid_f1_macro: 0.82477 |  4:53:42s
epoch 258| loss: 0.25557 | train_balanced_accuracy: 0.91661 | train_logloss: 0.20268 | train_f1_macro: 0.91646 | valid_balanced_accuracy: 0.83234 | valid_logloss: 0.43755 | valid_f1_macro: 0.83173 |  4:54:47s
epoch 259| loss: 0.25457 | train_balanced_accuracy: 0.92095 | train_logloss: 0.19451 | train_f1_macro: 0.92086 | valid_balanced_accuracy: 0.83527 | valid_logloss: 0.42188 | valid_f1_macro: 0.83482 |  4:55:49s
epoch 260| loss: 0.25705 | train_balanced_accuracy: 0.91526 | train_logloss: 0.19873 | train_f1_macro: 0.91501 | valid_balanced_accuracy: 0.82989 | valid_logloss: 0.44056 | valid_f1_macro: 0.82885 |  4:56:47s
epoch 261| loss: 0.24971 | train_balanced_accuracy: 0.91965 | train_logloss: 0.19267 | train_f1_macro: 0.91954 | valid_balanced_accuracy: 0.83029 | valid_logloss: 0.44165 | valid_f1_macro: 0.82973 |  4:57:44s
epoch 262| loss: 0.24764 | train_balanced_accuracy: 0.91989 | train_logloss: 0.19022 | train_f1_macro: 0.91975 | valid_balanced_accuracy: 0.83226 | valid_logloss: 0.4395  | valid_f1_macro: 0.83162 |  4:58:42s
epoch 263| loss: 0.25027 | train_balanced_accuracy: 0.91208 | train_logloss: 0.20568 | train_f1_macro: 0.91184 | valid_balanced_accuracy: 0.8272  | valid_logloss: 0.4579  | valid_f1_macro: 0.8262  |  4:59:39s
epoch 264| loss: 0.25662 | train_balanced_accuracy: 0.91965 | train_logloss: 0.19117 | train_f1_macro: 0.91952 | valid_balanced_accuracy: 0.83384 | valid_logloss: 0.43234 | valid_f1_macro: 0.83331 |  5:00:37s
epoch 265| loss: 0.24799 | train_balanced_accuracy: 0.92248 | train_logloss: 0.18789 | train_f1_macro: 0.92246 | valid_balanced_accuracy: 0.83124 | valid_logloss: 0.4348  | valid_f1_macro: 0.83115 |  5:01:35s
epoch 266| loss: 0.25004 | train_balanced_accuracy: 0.92066 | train_logloss: 0.19002 | train_f1_macro: 0.9205  | valid_balanced_accuracy: 0.8306  | valid_logloss: 0.43943 | valid_f1_macro: 0.8299  |  5:02:32s
epoch 267| loss: 0.24795 | train_balanced_accuracy: 0.92099 | train_logloss: 0.19023 | train_f1_macro: 0.92093 | valid_balanced_accuracy: 0.83329 | valid_logloss: 0.42282 | valid_f1_macro: 0.833   |  5:03:29s
epoch 268| loss: 0.24508 | train_balanced_accuracy: 0.92242 | train_logloss: 0.18502 | train_f1_macro: 0.92233 | valid_balanced_accuracy: 0.83266 | valid_logloss: 0.43411 | valid_f1_macro: 0.83223 |  5:04:27s
epoch 269| loss: 0.23865 | train_balanced_accuracy: 0.92008 | train_logloss: 0.1876  | train_f1_macro: 0.91992 | valid_balanced_accuracy: 0.83471 | valid_logloss: 0.45077 | valid_f1_macro: 0.83383 |  5:05:24s
epoch 270| loss: 0.24144 | train_balanced_accuracy: 0.91846 | train_logloss: 0.18899 | train_f1_macro: 0.91824 | valid_balanced_accuracy: 0.83455 | valid_logloss: 0.44693 | valid_f1_macro: 0.83363 |  5:06:22s
epoch 271| loss: 0.24593 | train_balanced_accuracy: 0.92307 | train_logloss: 0.18189 | train_f1_macro: 0.92294 | valid_balanced_accuracy: 0.83487 | valid_logloss: 0.44426 | valid_f1_macro: 0.83427 |  5:07:19s
epoch 272| loss: 0.24515 | train_balanced_accuracy: 0.92091 | train_logloss: 0.18708 | train_f1_macro: 0.92073 | valid_balanced_accuracy: 0.83408 | valid_logloss: 0.44454 | valid_f1_macro: 0.83324 |  5:08:17s
epoch 273| loss: 0.24534 | train_balanced_accuracy: 0.92252 | train_logloss: 0.18839 | train_f1_macro: 0.92243 | valid_balanced_accuracy: 0.83369 | valid_logloss: 0.43152 | valid_f1_macro: 0.83328 |  5:09:14s
epoch 274| loss: 0.24874 | train_balanced_accuracy: 0.92315 | train_logloss: 0.18539 | train_f1_macro: 0.92303 | valid_balanced_accuracy: 0.83534 | valid_logloss: 0.44356 | valid_f1_macro: 0.83485 |  5:10:11s
epoch 275| loss: 0.24383 | train_balanced_accuracy: 0.92212 | train_logloss: 0.18795 | train_f1_macro: 0.922   | valid_balanced_accuracy: 0.83321 | valid_logloss: 0.43798 | valid_f1_macro: 0.83266 |  5:11:08s
epoch 276| loss: 0.24254 | train_balanced_accuracy: 0.91771 | train_logloss: 0.19705 | train_f1_macro: 0.91755 | valid_balanced_accuracy: 0.83171 | valid_logloss: 0.44988 | valid_f1_macro: 0.83101 |  5:12:07s
epoch 277| loss: 0.25242 | train_balanced_accuracy: 0.92099 | train_logloss: 0.18786 | train_f1_macro: 0.92085 | valid_balanced_accuracy: 0.83653 | valid_logloss: 0.4389  | valid_f1_macro: 0.83588 |  5:13:03s
epoch 278| loss: 0.24657 | train_balanced_accuracy: 0.92317 | train_logloss: 0.18647 | train_f1_macro: 0.92314 | valid_balanced_accuracy: 0.83558 | valid_logloss: 0.4302  | valid_f1_macro: 0.8354  |  5:14:01s
epoch 279| loss: 0.24413 | train_balanced_accuracy: 0.91892 | train_logloss: 0.19236 | train_f1_macro: 0.91891 | valid_balanced_accuracy: 0.8314  | valid_logloss: 0.44683 | valid_f1_macro: 0.83135 |  5:14:58s
epoch 280| loss: 0.23707 | train_balanced_accuracy: 0.92022 | train_logloss: 0.18802 | train_f1_macro: 0.92001 | valid_balanced_accuracy: 0.83447 | valid_logloss: 0.43802 | valid_f1_macro: 0.83361 |  5:15:55s
epoch 281| loss: 0.23784 | train_balanced_accuracy: 0.92742 | train_logloss: 0.1733  | train_f1_macro: 0.92734 | valid_balanced_accuracy: 0.84032 | valid_logloss: 0.44639 | valid_f1_macro: 0.83991 |  5:16:52s
epoch 282| loss: 0.23861 | train_balanced_accuracy: 0.92319 | train_logloss: 0.18227 | train_f1_macro: 0.92315 | valid_balanced_accuracy: 0.83827 | valid_logloss: 0.44336 | valid_f1_macro: 0.83811 |  5:17:49s
epoch 283| loss: 0.24273 | train_balanced_accuracy: 0.92344 | train_logloss: 0.18564 | train_f1_macro: 0.9234  | valid_balanced_accuracy: 0.83669 | valid_logloss: 0.43376 | valid_f1_macro: 0.83652 |  5:18:45s
epoch 284| loss: 0.25067 | train_balanced_accuracy: 0.92161 | train_logloss: 0.18975 | train_f1_macro: 0.92147 | valid_balanced_accuracy: 0.83471 | valid_logloss: 0.43527 | valid_f1_macro: 0.83413 |  5:19:42s
epoch 285| loss: 0.23935 | train_balanced_accuracy: 0.92682 | train_logloss: 0.17569 | train_f1_macro: 0.92674 | valid_balanced_accuracy: 0.83764 | valid_logloss: 0.43362 | valid_f1_macro: 0.83716 |  5:20:39s
epoch 286| loss: 0.23503 | train_balanced_accuracy: 0.92568 | train_logloss: 0.17895 | train_f1_macro: 0.92559 | valid_balanced_accuracy: 0.83787 | valid_logloss: 0.44712 | valid_f1_macro: 0.83739 |  5:21:38s
epoch 287| loss: 0.23888 | train_balanced_accuracy: 0.9135  | train_logloss: 0.20166 | train_f1_macro: 0.91322 | valid_balanced_accuracy: 0.82712 | valid_logloss: 0.47085 | valid_f1_macro: 0.82595 |  5:22:34s
epoch 288| loss: 0.24859 | train_balanced_accuracy: 0.9207  | train_logloss: 0.1916  | train_f1_macro: 0.9206  | valid_balanced_accuracy: 0.83092 | valid_logloss: 0.43738 | valid_f1_macro: 0.83039 |  5:23:31s
epoch 289| loss: 0.26372 | train_balanced_accuracy: 0.91348 | train_logloss: 0.21164 | train_f1_macro: 0.91333 | valid_balanced_accuracy: 0.8306  | valid_logloss: 0.433   | valid_f1_macro: 0.82994 |  5:24:27s
epoch 290| loss: 0.2492  | train_balanced_accuracy: 0.92089 | train_logloss: 0.18878 | train_f1_macro: 0.92086 | valid_balanced_accuracy: 0.83479 | valid_logloss: 0.4491  | valid_f1_macro: 0.83464 |  5:25:24s
epoch 291| loss: 0.25099 | train_balanced_accuracy: 0.92151 | train_logloss: 0.18602 | train_f1_macro: 0.92148 | valid_balanced_accuracy: 0.8325  | valid_logloss: 0.44141 | valid_f1_macro: 0.83241 |  5:26:20s
epoch 292| loss: 0.23517 | train_balanced_accuracy: 0.91823 | train_logloss: 0.18808 | train_f1_macro: 0.91811 | valid_balanced_accuracy: 0.82981 | valid_logloss: 0.44995 | valid_f1_macro: 0.82932 |  5:27:16s
epoch 293| loss: 0.23835 | train_balanced_accuracy: 0.92431 | train_logloss: 0.18086 | train_f1_macro: 0.9242  | valid_balanced_accuracy: 0.83621 | valid_logloss: 0.44301 | valid_f1_macro: 0.83568 |  5:28:13s
epoch 294| loss: 0.23996 | train_balanced_accuracy: 0.91738 | train_logloss: 0.1931  | train_f1_macro: 0.91711 | valid_balanced_accuracy: 0.83036 | valid_logloss: 0.46117 | valid_f1_macro: 0.82922 |  5:29:09s
epoch 295| loss: 0.23554 | train_balanced_accuracy: 0.92066 | train_logloss: 0.18536 | train_f1_macro: 0.92037 | valid_balanced_accuracy: 0.83574 | valid_logloss: 0.45853 | valid_f1_macro: 0.83444 |  5:30:05s
epoch 296| loss: 0.23835 | train_balanced_accuracy: 0.92263 | train_logloss: 0.18681 | train_f1_macro: 0.92259 | valid_balanced_accuracy: 0.83598 | valid_logloss: 0.43627 | valid_f1_macro: 0.83576 |  5:31:02s
epoch 297| loss: 0.23824 | train_balanced_accuracy: 0.91886 | train_logloss: 0.19454 | train_f1_macro: 0.91876 | valid_balanced_accuracy: 0.83139 | valid_logloss: 0.45107 | valid_f1_macro: 0.83089 |  5:31:59s
epoch 298| loss: 0.23723 | train_balanced_accuracy: 0.91738 | train_logloss: 0.19446 | train_f1_macro: 0.91714 | valid_balanced_accuracy: 0.8336  | valid_logloss: 0.4481  | valid_f1_macro: 0.83256 |  5:32:55s
epoch 299| loss: 0.23344 | train_balanced_accuracy: 0.92584 | train_logloss: 0.17932 | train_f1_macro: 0.92573 | valid_balanced_accuracy: 0.83661 | valid_logloss: 0.45186 | valid_f1_macro: 0.83604 |  5:33:51s
epoch 300| loss: 0.23213 | train_balanced_accuracy: 0.92331 | train_logloss: 0.18376 | train_f1_macro: 0.92326 | valid_balanced_accuracy: 0.83487 | valid_logloss: 0.44569 | valid_f1_macro: 0.83462 |  5:34:47s
epoch 301| loss: 0.23568 | train_balanced_accuracy: 0.92141 | train_logloss: 0.18762 | train_f1_macro: 0.92123 | valid_balanced_accuracy: 0.83463 | valid_logloss: 0.43577 | valid_f1_macro: 0.8338  |  5:35:43s

Early stopping occurred at epoch 301 with best_epoch = 281 and best_valid_f1_macro = 0.83991
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/callbacks.py:172: UserWarning: Best weights from best epoch are automatically used!
  warnings.warn(wrn_msg)
[CV 4/5; 7/7] END classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1;, score=0.629 total time=336.1min
[CV 5/5; 7/7] START classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:75: UserWarning: Device used : cpu
  warnings.warn(f"Device used : {self.device}")
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: n_d changed from 8 to 64
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_dims changed from [] to [36, 38, 40, 127, 124, 74, 130, 116]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_emb_dim changed from 20 to [18, 19, 20, 20, 20, 20, 20, 20]
  warnings.warn(wrn_msg)
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/abstract_model.py:105: UserWarning: Pretraining: cat_idxs changed from [] to [1, 2, 3, 10, 11, 12, 18, 19]
  warnings.warn(wrn_msg)
epoch 0  | loss: 2.97053 | train_balanced_accuracy: 0.50157 | train_logloss: 1.59569 | train_f1_macro: 0.4879  | valid_balanced_accuracy: 0.49729 | valid_logloss: 1.60062 | valid_f1_macro: 0.48273 |  0:00:56s
epoch 1  | loss: 1.74228 | train_balanced_accuracy: 0.50006 | train_logloss: 0.86458 | train_f1_macro: 0.33473 | valid_balanced_accuracy: 0.50024 | valid_logloss: 0.86215 | valid_f1_macro: 0.33524 |  0:01:53s
epoch 2  | loss: 0.89631 | train_balanced_accuracy: 0.53382 | train_logloss: 0.69231 | train_f1_macro: 0.47613 | valid_balanced_accuracy: 0.53413 | valid_logloss: 0.69173 | valid_f1_macro: 0.47631 |  0:02:49s
epoch 3  | loss: 0.6879  | train_balanced_accuracy: 0.50506 | train_logloss: 0.69056 | train_f1_macro: 0.44008 | valid_balanced_accuracy: 0.50931 | valid_logloss: 0.69043 | valid_f1_macro: 0.44709 |  0:03:44s
epoch 4  | loss: 0.68491 | train_balanced_accuracy: 0.54679 | train_logloss: 0.68746 | train_f1_macro: 0.54637 | valid_balanced_accuracy: 0.54921 | valid_logloss: 0.68627 | valid_f1_macro: 0.54886 |  0:04:41s
epoch 5  | loss: 0.6815  | train_balanced_accuracy: 0.5572  | train_logloss: 0.68328 | train_f1_macro: 0.55716 | valid_balanced_accuracy: 0.55885 | valid_logloss: 0.68248 | valid_f1_macro: 0.5587  |  0:05:39s
epoch 6  | loss: 0.6742  | train_balanced_accuracy: 0.57364 | train_logloss: 0.6861  | train_f1_macro: 0.57212 | valid_balanced_accuracy: 0.58026 | valid_logloss: 0.68323 | valid_f1_macro: 0.57822 |  0:06:34s
epoch 7  | loss: 0.66805 | train_balanced_accuracy: 0.56406 | train_logloss: 0.68147 | train_f1_macro: 0.56068 | valid_balanced_accuracy: 0.57055 | valid_logloss: 0.67918 | valid_f1_macro: 0.56802 |  0:07:30s
epoch 8  | loss: 0.66609 | train_balanced_accuracy: 0.56975 | train_logloss: 0.67728 | train_f1_macro: 0.56628 | valid_balanced_accuracy: 0.57751 | valid_logloss: 0.67638 | valid_f1_macro: 0.57437 |  0:08:26s
epoch 9  | loss: 0.66132 | train_balanced_accuracy: 0.57599 | train_logloss: 0.67678 | train_f1_macro: 0.57597 | valid_balanced_accuracy: 0.58177 | valid_logloss: 0.67387 | valid_f1_macro: 0.58177 |  0:09:21s
epoch 10 | loss: 0.66082 | train_balanced_accuracy: 0.59548 | train_logloss: 0.66    | train_f1_macro: 0.59379 | valid_balanced_accuracy: 0.59631 | valid_logloss: 0.65914 | valid_f1_macro: 0.59395 |  0:10:18s
epoch 11 | loss: 0.65861 | train_balanced_accuracy: 0.58937 | train_logloss: 0.66406 | train_f1_macro: 0.58808 | valid_balanced_accuracy: 0.59102 | valid_logloss: 0.66285 | valid_f1_macro: 0.58916 |  0:11:14s
epoch 12 | loss: 0.65915 | train_balanced_accuracy: 0.59277 | train_logloss: 0.66314 | train_f1_macro: 0.59274 | valid_balanced_accuracy: 0.58564 | valid_logloss: 0.66392 | valid_f1_macro: 0.5856  |  0:12:10s
epoch 13 | loss: 0.66313 | train_balanced_accuracy: 0.58228 | train_logloss: 0.66801 | train_f1_macro: 0.58228 | valid_balanced_accuracy: 0.58177 | valid_logloss: 0.66933 | valid_f1_macro: 0.58177 |  0:13:06s
epoch 14 | loss: 0.65895 | train_balanced_accuracy: 0.61186 | train_logloss: 0.64376 | train_f1_macro: 0.61155 | valid_balanced_accuracy: 0.60888 | valid_logloss: 0.64382 | valid_f1_macro: 0.60852 |  0:14:02s
epoch 15 | loss: 0.66277 | train_balanced_accuracy: 0.57024 | train_logloss: 0.67867 | train_f1_macro: 0.57004 | valid_balanced_accuracy: 0.56477 | valid_logloss: 0.6786  | valid_f1_macro: 0.56434 |  0:14:59s
epoch 16 | loss: 0.65612 | train_balanced_accuracy: 0.6135  | train_logloss: 0.65204 | train_f1_macro: 0.6127  | valid_balanced_accuracy: 0.61125 | valid_logloss: 0.65347 | valid_f1_macro: 0.61058 |  0:15:55s
epoch 17 | loss: 0.64296 | train_balanced_accuracy: 0.62232 | train_logloss: 0.63592 | train_f1_macro: 0.62063 | valid_balanced_accuracy: 0.62287 | valid_logloss: 0.63844 | valid_f1_macro: 0.62115 |  0:16:51s
epoch 18 | loss: 0.64156 | train_balanced_accuracy: 0.55711 | train_logloss: 0.70509 | train_f1_macro: 0.49112 | valid_balanced_accuracy: 0.55645 | valid_logloss: 0.70824 | valid_f1_macro: 0.48678 |  0:17:47s
epoch 19 | loss: 0.64089 | train_balanced_accuracy: 0.61996 | train_logloss: 0.63318 | train_f1_macro: 0.61962 | valid_balanced_accuracy: 0.61837 | valid_logloss: 0.63487 | valid_f1_macro: 0.61802 |  0:18:43s
epoch 20 | loss: 0.64105 | train_balanced_accuracy: 0.6123  | train_logloss: 0.64272 | train_f1_macro: 0.61165 | valid_balanced_accuracy: 0.61513 | valid_logloss: 0.64442 | valid_f1_macro: 0.61452 |  0:19:39s
epoch 21 | loss: 0.63883 | train_balanced_accuracy: 0.61245 | train_logloss: 0.6358  | train_f1_macro: 0.61234 | valid_balanced_accuracy: 0.60904 | valid_logloss: 0.63904 | valid_f1_macro: 0.609   |  0:20:35s
epoch 22 | loss: 0.64112 | train_balanced_accuracy: 0.59603 | train_logloss: 0.64986 | train_f1_macro: 0.58302 | valid_balanced_accuracy: 0.59214 | valid_logloss: 0.65099 | valid_f1_macro: 0.5786  |  0:21:31s
epoch 23 | loss: 0.6412  | train_balanced_accuracy: 0.62518 | train_logloss: 0.63279 | train_f1_macro: 0.6249  | valid_balanced_accuracy: 0.62398 | valid_logloss: 0.63394 | valid_f1_macro: 0.62366 |  0:22:27s
epoch 24 | loss: 0.63722 | train_balanced_accuracy: 0.62239 | train_logloss: 0.63452 | train_f1_macro: 0.62233 | valid_balanced_accuracy: 0.62145 | valid_logloss: 0.64049 | valid_f1_macro: 0.62141 |  0:23:23s
epoch 25 | loss: 0.63544 | train_balanced_accuracy: 0.63277 | train_logloss: 0.62769 | train_f1_macro: 0.63277 | valid_balanced_accuracy: 0.62635 | valid_logloss: 0.63104 | valid_f1_macro: 0.62635 |  0:24:19s
epoch 26 | loss: 0.63418 | train_balanced_accuracy: 0.62892 | train_logloss: 0.6266  | train_f1_macro: 0.62848 | valid_balanced_accuracy: 0.62477 | valid_logloss: 0.63087 | valid_f1_macro: 0.62443 |  0:25:17s
epoch 27 | loss: 0.63332 | train_balanced_accuracy: 0.6303  | train_logloss: 0.62635 | train_f1_macro: 0.62823 | valid_balanced_accuracy: 0.6284  | valid_logloss: 0.63061 | valid_f1_macro: 0.62623 |  0:26:13s
epoch 28 | loss: 0.63061 | train_balanced_accuracy: 0.63129 | train_logloss: 0.62546 | train_f1_macro: 0.62952 | valid_balanced_accuracy: 0.62666 | valid_logloss: 0.62937 | valid_f1_macro: 0.62485 |  0:27:09s
epoch 29 | loss: 0.62977 | train_balanced_accuracy: 0.63474 | train_logloss: 0.6256  | train_f1_macro: 0.63413 | valid_balanced_accuracy: 0.63126 | valid_logloss: 0.62995 | valid_f1_macro: 0.63064 |  0:28:05s
epoch 30 | loss: 0.63217 | train_balanced_accuracy: 0.62785 | train_logloss: 0.63505 | train_f1_macro: 0.62214 | valid_balanced_accuracy: 0.62605 | valid_logloss: 0.63724 | valid_f1_macro: 0.62023 |  0:29:01s
epoch 31 | loss: 0.62992 | train_balanced_accuracy: 0.6301  | train_logloss: 0.62695 | train_f1_macro: 0.62922 | valid_balanced_accuracy: 0.62785 | valid_logloss: 0.63188 | valid_f1_macro: 0.62697 |  0:29:57s
epoch 32 | loss: 0.6304  | train_balanced_accuracy: 0.63226 | train_logloss: 0.62489 | train_f1_macro: 0.62968 | valid_balanced_accuracy: 0.62832 | valid_logloss: 0.62874 | valid_f1_macro: 0.62554 |  0:30:52s
epoch 33 | loss: 0.62932 | train_balanced_accuracy: 0.63415 | train_logloss: 0.62635 | train_f1_macro: 0.63347 | valid_balanced_accuracy: 0.63093 | valid_logloss: 0.63052 | valid_f1_macro: 0.63022 |  0:31:48s
epoch 34 | loss: 0.62967 | train_balanced_accuracy: 0.62478 | train_logloss: 0.62856 | train_f1_macro: 0.6247  | valid_balanced_accuracy: 0.6228  | valid_logloss: 0.63333 | valid_f1_macro: 0.62269 |  0:32:44s
epoch 35 | loss: 0.6302  | train_balanced_accuracy: 0.63445 | train_logloss: 0.62737 | train_f1_macro: 0.63364 | valid_balanced_accuracy: 0.62833 | valid_logloss: 0.63057 | valid_f1_macro: 0.6274  |  0:33:41s
epoch 36 | loss: 0.63111 | train_balanced_accuracy: 0.63091 | train_logloss: 0.62407 | train_f1_macro: 0.6309  | valid_balanced_accuracy: 0.62951 | valid_logloss: 0.62747 | valid_f1_macro: 0.6295  |  0:34:37s
epoch 37 | loss: 0.63163 | train_balanced_accuracy: 0.62692 | train_logloss: 0.62858 | train_f1_macro: 0.62692 | valid_balanced_accuracy: 0.6239  | valid_logloss: 0.63196 | valid_f1_macro: 0.6239  |  0:35:35s
epoch 38 | loss: 0.63071 | train_balanced_accuracy: 0.63417 | train_logloss: 0.62422 | train_f1_macro: 0.63384 | valid_balanced_accuracy: 0.63109 | valid_logloss: 0.62832 | valid_f1_macro: 0.63075 |  0:36:31s
epoch 39 | loss: 0.62929 | train_balanced_accuracy: 0.62943 | train_logloss: 0.63303 | train_f1_macro: 0.62892 | valid_balanced_accuracy: 0.62825 | valid_logloss: 0.63516 | valid_f1_macro: 0.62772 |  0:37:27s
epoch 40 | loss: 0.62839 | train_balanced_accuracy: 0.63459 | train_logloss: 0.62499 | train_f1_macro: 0.63442 | valid_balanced_accuracy: 0.62912 | valid_logloss: 0.62827 | valid_f1_macro: 0.62899 |  0:38:24s
epoch 41 | loss: 0.6298  | train_balanced_accuracy: 0.62967 | train_logloss: 0.62896 | train_f1_macro: 0.62945 | valid_balanced_accuracy: 0.62643 | valid_logloss: 0.63177 | valid_f1_macro: 0.62625 |  0:39:20s
epoch 42 | loss: 0.62935 | train_balanced_accuracy: 0.63563 | train_logloss: 0.62476 | train_f1_macro: 0.63535 | valid_balanced_accuracy: 0.62698 | valid_logloss: 0.62879 | valid_f1_macro: 0.6267  |  0:40:17s
epoch 43 | loss: 0.63678 | train_balanced_accuracy: 0.60769 | train_logloss: 0.64729 | train_f1_macro: 0.60752 | valid_balanced_accuracy: 0.61134 | valid_logloss: 0.64806 | valid_f1_macro: 0.6111  |  0:41:13s
epoch 44 | loss: 0.63719 | train_balanced_accuracy: 0.62285 | train_logloss: 0.62695 | train_f1_macro: 0.62176 | valid_balanced_accuracy: 0.61908 | valid_logloss: 0.63085 | valid_f1_macro: 0.61823 |  0:42:09s
epoch 45 | loss: 0.6333  | train_balanced_accuracy: 0.63103 | train_logloss: 0.62663 | train_f1_macro: 0.631   | valid_balanced_accuracy: 0.62667 | valid_logloss: 0.63283 | valid_f1_macro: 0.62664 |  0:43:05s
epoch 46 | loss: 0.63402 | train_balanced_accuracy: 0.6249  | train_logloss: 0.66693 | train_f1_macro: 0.6249  | valid_balanced_accuracy: 0.62272 | valid_logloss: 0.66879 | valid_f1_macro: 0.62272 |  0:44:01s
epoch 47 | loss: 0.63041 | train_balanced_accuracy: 0.63269 | train_logloss: 0.62629 | train_f1_macro: 0.63269 | valid_balanced_accuracy: 0.62627 | valid_logloss: 0.62989 | valid_f1_macro: 0.62627 |  0:44:58s
epoch 48 | loss: 0.63005 | train_balanced_accuracy: 0.63212 | train_logloss: 0.6247  | train_f1_macro: 0.63203 | valid_balanced_accuracy: 0.62762 | valid_logloss: 0.62973 | valid_f1_macro: 0.62755 |  0:45:56s
epoch 49 | loss: 0.63417 | train_balanced_accuracy: 0.62591 | train_logloss: 0.63162 | train_f1_macro: 0.62275 | valid_balanced_accuracy: 0.61971 | valid_logloss: 0.63593 | valid_f1_macro: 0.61664 |  0:46:58s
epoch 50 | loss: 0.63261 | train_balanced_accuracy: 0.62067 | train_logloss: 0.64288 | train_f1_macro: 0.62065 | valid_balanced_accuracy: 0.61916 | valid_logloss: 0.64551 | valid_f1_macro: 0.61913 |  0:47:56s
epoch 51 | loss: 0.63292 | train_balanced_accuracy: 0.63006 | train_logloss: 0.62882 | train_f1_macro: 0.63006 | valid_balanced_accuracy: 0.62707 | valid_logloss: 0.63179 | valid_f1_macro: 0.62704 |  0:48:52s
epoch 52 | loss: 0.62992 | train_balanced_accuracy: 0.62943 | train_logloss: 0.6262  | train_f1_macro: 0.62919 | valid_balanced_accuracy: 0.62604 | valid_logloss: 0.6297  | valid_f1_macro: 0.6258  |  0:49:48s
epoch 53 | loss: 0.63002 | train_balanced_accuracy: 0.6266  | train_logloss: 0.63189 | train_f1_macro: 0.6258  | valid_balanced_accuracy: 0.62319 | valid_logloss: 0.63351 | valid_f1_macro: 0.62233 |  0:50:45s
epoch 54 | loss: 0.63186 | train_balanced_accuracy: 0.62751 | train_logloss: 0.6285  | train_f1_macro: 0.62713 | valid_balanced_accuracy: 0.62485 | valid_logloss: 0.6323  | valid_f1_macro: 0.62446 |  0:51:41s
epoch 55 | loss: 0.63097 | train_balanced_accuracy: 0.62969 | train_logloss: 0.62649 | train_f1_macro: 0.62967 | valid_balanced_accuracy: 0.62335 | valid_logloss: 0.62992 | valid_f1_macro: 0.62333 |  0:52:37s
epoch 56 | loss: 0.63022 | train_balanced_accuracy: 0.63016 | train_logloss: 0.62762 | train_f1_macro: 0.63004 | valid_balanced_accuracy: 0.62881 | valid_logloss: 0.6315  | valid_f1_macro: 0.62871 |  0:53:33s
epoch 57 | loss: 0.63235 | train_balanced_accuracy: 0.62151 | train_logloss: 0.63415 | train_f1_macro: 0.61884 | valid_balanced_accuracy: 0.61433 | valid_logloss: 0.64213 | valid_f1_macro: 0.61168 |  0:54:29s
epoch 58 | loss: 0.63381 | train_balanced_accuracy: 0.62267 | train_logloss: 0.62954 | train_f1_macro: 0.62247 | valid_balanced_accuracy: 0.61987 | valid_logloss: 0.632   | valid_f1_macro: 0.61973 |  0:55:26s

Early stopping occurred at epoch 58 with best_epoch = 38 and best_valid_f1_macro = 0.63075
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pytorch_tabnet/callbacks.py:172: UserWarning: Best weights from best epoch are automatically used!
  warnings.warn(wrn_msg)
[CV 5/5; 7/7] END classifier__estimator=TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='cpu', n_shared_decoder=1, n_indep_decoder=1, use_embeddings=True, threshold_categorical_features=150, use_cat_emb_dim=True, fit_eval_metric=['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>], fit_weights=0, fit_batch_size=1024, fit_virtual_batch_size=128), classifier__estimator__cat_emb_dim=20, classifier__estimator__clip_value=1, classifier__estimator__gamma=2.0, classifier__estimator__lambda_sparse=0.001, classifier__estimator__mask_type=sparsemax, classifier__estimator__momentum=0.4, classifier__estimator__n_a=64, classifier__estimator__n_independent=5, classifier__estimator__n_shared=5, classifier__estimator__n_steps=10, classifier__estimator__optimizer_fn=<class 'torch.optim.adam.Adam'>, classifier__estimator__optimizer_params={'lr': 0.02}, classifier__estimator__scheduler_fn=<class 'torch.optim.lr_scheduler.StepLR'>, classifier__estimator__scheduler_params={'step_size': 10, 'gamma': 0.95}, classifier__estimator__seed=42, classifier__estimator__verbose=1;, score=0.539 total time=55.8min
/mnt/Dados/Mestrado_Computacao_Aplicada_UFMS/documentos_dissertacao/algoritmos/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/imblearn/over_sampling/_smote/base.py:336: FutureWarning: The parameter `n_jobs` has been deprecated in 0.10 and will be removed in 0.12. You can pass an nearest neighbors estimator where `n_jobs` is already set instead.
  warnings.warn(
--------------------- RESULTS GS1 ---------------------

CSV gerado com sucesso em: ./runs/results/GS1-cv_results-13-04-2023_18:12:55.csv.
Function generate_new_csv Took 0:00:00.025554

Cross validation results:
   mean_fit_time  std_fit_time  mean_score_time  std_score_time  ... split4_test_score mean_test_score std_test_score rank_test_score
4     244.175164      5.826736         1.275888        0.072958  ...          0.676519        0.671272       0.002993               1
5      10.469129      2.050248         0.131440        0.014487  ...          0.632993        0.634381       0.005288               2
1       1.888882      0.130368         0.019017        0.000964  ...          0.601231        0.604551       0.002199               3
3     168.503224     35.305600         0.061215        0.007622  ...          0.583576        0.584865       0.012844               4
6    6891.841456   6667.051974         5.056247        1.721635  ...          0.538638        0.547056       0.047328               5
2       1.365024      0.099834         0.025099        0.007491  ...          0.503262        0.502722       0.001179               6
0       1.448153      0.636802         0.022082        0.002727  ...          0.439356        0.444730       0.004025               7

[7 rows x 58 columns]
Object saved in file: ./runs/best_estimators/GS1-best_pipe-13-04-2023_18:12:55.joblib
Object saved in file: ./runs/best_estimators/best_estimator-RandomForestClassifier-13-04-2023_18:12:59.joblib
Best estimator: RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42)
Object saved in file: ./runs/encoders_scalers/GS1-column_transformer-13-04-2023_18:13:08.joblib
Internal CV score obtained by the best set of parameters: 0.6712719988575208
Best params: {'classifier__estimator': RandomForestClassifier(criterion='entropy', max_features=0.75,
                       n_estimators=1000, n_jobs=-1, random_state=42), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 1000, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}
Scorer function: make_scorer(f1_score, pos_label=None, average=macro)
The number of CV splits: 5
Seconds used for refitting the best model on the whole dataset: 275.352988243103
Whether the scorers compute several metrics: False
The number of features when fit is performed: 21
Names of features seen during fit: ['Tipificacao' 'Peso' 'QuestionarioClassificacaoEstabel' 'ILP' 'IFP'
 'ILPF' 'QuestionarioPossuiOutrosIncentiv' 'QuestionarioFabricaRacao'
 'regua de manejo' 'identificacao individual' 'rastreamento SISBOV'
 'participa de aliancas mercadolog' 'QuestionarioPraticaRecuperacaoPa'
 'Confinamento' 'Suplementacao_a_campo' 'SemiConfinamento' 'tot3m_Chuva'
 'med3m_formITUinst' 'med3m_NDVI' 'med3m_preR_milho' 'med3m_preR_boi']

!!!>> When you observe high training accuracy, but low test accuracy, it is likely that you encountered overfitting problem.
Training set score: 0.998437809532221
Test set score: 0.668699412339413

CSV gerado com sucesso em: ./runs/results/GS1-grid_search_results-13-04-2023_18:13:15.csv.
Function generate_new_csv Took 0:00:00.002582

*****INICIO CONFUSION MATRIX DISPLAY******
Figure confusion_matrix_display-13-04-2023_18:13:30.png saved in ./plots/ directory.
*****FIM CONFUSION MATRIX DISPLAY******

Function confusion_matrix_display Took 0:00:11.676937


--- Test data performance ---
Test Acurácia: 0.810311529095642
Test Acurácia Balanceada: 0.6711392398738952
Test Revocação: 0.8820315661675435
Test Micro Revocação: 0.810311529095642
Test Macro Revocação: 0.6711392398738952
Test Precisão: 0.8885944348180613
Test Micro Precisão: 0.810311529095642
Test Macro Precisão: 0.6664135186483062
Test F1: 0.8853008377760851
Test Micro F1: 0.8103115290956419
Test Macro F1: 0.668699412339413
Test Coeficiente Kappa: 0.33744230573673617
Test Coeficiente de Correlação de Matthews: 0.3375196769743145
Test Log Loss: 0.45170992843652663
Test ROC AUC Score: 0.767753421167019

CSV gerado com sucesso em: ./runs/results/GS1-performance_results-13-04-2023_18:13:31.csv.
Function generate_new_csv Took 0:00:00.001088

              precision    recall  f1-score   support

           0       0.44      0.46      0.45      2025
           1       0.89      0.88      0.89      9884

    accuracy                           0.81     11909
   macro avg       0.67      0.67      0.67     11909
weighted avg       0.81      0.81      0.81     11909


CSV gerado com sucesso em: ./runs/results/GS1-classification_report-13-04-2023_18:13:31.csv.
Function generate_new_csv Took 0:00:00.000825

Function run_grid_search Took 10:15:45.891977

