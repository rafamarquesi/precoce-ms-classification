mean_fit_time;std_fit_time;mean_score_time;std_score_time;param_classifier__estimator;param_classifier__estimator__algorithm;param_classifier__estimator__metric;param_classifier__estimator__n_jobs;param_classifier__estimator__n_neighbors;param_classifier__estimator__criterion;param_classifier__estimator__min_samples_split;param_classifier__estimator__random_state;param_classifier__estimator__splitter;param_classifier__estimator__C;param_classifier__estimator__dual;param_classifier__estimator__penalty;param_classifier__estimator__activation;param_classifier__estimator__early_stopping;param_classifier__estimator__hidden_layer_sizes;param_classifier__estimator__max_iter;param_classifier__estimator__n_estimators;param_classifier__estimator__max_delta_step;param_classifier__estimator__min_child_weight;param_classifier__estimator__objective;param_classifier__estimator__tree_method;param_classifier__estimator__clip_value;param_classifier__estimator__mask_type;param_classifier__estimator__momentum;param_classifier__estimator__optimizer_fn;param_classifier__estimator__optimizer_params;param_classifier__estimator__scheduler_fn;param_classifier__estimator__scheduler_params;param_classifier__estimator__seed;param_classifier__estimator__verbose;params;split0_test_score;split1_test_score;split2_test_score;split3_test_score;split4_test_score;mean_test_score;std_test_score;rank_test_score
23,345932006835938;0,4692998735120854;2,7550750255584715;0,27035850439743786;"RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42)";;;-1;;entropy;;42;;;;;;;;;700;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42), 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__n_estimators': 700, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,7392672793654791;0,733098325569684;0,7364643666582725;0,7340720221606648;0,7331906320825988;0,7352185251673398;0,0023607878947010394;1
34,97127528190613;0,6789316770312581;2,149672842025757;0,1537090756534675;"RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42)";;;-1;;entropy;;42;;;;;;;;;1200;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42), 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__n_estimators': 1200, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,7387636913005162;0,733979604683369;0,7359607151850919;0,7348274993704357;0,7313019390581718;0,734966689919517;0,002442515746684834;2
19,488248538970947;0,47521194374173475;3,7412187099456786;0,13859601556842163;"RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42)";;;-1;;gini;;42;;;;;;;;;700;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42), 'classifier__estimator__criterion': 'gini', 'classifier__estimator__n_estimators': 700, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,7372529271056276;0,7347349867808133;0,7364643666582725;0,7325610677411232;0,732435154872828;0,7346897006317329;0,001966503234653279;3
33,40266489982605;0,19378201982454402;2,914716672897339;0,27069497704173184;"RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42)";;;-1;;gini;;42;;;;;;;;;1200;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42), 'classifier__estimator__criterion': 'gini', 'classifier__estimator__n_estimators': 1200, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,7391413823492383;0,733979604683369;0,7353311508436162;0,7320574162679426;0,7321833291362377;0,7345385766560808;0,002601145574910443;4
4,238980007171631;0,6724317290423593;1,5298604488372802;0,6131144383169028;"RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42)";;;-1;;entropy;;42;;;;;;;;;120;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42), 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__n_estimators': 120, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,7405262495278861;0,7268034747576483;0,7363384537899773;0,7310501133215814;0,7347015865021406;0,7338839755798467;0,004668554836285777;5
2,9445283889770506;0,08544509277195936;0,46008954048156736;0,05032136412253218;"RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42)";;;-1;;gini;;42;;;;;;;;;120;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42), 'classifier__estimator__criterion': 'gini', 'classifier__estimator__n_estimators': 120, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,736623442024424;0,7295732091149439;0,7350793251070259;0,7331906320825988;0,7301687232435154;0,7329270663145016;0,0027284315210500346;6
2,3180826187133787;0,3626407938091965;0,4045355796813965;0,14707691129372086;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;-1;;;;42;;;;;;;;;100;1.0;7;binary:logistic;hist;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__min_child_weight': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__tree_method': 'hist'}";0,7080448193377817;0,7081707163540224;0,7117854444724251;0,7110299672626542;0,7059934525308487;0,7090048799915464;0,0021222044233318235;7
1,9736242294311523;0,3277178379123238;0,5596349716186524;0,10963017425132493;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;-1;;;;42;;;;;;;;;50;1.0;7;binary:logistic;hist;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__min_child_weight': 7, 'classifier__estimator__n_estimators': 50, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__tree_method': 'hist'}";0,7074153342565781;0,7038902178018381;0,71165953160413;0,7091412742382271;0,7071266683455049;0,7078466052492557;0,002552327589761548;8
3,0581802845001222;0,6613370528732773;0,13925881385803224;0,06944222153823806;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;-1;;;;42;;;;;;;;;150;1.0;7;binary:logistic;hist;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__min_child_weight': 7, 'classifier__estimator__n_estimators': 150, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__tree_method': 'hist'}";0,7099332745813924;0,7048973939317639;0,7061193653991438;0,7093930999748175;0,7076303198186855;0,7075946907411605;0,0019055977814554632;9
4,6521319389343265;0,22057546292215835;1,0371460437774658;0,19075897677966852;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;-1;;;;42;;;;;;;;;100;1.0;1;binary:logistic;hist;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__min_child_weight': 1, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__tree_method': 'hist'}";0,7090519954677074;0,7046455998992824;0,7091412742382271;0,7073784940820952;0,7048602367161924;0,7070155200807009;0,0019524129129583844;10
3,503718852996826;0,7846608325912253;0,2326120376586914;0,0873783760319026;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;-1;;;;42;;;;;;;;;200;1.0;7;binary:logistic;hist;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__min_child_weight': 7, 'classifier__estimator__n_estimators': 200, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__tree_method': 'hist'}";0,7067858491753746;0,7069117461916152;0,7076303198186855;0,7086376227650466;0,7043565852430118;0,7068644246387468;0,0014162273044520052;11
4,6953051567077635;0,5372143437049556;0,5205766201019287;0,15074050386141394;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;-1;;;;42;;;;;;;;;200;1.0;1;binary:logistic;hist;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__min_child_weight': 1, 'classifier__estimator__n_estimators': 200, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__tree_method': 'hist'}";0,7060304670779303;0,7055268790129674;0,7067489297406195;0,7061193653991438;0,7067489297406195;0,7062349141942562;0,00046580852915655875;12
4,847266912460327;0,7371266549002509;0,6194154262542725;0,11870857353650413;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;-1;;;;42;;;;;;;;;150;1.0;1;binary:logistic;hist;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__min_child_weight': 1, 'classifier__estimator__n_estimators': 150, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__tree_method': 'hist'}";0,7082966133702632;0,7042679088505602;0,7070007554772098;0,7067489297406195;0,7033492822966507;0,7059326979470607;0,0018352458426700734;13
4,091141653060913;1,010528236363892;0,9663151264190674;0,3037216416310958;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;-1;;;;42;;;;;;;;;50;1.0;1;binary:logistic;hist;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__min_child_weight': 1, 'classifier__estimator__n_estimators': 50, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__tree_method': 'hist'}";0,7036384237693567;0,7033866297368753;0,709896751447998;0,7048602367161924;0,7057416267942583;0,7055047336929362;0,0023550283121353986;14
1,7521217823028565;0,7653827525709604;8,358176565170288;0,22487063094055515;KNeighborsClassifier();kd_tree;euclidean;-1;5;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': KNeighborsClassifier(), 'classifier__estimator__algorithm': 'kd_tree', 'classifier__estimator__metric': 'euclidean', 'classifier__estimator__n_jobs': -1, 'classifier__estimator__n_neighbors': 5};0,7091778924839481;0,6992320282009317;0,6957945101989423;0,6950390329891715;0,7020901536136993;0,7002667234973385;0,0051212081443562235;15
0,2551256656646729;0,034510403012779425;5,915940046310425;2,261590090484199;KNeighborsClassifier();kd_tree;minkowski;-1;5;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': KNeighborsClassifier(), 'classifier__estimator__algorithm': 'kd_tree', 'classifier__estimator__metric': 'minkowski', 'classifier__estimator__n_jobs': -1, 'classifier__estimator__n_neighbors': 5};0,7091778924839481;0,6992320282009317;0,6957945101989423;0,6950390329891715;0,7020901536136993;0,7002667234973385;0,0051212081443562235;15
40,52332782745361;7,217380248303294;0,32219886779785156;0,30980055643452464;MLPClassifier();;;;;;;;;;;;relu;True;(200, 100);1000;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__max_iter': 1000};0,6918041042427294;0,6973435729573209;0,6983127675648452;0,7046084109796021;0,7009569377990431;0,6986051587087081;0,004230870732037383;17
168,20485019683838;27,857308770393026;0,27225937843322756;0,02642875478435027;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.02;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,7021276595744681;0,6919300012589702;0,7020901536136993;0,6969277260135985;0,6995718962477965;0,6985294873417065;0,00381656023018298;18
0,4561699390411377;0,099466081255727;8,683273601531983;0,8432559015188237;KNeighborsClassifier();kd_tree;minkowski;-1;11;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': KNeighborsClassifier(), 'classifier__estimator__algorithm': 'kd_tree', 'classifier__estimator__metric': 'minkowski', 'classifier__estimator__n_jobs': -1, 'classifier__estimator__n_neighbors': 11};0,6987284401359688;0,6931889714213774;0,6935280785696298;0,7009569377990431;0,7012087635356333;0,6975222382923305;0,003509218306798865;19
3,7797082901000976;1,2142292553969944;7,650733375549317;1,4055479709145702;KNeighborsClassifier();kd_tree;euclidean;-1;11;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': KNeighborsClassifier(), 'classifier__estimator__algorithm': 'kd_tree', 'classifier__estimator__metric': 'euclidean', 'classifier__estimator__n_jobs': -1, 'classifier__estimator__n_neighbors': 11};0,6987284401359688;0,6931889714213774;0,6935280785696298;0,7009569377990431;0,7012087635356333;0,6975222382923305;0,003509218306798865;19
177,2410140514374;28,265439433141395;0,27544312477111815;0,017288380547010356;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.4;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,7011204834445424;0,6926853833564145;0,6996978091160917;0,6968018131453034;0,696424074540418;0,697345912720554;0,002920450812387845;21
201,68301696777343;76,37778936475165;0,25403847694396975;0,03946664898184226;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.005;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.005, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,7050232909480045;0,6923076923076923;0,6951649458574667;0,6942835557794007;0,6998237219843868;0,6973206413753903;0,004573768542729863;22
0,28379087448120116;0,08256094334627578;7,8419900894165036;0,9442234546005357;KNeighborsClassifier();kd_tree;minkowski;-1;8;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': KNeighborsClassifier(), 'classifier__estimator__algorithm': 'kd_tree', 'classifier__estimator__metric': 'minkowski', 'classifier__estimator__n_jobs': -1, 'classifier__estimator__n_neighbors': 8};0,6978471610222837;0,693314868437618;0,6945353815159909;0,7015865021405188;0,6966759002770083;0,6967919626786839;0,002873912510205713;23
3,515431785583496;0,3546013911128245;7,834051465988159;0,6911517057599805;KNeighborsClassifier();kd_tree;euclidean;-1;8;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': KNeighborsClassifier(), 'classifier__estimator__algorithm': 'kd_tree', 'classifier__estimator__metric': 'euclidean', 'classifier__estimator__n_jobs': -1, 'classifier__estimator__n_neighbors': 8};0,6978471610222837;0,693314868437618;0,6945353815159909;0,7015865021405188;0,6966759002770083;0,6967919626786839;0,002873912510205713;23
162,27568836212157;26,864007600781633;0,24082765579223633;0,004040019462474641;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.01;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.01, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,701246380460783;0,691552310210248;0,694661294384286;0,6970536388818938;0,6986905061697305;0,6966408260213883;0,0033284913557060343;25
34,78301248550415;9,025405238601797;0,34369568824768065;0,23918945893400254;MLPClassifier();;;;;;;;;;;;relu;True;(50, 100, 50);1000;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__max_iter': 1000};0,7057786730454488;0,6923076923076923;0,6990682447746159;0,6903802568622514;0,695542684462352;0,696615510290472;0,005450983296035356;26
168,95624146461486;49,215570315072505;0,2620495319366455;0,02582018877842034;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.02;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6992320282009317;0,6881530907717487;0,7005791991941577;0,6983127675648452;0,694661294384286;0,6961876760231938;0,00447110659845954;27
1,777289056777954;0,30244709170969986;8,656369352340699;0,668195951306219;KNeighborsClassifier();kd_tree;euclidean;-1;14;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': KNeighborsClassifier(), 'classifier__estimator__algorithm': 'kd_tree', 'classifier__estimator__metric': 'euclidean', 'classifier__estimator__n_jobs': -1, 'classifier__estimator__n_neighbors': 14};0,6975953669898023;0,6848797683494902;0,6950390329891715;0,6954167715940569;0,7002014605892722;0,6946264801023586;0,00520937323100726;28
1,1987189769744873;0,16278280412046606;9,954412937164307;0,6950154741973888;KNeighborsClassifier();kd_tree;minkowski;-1;14;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': KNeighborsClassifier(), 'classifier__estimator__algorithm': 'kd_tree', 'classifier__estimator__metric': 'minkowski', 'classifier__estimator__n_jobs': -1, 'classifier__estimator__n_neighbors': 14};0,6975953669898023;0,6848797683494902;0,6950390329891715;0,6954167715940569;0,7002014605892722;0,6946264801023586;0,00520937323100726;28
147,12505655288697;36,36487977780766;0,2621451854705811;0,031752470655655805;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.4;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6996097192496538;0,6900415460153594;0,6983127675648452;0,689247041047595;0,6952908587257618;0,694500386520643;0,0042129152324666885;30
171,30825486183167;52,574433764999156;0,2384307861328125;0,004480976231212174;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.005;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.005, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6896638549666373;0,6936925594863401;0,6965499874087132;0,6985645933014354;0,6935280785696298;0,6943998147465511;0,0030218561147263125;31
218,17680530548097;54,6636407586372;0,2339526653289795;0,013252332498919737;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.4;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6974694699735616;0,7003651013470981;0,6879879123646436;0,6923948627549735;0,6877360866280534;0,693190686613666;0,0050445033514035075;32
155,43676290512084;50,13503763547298;0,2553368091583252;0,030324108709900648;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.01;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.01, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6901674430316002;0,6914264131940073;0,6970536388818938;0,6888693024427096;0,6945353815159909;0,6924104358132402;0,0029870946305040006;33
211,08818135261535;58,09901012315994;0,23062915802001954;0,013919299464421345;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.01;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.01, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6920558982752109;0,686264635528138;0,6912616469403173;0,696424074540418;0,6954167715940569;0,6922846053756283;0,0035856507930627527;34
192,92162642478942;44,5650902382594;0,2224102020263672;0,0019924373591825285;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.005;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.005, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6925594863401737;0,6846279743170087;0,6891211281792999;0,6945353815159909;0,6928985142281541;0,6907484969161255;0,0035313418979371395;35
232,2374304294586;58,904718718007885;0,23927783966064453;0,027492023056879873;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.4;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6952033236812287;0,6910487221452851;0,6889952153110048;0,6832032233694284;0,6939058171745153;0,6904712603362925;0,00423143324618731;36
188,13774151802062;41,57830393872096;0,27660741806030276;0,057504155574561906;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.02;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6963363968273952;0,6877753997230266;0,6931503399647444;0,6761521027449006;0,6935280785696298;0,6893884635659393;0,007174470374464639;37
18,24496555328369;10,93041210031912;0,8455193042755127;0,2382834917586572;MLPClassifier();;;;;;;;;;;;relu;True;(100,);1000;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__max_iter': 1000};0,682235931008435;0,6872718116580637;0,7012087635356333;0,686476957945102;0,6886174767061194;0,6891621881706708;0,006390206751028994;38
173,07147979736328;27,77661052685489;0,25177907943725586;0,05021359431757471;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.02;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6899156489991187;0,6910487221452851;0,6888693024427096;0,6770334928229665;0,6950390329891715;0,6883812398798502;0,006046580031728788;39
177,427313041687;62,70501164490717;0,27847514152526853;0,06198501370464353;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.01;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.01, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6901674430316002;0,6924335893239331;0,681944094686477;0,6809367917401158;0,6944094686476958;0,6879782774859644;0,005513553349430721;40
171,50487475395204;34,629623205816685;0,23518285751342774;0,01993938023790489;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.005;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.005, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,688027193755508;0,6902933400478408;0,6871065222865776;0,6725006295643414;0,6921430370183833;0,6860141445345302;0,006981913498297336;41
241,14846940040587;47,30568546900958;0,2646818161010742;0,027215966950517968;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.4;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6899156489991187;0,6773259473750473;0,683832787710904;0,6766557542180811;0,6803072273986401;0,6816074731403583;0,00486866374257022;42
271,9545428752899;54,2441061665582;0,26381611824035645;0,041742961337307;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.02;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6848797683494902;0,6823618280246758;0,6766557542180811;0,676529841349786;0,6740115839838832;0,6788877551851832;0,004056896237569264;43
252,19326453208924;20,9687110535067;0,2907299518585205;0,0357352953286624;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.01;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.01, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6842502832682865;0,6768223593100844;0,676529841349786;0,676529841349786;0,6740115839838832;0,6776287818523652;0,003463930114592836;44
239,0783945083618;59,15419560681826;0,24578728675842285;0,007283166646043362;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.005;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.005, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6850056653657308;0,6764446682613622;0,6770334928229665;0,676529841349786;0,660412994208008;0,6750853324015706;0,00801773338662196;45
3,1576295375823973;0,36038012277176595;0,33664827346801757;0,21600854238500436;DecisionTreeClassifier();;;;;gini;100;42;best;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__criterion': 'gini', 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,676570565277603;0,6745562130177515;0,6806849660035256;0,6697305464618484;0,6646940317300428;0,6732472644981542;0,005542601817071421;46
1,3729808807373047;0,10276022162201492;0,14727072715759276;0,06111700099306722;DecisionTreeClassifier();;;;;entropy;100;42;best;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6755633891476772;0,6784590205212137;0,6779148829010325;0,6678418534374213;0,6651976832032234;0,6729953658421136;0,00544078043823736;47
210,34789462089537;69,78723741894221;0,25681405067443847;0,04762873774254999;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.01;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.01, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,67959209366738;0,676948256326325;0,663938554520272;0,6654495089398137;0,6583983883152859;0,6688653603538153;0,00807335091696236;48
223,46076464653015;95,32463970520432;0,22759909629821778;0,010835090755140017;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.005;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.005, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6798438876998615;0,6758151831801587;0,6633089901787963;0,6653235960715185;0,6592797783933518;0,6687142871047373;0,007797624120800757;49
193,91886315345764;35,08992427593361;0,2476728916168213;0,02117943121052321;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.02;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,67959209366738;0,6705275084980485;0,663938554520272;0,6644422059934525;0,6599093427348275;0,6676819410827961;0,006853774142576821;50
0,6017360210418701;0,16259685595858472;0,08484516143798829;0,049870117406560006;LinearSVC();;;;;;;42;;0.01;False;l1;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__dual': False, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6729195518066222;0,6623442024424021;0,6635608159153865;0,6644422059934525;0,6663308990178797;0,6659195350351486;0,003733591173637671;51
4,65107831954956;1,0936009144163346;0,47342877388000487;0,3315968301701956;MLPClassifier();;;;;;;;;;;;logistic;True;(100,);1000;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__max_iter': 1000};0,6696462293843636;0,6637290696210499;0,6651976832032234;0,665827247544699;0,663057164442206;0,6654914788391084;0,002301867999146831;52
0,5409261226654053;0,19944002157553148;0,06889801025390625;0,019797930014644204;LinearSVC();;;;;;;42;;1.0;False;l2;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__dual': False, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6702757144655672;0,6613370263124764;0,6643162931251574;0,665827247544699;0,664945857466633;0,6653404277829067;0,0028922589436511078;53
0,7060564041137696;0,11840428676348991;0,06344437599182129;0,02200352841555237;LinearSVC();;;;;;;42;;1.0;False;l1;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__dual': False, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6705275084980485;0,6615888203449578;0,6640644673885671;0,6655754218081088;0,664945857466633;0,6653404151012631;0,0029264089791877722;54
0,6653603553771973;0,06558665648481349;0,17345633506774902;0,1047488036406514;LinearSVC();;;;;;;42;;0.001;False;l1;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__dual': False, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6705275084980485;0,6620924084099207;0,6673382019642408;0,6635608159153865;0,6626794258373205;0,6652396721249835;0,003213836620387171;55
0,7419918060302735;0,1989106380142205;0,10133724212646485;0,04299687542400047;LinearSVC();;;;;;;42;;0.1;False;l1;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__dual': False, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6706534055142893;0,6615888203449578;0,6645681188617477;0,664945857466633;0,6643162931251574;0,665214499062557;0,0029672882950932105;56
0,4279653549194336;0,12103014863533143;0,10815210342407226;0,045395029767378574;LinearSVC();;;;;;;42;;0.1;False;l2;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__dual': False, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,669898023416845;0,6615888203449578;0,6641903802568623;0,6650717703349283;0,6643162931251574;0,6650130574957501;0,002711236534871891;57
0,46802501678466796;0,15866396749199785;0,08466391563415528;0,037084747035876615;LinearSVC();;;;;;;42;;0.01;False;l2;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__dual': False, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6706534055142893;0,6618406143774392;0,6635608159153865;0,6653235960715185;0,6631830773105011;0,6649123018378269;0,0030783576754276204;58
24,568776893615723;8,806049487593384;0,9884335041046143;0,2708603748818244;MLPClassifier();;;;;;;;;;;;logistic;True;(200, 100);1000;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__max_iter': 1000};0,6687649502706786;0,6617147173611986;0,6640644673885671;0,664945857466633;0,6643162931251574;0,664761257122447;0,00228160248602873;59
15,828156137466431;13,846786515485798;0,6589279174804688;0,36535985942929844;MLPClassifier();;;;;;;;;;;;logistic;True;(50, 100, 50);1000;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__max_iter': 1000};0,6618406143774392;0,6608334382475135;0,6631830773105011;0,6704860236716192;0,665827247544699;0,6644340802303544;0,0034589776150285127;60
0,5496145248413086;0,15106961878867461;0,08371095657348633;0,04898901984617939;LinearSVC();;;;;;;42;;0.001;False;l2;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__dual': False, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6702757144655672;0,6639808636535314;0,6607907328128935;0,6638126416519768;0,66217577436414;0,6642071453896218;0,0032506217986785087;61
1,9425318241119385;0,4690792008585662;0,16004462242126466;0,0855257562267833;DecisionTreeClassifier();;;;;entropy;50;42;best;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6652398338159385;0,662847790507365;0,6711155880130949;0,6581465625786955;0,6597834298665324;0,6634266409563253;0,004558395721060721;62
161,00286254882812;31,78883137217761;0,22944283485412598;0,006523741260069708;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.4;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,67430441898527;0,6476142515422384;0,6636867287836817;0,66217577436414;0,6581465625786955;0,661185547250805;0,008634312357430765;63
3,441661071777344;0,4453688601928939;0,5101826667785645;0,1236199419355469;DecisionTreeClassifier();;;;;gini;50;42;best;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__criterion': 'gini', 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6613370263124764;0,6588190859876621;0,6722488038277512;0,6587761269201713;0,6534877864517754;0,6609337658999672;0,00620906739066381;64
2,333242416381836;0,1531313004396533;0,10466384887695312;0,060190095569385205;DecisionTreeClassifier();;;;;entropy;2;42;best;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6419488858114063;0,6435855470225356;0,6465625786955427;0,6436665827247545;0,6474439687736087;0,6446415126055696;0,002042549687695712;65
4,0983494281768795;0,23778046267054376;0,5550378799438477;0,15121949548884042;DecisionTreeClassifier();;;;;gini;2;42;best;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__criterion': 'gini', 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6405640186327584;0,6308699483822233;0,6430370183832788;0,6414001510954419;0,6304457315537648;0,6372633736094935;0,005453407904208993;66
0,23417997360229492;0,03132901680043145;0,05401206016540527;0,0094813500073687;GaussianNB();;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': GaussianNB()};0,6362835200805741;0,6384237693566662;0,6249055653487786;0,6308234701586503;0,6401410224124906;0,6341154694714319;0,005571871732447436;67
1,8085095882415771;0,31835837898133756;0,0;0,0;DecisionTreeClassifier();;;;;gini;1;42;best;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__criterion': 'gini', 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;68
0,9433739185333252;0,09295153181128842;0,0;0,0;DecisionTreeClassifier();;;;;entropy;1;42;best;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;69
