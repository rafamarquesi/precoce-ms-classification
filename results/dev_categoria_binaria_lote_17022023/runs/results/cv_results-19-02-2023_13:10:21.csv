mean_fit_time;std_fit_time;mean_score_time;std_score_time;param_classifier__estimator;param_classifier__estimator__algorithm;param_classifier__estimator__metric;param_classifier__estimator__n_jobs;param_classifier__estimator__n_neighbors;param_classifier__estimator__criterion;param_classifier__estimator__min_samples_split;param_classifier__estimator__random_state;param_classifier__estimator__splitter;param_classifier__estimator__C;param_classifier__estimator__dual;param_classifier__estimator__penalty;param_classifier__estimator__activation;param_classifier__estimator__early_stopping;param_classifier__estimator__hidden_layer_sizes;param_classifier__estimator__max_iter;param_classifier__estimator__n_estimators;param_classifier__estimator__max_delta_step;param_classifier__estimator__min_child_weight;param_classifier__estimator__objective;param_classifier__estimator__tree_method;param_classifier__estimator__clip_value;param_classifier__estimator__mask_type;param_classifier__estimator__momentum;param_classifier__estimator__optimizer_fn;param_classifier__estimator__optimizer_params;param_classifier__estimator__scheduler_fn;param_classifier__estimator__scheduler_params;param_classifier__estimator__seed;param_classifier__estimator__verbose;params;split0_test_score;split1_test_score;split2_test_score;split3_test_score;split4_test_score;mean_test_score;std_test_score;rank_test_score
3,3437829971313477;0,23186945230246456;0,9669471263885498;0,06224364656710228;"RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42)";;;-1;;entropy;;42;;;;;;;;;700;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42), 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__n_estimators': 700, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,7392672793654791;0,733098325569684;0,7364643666582725;0,7340720221606648;0,7331906320825988;0,7352185251673398;0,0023607878947010394;1
5,340681886672973;0,05088215421071889;1,5690461158752442;0,017837640998760573;"RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42)";;;-1;;entropy;;42;;;;;;;;;1200;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42), 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__n_estimators': 1200, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,7387636913005162;0,733979604683369;0,7359607151850919;0,7348274993704357;0,7313019390581718;0,734966689919517;0,002442515746684834;2
3,5517687797546387;0,2690512695238037;0,9788015842437744;0,02932922536120202;"RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42)";;;-1;;gini;;42;;;;;;;;;700;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42), 'classifier__estimator__criterion': 'gini', 'classifier__estimator__n_estimators': 700, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,7372529271056276;0,7347349867808133;0,7364643666582725;0,7325610677411232;0,732435154872828;0,7346897006317329;0,001966503234653279;3
6,001297807693481;0,49902862434359696;1,699587917327881;0,02587410058725071;"RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42)";;;-1;;gini;;42;;;;;;;;;1200;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42), 'classifier__estimator__criterion': 'gini', 'classifier__estimator__n_estimators': 1200, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,7391413823492383;0,733979604683369;0,7353311508436162;0,7320574162679426;0,7321833291362377;0,7345385766560808;0,002601145574910443;4
1,0152583599090577;0,02553640547285444;0,24153532981872558;0,007723115878974762;"RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42)";;;-1;;entropy;;42;;;;;;;;;120;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42), 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__n_estimators': 120, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,7405262495278861;0,7268034747576483;0,7363384537899773;0,7310501133215814;0,7347015865021406;0,7338839755798467;0,004668554836285777;5
0,8682588100433349;0,07952462585154717;0,20926170349121093;0,0056963041230611005;"RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42)";;;-1;;gini;;42;;;;;;;;;120;;;;;;;;;;;;;;"{'classifier__estimator': RandomForestClassifier(criterion='entropy', n_estimators=700, n_jobs=-1,
                       random_state=42), 'classifier__estimator__criterion': 'gini', 'classifier__estimator__n_estimators': 120, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__random_state': 42}";0,736623442024424;0,7295732091149439;0,7350793251070259;0,7331906320825988;0,7301687232435154;0,7329270663145016;0,0027284315210500346;6
0,6445724487304687;0,0407603833449528;0,02491793632507324;0,0020286591217071603;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;-1;;;;42;;;;;;;;;100;1.0;7;binary:logistic;hist;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__min_child_weight': 7, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__tree_method': 'hist'}";0,7080448193377817;0,7081707163540224;0,7117854444724251;0,7110299672626542;0,7059934525308487;0,7090048799915464;0,0021222044233318235;7
0,43663887977600097;0,035316892013145675;0,02684941291809082;0,004706025261234799;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;-1;;;;42;;;;;;;;;50;1.0;7;binary:logistic;hist;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__min_child_weight': 7, 'classifier__estimator__n_estimators': 50, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__tree_method': 'hist'}";0,7074153342565781;0,7038902178018381;0,71165953160413;0,7091412742382271;0,7071266683455049;0,7078466052492557;0,002552327589761548;8
0,8698315143585205;0,060190211844790044;0,0271484375;0,0033519182324477964;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;-1;;;;42;;;;;;;;;150;1.0;7;binary:logistic;hist;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__min_child_weight': 7, 'classifier__estimator__n_estimators': 150, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__tree_method': 'hist'}";0,7099332745813924;0,7048973939317639;0,7061193653991438;0,7093930999748175;0,7076303198186855;0,7075946907411605;0,0019055977814554632;9
0,6970941543579101;0,08833982821115739;0,024654197692871093;0,0018298783186693594;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;-1;;;;42;;;;;;;;;100;1.0;1;binary:logistic;hist;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__min_child_weight': 1, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__tree_method': 'hist'}";0,7090519954677074;0,7046455998992824;0,7091412742382271;0,7073784940820952;0,7048602367161924;0,7070155200807009;0,0019524129129583844;10
1,087365198135376;0,02524491637821458;0,03132419586181641;0,0033223617531124637;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;-1;;;;42;;;;;;;;;200;1.0;7;binary:logistic;hist;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__min_child_weight': 7, 'classifier__estimator__n_estimators': 200, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__tree_method': 'hist'}";0,7067858491753746;0,7069117461916152;0,7076303198186855;0,7086376227650466;0,7043565852430118;0,7068644246387468;0,0014162273044520052;11
1,1018400192260742;0,05596232744555526;0,03224492073059082;0,0031190225570233393;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;-1;;;;42;;;;;;;;;200;1.0;1;binary:logistic;hist;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__min_child_weight': 1, 'classifier__estimator__n_estimators': 200, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__tree_method': 'hist'}";0,7060304670779303;0,7055268790129674;0,7067489297406195;0,7061193653991438;0,7067489297406195;0,7062349141942562;0,00046580852915655875;12
0,8552499294281006;0,05566990708039069;0,025671958923339844;0,001704298293865232;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;-1;;;;42;;;;;;;;;150;1.0;1;binary:logistic;hist;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__min_child_weight': 1, 'classifier__estimator__n_estimators': 150, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__tree_method': 'hist'}";0,7082966133702632;0,7042679088505602;0,7070007554772098;0,7067489297406195;0,7033492822966507;0,7059326979470607;0,0018352458426700734;13
0,45421314239501953;0,05389245537071675;0,030365133285522462;0,0015467087863685251;"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...)";;;-1;;;;42;;;;;;;;;50;1.0;1;binary:logistic;hist;;;;;;;;;;"{'classifier__estimator': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=None,
              num_parallel_tree=None, predictor=None, random_state=None,
              reg_alpha=None, reg_lambda=None, ...), 'classifier__estimator__max_delta_step': 1.0, 'classifier__estimator__min_child_weight': 1, 'classifier__estimator__n_estimators': 50, 'classifier__estimator__n_jobs': -1, 'classifier__estimator__objective': 'binary:logistic', 'classifier__estimator__random_state': 42, 'classifier__estimator__tree_method': 'hist'}";0,7036384237693567;0,7033866297368753;0,709896751447998;0,7048602367161924;0,7057416267942583;0,7055047336929362;0,0023550283121353986;14
20,568707132339476;6,005945721007121;0,07017078399658203;0,006926737465912967;MLPClassifier();;;;;;;;;;;;relu;True;(200, 100);1000;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__max_iter': 1000};0,7091778924839481;0,7003651013470981;0,7014605892722237;0,6889952153110048;0,7190883908335431;0,7038174378495635;0,009991077243736367;15
14,66126890182495;2,9863132924284086;0,042261266708374025;0,008664695161099033;MLPClassifier();;;;;;;;;;;;relu;True;(50, 100, 50);1000;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__max_iter': 1000};0,7035125267531159;0,7055268790129674;0,6949131201208764;0,7033492822966507;0,7009569377990431;0,7016517491965307;0,0036674958086591962;16
0,26755638122558595;0,012175590054658757;0,7175988674163818;0,07167424394536548;KNeighborsClassifier();kd_tree;euclidean;-1;5;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': KNeighborsClassifier(), 'classifier__estimator__algorithm': 'kd_tree', 'classifier__estimator__metric': 'euclidean', 'classifier__estimator__n_jobs': -1, 'classifier__estimator__n_neighbors': 5};0,7091778924839481;0,6992320282009317;0,6957945101989423;0,6950390329891715;0,7020901536136993;0,7002667234973385;0,0051212081443562235;17
0,26537504196166994;0,03355304305988272;0,8207021713256836;0,11810514506360349;KNeighborsClassifier();kd_tree;minkowski;-1;5;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': KNeighborsClassifier(), 'classifier__estimator__algorithm': 'kd_tree', 'classifier__estimator__metric': 'minkowski', 'classifier__estimator__n_jobs': -1, 'classifier__estimator__n_neighbors': 5};0,7091778924839481;0,6992320282009317;0,6957945101989423;0,6950390329891715;0,7020901536136993;0,7002667234973385;0,0051212081443562235;17
0,2682197093963623;0,009728098322454401;0,7830324649810791;0,05136000660282955;KNeighborsClassifier();kd_tree;euclidean;-1;11;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': KNeighborsClassifier(), 'classifier__estimator__algorithm': 'kd_tree', 'classifier__estimator__metric': 'euclidean', 'classifier__estimator__n_jobs': -1, 'classifier__estimator__n_neighbors': 11};0,6987284401359688;0,6931889714213774;0,6935280785696298;0,7009569377990431;0,7012087635356333;0,6975222382923305;0,003509218306798865;19
0,2686923027038574;0,02171351286653568;0,8052885055541992;0,07130392162709641;KNeighborsClassifier();kd_tree;minkowski;-1;11;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': KNeighborsClassifier(), 'classifier__estimator__algorithm': 'kd_tree', 'classifier__estimator__metric': 'minkowski', 'classifier__estimator__n_jobs': -1, 'classifier__estimator__n_neighbors': 11};0,6987284401359688;0,6931889714213774;0,6935280785696298;0,7009569377990431;0,7012087635356333;0,6975222382923305;0,003509218306798865;19
0,26363625526428225;0,0177310246816014;0,7676827907562256;0,04370588310027122;KNeighborsClassifier();kd_tree;minkowski;-1;8;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': KNeighborsClassifier(), 'classifier__estimator__algorithm': 'kd_tree', 'classifier__estimator__metric': 'minkowski', 'classifier__estimator__n_jobs': -1, 'classifier__estimator__n_neighbors': 8};0,6978471610222837;0,693314868437618;0,6945353815159909;0,7015865021405188;0,6966759002770083;0,6967919626786839;0,002873912510205713;21
0,2666028022766113;0,007222822667026843;0,6949948310852051;0,040765403872392546;KNeighborsClassifier();kd_tree;euclidean;-1;8;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': KNeighborsClassifier(), 'classifier__estimator__algorithm': 'kd_tree', 'classifier__estimator__metric': 'euclidean', 'classifier__estimator__n_jobs': -1, 'classifier__estimator__n_neighbors': 8};0,6978471610222837;0,693314868437618;0,6945353815159909;0,7015865021405188;0,6966759002770083;0,6967919626786839;0,002873912510205713;21
1275,9558017253876;278,26380780550403;6,133928918838501;0,5590892791768626;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.01;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.01, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,7037643207855974;0,6934407654538588;0,6926466884915639;0,6944094686476958;0,6956685973306472;0,6959859681418726;0,004017902190027435;23
1316,4451011657716;320,2549616512598;5,784001684188842;0,4395385165515017;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.02;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,7036384237693567;0,6931889714213774;0,6939058171745153;0,6867287836816923;0,7004532863258625;0,6955830564745609;0,005925386108273481;24
0,26712703704833984;0,010675760090571059;0,7646374225616455;0,043287758337718564;KNeighborsClassifier();kd_tree;euclidean;-1;14;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': KNeighborsClassifier(), 'classifier__estimator__algorithm': 'kd_tree', 'classifier__estimator__metric': 'euclidean', 'classifier__estimator__n_jobs': -1, 'classifier__estimator__n_neighbors': 14};0,6975953669898023;0,6848797683494902;0,6950390329891715;0,6954167715940569;0,7002014605892722;0,6946264801023586;0,00520937323100726;25
0,2693941593170166;0,0074793762129941885;0,820854902267456;0,02364465796790665;KNeighborsClassifier();kd_tree;minkowski;-1;14;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': KNeighborsClassifier(), 'classifier__estimator__algorithm': 'kd_tree', 'classifier__estimator__metric': 'minkowski', 'classifier__estimator__n_jobs': -1, 'classifier__estimator__n_neighbors': 14};0,6975953669898023;0,6848797683494902;0,6950390329891715;0,6954167715940569;0,7002014605892722;0,6946264801023586;0,00520937323100726;25
1248,7640191555024;145,33812045416184;6,133759593963623;0,3189754947515036;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.005;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.005, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,7031348357043938;0,6870200176255823;0,6995718962477965;0,692772601359859;0,6877360866280534;0,6940470875131369;0,006386602180710224;27
1322,4148040294647;270,39463354281946;5,860684967041015;0,4216688254189471;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.4;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,701246380460783;0,6852574593982123;0,6975572903550743;0,6959204230672374;0,6884915638378242;0,6936946234238262;0,00591880021744603;28
1254,6767227172852;84,96893979979843;5,6727001667022705;0,4335674135293844;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.01;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.01, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6987284401359688;0,6868941206093415;0,6985645933014354;0,6917652984134979;0,6908839083354319;0,6933672721591352;0,004612794725135999;29
1315,6603820323944;316,4746917400586;5,359452247619629;0,5718572276606301;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.005;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.005, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6954551177137102;0,6979730580385245;0,6881138252329388;0,6921430370183833;0,6931503399647444;0,6933670755936603;0,003308077335750397;30
1279,4335954666137;63,72526637778768;5,933778142929077;0,16625685626321807;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.02;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6984766461034874;0,6886566788367116;0,6956685973306472;0,692772601359859;0,6893729539158902;0,6929894955093191;0,0037198420584649127;31
1128,6400036334992;229,5960477807006;5,62509503364563;0,5133007020127147;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.4;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6965881908598767;0,6834949011708422;0,6962981616721229;0,6891211281792999;0,6976832032233694;0,6926371170211022;0,00548487933441292;32
1214,6875799655913;131,1186871993098;5,570681142807007;0,2264120322722938;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.005;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.005, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6983507490872466;0,6865164295606194;0,6952908587257618;0,691891211281793;0,6897506925207756;0,6923599882352393;0,004138950866088773;33
1733,689357471466;208,00968712270003;5,864477157592773;0,44475652803324545;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.4;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6921817952914516;0,6904192370640816;0,6926466884915639;0,691009821203727;0,6911357340720221;0,6914786552245692;0,0008146747524252688;34
1279,9629951953889;207,51297802390206;5,81742582321167;0,19530993023416762;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.02;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6931889714213774;0,6884048848042301;0,6891211281792999;0,6917652984134979;0,6945353815159909;0,6914031328668793;0,0023378794521987057;35
1260,4771498680116;206,72558750344857;5,9097514152526855;0,3860258705449247;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.4;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6935666624700995;0,6885307818204709;0,6898766053890708;0,6915134726769075;0,6893729539158902;0,6905720952544877;0,0017856220708194228;36
1405,968817138672;295,3230037888659;5,975754833221435;0,30710870247084365;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.02;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6994838222334131;0,6782072264887322;0,6903802568622514;0,6931503399647444;0,6879879123646436;0,689841911582757;0,006971444116276292;37
1302,6507343769074;330,11299459282276;5,591695308685303;0,3321201850925052;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.005;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.005, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6946997356162659;0,6727936547903814;0,6952908587257618;0,6935280785696298;0,6898766053890708;0,689237786618222;0,008434414441062413;38
1056,9809976100921;175,89340695816873;5,87988314628601;0,4752587715488916;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.01;<class 'torch.optim.adam.Adam'>;{'lr': 0.02};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.01, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.02}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6904192370640816;0,6873977086743044;0,688239738101234;0,6809367917401158;0,6950390329891715;0,6884065017137815;0,004580035268401808;39
1232,06944231987;297,1972328978272;5,8953132152557375;0,35715803546284525;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.01;<class 'torch.optim.adam.Adam'>;{'lr': 0.01};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.01, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.01}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6926853833564145;0,6746821100339921;0,6897506925207756;0,694661294384286;0,6898766053890708;0,6883312171369078;0,007067247007810912;40
6,3256998538970945;2,764149087289091;0,03997259140014649;0,003951812384171693;MLPClassifier();;;;;;;;;;;;relu;True;(100,);1000;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'relu', 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__max_iter': 1000};0,6829913131058793;0,6790885056024172;0,6912616469403173;0,697305464618484;0,6889952153110048;0,6879284291156205;0,006367048466729753;41
1459,639045906067;578,5663524492754;5,727275037765503;0,43661263331028505;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.005;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.005, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6680095681732343;0,673926727936548;0,683706874842609;0,6723747166960463;0,6835809619743137;0,6763197699245502;0,006287189787712807;42
1464,3882512092591;580,1050479426357;6,065623664855957;0,23506900734539302;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.01;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.01, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6683872592219564;0,6731713458391037;0,6833291362377235;0,6721228909594561;0,683832787710904;0,6761686839938287;0,006259610385547054;43
1460,197644853592;589,0821729267365;5,6241679191589355;0,1338791488568915;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.02;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6688908472869193;0,673926727936548;0,683706874842609;0,6672122890959457;0,6839587005791992;0,6755390879482441;0,007123721042151278;44
0,41491117477416994;0,05491295206130309;0,03076462745666504;0,0032789199967054334;DecisionTreeClassifier();;;;;gini;100;42;best;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__criterion': 'gini', 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,676570565277603;0,6745562130177515;0,6806849660035256;0,6697305464618484;0,6646940317300428;0,6732472644981542;0,005542601817071421;45
1305,5782657146453;273,9713129158686;5,437203025817871;0,27645368170981327;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;entmax;0.4;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'entmax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6659952159133828;0,6677577741407529;0,685595567867036;0,668471417778897;0,6771594056912617;0,672995876278266;0,00738924745241327;46
0,45988049507141116;0,0152661900189572;0,031761980056762694;0,0028411471655329125;DecisionTreeClassifier();;;;;entropy;100;42;best;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__min_samples_split': 100, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6755633891476772;0,6784590205212137;0,6779148829010325;0,6678418534374213;0,6651976832032234;0,6729953658421136;0,00544078043823736;47
1978,2211919307708;860,1007009627299;5,923284864425659;0,4690861837912864;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.02;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.02, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6887825758529523;0,6675059801082714;0,6750188869302443;0,6481994459833795;0,6746411483253588;0,6708296074400414;0,01324807674794746;48
1652,5791764259338;263,74335485615205;5,356551837921143;0,2466514325927284;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.4;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.4, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6797179906836208;0,6662470099458643;0,6692268949886678;0,6668345504910602;0,6680936791740116;0,6700240250566449;0,004955264116077765;49
3,4936418533325195;1,3791917664244826;0,03248839378356934;0,003353412798921902;MLPClassifier();;;;;;;;;;;;logistic;True;(100,);1000;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (100,), 'classifier__estimator__max_iter': 1000};0,6710310965630114;0,6615888203449578;0,6664568118861748;0,6663308990178797;0,6651976832032234;0,6661210622030495;0,0030218882107762263;50
12,038626432418823;4,641200630491717;0,08552765846252441;0,008715382607812851;MLPClassifier();;;;;;;;;;;;logistic;True;(200, 100);1000;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (200, 100), 'classifier__estimator__max_iter': 1000};0,6715346846279743;0,6651139367996979;0,6624276001007303;0,6674641148325359;0,6635608159153865;0,6660202304552649;0,003233298249504631;51
0,31948189735412597;0,06560120611911578;0,021473073959350587;0,0023676231087269607;LinearSVC();;;;;;;42;;0.01;False;l1;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__dual': False, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6729195518066222;0,6623442024424021;0,6635608159153865;0,6644422059934525;0,6663308990178797;0,6659195350351486;0,003733591173637671;52
0,285023832321167;0,01836027646282475;0,024596500396728515;0,00337270583167012;LinearSVC();;;;;;;42;;1.0;False;l2;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__dual': False, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6702757144655672;0,6613370263124764;0,6643162931251574;0,665827247544699;0,664945857466633;0,6653404277829067;0,0028922589436511078;53
0,5011183738708496;0,03462960229767809;0,023871326446533205;0,002193150673923584;LinearSVC();;;;;;;42;;1.0;False;l1;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 1.0, 'classifier__estimator__dual': False, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6705275084980485;0,6615888203449578;0,6640644673885671;0,6655754218081088;0,664945857466633;0,6653404151012631;0,0029264089791877722;54
0,1766993522644043;0,019547660815766185;0,02558145523071289;0,007071742919673009;LinearSVC();;;;;;;42;;0.001;False;l1;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__dual': False, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6705275084980485;0,6620924084099207;0,6673382019642408;0,6635608159153865;0,6626794258373205;0,6652396721249835;0,003213836620387171;55
0,38344435691833495;0,06786735269888824;0,019512939453125;0,0009877808323978247;LinearSVC();;;;;;;42;;0.1;False;l1;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__dual': False, 'classifier__estimator__penalty': 'l1', 'classifier__estimator__random_state': 42};0,6706534055142893;0,6615888203449578;0,6645681188617477;0,664945857466633;0,6643162931251574;0,665214499062557;0,0029672882950932105;56
0,24680938720703124;0,00508699641091168;0,020586490631103516;0,0016884594506359613;LinearSVC();;;;;;;42;;0.1;False;l2;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.1, 'classifier__estimator__dual': False, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,669898023416845;0,6615888203449578;0,6641903802568623;0,6650717703349283;0,6643162931251574;0,6650130574957501;0,002711236534871891;57
0,20783071517944335;0,01335889768567852;0,01955256462097168;0,002235629363950316;LinearSVC();;;;;;;42;;0.01;False;l2;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.01, 'classifier__estimator__dual': False, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6706534055142893;0,6618406143774392;0,6635608159153865;0,6653235960715185;0,6631830773105011;0,6649123018378269;0,0030783576754276204;58
1642,4423007488251;914,7069827320211;5,842995309829712;0,2332870341512989;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.01;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.01, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6598262621175878;0,6667505980108271;0,6742634097204734;0,647695794510199;0,6746411483253588;0,6646354425368892;0,010073387460691266;59
6,994271516799927;1,6651886915219785;0,05215263366699219;0,012348237302104407;MLPClassifier();;;;;;;;;;;;logistic;True;(50, 100, 50);1000;;;;;;;;;;;;;;;{'classifier__estimator': MLPClassifier(), 'classifier__estimator__activation': 'logistic', 'classifier__estimator__early_stopping': True, 'classifier__estimator__hidden_layer_sizes': (50, 100, 50), 'classifier__estimator__max_iter': 1000};0,6685131562381972;0,6636031726048093;0,6619239486275498;0,6651976832032234;0,6633089901787963;0,6645093901705152;0,002256128915297191;60
0,1509082794189453;0,006061584930283762;0,019353961944580077;0,0007986160715792821;LinearSVC();;;;;;;42;;0.001;False;l2;;;;;;;;;;;;;;;;;;;{'classifier__estimator': LinearSVC(), 'classifier__estimator__C': 0.001, 'classifier__estimator__dual': False, 'classifier__estimator__penalty': 'l2', 'classifier__estimator__random_state': 42};0,6702757144655672;0,6639808636535314;0,6607907328128935;0,6638126416519768;0,66217577436414;0,6642071453896218;0,0032506217986785087;61
0,5000717163085937;0,007972120528212187;0,03197536468505859;0,002229543797131561;DecisionTreeClassifier();;;;;entropy;50;42;best;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6652398338159385;0,662847790507365;0,6711155880130949;0,6581465625786955;0,6597834298665324;0,6634266409563253;0,004558395721060721;62
1348,4695617675782;481,1569706859791;5,615458869934082;0,10605746538856153;TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1);;;;;;;;;;;;;;;;;;;;;1;sparsemax;0.005;<class 'torch.optim.adam.Adam'>;{'lr': 0.001};<class 'torch.optim.lr_scheduler.StepLR'>;{'step_size': 10, 'gamma': 0.95};42;1;{'classifier__estimator': TabNetClassifierTuner(n_d=8, n_a=8, n_steps=3, gamma=1.3, cat_idxs=[], cat_dims=[], cat_emb_dim=1, n_independent=2, n_shared=2, epsilon=1e-15, momentum=0.02, lambda_sparse=0.001, seed=0, clip_value=1, verbose=1, optimizer_fn=<class 'torch.optim.adam.Adam'>, optimizer_params={'lr': 0.02}, scheduler_fn=None, scheduler_params={}, mask_type='sparsemax', input_dim=None, output_dim=None, device_name='auto', n_shared_decoder=1, n_indep_decoder=1), 'classifier__estimator__clip_value': 1, 'classifier__estimator__mask_type': 'sparsemax', 'classifier__estimator__momentum': 0.005, 'classifier__estimator__optimizer_fn': <class 'torch.optim.adam.Adam'>, 'classifier__estimator__optimizer_params': {'lr': 0.001}, 'classifier__estimator__scheduler_fn': <class 'torch.optim.lr_scheduler.StepLR'>, 'classifier__estimator__scheduler_params': {'step_size': 10, 'gamma': 0.95}, 'classifier__estimator__seed': 42, 'classifier__estimator__verbose': 1};0,6599521591338285;0,6644844517184942;0,6750188869302443;0,6490808360614455;0,6643162931251574;0,6625705253938341;0,008372575279387178;63
0,4242112159729004;0,010074940100132105;0,0287351131439209;0,0030999803199497676;DecisionTreeClassifier();;;;;gini;50;42;best;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__criterion': 'gini', 'classifier__estimator__min_samples_split': 50, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6613370263124764;0,6588190859876621;0,6722488038277512;0,6587761269201713;0,6534877864517754;0,6609337658999672;0,00620906739066381;64
0,6381014823913574;0,07456352039377726;0,03229546546936035;0,001987502012691985;DecisionTreeClassifier();;;;;entropy;2;42;best;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6419488858114063;0,6435855470225356;0,6465625786955427;0,6436665827247545;0,6474439687736087;0,6446415126055696;0,002042549687695712;65
0,5334196567535401;0,06763602709703327;0,03361401557922363;0,0017377727981946372;DecisionTreeClassifier();;;;;gini;2;42;best;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__criterion': 'gini', 'classifier__estimator__min_samples_split': 2, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};0,6405640186327584;0,6308699483822233;0,6430370183832788;0,6414001510954419;0,6304457315537648;0,6372633736094935;0,005453407904208993;66
0,7939794540405274;0,4201396390820661;0,5836597919464112;0,22894559734837458;GaussianNB();;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': GaussianNB()};0,6362835200805741;0,6384237693566662;0,6249055653487786;0,6308234701586503;0,6401410224124906;0,6341154694714319;0,005571871732447436;67
0,12294373512268067;0,009306044510676422;0,0;0,0;DecisionTreeClassifier();;;;;gini;1;42;best;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__criterion': 'gini', 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;69
0,11733522415161132;0,0058717051020117745;0,0;0,0;DecisionTreeClassifier();;;;;entropy;1;42;best;;;;;;;;;;;;;;;;;;;;;;{'classifier__estimator': DecisionTreeClassifier(), 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__min_samples_split': 1, 'classifier__estimator__random_state': 42, 'classifier__estimator__splitter': 'best'};;;;;;;;68
