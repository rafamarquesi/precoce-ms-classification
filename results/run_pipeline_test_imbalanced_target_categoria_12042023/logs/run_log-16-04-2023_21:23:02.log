
*****INICIO LOAD DATA******

*****INICIO PRINT INFOS******
Número total de linhas do DataFrame: 3153593
Número de colunas: 112
Informações do DataFrame:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 3153593 entries, 0 to 3153592
Data columns (total 112 columns):
 #    Column                            Dtype         
---   ------                            -----         
 0    ID_ANIMAL                         uint32        
 1    EstabelecimentoMunicipio          category      
 2    DataAbate                         datetime64[ns]
 3    Frigorifico_ID                    uint8         
 4    Frigorifico_CNPJ                  uint64        
 5    Frigorifico_RazaoSocial           category      
 6    Municipio_Frigorifico             category      
 7    Tipificacao                       category      
 8    Maturidade                        category      
 9    Acabamento                        category      
 10   Peso                              float32       
 11   EstabelecimentoIdentificador      uint16        
 12   Data_homol                        datetime64[ns]
 13   Questionario_ID                   uint16        
 14   QuestionarioClassificacaoEstabel  uint8         
 15   FERTIIRRIGACAO                    uint8         
 16   ILP                               uint8         
 17   IFP                               uint8         
 18   ILPF                              uint8         
 19   CONCEN_VOLUM                      UInt8         
 20   CREEPFEEDING                      UInt8         
 21   FORN_ESTRAT_SILAGEM               UInt8         
 22   PROTEICO                          UInt8         
 23   PROTEICO_ENERGETICO               UInt8         
 24   RACAO_BAL_CONS_INFERIOR           UInt8         
 25   SAL_MINERAL                       UInt8         
 26   SALMINERAL_UREIA                  UInt8         
 27   RACAOO_BAL_CONSUMO_IG             UInt8         
 28   GRAO_INTEIRO                      UInt8         
 29   ALTO_CONCENTR_VOLUM               UInt8         
 30   ALTO_CONCENTRADO                  UInt8         
 31   QuestionarioPossuiOutrosIncentiv  uint8         
 32   QuestionarioFabricaRacao          uint8         
 33   area so confinamento              UInt8         
 34   regua de manejo                   UInt8         
 35   boa cobertura vegetal, com baixa  UInt8         
 36   erosaoo laminar ou em sulco igua  UInt8         
 37   identificacao individual          UInt8         
 38   rastreamento SISBOV               UInt8         
 39   Lista Trace                       UInt8         
 40   BPA                               UInt8         
 41   participa de aliancas mercadolog  UInt8         
 42   QuestionarioPraticaRecuperacaoPa  uint8         
 43   Confinamento                      UInt8         
 44   Suplementacao_a_campo             UInt8         
 45   SemiConfinamento                  UInt8         
 46   dif_datas                         uint16        
 47   DataAbate_6m_ANT                  datetime64[ns]
 48   data_homol_select                 datetime64[ns]
 49   data12m                           datetime64[ns]
 50   data6m                            datetime64[ns]
 51   data3m                            datetime64[ns]
 52   data1m                            datetime64[ns]
 53   data7d                            datetime64[ns]
 54   tot7d_Chuva                       float32       
 55   med7d_TempInst                    float32       
 56   med7d_TempMin                     float32       
 57   med7d_UmidInst                    float32       
 58   med7d_formITUinst                 float32       
 59   med7d_formITUmax                  float32       
 60   med7d_NDVI                        float32       
 61   med7d_EVI                         float32       
 62   med7d_preR_soja                   float32       
 63   med7d_preR_milho                  float32       
 64   med7d_preR_boi                    float32       
 65   tot1m_Chuva                       float32       
 66   med1m_TempInst                    float32       
 67   med1m_UmidInst                    float32       
 68   med1m_formITUinst                 float32       
 69   med1m_NDVI                        float32       
 70   med1m_EVI                         float32       
 71   med1m_preR_soja                   float32       
 72   med1m_preR_milho                  float32       
 73   med1m_preR_boi                    float32       
 74   tot3m_Chuva                       float32       
 75   med3m_TempInst                    float32       
 76   med3m_UmidInst                    float32       
 77   med3m_formITUinst                 float32       
 78   med3m_formITUmax                  float32       
 79   med3m_NDVI                        float32       
 80   med3m_EVI                         float32       
 81   med3m_preR_soja                   float32       
 82   med3m_preR_milho                  float32       
 83   med3m_preR_boi                    float32       
 84   tot6m_Chuva                       float32       
 85   med6m_TempInst                    float32       
 86   med6m_UmidInst                    float32       
 87   med6m_formITUinst                 float32       
 88   med6m_NDVI                        float32       
 89   med6m_EVI                         float32       
 90   med6m_preR_soja                   float32       
 91   med6m_preR_milho                  float32       
 92   med6m_preR_boi                    float32       
 93   tot12m_Chuva                      float32       
 94   med12m_TempInst                   float32       
 95   med12m_TempMin                    float32       
 96   med12m_UmidInst                   float32       
 97   med12m_formITUinst                float32       
 98   med12m_NDVI                       float32       
 99   med12m_EVI                        float32       
 100  med12m_preR_soja                  float32       
 101  med12m_preR_milho                 float32       
 102  med12m_preR_boi                   float32       
 103  cnt7d_CL_ITUinst                  float32       
 104  cnt1m_CL_ITUinst                  float32       
 105  cnt3m_CL_ITUinst                  float32       
 106  cnt6m_CL_ITUinst                  float32       
 107  cnt12m_CL_ITUinst                 float32       
 108  ANO                               uint16        
 109  CATEGORIA                         category      
 110  classificacao                     category      
 111  Motivo                            category      
dtypes: UInt8(24), category(9), datetime64[ns](9), float32(55), uint16(4), uint32(1), uint64(1), uint8(9)
memory usage: 1.1 GB
*****FIM PRINT INFOS*********
Function informations Took 0:00:00.017479

*****INICIO DELETE COLUNAS******
Coluna EstabelecimentoMunicipio excluída.
Coluna Frigorifico_ID excluída.
Coluna Frigorifico_CNPJ excluída.
Coluna Frigorifico_RazaoSocial excluída.
Coluna Municipio_Frigorifico excluída.
Coluna Maturidade excluída.
Coluna Acabamento excluída.
Coluna EstabelecimentoIdentificador excluída.
Coluna Questionario_ID excluída.
Coluna FERTIIRRIGACAO excluída.
Coluna CONCEN_VOLUM excluída.
Coluna CREEPFEEDING excluída.
Coluna FORN_ESTRAT_SILAGEM excluída.
Coluna PROTEICO excluída.
Coluna PROTEICO_ENERGETICO excluída.
Coluna RACAO_BAL_CONS_INFERIOR excluída.
Coluna SAL_MINERAL excluída.
Coluna SALMINERAL_UREIA excluída.
Coluna RACAOO_BAL_CONSUMO_IG excluída.
Coluna GRAO_INTEIRO excluída.
Coluna ALTO_CONCENTR_VOLUM excluída.
Coluna ALTO_CONCENTRADO excluída.
Coluna area so confinamento excluída.
Coluna boa cobertura vegetal, com baixa excluída.
Coluna erosaoo laminar ou em sulco igua excluída.
Coluna Lista Trace excluída.
Coluna BPA excluída.
Coluna dif_datas excluída.
Coluna tot7d_Chuva excluída.
Coluna med7d_TempInst excluída.
Coluna med7d_TempMin excluída.
Coluna med7d_UmidInst excluída.
Coluna med7d_formITUinst excluída.
Coluna med7d_formITUmax excluída.
Coluna med7d_NDVI excluída.
Coluna med7d_EVI excluída.
Coluna med7d_preR_soja excluída.
Coluna med7d_preR_milho excluída.
Coluna med7d_preR_boi excluída.
Coluna tot1m_Chuva excluída.
Coluna med1m_TempInst excluída.
Coluna med1m_UmidInst excluída.
Coluna med1m_formITUinst excluída.
Coluna med1m_NDVI excluída.
Coluna med1m_EVI excluída.
Coluna med1m_preR_soja excluída.
Coluna med1m_preR_milho excluída.
Coluna med1m_preR_boi excluída.
Coluna med3m_TempInst excluída.
Coluna med3m_UmidInst excluída.
Coluna med3m_formITUmax excluída.
Coluna med3m_EVI excluída.
Coluna med3m_preR_soja excluída.
Coluna tot6m_Chuva excluída.
Coluna med6m_TempInst excluída.
Coluna med6m_UmidInst excluída.
Coluna med6m_formITUinst excluída.
Coluna med6m_NDVI excluída.
Coluna med6m_EVI excluída.
Coluna med6m_preR_soja excluída.
Coluna med6m_preR_milho excluída.
Coluna med6m_preR_boi excluída.
Coluna tot12m_Chuva excluída.
Coluna med12m_TempInst excluída.
Coluna med12m_TempMin excluída.
Coluna med12m_UmidInst excluída.
Coluna med12m_formITUinst excluída.
Coluna med12m_NDVI excluída.
Coluna med12m_EVI excluída.
Coluna med12m_preR_soja excluída.
Coluna med12m_preR_milho excluída.
Coluna med12m_preR_boi excluída.
Coluna cnt7d_CL_ITUinst excluída.
Coluna cnt1m_CL_ITUinst excluída.
Coluna cnt3m_CL_ITUinst excluída.
Coluna cnt6m_CL_ITUinst excluída.
Coluna cnt12m_CL_ITUinst excluída.
Coluna ANO excluída.
Coluna Motivo excluída.
Coluna DataAbate excluída.
Coluna Data_homol excluída.
Coluna DataAbate_6m_ANT excluída.
Coluna data_homol_select excluída.
Coluna data12m excluída.
Coluna data6m excluída.
Coluna data3m excluída.
Coluna data1m excluída.
Coluna data7d excluída.
Coluna classificacao excluída.
*****FIM DELETE COLUNAS*********

*****INICIO PRINT INFOS******
Número total de linhas do DataFrame: 3153593
Número de colunas: 23
Informações do DataFrame:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 3153593 entries, 0 to 3153592
Data columns (total 23 columns):
 #   Column                            Dtype   
---  ------                            -----   
 0   ID_ANIMAL                         uint32  
 1   Tipificacao                       category
 2   Peso                              float32 
 3   QuestionarioClassificacaoEstabel  uint8   
 4   ILP                               uint8   
 5   IFP                               uint8   
 6   ILPF                              uint8   
 7   QuestionarioPossuiOutrosIncentiv  uint8   
 8   QuestionarioFabricaRacao          uint8   
 9   regua de manejo                   UInt8   
 10  identificacao individual          UInt8   
 11  rastreamento SISBOV               UInt8   
 12  participa de aliancas mercadolog  UInt8   
 13  QuestionarioPraticaRecuperacaoPa  uint8   
 14  Confinamento                      UInt8   
 15  Suplementacao_a_campo             UInt8   
 16  SemiConfinamento                  UInt8   
 17  tot3m_Chuva                       float32 
 18  med3m_formITUinst                 float32 
 19  med3m_NDVI                        float32 
 20  med3m_preR_milho                  float32 
 21  med3m_preR_boi                    float32 
 22  CATEGORIA                         category
dtypes: UInt8(7), category(2), float32(6), uint32(1), uint8(7)
memory usage: 153.4 MB
*****FIM PRINT INFOS*********
Function informations Took 0:00:00.005735

*****FIM LOAD DATA******
Function load_data Took 0:02:18.921339

*****INICIO SHOW SETTINGS******
os = <module 'os' from '/usr/local/lib/python3.8/os.py'>
pd = <module 'pandas' from '/home/externo/rafaelrm/algoritmos/run_pipeline_test_imbalanced_target_categoria_12042023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/pandas/__init__.py'>
torch = <module 'torch' from '/home/externo/rafaelrm/algoritmos/run_pipeline_test_imbalanced_target_categoria_12042023/precoce-ms-classification/.venv-precoce-ms/lib/python3.8/site-packages/torch/__init__.py'>
PANDAS_MAX_ROWS = 5000
random_seed = 42
n_jobs = 1
dataset_folder_path = /home/externo/rafaelrm/base_dados/
csv_path = /home/externo/rafaelrm/base_dados/TAB_MODELAGEM_RAFAEL_2020_1.csv
number_csv_lines = None
dtype_dict = {'ID_ANIMAL': 'uint32', 'EstabelecimentoMunicipio': 'category', 'Frigorifico_ID': 'uint8', 'Frigorifico_CNPJ': 'uint64', 'Frigorifico_RazaoSocial': 'category', 'Municipio_Frigorifico': 'category', 'Tipificacao': 'category', 'Maturidade': 'category', 'Acabamento': 'category', 'Peso': 'float32', 'EstabelecimentoIdentificador': 'uint16', 'Questionario_ID': 'uint16', 'QuestionarioClassificacaoEstabel': 'uint8', 'FERTIIRRIGACAO': 'uint8', 'ILP': 'uint8', 'IFP': 'uint8', 'ILPF': 'uint8', 'CONCEN_VOLUM': 'UInt8', 'CREEPFEEDING': 'UInt8', 'FORN_ESTRAT_SILAGEM': 'UInt8', 'PROTEICO': 'UInt8', 'PROTEICO_ENERGETICO': 'UInt8', 'RACAO_BAL_CONS_INFERIOR': 'UInt8', 'SAL_MINERAL': 'UInt8', 'SALMINERAL_UREIA': 'UInt8', 'RACAOO_BAL_CONSUMO_IG': 'UInt8', 'GRAO_INTEIRO': 'UInt8', 'ALTO_CONCENTR_VOLUM': 'UInt8', 'ALTO_CONCENTRADO': 'UInt8', 'QuestionarioPossuiOutrosIncentiv': 'uint8', 'QuestionarioFabricaRacao': 'uint8', 'area so confinamento': 'UInt8', 'regua de manejo': 'UInt8', 'boa cobertura vegetal, com baixa': 'UInt8', 'erosaoo laminar ou em sulco igua': 'UInt8', 'identificacao individual': 'UInt8', 'rastreamento SISBOV': 'UInt8', 'Lista Trace': 'UInt8', 'BPA': 'UInt8', 'participa de aliancas mercadolog': 'UInt8', 'QuestionarioPraticaRecuperacaoPa': 'uint8', 'Confinamento': 'UInt8', 'Suplementacao_a_campo': 'UInt8', 'SemiConfinamento': 'UInt8', 'dif_datas': 'uint16', 'tot7d_Chuva': 'float32', 'med7d_TempInst': 'float32', 'med7d_TempMin': 'float32', 'med7d_UmidInst': 'float32', 'med7d_formITUinst': 'float32', 'med7d_formITUmax': 'float32', 'med7d_NDVI': 'float32', 'med7d_EVI': 'float32', 'med7d_preR_soja': 'float32', 'med7d_preR_milho': 'float32', 'med7d_preR_boi': 'float32', 'tot1m_Chuva': 'float32', 'med1m_TempInst': 'float32', 'med1m_UmidInst': 'float32', 'med1m_formITUinst': 'float32', 'med1m_NDVI': 'float32', 'med1m_EVI': 'float32', 'med1m_preR_soja': 'float32', 'med1m_preR_milho': 'float32', 'med1m_preR_boi': 'float32', 'tot3m_Chuva': 'float32', 'med3m_TempInst': 'float32', 'med3m_UmidInst': 'float32', 'med3m_formITUinst': 'float32', 'med3m_formITUmax': 'float32', 'med3m_NDVI': 'float32', 'med3m_EVI': 'float32', 'med3m_preR_soja': 'float32', 'med3m_preR_milho': 'float32', 'med3m_preR_boi': 'float32', 'tot6m_Chuva': 'float32', 'med6m_TempInst': 'float32', 'med6m_UmidInst': 'float32', 'med6m_formITUinst': 'float32', 'med6m_NDVI': 'float32', 'med6m_EVI': 'float32', 'med6m_preR_soja': 'float32', 'med6m_preR_milho': 'float32', 'med6m_preR_boi': 'float32', 'tot12m_Chuva': 'float32', 'med12m_TempInst': 'float32', 'med12m_TempMin': 'float32', 'med12m_UmidInst': 'float32', 'med12m_formITUinst': 'float32', 'med12m_NDVI': 'float32', 'med12m_EVI': 'float32', 'med12m_preR_soja': 'float32', 'med12m_preR_milho': 'float32', 'med12m_preR_boi': 'float32', 'cnt7d_CL_ITUinst': 'float32', 'cnt1m_CL_ITUinst': 'float32', 'cnt3m_CL_ITUinst': 'float32', 'cnt6m_CL_ITUinst': 'float32', 'cnt12m_CL_ITUinst': 'float32', 'ANO': 'uint16', 'CATEGORIA': 'category', 'classificacao': 'category', 'Motivo': 'category', 'QTD_ANIMAIS_LOTE': 'uint16', 'PESO_MEDIO_LOTE': 'float32', 'CATEGORIA_BINARIA': 'category'}
parse_dates = ['DataAbate', 'Data_homol', 'DataAbate_6m_ANT', 'data_homol_select', 'data12m', 'data6m', 'data3m', 'data1m', 'data7d']
delete_columns_names_on_load_data = ['EstabelecimentoMunicipio', 'Frigorifico_ID', 'Frigorifico_CNPJ', 'Frigorifico_RazaoSocial', 'Municipio_Frigorifico', 'Maturidade', 'Acabamento', 'EstabelecimentoIdentificador', 'Questionario_ID', 'FERTIIRRIGACAO', 'CONCEN_VOLUM', 'CREEPFEEDING', 'FORN_ESTRAT_SILAGEM', 'PROTEICO', 'PROTEICO_ENERGETICO', 'RACAO_BAL_CONS_INFERIOR', 'SAL_MINERAL', 'SALMINERAL_UREIA', 'RACAOO_BAL_CONSUMO_IG', 'GRAO_INTEIRO', 'ALTO_CONCENTR_VOLUM', 'ALTO_CONCENTRADO', 'area so confinamento', 'boa cobertura vegetal, com baixa', 'erosaoo laminar ou em sulco igua', 'Lista Trace', 'BPA', 'dif_datas', 'tot7d_Chuva', 'med7d_TempInst', 'med7d_TempMin', 'med7d_UmidInst', 'med7d_formITUinst', 'med7d_formITUmax', 'med7d_NDVI', 'med7d_EVI', 'med7d_preR_soja', 'med7d_preR_milho', 'med7d_preR_boi', 'tot1m_Chuva', 'med1m_TempInst', 'med1m_UmidInst', 'med1m_formITUinst', 'med1m_NDVI', 'med1m_EVI', 'med1m_preR_soja', 'med1m_preR_milho', 'med1m_preR_boi', 'med3m_TempInst', 'med3m_UmidInst', 'med3m_formITUmax', 'med3m_EVI', 'med3m_preR_soja', 'tot6m_Chuva', 'med6m_TempInst', 'med6m_UmidInst', 'med6m_formITUinst', 'med6m_NDVI', 'med6m_EVI', 'med6m_preR_soja', 'med6m_preR_milho', 'med6m_preR_boi', 'tot12m_Chuva', 'med12m_TempInst', 'med12m_TempMin', 'med12m_UmidInst', 'med12m_formITUinst', 'med12m_NDVI', 'med12m_EVI', 'med12m_preR_soja', 'med12m_preR_milho', 'med12m_preR_boi', 'cnt7d_CL_ITUinst', 'cnt1m_CL_ITUinst', 'cnt3m_CL_ITUinst', 'cnt6m_CL_ITUinst', 'cnt12m_CL_ITUinst', 'ANO', 'Motivo', 'DataAbate', 'Data_homol', 'DataAbate_6m_ANT', 'data_homol_select', 'data12m', 'data6m', 'data3m', 'data1m', 'data7d', 'classificacao']
PATH_SAVE_PLOTS = ./plots
PATH_SAVE_ESTIMATORS_REPR = ./runs/estimators_repr
PATH_SAVE_BEST_ESTIMATORS = ./runs/best_estimators
PATH_SAVE_RESULTS = ./runs/results
PATH_SAVE_LOGS = ./logs
PATH_SAVE_ENCODERS_SCALERS = ./runs/encoders_scalers
ordinal_encoder_columns_names = {'QuestionarioClassificacaoEstabel': ['0', '21', '26', '30']}
columns_ordinal_encoded = {}
label_encoder_columns_names = ['CATEGORIA']
columns_label_encoded = {}
one_hot_encoder_columns_names = ['Tipificacao']
columns_one_hot_encoded = {}
min_max_scaler_columns_names = ['Peso', 'tot3m_Chuva', 'med3m_formITUinst', 'med3m_NDVI', 'med3m_preR_milho', 'med3m_preR_boi']
columns_min_max_scaled = {}
columns_label_binarized = {}
simple_imputer_columns_names = []
columns_names_drop_feature_by_correlation = []
class_column = CATEGORIA
classifiers = {}
models_results = {}
device_name = auto
use_embeddings = True
use_cat_emb_dim = True
threshold_categorical_features = 150
num_workers = 0
eval_metric = ['balanced_accuracy', 'logloss', <class 'pytorch_tabnet_tuner.tab_model_tuner.F1ScoreMacro'>]
augmentations = None
weights = 0
batch_size = 16384
virtual_batch_size = 2048
run_grid_search_cv_tuner = True
save_results_during_run = True
new_run = False
PATH_OBJECTS_PERSISTED_RESULTS_RUNS = ./runs/objects_persisted_results_runs
PARAMETERS_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/parameters_persist
RESULTS_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/results_persist
SPLIT_PERSIST_FILENAME = ./runs/objects_persisted_results_runs/split_persist
tree_method = hist
objective = multi:softmax
*****FIM SHOW SETTINGS******


*****INICIO DELETE DUPLICATE ROWS BY ATTRIBUTE******
Linhas duplicadas encontradas para o atributo ID_ANIMAL.
Linhas duplicadas deletadas.
*****FIM DELETE DUPLICATE ROWS BY ATTRIBUTE*********
Function delete_duplicate_rows_by_attribute Took 0:00:01.734928

*****INICIO DELETE COLUNAS******
Coluna ID_ANIMAL excluída.
*****FIM DELETE COLUNAS*********

*****INICIO DELETE NAN ROWS******
Linhas com valores NaN encontradas.
*****FIM DELETE NAN ROWS*********
Function delete_nan_rows Took 0:00:00.580933


*****INICIO DELETE COLUMNS WITH SINGLE VALUE******
>>> Nenhuma coluna com valor único encontrada.
*****FIM DELETE COLUMNS WITH SINGLE VALUE*********
Function delete_columns_with_single_value Took 0:00:00.379625


*****INICIO LABEL ENCODER******
*****FIM LABEL ENCODER*********
Function label_encoder_columns Took 0:00:00.556756

Object saved in file: ./runs/encoders_scalers/target_encoded-16-04-2023_21:25:24.joblib

*****INICIO RELATÓRIO DISTRIBUIÇÃO DE CLASSES******
Distribuição da classe 0: 35%
Distribuição da classe 1: 21%
Distribuição da classe 2: 16%
Distribuição da classe 3: 8%
Distribuição da classe 4: 4%
Distribuição da classe 5: 17%
*****FIM RELATÓRIO DISTRIBUIÇÃO DE CLASSES******
Function class_distribution Took 0:00:00.066590

Number of folds for cross validation: 10
Scoring strategy for grid search: f1_macro
Test Size: 0.2

x_train shape: (2378460, 21)
y_train shape: (2378460,)
x_test shape: (594616, 21)
y_test shape: (594616,)
Checking already executed parameters...
classifier__estimator RandomForestClassifier() == classifier__estimator RandomForestClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 2 == classifier__estimator__max_depth 2
classifier__estimator__max_features 0.75 == classifier__estimator__max_features 0.75
classifier__estimator__n_estimators 100 == classifier__estimator__n_estimators 100
classifier__estimator__n_jobs 36 == classifier__estimator__n_jobs 36
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator RandomForestClassifier() == classifier__estimator RandomForestClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__max_features 0.75 == classifier__estimator__max_features 0.75
classifier__estimator__n_estimators 100 == classifier__estimator__n_estimators 100
classifier__estimator__n_jobs 36 == classifier__estimator__n_jobs 36
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator RandomForestClassifier() == classifier__estimator RandomForestClassifier()
classifier__estimator__class_weight balanced == classifier__estimator__class_weight balanced
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth None == classifier__estimator__max_depth None
classifier__estimator__max_features 0.75 == classifier__estimator__max_features 0.75
classifier__estimator__n_estimators 100 == classifier__estimator__n_estimators 100
classifier__estimator__n_jobs 36 == classifier__estimator__n_jobs 36
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator RandomForestClassifier() == classifier__estimator RandomForestClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 2 == classifier__estimator__max_depth 2
classifier__estimator__max_features 0.75 == classifier__estimator__max_features 0.75
classifier__estimator__n_estimators 100 == classifier__estimator__n_estimators 100
classifier__estimator__n_jobs 36 == classifier__estimator__n_jobs 36
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
classifier__estimator RandomForestClassifier() == classifier__estimator RandomForestClassifier()
classifier__estimator__class_weight None == classifier__estimator__class_weight None
classifier__estimator__criterion entropy == classifier__estimator__criterion entropy
classifier__estimator__max_depth 7 == classifier__estimator__max_depth 7
classifier__estimator__max_features 0.75 == classifier__estimator__max_features 0.75
classifier__estimator__n_estimators 100 == classifier__estimator__n_estimators 100
classifier__estimator__n_jobs 36 == classifier__estimator__n_jobs 36
classifier__estimator__random_state 42 == classifier__estimator__random_state 42
------------------------------------------------------------------
Removing already executed params object from candidate_params: {'classifier__estimator': RandomForestClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 36, 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': RandomForestClassifier(), 'classifier__estimator__class_weight': None, 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 2, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 36, 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': RandomForestClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 36, 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': RandomForestClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 7, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 36, 'classifier__estimator__random_state': 42}

Removing already executed params object from candidate_params: {'classifier__estimator': RandomForestClassifier(), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': 2, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 36, 'classifier__estimator__random_state': 42}

Fitting 10 folds for each of 1 candidates, totalling 10 fits
[CV 1/10; 1/1] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42
[CV 1/10; 1/1] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42;, score=0.407 total time= 2.7min
[CV 2/10; 1/1] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42
[CV 2/10; 1/1] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42;, score=0.407 total time= 2.7min
[CV 3/10; 1/1] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42
[CV 3/10; 1/1] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42;, score=0.407 total time= 2.7min
[CV 4/10; 1/1] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42
[CV 4/10; 1/1] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42;, score=0.407 total time= 2.7min
[CV 5/10; 1/1] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42
[CV 5/10; 1/1] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42;, score=0.407 total time= 2.7min
[CV 6/10; 1/1] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42
[CV 6/10; 1/1] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42;, score=0.406 total time= 2.7min
[CV 7/10; 1/1] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42
[CV 7/10; 1/1] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42;, score=0.405 total time= 2.7min
[CV 8/10; 1/1] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42
[CV 8/10; 1/1] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42;, score=0.406 total time= 2.7min
[CV 9/10; 1/1] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42
[CV 9/10; 1/1] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42;, score=0.407 total time= 2.7min
[CV 10/10; 1/1] START classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42
[CV 10/10; 1/1] END classifier__estimator=RandomForestClassifier(), classifier__estimator__class_weight=None, classifier__estimator__criterion=entropy, classifier__estimator__max_depth=None, classifier__estimator__max_features=0.75, classifier__estimator__n_estimators=100, classifier__estimator__n_jobs=36, classifier__estimator__random_state=42;, score=0.407 total time= 2.7min
--------------------- RESULTS GS1 ---------------------

CSV gerado com sucesso em: ./runs/results/GS1-cv_results-16-04-2023_21:55:07.csv.
Function generate_new_csv Took 0:00:00.187485

Cross validation results:
   mean_fit_time  std_fit_time  mean_score_time  std_score_time  ... split9_test_score mean_test_score std_test_score rank_test_score
2     158.896338      1.347851         2.799348        0.179288  ...          0.407926        0.407169       0.000642               1
5     160.251966      1.197780         2.815867        0.191176  ...          0.407233        0.406664       0.000704               2
1      83.857621      0.424695         0.977064        0.123731  ...          0.270537        0.270111       0.001252               3
4      84.009653      0.658740         1.438647        0.109235  ...          0.269460        0.266728       0.001976               4
0      30.883061      0.887349         1.142341        0.118883  ...          0.176134        0.176184       0.000575               5
3      30.710219      0.255468         1.465658        0.121116  ...          0.123384        0.123053       0.000418               6

[6 rows x 26 columns]
Object saved in file: ./runs/best_estimators/GS1-best_pipe-16-04-2023_21:55:08.joblib
Object saved in file: ./runs/best_estimators/best_estimator-RandomForestClassifier-16-04-2023_21:55:44.joblib
Best estimator: RandomForestClassifier(class_weight='balanced', criterion='entropy',
                       max_features=0.75, n_jobs=36, random_state=42)
Object saved in file: ./runs/encoders_scalers/GS1-column_transformer-16-04-2023_21:56:19.joblib
Internal CV score obtained by the best set of parameters: 0.4071693808685713
Best params: {'classifier__estimator': RandomForestClassifier(class_weight='balanced', criterion='entropy',
                       max_features=0.75, n_jobs=36, random_state=42), 'classifier__estimator__class_weight': 'balanced', 'classifier__estimator__criterion': 'entropy', 'classifier__estimator__max_depth': None, 'classifier__estimator__max_features': 0.75, 'classifier__estimator__n_estimators': 100, 'classifier__estimator__n_jobs': 36, 'classifier__estimator__random_state': 42}
Scorer function: make_scorer(f1_score, pos_label=None, average=macro)
The number of CV splits: 10
Seconds used for refitting the best model on the whole dataset: 144.50635981559753
Whether the scorers compute several metrics: False
The number of features when fit is performed: 21
Names of features seen during fit: ['Tipificacao' 'Peso' 'QuestionarioClassificacaoEstabel' 'ILP' 'IFP'
 'ILPF' 'QuestionarioPossuiOutrosIncentiv' 'QuestionarioFabricaRacao'
 'regua de manejo' 'identificacao individual' 'rastreamento SISBOV'
 'participa de aliancas mercadolog' 'QuestionarioPraticaRecuperacaoPa'
 'Confinamento' 'Suplementacao_a_campo' 'SemiConfinamento' 'tot3m_Chuva'
 'med3m_formITUinst' 'med3m_NDVI' 'med3m_preR_milho' 'med3m_preR_boi']

!!!>> When you observe high training accuracy, but low test accuracy, it is likely that you encountered overfitting problem.
Training set score: 0.8737719856662918
Test set score: 0.4068458032925162

CSV gerado com sucesso em: ./runs/results/GS1-grid_search_results-16-04-2023_21:56:43.csv.
Function generate_new_csv Took 0:00:00.004080

*****INICIO CONFUSION MATRIX DISPLAY******
Figure confusion_matrix_display-16-04-2023_21:56:52.png saved in ./plots/ directory.
*****FIM CONFUSION MATRIX DISPLAY******

Function confusion_matrix_display Took 0:00:00.788258


--- Test data performance ---
Test Acurácia: 0.4459853081652697
Test Acurácia Balanceada: 0.41205782930438667
Test Revocação Ponderada: 0.4459853081652697
Test Micro Revocação: 0.4459853081652697
Test Macro Revocação: 0.41205782930438667
Test Precisão Ponderada: 0.44899146212414015
Test Micro Precisão: 0.4459853081652697
Test Macro Precisão: 0.4025495555959766
Test F1 Ponderado: 0.44717635994720784
Test Micro F1: 0.4459853081652697
Test Macro F1: 0.4068458032925162
Test Coeficiente Kappa: 0.29085829014135856
Test Coeficiente de Correlação de Matthews: 0.2909837362426285
Test Log Loss: 3.8935303758824005
Test ROC AUC Score Ponderado: 0.7591414890994074

CSV gerado com sucesso em: ./runs/results/GS1-performance_results-16-04-2023_21:56:56.csv.
Function generate_new_csv Took 0:00:00.001519

              precision    recall  f1-score   support

           0       0.48      0.45      0.46    206002
           1       0.53      0.54      0.54    121960
           2       0.35      0.36      0.35     94916
           3       0.30      0.32      0.31     47177
           4       0.26      0.30      0.27     24161
           5       0.51      0.51      0.51    100400

    accuracy                           0.45    594616
   macro avg       0.40      0.41      0.41    594616
weighted avg       0.45      0.45      0.45    594616


CSV gerado com sucesso em: ./runs/results/GS1-classification_report-16-04-2023_21:56:58.csv.
Function generate_new_csv Took 0:00:00.001298

Function run_grid_search Took 0:31:33.723161

